cern.clhep.PhysicalConstants physicalConstants
NOT_NULL
cern.colt.Arrays boolean[] ensureCapacity(boolean[], int)
NOT_NULL
cern.colt.Arrays boolean[] ensureCapacity(boolean[], int) 0
NOT_NULL
cern.colt.Arrays boolean[] trimToCapacity(boolean[], int)
NOT_NULL
cern.colt.Arrays boolean[] trimToCapacity(boolean[], int) 0
NOT_NULL
cern.colt.Arrays byte[] ensureCapacity(byte[], int)
NOT_NULL
cern.colt.Arrays byte[] ensureCapacity(byte[], int) 0
NOT_NULL
cern.colt.Arrays byte[] trimToCapacity(byte[], int)
NOT_NULL
cern.colt.Arrays byte[] trimToCapacity(byte[], int) 0
NOT_NULL
cern.colt.Arrays char[] ensureCapacity(char[], int)
NOT_NULL
cern.colt.Arrays char[] ensureCapacity(char[], int) 0
NOT_NULL
cern.colt.Arrays char[] trimToCapacity(char[], int)
NOT_NULL
cern.colt.Arrays char[] trimToCapacity(char[], int) 0
NOT_NULL
cern.colt.Arrays double[] ensureCapacity(double[], int)
NOT_NULL
cern.colt.Arrays double[] ensureCapacity(double[], int) 0
NOT_NULL
cern.colt.Arrays double[] trimToCapacity(double[], int)
NOT_NULL
cern.colt.Arrays double[] trimToCapacity(double[], int) 0
NOT_NULL
cern.colt.Arrays float[] ensureCapacity(float[], int)
NOT_NULL
cern.colt.Arrays float[] ensureCapacity(float[], int) 0
NOT_NULL
cern.colt.Arrays float[] trimToCapacity(float[], int)
NOT_NULL
cern.colt.Arrays float[] trimToCapacity(float[], int) 0
NOT_NULL
cern.colt.Arrays int[] ensureCapacity(int[], int)
NOT_NULL
cern.colt.Arrays int[] ensureCapacity(int[], int) 0
NOT_NULL
cern.colt.Arrays int[] trimToCapacity(int[], int)
NOT_NULL
cern.colt.Arrays int[] trimToCapacity(int[], int) 0
NOT_NULL
cern.colt.Arrays java.lang.Object[] ensureCapacity(java.lang.Object[], int)
NOT_NULL
cern.colt.Arrays java.lang.Object[] ensureCapacity(java.lang.Object[], int) 0
NOT_NULL
cern.colt.Arrays java.lang.Object[] trimToCapacity(java.lang.Object[], int)
NOT_NULL
cern.colt.Arrays java.lang.Object[] trimToCapacity(java.lang.Object[], int) 0
NOT_NULL
cern.colt.Arrays java.lang.String toString(boolean[]) 0
NOT_NULL
cern.colt.Arrays java.lang.String toString(byte[]) 0
NOT_NULL
cern.colt.Arrays java.lang.String toString(char[]) 0
NOT_NULL
cern.colt.Arrays java.lang.String toString(double[]) 0
NOT_NULL
cern.colt.Arrays java.lang.String toString(float[]) 0
NOT_NULL
cern.colt.Arrays java.lang.String toString(int[]) 0
NOT_NULL
cern.colt.Arrays java.lang.String toString(java.lang.Object[]) 0
NOT_NULL
cern.colt.Arrays java.lang.String toString(long[]) 0
NOT_NULL
cern.colt.Arrays java.lang.String toString(short[]) 0
NOT_NULL
cern.colt.Arrays long[] ensureCapacity(long[], int)
NOT_NULL
cern.colt.Arrays long[] ensureCapacity(long[], int) 0
NOT_NULL
cern.colt.Arrays long[] trimToCapacity(long[], int)
NOT_NULL
cern.colt.Arrays long[] trimToCapacity(long[], int) 0
NOT_NULL
cern.colt.Arrays short[] ensureCapacity(short[], int)
NOT_NULL
cern.colt.Arrays short[] ensureCapacity(short[], int) 0
NOT_NULL
cern.colt.Arrays short[] trimToCapacity(short[], int)
NOT_NULL
cern.colt.Arrays short[] trimToCapacity(short[], int) 0
NOT_NULL
cern.colt.GenericPermuting int[] permutation(long, int)
NOT_NULL
cern.colt.GenericPermuting void permute(int[], cern.colt.Swapper, int[]) 0
NOT_NULL
cern.colt.GenericPermuting void permute(int[], cern.colt.Swapper, int[], int[]) 0
NOT_NULL
cern.colt.GenericPermuting void permute(int[], int[]) 0
NOT_NULL
cern.colt.GenericPermuting void permute(java.lang.Object[], int[]) 0
NOT_NULL
cern.colt.GenericSorting int med3(int, int, int, cern.colt.function.IntComparator) 3
NOT_NULL
cern.colt.Partitioning int med3(double[], int, int, int) 0
NOT_NULL
cern.colt.Partitioning int med3(int, int, int, cern.colt.function.IntComparator) 3
NOT_NULL
cern.colt.Partitioning int med3(int[], int, int, int) 0
NOT_NULL
cern.colt.Partitioning int med3(java.lang.Object[], int, int, int, java.util.Comparator) 0
NOT_NULL
cern.colt.Partitioning int med3(java.lang.Object[], int, int, int, java.util.Comparator) 4
NOT_NULL
cern.colt.Partitioning void partition(cern.colt.list.DoubleArrayList, int, int, cern.colt.list.DoubleArrayList, cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.Partitioning void partition(cern.colt.list.DoubleArrayList, int, int, cern.colt.list.DoubleArrayList, cern.colt.list.IntArrayList) 3
NOT_NULL
cern.colt.Partitioning void partition(cern.colt.list.DoubleArrayList, int, int, cern.colt.list.DoubleArrayList, cern.colt.list.IntArrayList) 4
NOT_NULL
cern.colt.Partitioning void partition(cern.colt.list.IntArrayList, int, int, cern.colt.list.IntArrayList, cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.Partitioning void partition(cern.colt.list.IntArrayList, int, int, cern.colt.list.IntArrayList, cern.colt.list.IntArrayList) 3
NOT_NULL
cern.colt.Partitioning void partition(cern.colt.list.IntArrayList, int, int, cern.colt.list.IntArrayList, cern.colt.list.IntArrayList) 4
NOT_NULL
cern.colt.PersistentObject java.lang.Object clone()
NOT_NULL
cern.colt.Sorting int med3(byte[], int, int, int, cern.colt.function.ByteComparator) 0
NOT_NULL
cern.colt.Sorting int med3(byte[], int, int, int, cern.colt.function.ByteComparator) 4
NOT_NULL
cern.colt.Sorting int med3(char[], int, int, int, cern.colt.function.CharComparator) 0
NOT_NULL
cern.colt.Sorting int med3(char[], int, int, int, cern.colt.function.CharComparator) 4
NOT_NULL
cern.colt.Sorting int med3(double[], int, int, int, cern.colt.function.DoubleComparator) 0
NOT_NULL
cern.colt.Sorting int med3(double[], int, int, int, cern.colt.function.DoubleComparator) 4
NOT_NULL
cern.colt.Sorting int med3(float[], int, int, int, cern.colt.function.FloatComparator) 0
NOT_NULL
cern.colt.Sorting int med3(float[], int, int, int, cern.colt.function.FloatComparator) 4
NOT_NULL
cern.colt.Sorting int med3(int[], int, int, int, cern.colt.function.IntComparator) 0
NOT_NULL
cern.colt.Sorting int med3(int[], int, int, int, cern.colt.function.IntComparator) 4
NOT_NULL
cern.colt.Sorting int med3(java.lang.Object[], int, int, int) 0
NOT_NULL
cern.colt.Sorting int med3(java.lang.Object[], int, int, int, java.util.Comparator) 0
NOT_NULL
cern.colt.Sorting int med3(java.lang.Object[], int, int, int, java.util.Comparator) 4
NOT_NULL
cern.colt.Sorting int med3(long[], int, int, int, cern.colt.function.LongComparator) 0
NOT_NULL
cern.colt.Sorting int med3(long[], int, int, int, cern.colt.function.LongComparator) 4
NOT_NULL
cern.colt.Sorting int med3(short[], int, int, int, cern.colt.function.ShortComparator) 0
NOT_NULL
cern.colt.Sorting int med3(short[], int, int, int, cern.colt.function.ShortComparator) 4
NOT_NULL
cern.colt.Sorting void mergeSort(byte[], int, int) 0
NOT_NULL
cern.colt.Sorting void mergeSort(byte[], int, int, cern.colt.function.ByteComparator) 0
NOT_NULL
cern.colt.Sorting void mergeSort(char[], int, int) 0
NOT_NULL
cern.colt.Sorting void mergeSort(char[], int, int, cern.colt.function.CharComparator) 0
NOT_NULL
cern.colt.Sorting void mergeSort(double[], int, int) 0
NOT_NULL
cern.colt.Sorting void mergeSort(double[], int, int, cern.colt.function.DoubleComparator) 0
NOT_NULL
cern.colt.Sorting void mergeSort(float[], int, int) 0
NOT_NULL
cern.colt.Sorting void mergeSort(float[], int, int, cern.colt.function.FloatComparator) 0
NOT_NULL
cern.colt.Sorting void mergeSort(int[], int, int) 0
NOT_NULL
cern.colt.Sorting void mergeSort(int[], int, int, cern.colt.function.IntComparator) 0
NOT_NULL
cern.colt.Sorting void mergeSort(long[], int, int) 0
NOT_NULL
cern.colt.Sorting void mergeSort(long[], int, int, cern.colt.function.LongComparator) 0
NOT_NULL
cern.colt.Sorting void mergeSort(short[], int, int) 0
NOT_NULL
cern.colt.Sorting void mergeSort(short[], int, int, cern.colt.function.ShortComparator) 0
NOT_NULL
cern.colt.Sorting void mergeSort2(double[], int, int) 0
NOT_NULL
cern.colt.Sorting void mergeSort2(float[], int, int) 0
NOT_NULL
cern.colt.Sorting void mergeSortInPlace(int[], int, int) 0
NOT_NULL
cern.colt.Sorting void quickSort(byte[], int, int, cern.colt.function.ByteComparator) 0
NOT_NULL
cern.colt.Sorting void quickSort(char[], int, int, cern.colt.function.CharComparator) 0
NOT_NULL
cern.colt.Sorting void quickSort(double[], int, int, cern.colt.function.DoubleComparator) 0
NOT_NULL
cern.colt.Sorting void quickSort(float[], int, int, cern.colt.function.FloatComparator) 0
NOT_NULL
cern.colt.Sorting void quickSort(int[], int, int, cern.colt.function.IntComparator) 0
NOT_NULL
cern.colt.Sorting void quickSort(java.lang.Object[]) 0
NOT_NULL
cern.colt.Sorting void quickSort(java.lang.Object[], int, int) 0
NOT_NULL
cern.colt.Sorting void quickSort(java.lang.Object[], int, int, java.util.Comparator) 0
NOT_NULL
cern.colt.Sorting void quickSort(java.lang.Object[], java.util.Comparator) 0
NOT_NULL
cern.colt.Sorting void quickSort(long[], int, int, cern.colt.function.LongComparator) 0
NOT_NULL
cern.colt.Sorting void quickSort(short[], int, int, cern.colt.function.ShortComparator) 0
NOT_NULL
cern.colt.Sorting void swap(byte[], int, int) 0
NOT_NULL
cern.colt.Sorting void swap(char[], int, int) 0
NOT_NULL
cern.colt.Sorting void swap(double[], int, int) 0
NOT_NULL
cern.colt.Sorting void swap(float[], int, int) 0
NOT_NULL
cern.colt.Sorting void swap(int[], int, int) 0
NOT_NULL
cern.colt.Sorting void swap(java.lang.Object[], int, int) 0
NOT_NULL
cern.colt.Sorting void swap(long[], int, int) 0
NOT_NULL
cern.colt.Sorting void swap(short[], int, int) 0
NOT_NULL
cern.colt.Timer cern.colt.Timer display()
NOT_NULL
cern.colt.Timer cern.colt.Timer minus(cern.colt.Timer)
NOT_NULL
cern.colt.Timer cern.colt.Timer minus(cern.colt.Timer) 0
NOT_NULL
cern.colt.Timer cern.colt.Timer plus(cern.colt.Timer)
NOT_NULL
cern.colt.Timer cern.colt.Timer plus(cern.colt.Timer) 0
NOT_NULL
cern.colt.Timer cern.colt.Timer reset()
NOT_NULL
cern.colt.Timer cern.colt.Timer start()
NOT_NULL
cern.colt.Timer cern.colt.Timer stop()
NOT_NULL
cern.colt.Version int[] numbers()
NOT_NULL
cern.colt.bitvector.BitMatrix boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.bitvector.BitMatrix cern.colt.bitvector.BitMatrix part(int, int, int, int)
NOT_NULL
cern.colt.bitvector.BitMatrix cern.colt.bitvector.BitVector toBitVector()
NOT_NULL
cern.colt.bitvector.BitMatrix void and(cern.colt.bitvector.BitMatrix) 0
NOT_NULL
cern.colt.bitvector.BitMatrix void andNot(cern.colt.bitvector.BitMatrix) 0
NOT_NULL
cern.colt.bitvector.BitMatrix void checkDimensionCompatibility(cern.colt.bitvector.BitMatrix) 0
NOT_NULL
cern.colt.bitvector.BitMatrix void elements(long[], int, int) 0
NOT_NULL
cern.colt.bitvector.BitMatrix void or(cern.colt.bitvector.BitMatrix) 0
NOT_NULL
cern.colt.bitvector.BitMatrix void replaceBoxWith(int, int, int, int, cern.colt.bitvector.BitMatrix, int, int) 4
NOT_NULL
cern.colt.bitvector.BitMatrix void xor(cern.colt.bitvector.BitMatrix) 0
NOT_NULL
cern.colt.bitvector.BitVector BitVector(long[], int) 0
NOT_NULL
cern.colt.bitvector.BitVector boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.bitvector.BitVector cern.colt.bitvector.BitVector partFromTo(int, int)
NOT_NULL
cern.colt.bitvector.BitVector void andNot(cern.colt.bitvector.BitVector) 0
NOT_NULL
cern.colt.bitvector.BitVector void checkSize(cern.colt.bitvector.BitVector) 0
NOT_NULL
cern.colt.bitvector.BitVector void elements(long[], int) 0
NOT_NULL
cern.colt.bitvector.BitVector void xor(cern.colt.bitvector.BitVector) 0
NOT_NULL
cern.colt.bitvector.BitVector.IndexProcedure int access$100(cern.colt.bitvector.BitVector.IndexProcedure) 0
NOT_NULL
cern.colt.bitvector.QuickBitVector boolean get(long[], int) 0
NOT_NULL
cern.colt.bitvector.QuickBitVector long[] makeBitVector(int, int)
NOT_NULL
cern.colt.bitvector.QuickBitVector long[] precomputePows()
NOT_NULL
cern.colt.bitvector.QuickBitVector pows
NOT_NULL
cern.colt.bitvector.QuickBitVector void clear(long[], int) 0
NOT_NULL
cern.colt.bitvector.QuickBitVector void put(long[], int, boolean) 0
NOT_NULL
cern.colt.bitvector.QuickBitVector void set(long[], int) 0
NOT_NULL
cern.colt.buffer.DoubleBuffer void addAllOf(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.colt.buffer.DoubleBuffer2D void addAllOf(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.colt.buffer.DoubleBuffer2DConsumer void addAllOf(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.colt.buffer.DoubleBuffer3D void addAllOf(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.colt.buffer.DoubleBuffer3DConsumer void addAllOf(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.colt.buffer.DoubleBufferConsumer void addAllOf(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.colt.buffer.IntBuffer void addAllOf(cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.buffer.IntBuffer2D void addAllOf(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.buffer.IntBuffer2DConsumer void addAllOf(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.buffer.IntBuffer3D void addAllOf(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.buffer.IntBuffer3DConsumer void addAllOf(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.buffer.IntBufferConsumer void addAllOf(cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.buffer.ObjectBuffer void addAllOf(cern.colt.list.ObjectArrayList) 0
NOT_NULL
cern.colt.buffer.ObjectBufferConsumer void addAllOf(cern.colt.list.ObjectArrayList) 0
NOT_NULL
cern.colt.list.AbstractBooleanList boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.list.AbstractBooleanList boolean removeAll(cern.colt.list.AbstractBooleanList) 0
NOT_NULL
cern.colt.list.AbstractBooleanList boolean retainAll(cern.colt.list.AbstractBooleanList) 0
NOT_NULL
cern.colt.list.AbstractBooleanList boolean[] elements()
NOT_NULL
cern.colt.list.AbstractBooleanList cern.colt.list.AbstractBooleanList elements(boolean[])
NOT_NULL
cern.colt.list.AbstractBooleanList cern.colt.list.AbstractBooleanList elements(boolean[]) 0
NOT_NULL
cern.colt.list.AbstractBooleanList cern.colt.list.AbstractBooleanList partFromTo(int, int)
NOT_NULL
cern.colt.list.AbstractBooleanList cern.colt.list.AbstractBooleanList times(int)
NOT_NULL
cern.colt.list.AbstractBooleanList java.lang.Object clone()
NOT_NULL
cern.colt.list.AbstractBooleanList java.util.ArrayList toList()
NOT_NULL
cern.colt.list.AbstractBooleanList void replaceFromWith(int, java.util.Collection) 1
NOT_NULL
cern.colt.list.AbstractByteList boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.list.AbstractByteList boolean removeAll(cern.colt.list.AbstractByteList) 0
NOT_NULL
cern.colt.list.AbstractByteList boolean retainAll(cern.colt.list.AbstractByteList) 0
NOT_NULL
cern.colt.list.AbstractByteList byte[] elements()
NOT_NULL
cern.colt.list.AbstractByteList cern.colt.list.AbstractByteList elements(byte[])
NOT_NULL
cern.colt.list.AbstractByteList cern.colt.list.AbstractByteList elements(byte[]) 0
NOT_NULL
cern.colt.list.AbstractByteList cern.colt.list.AbstractByteList partFromTo(int, int)
NOT_NULL
cern.colt.list.AbstractByteList cern.colt.list.AbstractByteList times(int)
NOT_NULL
cern.colt.list.AbstractByteList java.lang.Object clone()
NOT_NULL
cern.colt.list.AbstractByteList java.util.ArrayList toList()
NOT_NULL
cern.colt.list.AbstractByteList void replaceFromWith(int, java.util.Collection) 1
NOT_NULL
cern.colt.list.AbstractCharList boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.list.AbstractCharList boolean removeAll(cern.colt.list.AbstractCharList) 0
NOT_NULL
cern.colt.list.AbstractCharList boolean retainAll(cern.colt.list.AbstractCharList) 0
NOT_NULL
cern.colt.list.AbstractCharList cern.colt.list.AbstractCharList elements(char[])
NOT_NULL
cern.colt.list.AbstractCharList cern.colt.list.AbstractCharList elements(char[]) 0
NOT_NULL
cern.colt.list.AbstractCharList cern.colt.list.AbstractCharList partFromTo(int, int)
NOT_NULL
cern.colt.list.AbstractCharList cern.colt.list.AbstractCharList times(int)
NOT_NULL
cern.colt.list.AbstractCharList char[] elements()
NOT_NULL
cern.colt.list.AbstractCharList java.lang.Object clone()
NOT_NULL
cern.colt.list.AbstractCharList java.util.ArrayList toList()
NOT_NULL
cern.colt.list.AbstractCharList void replaceFromWith(int, java.util.Collection) 1
NOT_NULL
cern.colt.list.AbstractCollection java.util.ArrayList toList()
NOT_NULL
cern.colt.list.AbstractDoubleList boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.list.AbstractDoubleList boolean removeAll(cern.colt.list.AbstractDoubleList) 0
NOT_NULL
cern.colt.list.AbstractDoubleList boolean retainAll(cern.colt.list.AbstractDoubleList) 0
NOT_NULL
cern.colt.list.AbstractDoubleList cern.colt.list.AbstractDoubleList elements(double[])
NOT_NULL
cern.colt.list.AbstractDoubleList cern.colt.list.AbstractDoubleList elements(double[]) 0
NOT_NULL
cern.colt.list.AbstractDoubleList cern.colt.list.AbstractDoubleList partFromTo(int, int)
NOT_NULL
cern.colt.list.AbstractDoubleList cern.colt.list.AbstractDoubleList times(int)
NOT_NULL
cern.colt.list.AbstractDoubleList double[] elements()
NOT_NULL
cern.colt.list.AbstractDoubleList java.lang.Object clone()
NOT_NULL
cern.colt.list.AbstractDoubleList java.util.ArrayList toList()
NOT_NULL
cern.colt.list.AbstractDoubleList void addAllOf(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.colt.list.AbstractDoubleList void replaceFromWith(int, java.util.Collection) 1
NOT_NULL
cern.colt.list.AbstractFloatList boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.list.AbstractFloatList boolean removeAll(cern.colt.list.AbstractFloatList) 0
NOT_NULL
cern.colt.list.AbstractFloatList boolean retainAll(cern.colt.list.AbstractFloatList) 0
NOT_NULL
cern.colt.list.AbstractFloatList cern.colt.list.AbstractFloatList elements(float[])
NOT_NULL
cern.colt.list.AbstractFloatList cern.colt.list.AbstractFloatList elements(float[]) 0
NOT_NULL
cern.colt.list.AbstractFloatList cern.colt.list.AbstractFloatList partFromTo(int, int)
NOT_NULL
cern.colt.list.AbstractFloatList cern.colt.list.AbstractFloatList times(int)
NOT_NULL
cern.colt.list.AbstractFloatList float[] elements()
NOT_NULL
cern.colt.list.AbstractFloatList java.lang.Object clone()
NOT_NULL
cern.colt.list.AbstractFloatList java.util.ArrayList toList()
NOT_NULL
cern.colt.list.AbstractFloatList void replaceFromWith(int, java.util.Collection) 1
NOT_NULL
cern.colt.list.AbstractIntList boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.list.AbstractIntList boolean removeAll(cern.colt.list.AbstractIntList) 0
NOT_NULL
cern.colt.list.AbstractIntList boolean retainAll(cern.colt.list.AbstractIntList) 0
NOT_NULL
cern.colt.list.AbstractIntList cern.colt.list.AbstractIntList elements(int[])
NOT_NULL
cern.colt.list.AbstractIntList cern.colt.list.AbstractIntList elements(int[]) 0
NOT_NULL
cern.colt.list.AbstractIntList cern.colt.list.AbstractIntList partFromTo(int, int)
NOT_NULL
cern.colt.list.AbstractIntList cern.colt.list.AbstractIntList times(int)
NOT_NULL
cern.colt.list.AbstractIntList int[] elements()
NOT_NULL
cern.colt.list.AbstractIntList java.lang.Object clone()
NOT_NULL
cern.colt.list.AbstractIntList java.util.ArrayList toList()
NOT_NULL
cern.colt.list.AbstractIntList void addAllOf(cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.list.AbstractIntList void replaceFromWith(int, java.util.Collection) 1
NOT_NULL
cern.colt.list.AbstractList void addAllOf(java.util.Collection) 0
NOT_NULL
cern.colt.list.AbstractList void beforeInsertAllOf(int, java.util.Collection) 1
NOT_NULL
cern.colt.list.AbstractList void replaceFromWith(int, java.util.Collection) 1
NOT_NULL
cern.colt.list.AbstractLongList boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.list.AbstractLongList boolean removeAll(cern.colt.list.AbstractLongList) 0
NOT_NULL
cern.colt.list.AbstractLongList boolean retainAll(cern.colt.list.AbstractLongList) 0
NOT_NULL
cern.colt.list.AbstractLongList cern.colt.list.AbstractLongList elements(long[])
NOT_NULL
cern.colt.list.AbstractLongList cern.colt.list.AbstractLongList elements(long[]) 0
NOT_NULL
cern.colt.list.AbstractLongList cern.colt.list.AbstractLongList partFromTo(int, int)
NOT_NULL
cern.colt.list.AbstractLongList cern.colt.list.AbstractLongList times(int)
NOT_NULL
cern.colt.list.AbstractLongList java.lang.Object clone()
NOT_NULL
cern.colt.list.AbstractLongList java.util.ArrayList toList()
NOT_NULL
cern.colt.list.AbstractLongList long[] elements()
NOT_NULL
cern.colt.list.AbstractLongList void replaceFromWith(int, java.util.Collection) 1
NOT_NULL
cern.colt.list.AbstractShortList boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.list.AbstractShortList boolean removeAll(cern.colt.list.AbstractShortList) 0
NOT_NULL
cern.colt.list.AbstractShortList boolean retainAll(cern.colt.list.AbstractShortList) 0
NOT_NULL
cern.colt.list.AbstractShortList cern.colt.list.AbstractShortList elements(short[])
NOT_NULL
cern.colt.list.AbstractShortList cern.colt.list.AbstractShortList elements(short[]) 0
NOT_NULL
cern.colt.list.AbstractShortList cern.colt.list.AbstractShortList partFromTo(int, int)
NOT_NULL
cern.colt.list.AbstractShortList cern.colt.list.AbstractShortList times(int)
NOT_NULL
cern.colt.list.AbstractShortList java.lang.Object clone()
NOT_NULL
cern.colt.list.AbstractShortList java.util.ArrayList toList()
NOT_NULL
cern.colt.list.AbstractShortList short[] elements()
NOT_NULL
cern.colt.list.AbstractShortList void replaceFromWith(int, java.util.Collection) 1
NOT_NULL
cern.colt.list.BooleanArrayList BooleanArrayList(boolean[]) 0
NOT_NULL
cern.colt.list.BooleanArrayList boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.list.BooleanArrayList boolean removeAll(cern.colt.list.AbstractBooleanList) 0
NOT_NULL
cern.colt.list.BooleanArrayList boolean retainAll(cern.colt.list.AbstractBooleanList) 0
NOT_NULL
cern.colt.list.BooleanArrayList cern.colt.list.AbstractBooleanList elements(boolean[])
NOT_NULL
cern.colt.list.BooleanArrayList cern.colt.list.AbstractBooleanList elements(boolean[]) 0
NOT_NULL
cern.colt.list.BooleanArrayList cern.colt.list.AbstractBooleanList partFromTo(int, int)
NOT_NULL
cern.colt.list.BooleanArrayList cern.colt.list.BooleanArrayList copy()
NOT_NULL
cern.colt.list.BooleanArrayList java.lang.Object clone()
NOT_NULL
cern.colt.list.ByteArrayList ByteArrayList(byte[]) 0
NOT_NULL
cern.colt.list.ByteArrayList boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.list.ByteArrayList boolean removeAll(cern.colt.list.AbstractByteList) 0
NOT_NULL
cern.colt.list.ByteArrayList boolean retainAll(cern.colt.list.AbstractByteList) 0
NOT_NULL
cern.colt.list.ByteArrayList cern.colt.list.AbstractByteList elements(byte[])
NOT_NULL
cern.colt.list.ByteArrayList cern.colt.list.AbstractByteList elements(byte[]) 0
NOT_NULL
cern.colt.list.ByteArrayList cern.colt.list.AbstractByteList partFromTo(int, int)
NOT_NULL
cern.colt.list.ByteArrayList cern.colt.list.ByteArrayList copy()
NOT_NULL
cern.colt.list.ByteArrayList java.lang.Object clone()
NOT_NULL
cern.colt.list.CharArrayList CharArrayList(char[]) 0
NOT_NULL
cern.colt.list.CharArrayList boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.list.CharArrayList boolean removeAll(cern.colt.list.AbstractCharList) 0
NOT_NULL
cern.colt.list.CharArrayList boolean retainAll(cern.colt.list.AbstractCharList) 0
NOT_NULL
cern.colt.list.CharArrayList cern.colt.list.AbstractCharList elements(char[])
NOT_NULL
cern.colt.list.CharArrayList cern.colt.list.AbstractCharList elements(char[]) 0
NOT_NULL
cern.colt.list.CharArrayList cern.colt.list.AbstractCharList partFromTo(int, int)
NOT_NULL
cern.colt.list.CharArrayList cern.colt.list.CharArrayList copy()
NOT_NULL
cern.colt.list.CharArrayList java.lang.Object clone()
NOT_NULL
cern.colt.list.DistinctNumberList DistinctNumberList(long[], int) 0
NOT_NULL
cern.colt.list.DistinctNumberList void setUp(long[], int) 0
NOT_NULL
cern.colt.list.DoubleArrayList DoubleArrayList(double[]) 0
NOT_NULL
cern.colt.list.DoubleArrayList boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.list.DoubleArrayList boolean removeAll(cern.colt.list.AbstractDoubleList) 0
NOT_NULL
cern.colt.list.DoubleArrayList boolean retainAll(cern.colt.list.AbstractDoubleList) 0
NOT_NULL
cern.colt.list.DoubleArrayList cern.colt.list.AbstractDoubleList elements(double[])
NOT_NULL
cern.colt.list.DoubleArrayList cern.colt.list.AbstractDoubleList elements(double[]) 0
NOT_NULL
cern.colt.list.DoubleArrayList cern.colt.list.AbstractDoubleList partFromTo(int, int)
NOT_NULL
cern.colt.list.DoubleArrayList cern.colt.list.DoubleArrayList copy()
NOT_NULL
cern.colt.list.DoubleArrayList java.lang.Object clone()
NOT_NULL
cern.colt.list.FloatArrayList FloatArrayList(float[]) 0
NOT_NULL
cern.colt.list.FloatArrayList boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.list.FloatArrayList boolean removeAll(cern.colt.list.AbstractFloatList) 0
NOT_NULL
cern.colt.list.FloatArrayList boolean retainAll(cern.colt.list.AbstractFloatList) 0
NOT_NULL
cern.colt.list.FloatArrayList cern.colt.list.AbstractFloatList elements(float[])
NOT_NULL
cern.colt.list.FloatArrayList cern.colt.list.AbstractFloatList elements(float[]) 0
NOT_NULL
cern.colt.list.FloatArrayList cern.colt.list.AbstractFloatList partFromTo(int, int)
NOT_NULL
cern.colt.list.FloatArrayList cern.colt.list.FloatArrayList copy()
NOT_NULL
cern.colt.list.FloatArrayList java.lang.Object clone()
NOT_NULL
cern.colt.list.IntArrayList IntArrayList(int[]) 0
NOT_NULL
cern.colt.list.IntArrayList boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.list.IntArrayList boolean removeAll(cern.colt.list.AbstractIntList) 0
NOT_NULL
cern.colt.list.IntArrayList boolean retainAll(cern.colt.list.AbstractIntList) 0
NOT_NULL
cern.colt.list.IntArrayList cern.colt.list.AbstractIntList elements(int[])
NOT_NULL
cern.colt.list.IntArrayList cern.colt.list.AbstractIntList elements(int[]) 0
NOT_NULL
cern.colt.list.IntArrayList cern.colt.list.AbstractIntList partFromTo(int, int)
NOT_NULL
cern.colt.list.IntArrayList cern.colt.list.IntArrayList copy()
NOT_NULL
cern.colt.list.IntArrayList java.lang.Object clone()
NOT_NULL
cern.colt.list.LongArrayList LongArrayList(long[]) 0
NOT_NULL
cern.colt.list.LongArrayList boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.list.LongArrayList boolean removeAll(cern.colt.list.AbstractLongList) 0
NOT_NULL
cern.colt.list.LongArrayList boolean retainAll(cern.colt.list.AbstractLongList) 0
NOT_NULL
cern.colt.list.LongArrayList cern.colt.list.AbstractLongList elements(long[])
NOT_NULL
cern.colt.list.LongArrayList cern.colt.list.AbstractLongList elements(long[]) 0
NOT_NULL
cern.colt.list.LongArrayList cern.colt.list.AbstractLongList partFromTo(int, int)
NOT_NULL
cern.colt.list.LongArrayList cern.colt.list.LongArrayList copy()
NOT_NULL
cern.colt.list.LongArrayList java.lang.Object clone()
NOT_NULL
cern.colt.list.MinMaxNumberList cern.colt.bitvector.BitVector toBitVector()
NOT_NULL
cern.colt.list.MinMaxNumberList void partFromTo(int, int, cern.colt.bitvector.BitVector, int, long[], int) 4
NOT_NULL
cern.colt.list.ObjectArrayList ObjectArrayList(java.lang.Object[]) 0
NOT_NULL
cern.colt.list.ObjectArrayList boolean equals(java.lang.Object, boolean) 0
NULLABLE
cern.colt.list.ObjectArrayList boolean removeAll(cern.colt.list.ObjectArrayList, boolean) 0
NOT_NULL
cern.colt.list.ObjectArrayList boolean retainAll(cern.colt.list.ObjectArrayList, boolean) 0
NOT_NULL
cern.colt.list.ObjectArrayList cern.colt.list.ObjectArrayList copy()
NOT_NULL
cern.colt.list.ObjectArrayList cern.colt.list.ObjectArrayList elements(java.lang.Object[])
NOT_NULL
cern.colt.list.ObjectArrayList cern.colt.list.ObjectArrayList elements(java.lang.Object[]) 0
NOT_NULL
cern.colt.list.ObjectArrayList cern.colt.list.ObjectArrayList partFromTo(int, int)
NOT_NULL
cern.colt.list.ObjectArrayList cern.colt.list.ObjectArrayList times(int)
NOT_NULL
cern.colt.list.ObjectArrayList java.lang.Object clone()
NOT_NULL
cern.colt.list.ObjectArrayList java.lang.Object[] toArray(java.lang.Object[])
NOT_NULL
cern.colt.list.ObjectArrayList java.lang.Object[] toArray(java.lang.Object[]) 0
NOT_NULL
cern.colt.list.ObjectArrayList java.util.ArrayList toList()
NOT_NULL
cern.colt.list.ObjectArrayList void replaceFromWith(int, java.util.Collection) 1
NOT_NULL
cern.colt.list.ShortArrayList ShortArrayList(short[]) 0
NOT_NULL
cern.colt.list.ShortArrayList boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.list.ShortArrayList boolean removeAll(cern.colt.list.AbstractShortList) 0
NOT_NULL
cern.colt.list.ShortArrayList boolean retainAll(cern.colt.list.AbstractShortList) 0
NOT_NULL
cern.colt.list.ShortArrayList cern.colt.list.AbstractShortList elements(short[])
NOT_NULL
cern.colt.list.ShortArrayList cern.colt.list.AbstractShortList elements(short[]) 0
NOT_NULL
cern.colt.list.ShortArrayList cern.colt.list.AbstractShortList partFromTo(int, int)
NOT_NULL
cern.colt.list.ShortArrayList cern.colt.list.ShortArrayList copy()
NOT_NULL
cern.colt.list.ShortArrayList java.lang.Object clone()
NOT_NULL
cern.colt.list.adapter.DoubleListAdapter double value(java.lang.Object) 0
NOT_NULL
cern.colt.list.adapter.DoubleListAdapter java.lang.Object get(int)
NOT_NULL
cern.colt.list.adapter.DoubleListAdapter java.lang.Object object(double)
NOT_NULL
cern.colt.list.adapter.DoubleListAdapter java.lang.Object remove(int)
NOT_NULL
cern.colt.list.adapter.DoubleListAdapter java.lang.Object set(int, java.lang.Object)
NOT_NULL
cern.colt.list.adapter.DoubleListAdapter java.lang.Object set(int, java.lang.Object) 1
NOT_NULL
cern.colt.list.adapter.DoubleListAdapter void add(int, java.lang.Object) 1
NOT_NULL
cern.colt.list.adapter.FloatListAdapter float value(java.lang.Object) 0
NOT_NULL
cern.colt.list.adapter.FloatListAdapter java.lang.Object get(int)
NOT_NULL
cern.colt.list.adapter.FloatListAdapter java.lang.Object object(float)
NOT_NULL
cern.colt.list.adapter.FloatListAdapter java.lang.Object remove(int)
NOT_NULL
cern.colt.list.adapter.FloatListAdapter java.lang.Object set(int, java.lang.Object)
NOT_NULL
cern.colt.list.adapter.FloatListAdapter java.lang.Object set(int, java.lang.Object) 1
NOT_NULL
cern.colt.list.adapter.FloatListAdapter void add(int, java.lang.Object) 1
NOT_NULL
cern.colt.list.adapter.IntListAdapter int value(java.lang.Object) 0
NOT_NULL
cern.colt.list.adapter.IntListAdapter java.lang.Object get(int)
NOT_NULL
cern.colt.list.adapter.IntListAdapter java.lang.Object object(int)
NOT_NULL
cern.colt.list.adapter.IntListAdapter java.lang.Object remove(int)
NOT_NULL
cern.colt.list.adapter.IntListAdapter java.lang.Object set(int, java.lang.Object)
NOT_NULL
cern.colt.list.adapter.IntListAdapter java.lang.Object set(int, java.lang.Object) 1
NOT_NULL
cern.colt.list.adapter.IntListAdapter void add(int, java.lang.Object) 1
NOT_NULL
cern.colt.list.adapter.LongListAdapter java.lang.Object get(int)
NOT_NULL
cern.colt.list.adapter.LongListAdapter java.lang.Object object(long)
NOT_NULL
cern.colt.list.adapter.LongListAdapter java.lang.Object remove(int)
NOT_NULL
cern.colt.list.adapter.LongListAdapter java.lang.Object set(int, java.lang.Object)
NOT_NULL
cern.colt.list.adapter.LongListAdapter java.lang.Object set(int, java.lang.Object) 1
NOT_NULL
cern.colt.list.adapter.LongListAdapter long value(java.lang.Object) 0
NOT_NULL
cern.colt.list.adapter.LongListAdapter void add(int, java.lang.Object) 1
NOT_NULL
cern.colt.map.AbstractDoubleIntMap boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.map.AbstractDoubleIntMap cern.colt.list.DoubleArrayList keys()
NOT_NULL
cern.colt.map.AbstractDoubleIntMap cern.colt.list.IntArrayList values()
NOT_NULL
cern.colt.map.AbstractDoubleIntMap void keys(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.colt.map.AbstractDoubleIntMap void keysSortedByValue(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.colt.map.AbstractDoubleIntMap void pairsMatching(cern.colt.function.DoubleIntProcedure, cern.colt.list.DoubleArrayList, cern.colt.list.IntArrayList) 1
NOT_NULL
cern.colt.map.AbstractDoubleIntMap void pairsMatching(cern.colt.function.DoubleIntProcedure, cern.colt.list.DoubleArrayList, cern.colt.list.IntArrayList) 2
NOT_NULL
cern.colt.map.AbstractDoubleIntMap void pairsSortedByKey(cern.colt.list.DoubleArrayList, cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.map.AbstractDoubleIntMap void pairsSortedByKey(cern.colt.list.DoubleArrayList, cern.colt.list.IntArrayList) 1
NOT_NULL
cern.colt.map.AbstractDoubleIntMap void pairsSortedByValue(cern.colt.list.DoubleArrayList, cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.map.AbstractDoubleIntMap void pairsSortedByValue(cern.colt.list.DoubleArrayList, cern.colt.list.IntArrayList) 1
NOT_NULL
cern.colt.map.AbstractDoubleIntMap void values(cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.map.AbstractIntDoubleMap boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.map.AbstractIntDoubleMap cern.colt.list.DoubleArrayList values()
NOT_NULL
cern.colt.map.AbstractIntDoubleMap cern.colt.list.IntArrayList keys()
NOT_NULL
cern.colt.map.AbstractIntDoubleMap void assign(cern.colt.map.AbstractIntDoubleMap) 0
NOT_NULL
cern.colt.map.AbstractIntDoubleMap void keys(cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.map.AbstractIntDoubleMap void keysSortedByValue(cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.map.AbstractIntDoubleMap void pairsMatching(cern.colt.function.IntDoubleProcedure, cern.colt.list.IntArrayList, cern.colt.list.DoubleArrayList) 1
NOT_NULL
cern.colt.map.AbstractIntDoubleMap void pairsMatching(cern.colt.function.IntDoubleProcedure, cern.colt.list.IntArrayList, cern.colt.list.DoubleArrayList) 2
NOT_NULL
cern.colt.map.AbstractIntDoubleMap void pairsSortedByKey(cern.colt.list.IntArrayList, cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.colt.map.AbstractIntDoubleMap void pairsSortedByKey(cern.colt.list.IntArrayList, cern.colt.list.DoubleArrayList) 1
NOT_NULL
cern.colt.map.AbstractIntDoubleMap void pairsSortedByValue(cern.colt.list.IntArrayList, cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.colt.map.AbstractIntDoubleMap void pairsSortedByValue(cern.colt.list.IntArrayList, cern.colt.list.DoubleArrayList) 1
NOT_NULL
cern.colt.map.AbstractIntDoubleMap void values(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.colt.map.AbstractIntIntMap boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.map.AbstractIntIntMap cern.colt.list.IntArrayList keys()
NOT_NULL
cern.colt.map.AbstractIntIntMap cern.colt.list.IntArrayList values()
NOT_NULL
cern.colt.map.AbstractIntIntMap void keys(cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.map.AbstractIntIntMap void keysSortedByValue(cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.map.AbstractIntIntMap void pairsMatching(cern.colt.function.IntIntProcedure, cern.colt.list.IntArrayList, cern.colt.list.IntArrayList) 1
NOT_NULL
cern.colt.map.AbstractIntIntMap void pairsMatching(cern.colt.function.IntIntProcedure, cern.colt.list.IntArrayList, cern.colt.list.IntArrayList) 2
NOT_NULL
cern.colt.map.AbstractIntIntMap void pairsSortedByKey(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.map.AbstractIntIntMap void pairsSortedByKey(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList) 1
NOT_NULL
cern.colt.map.AbstractIntIntMap void pairsSortedByValue(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.map.AbstractIntIntMap void pairsSortedByValue(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList) 1
NOT_NULL
cern.colt.map.AbstractIntIntMap void values(cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.map.AbstractIntObjectMap boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.map.AbstractIntObjectMap cern.colt.list.IntArrayList keys()
NOT_NULL
cern.colt.map.AbstractIntObjectMap cern.colt.list.ObjectArrayList values()
NOT_NULL
cern.colt.map.AbstractIntObjectMap java.lang.Object get(int)
NULLABLE
cern.colt.map.AbstractIntObjectMap void keys(cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.map.AbstractIntObjectMap void keysSortedByValue(cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.map.AbstractIntObjectMap void pairsMatching(cern.colt.function.IntObjectProcedure, cern.colt.list.IntArrayList, cern.colt.list.ObjectArrayList) 1
NOT_NULL
cern.colt.map.AbstractIntObjectMap void pairsMatching(cern.colt.function.IntObjectProcedure, cern.colt.list.IntArrayList, cern.colt.list.ObjectArrayList) 2
NOT_NULL
cern.colt.map.AbstractIntObjectMap void pairsSortedByKey(cern.colt.list.IntArrayList, cern.colt.list.ObjectArrayList) 0
NOT_NULL
cern.colt.map.AbstractIntObjectMap void pairsSortedByKey(cern.colt.list.IntArrayList, cern.colt.list.ObjectArrayList) 1
NOT_NULL
cern.colt.map.AbstractIntObjectMap void pairsSortedByValue(cern.colt.list.IntArrayList, cern.colt.list.ObjectArrayList) 0
NOT_NULL
cern.colt.map.AbstractIntObjectMap void pairsSortedByValue(cern.colt.list.IntArrayList, cern.colt.list.ObjectArrayList) 1
NOT_NULL
cern.colt.map.AbstractIntObjectMap void values(cern.colt.list.ObjectArrayList) 0
NOT_NULL
cern.colt.map.AbstractLongObjectMap boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.map.AbstractLongObjectMap cern.colt.list.LongArrayList keys()
NOT_NULL
cern.colt.map.AbstractLongObjectMap cern.colt.list.ObjectArrayList values()
NOT_NULL
cern.colt.map.AbstractLongObjectMap java.lang.Object get(long)
NULLABLE
cern.colt.map.AbstractLongObjectMap void keys(cern.colt.list.LongArrayList) 0
NOT_NULL
cern.colt.map.AbstractLongObjectMap void keysSortedByValue(cern.colt.list.LongArrayList) 0
NOT_NULL
cern.colt.map.AbstractLongObjectMap void pairsMatching(cern.colt.function.LongObjectProcedure, cern.colt.list.LongArrayList, cern.colt.list.ObjectArrayList) 1
NOT_NULL
cern.colt.map.AbstractLongObjectMap void pairsMatching(cern.colt.function.LongObjectProcedure, cern.colt.list.LongArrayList, cern.colt.list.ObjectArrayList) 2
NOT_NULL
cern.colt.map.AbstractLongObjectMap void pairsSortedByKey(cern.colt.list.LongArrayList, cern.colt.list.ObjectArrayList) 0
NOT_NULL
cern.colt.map.AbstractLongObjectMap void pairsSortedByKey(cern.colt.list.LongArrayList, cern.colt.list.ObjectArrayList) 1
NOT_NULL
cern.colt.map.AbstractLongObjectMap void pairsSortedByValue(cern.colt.list.LongArrayList, cern.colt.list.ObjectArrayList) 0
NOT_NULL
cern.colt.map.AbstractLongObjectMap void pairsSortedByValue(cern.colt.list.LongArrayList, cern.colt.list.ObjectArrayList) 1
NOT_NULL
cern.colt.map.AbstractLongObjectMap void values(cern.colt.list.ObjectArrayList) 0
NOT_NULL
cern.colt.map.Benchmark void main(java.lang.String[]) 0
NOT_NULL
cern.colt.map.HashFunctions int hash(java.lang.Object) 0
NULLABLE
cern.colt.map.OpenDoubleIntHashMap java.lang.Object clone()
NOT_NULL
cern.colt.map.OpenDoubleIntHashMap void keys(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.colt.map.OpenDoubleIntHashMap void pairsMatching(cern.colt.function.DoubleIntProcedure, cern.colt.list.DoubleArrayList, cern.colt.list.IntArrayList) 1
NOT_NULL
cern.colt.map.OpenDoubleIntHashMap void pairsMatching(cern.colt.function.DoubleIntProcedure, cern.colt.list.DoubleArrayList, cern.colt.list.IntArrayList) 2
NOT_NULL
cern.colt.map.OpenDoubleIntHashMap void values(cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.map.OpenIntDoubleHashMap java.lang.Object clone()
NOT_NULL
cern.colt.map.OpenIntDoubleHashMap void assign(cern.colt.map.AbstractIntDoubleMap) 0
NOT_NULL
cern.colt.map.OpenIntDoubleHashMap void keys(cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.map.OpenIntDoubleHashMap void pairsMatching(cern.colt.function.IntDoubleProcedure, cern.colt.list.IntArrayList, cern.colt.list.DoubleArrayList) 1
NOT_NULL
cern.colt.map.OpenIntDoubleHashMap void pairsMatching(cern.colt.function.IntDoubleProcedure, cern.colt.list.IntArrayList, cern.colt.list.DoubleArrayList) 2
NOT_NULL
cern.colt.map.OpenIntDoubleHashMap void values(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.colt.map.OpenIntIntHashMap java.lang.Object clone()
NOT_NULL
cern.colt.map.OpenIntIntHashMap void keys(cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.map.OpenIntIntHashMap void pairsMatching(cern.colt.function.IntIntProcedure, cern.colt.list.IntArrayList, cern.colt.list.IntArrayList) 1
NOT_NULL
cern.colt.map.OpenIntIntHashMap void pairsMatching(cern.colt.function.IntIntProcedure, cern.colt.list.IntArrayList, cern.colt.list.IntArrayList) 2
NOT_NULL
cern.colt.map.OpenIntIntHashMap void values(cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.map.OpenIntObjectHashMap java.lang.Object clone()
NOT_NULL
cern.colt.map.OpenIntObjectHashMap java.lang.Object get(int)
NULLABLE
cern.colt.map.OpenIntObjectHashMap void keys(cern.colt.list.IntArrayList) 0
NOT_NULL
cern.colt.map.OpenIntObjectHashMap void pairsMatching(cern.colt.function.IntObjectProcedure, cern.colt.list.IntArrayList, cern.colt.list.ObjectArrayList) 1
NOT_NULL
cern.colt.map.OpenIntObjectHashMap void pairsMatching(cern.colt.function.IntObjectProcedure, cern.colt.list.IntArrayList, cern.colt.list.ObjectArrayList) 2
NOT_NULL
cern.colt.map.OpenIntObjectHashMap void values(cern.colt.list.ObjectArrayList) 0
NOT_NULL
cern.colt.map.OpenLongObjectHashMap java.lang.Object clone()
NOT_NULL
cern.colt.map.OpenLongObjectHashMap java.lang.Object get(long)
NULLABLE
cern.colt.map.OpenLongObjectHashMap void keys(cern.colt.list.LongArrayList) 0
NOT_NULL
cern.colt.map.OpenLongObjectHashMap void pairsMatching(cern.colt.function.LongObjectProcedure, cern.colt.list.LongArrayList, cern.colt.list.ObjectArrayList) 1
NOT_NULL
cern.colt.map.OpenLongObjectHashMap void pairsMatching(cern.colt.function.LongObjectProcedure, cern.colt.list.LongArrayList, cern.colt.list.ObjectArrayList) 2
NOT_NULL
cern.colt.map.OpenLongObjectHashMap void values(cern.colt.list.ObjectArrayList) 0
NOT_NULL
cern.colt.map.PrimeFinder primeCapacities
NOT_NULL
cern.colt.map.PrimeFinder void main(java.lang.String[]) 0
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.list.DoubleArrayList toList(cern.colt.matrix.DoubleMatrix1D)
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.list.DoubleArrayList toList(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.matrix.DoubleMatrix1D append(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D)
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.matrix.DoubleMatrix1D append(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.matrix.DoubleMatrix1D append(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.matrix.DoubleMatrix1D ascending(int)
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.matrix.DoubleMatrix1D descending(int)
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.matrix.DoubleMatrix1D make(cern.colt.list.AbstractDoubleList)
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.matrix.DoubleMatrix1D make(cern.colt.list.AbstractDoubleList) 0
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.matrix.DoubleMatrix1D make(cern.colt.matrix.DoubleMatrix1D[])
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.matrix.DoubleMatrix1D make(cern.colt.matrix.DoubleMatrix1D[]) 0
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.matrix.DoubleMatrix1D make(double[])
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.matrix.DoubleMatrix1D make(double[]) 0
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.matrix.DoubleMatrix1D make(int)
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.matrix.DoubleMatrix1D make(int, double)
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.matrix.DoubleMatrix1D random(int)
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.matrix.DoubleMatrix1D repeat(cern.colt.matrix.DoubleMatrix1D, int)
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.matrix.DoubleMatrix1D repeat(cern.colt.matrix.DoubleMatrix1D, int) 0
NOT_NULL
cern.colt.matrix.DoubleFactory1D cern.colt.matrix.DoubleMatrix1D sample(int, double, double)
NOT_NULL
cern.colt.matrix.DoubleFactory1D dense
NOT_NULL
cern.colt.matrix.DoubleFactory1D sparse
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix1D diagonal(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D appendColumns(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D appendColumns(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D appendColumns(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D appendRows(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D appendRows(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D appendRows(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D ascending(int, int)
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D compose(cern.colt.matrix.DoubleMatrix2D[][])
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D compose(cern.colt.matrix.DoubleMatrix2D[][]) 0
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D composeDiagonal(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D composeDiagonal(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D composeDiagonal(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D composeDiagonal(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D composeDiagonal(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D composeDiagonal(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D composeDiagonal(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 2
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D descending(int, int)
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D diagonal(cern.colt.matrix.DoubleMatrix1D)
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D diagonal(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D identity(int)
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D make(double[], int)
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D make(double[], int) 0
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D make(double[][])
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D make(double[][]) 0
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D make(int, int)
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D make(int, int, double)
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D random(int, int)
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D repeat(cern.colt.matrix.DoubleMatrix2D, int, int)
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D repeat(cern.colt.matrix.DoubleMatrix2D, int, int) 0
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D sample(cern.colt.matrix.DoubleMatrix2D, double, double)
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D sample(cern.colt.matrix.DoubleMatrix2D, double, double) 0
NOT_NULL
cern.colt.matrix.DoubleFactory2D cern.colt.matrix.DoubleMatrix2D sample(int, int, double, double)
NOT_NULL
cern.colt.matrix.DoubleFactory2D dense
NOT_NULL
cern.colt.matrix.DoubleFactory2D rowCompressed
NOT_NULL
cern.colt.matrix.DoubleFactory2D sparse
NOT_NULL
cern.colt.matrix.DoubleFactory2D void checkRectangularShape(cern.colt.matrix.DoubleMatrix2D[][]) 0
NOT_NULL
cern.colt.matrix.DoubleFactory2D void checkRectangularShape(double[][]) 0
NOT_NULL
cern.colt.matrix.DoubleFactory2D void decompose(cern.colt.matrix.DoubleMatrix2D[][], cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.DoubleFactory3D cern.colt.matrix.DoubleMatrix3D ascending(int, int, int)
NOT_NULL
cern.colt.matrix.DoubleFactory3D cern.colt.matrix.DoubleMatrix3D descending(int, int, int)
NOT_NULL
cern.colt.matrix.DoubleFactory3D cern.colt.matrix.DoubleMatrix3D make(double[][][])
NOT_NULL
cern.colt.matrix.DoubleFactory3D cern.colt.matrix.DoubleMatrix3D make(double[][][]) 0
NOT_NULL
cern.colt.matrix.DoubleFactory3D cern.colt.matrix.DoubleMatrix3D make(int, int, int)
NOT_NULL
cern.colt.matrix.DoubleFactory3D cern.colt.matrix.DoubleMatrix3D make(int, int, int, double)
NOT_NULL
cern.colt.matrix.DoubleFactory3D cern.colt.matrix.DoubleMatrix3D random(int, int, int)
NOT_NULL
cern.colt.matrix.DoubleFactory3D dense
NOT_NULL
cern.colt.matrix.DoubleFactory3D sparse
NOT_NULL
cern.colt.matrix.DoubleMatrix1D boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.matrix.DoubleMatrix1D boolean haveSharedCells(cern.colt.matrix.DoubleMatrix1D) 0
NULLABLE
cern.colt.matrix.DoubleMatrix1D boolean haveSharedCellsRaw(cern.colt.matrix.DoubleMatrix1D) 0
NULLABLE
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D assign(cern.colt.function.DoubleFunction)
NOT_NULL
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D assign(cern.colt.matrix.DoubleMatrix1D)
NOT_NULL
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D assign(cern.colt.matrix.DoubleMatrix1D, cern.colt.function.DoubleDoubleFunction)
NOT_NULL
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D assign(cern.colt.matrix.DoubleMatrix1D, cern.colt.function.DoubleDoubleFunction, cern.colt.list.IntArrayList)
NOT_NULL
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D assign(cern.colt.matrix.DoubleMatrix1D, cern.colt.function.DoubleDoubleFunction, cern.colt.list.IntArrayList) 2
NOT_NULL
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D assign(double)
NOT_NULL
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D assign(double[])
NOT_NULL
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D assign(double[]) 0
NOT_NULL
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D copy()
NOT_NULL
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D getContent()
NOT_NULL
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D like(int)
NOT_NULL
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewFlip()
NOT_NULL
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewPart(int, int)
NOT_NULL
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewSelection(int[])
NOT_NULL
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewSelection(int[]) 0
NULLABLE
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewSelectionLike(int[])
NOT_NULL
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewSelectionLike(int[]) 0
NOT_NULL
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewStrides(int)
NOT_NULL
cern.colt.matrix.DoubleMatrix1D cern.colt.matrix.DoubleMatrix2D like2D(int, int)
NOT_NULL
cern.colt.matrix.DoubleMatrix1D double[] toArray()
NOT_NULL
cern.colt.matrix.DoubleMatrix1D void toArray(double[]) 0
NOT_NULL
cern.colt.matrix.DoubleMatrix2D boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.matrix.DoubleMatrix2D boolean haveSharedCells(cern.colt.matrix.DoubleMatrix2D) 0
NULLABLE
cern.colt.matrix.DoubleMatrix2D boolean haveSharedCellsRaw(cern.colt.matrix.DoubleMatrix2D) 0
NULLABLE
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix1D like1D(int)
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix1D like1D(int, int, int)
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix1D viewColumn(int)
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix1D viewRow(int)
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix1D zMult(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, double, double, boolean) 1
NULLABLE
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(cern.colt.function.DoubleFunction)
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(cern.colt.matrix.DoubleMatrix2D, cern.colt.function.DoubleDoubleFunction)
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(double)
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(double[][])
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(double[][]) 0
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D copy()
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D forEachNonZero(cern.colt.function.IntIntDoubleFunction)
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D getContent()
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D like(int, int)
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewColumnFlip()
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewDice()
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewPart(int, int, int, int)
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewRowFlip()
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelection(int[], int[])
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelection(int[], int[]) 0
NULLABLE
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelection(int[], int[]) 1
NULLABLE
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelectionLike(int[], int[])
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelectionLike(int[], int[]) 0
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelectionLike(int[], int[]) 1
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewStrides(int, int)
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D zMult(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, double, double, boolean, boolean)
NOT_NULL
cern.colt.matrix.DoubleMatrix2D cern.colt.matrix.DoubleMatrix2D zMult(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, double, double, boolean, boolean) 0
NOT_NULL
cern.colt.matrix.DoubleMatrix2D double[][] toArray()
NOT_NULL
cern.colt.matrix.DoubleMatrix2D void getNonZeros(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.colt.matrix.DoubleMatrix2D void getNonZeros(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.DoubleArrayList) 1
NOT_NULL
cern.colt.matrix.DoubleMatrix2D void getNonZeros(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.DoubleArrayList) 2
NOT_NULL
cern.colt.matrix.DoubleMatrix2D void zAssign8Neighbors(cern.colt.matrix.DoubleMatrix2D, cern.colt.function.Double9Function) 1
NOT_NULL
cern.colt.matrix.DoubleMatrix3D boolean equals(java.lang.Object) 0
NULLABLE
cern.colt.matrix.DoubleMatrix3D boolean haveSharedCells(cern.colt.matrix.DoubleMatrix3D) 0
NULLABLE
cern.colt.matrix.DoubleMatrix3D boolean haveSharedCellsRaw(cern.colt.matrix.DoubleMatrix3D) 0
NULLABLE
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix2D like2D(int, int, int, int, int, int)
NOT_NULL
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix2D viewColumn(int)
NOT_NULL
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix2D viewRow(int)
NOT_NULL
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix2D viewSlice(int)
NOT_NULL
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix3D assign(cern.colt.function.DoubleFunction)
NOT_NULL
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix3D assign(cern.colt.matrix.DoubleMatrix3D)
NOT_NULL
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix3D assign(cern.colt.matrix.DoubleMatrix3D, cern.colt.function.DoubleDoubleFunction)
NOT_NULL
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix3D assign(double)
NOT_NULL
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix3D assign(double[][][])
NOT_NULL
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix3D assign(double[][][]) 0
NOT_NULL
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix3D copy()
NOT_NULL
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix3D getContent()
NOT_NULL
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix3D like(int, int, int)
NOT_NULL
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelection(int[], int[], int[]) 0
NULLABLE
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelection(int[], int[], int[]) 1
NULLABLE
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelection(int[], int[], int[]) 2
NULLABLE
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[])
NOT_NULL
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[]) 0
NOT_NULL
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[]) 1
NOT_NULL
cern.colt.matrix.DoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[]) 2
NOT_NULL
cern.colt.matrix.DoubleMatrix3D double[][][] toArray()
NOT_NULL
cern.colt.matrix.DoubleMatrix3D void getNonZeros(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.colt.matrix.DoubleMatrix3D void getNonZeros(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.DoubleArrayList) 1
NOT_NULL
cern.colt.matrix.DoubleMatrix3D void getNonZeros(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.DoubleArrayList) 2
NOT_NULL
cern.colt.matrix.DoubleMatrix3D void getNonZeros(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.DoubleArrayList) 3
NOT_NULL
cern.colt.matrix.DoubleMatrix3D void zAssign27Neighbors(cern.colt.matrix.DoubleMatrix3D, cern.colt.function.Double27Function) 1
NOT_NULL
cern.colt.matrix.ObjectFactory1D cern.colt.list.ObjectArrayList toList(cern.colt.matrix.ObjectMatrix1D)
NOT_NULL
cern.colt.matrix.ObjectFactory1D cern.colt.list.ObjectArrayList toList(cern.colt.matrix.ObjectMatrix1D) 0
NOT_NULL
cern.colt.matrix.ObjectFactory1D cern.colt.matrix.ObjectMatrix1D append(cern.colt.matrix.ObjectMatrix1D, cern.colt.matrix.ObjectMatrix1D)
NOT_NULL
cern.colt.matrix.ObjectFactory1D cern.colt.matrix.ObjectMatrix1D append(cern.colt.matrix.ObjectMatrix1D, cern.colt.matrix.ObjectMatrix1D) 0
NOT_NULL
cern.colt.matrix.ObjectFactory1D cern.colt.matrix.ObjectMatrix1D append(cern.colt.matrix.ObjectMatrix1D, cern.colt.matrix.ObjectMatrix1D) 1
NOT_NULL
cern.colt.matrix.ObjectFactory1D cern.colt.matrix.ObjectMatrix1D make(cern.colt.list.ObjectArrayList)
NOT_NULL
cern.colt.matrix.ObjectFactory1D cern.colt.matrix.ObjectMatrix1D make(cern.colt.list.ObjectArrayList) 0
NOT_NULL
cern.colt.matrix.ObjectFactory1D cern.colt.matrix.ObjectMatrix1D make(cern.colt.matrix.ObjectMatrix1D[])
NOT_NULL
cern.colt.matrix.ObjectFactory1D cern.colt.matrix.ObjectMatrix1D make(cern.colt.matrix.ObjectMatrix1D[]) 0
NOT_NULL
cern.colt.matrix.ObjectFactory1D cern.colt.matrix.ObjectMatrix1D make(int)
NOT_NULL
cern.colt.matrix.ObjectFactory1D cern.colt.matrix.ObjectMatrix1D make(int, java.lang.Object)
NOT_NULL
cern.colt.matrix.ObjectFactory1D cern.colt.matrix.ObjectMatrix1D make(java.lang.Object[])
NOT_NULL
cern.colt.matrix.ObjectFactory1D cern.colt.matrix.ObjectMatrix1D make(java.lang.Object[]) 0
NOT_NULL
cern.colt.matrix.ObjectFactory1D cern.colt.matrix.ObjectMatrix1D repeat(cern.colt.matrix.ObjectMatrix1D, int)
NOT_NULL
cern.colt.matrix.ObjectFactory1D cern.colt.matrix.ObjectMatrix1D repeat(cern.colt.matrix.ObjectMatrix1D, int) 0
NOT_NULL
cern.colt.matrix.ObjectFactory1D dense
NOT_NULL
cern.colt.matrix.ObjectFactory1D sparse
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix1D diagonal(cern.colt.matrix.ObjectMatrix2D) 0
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D appendColumns(cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.ObjectMatrix2D)
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D appendColumns(cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.ObjectMatrix2D) 0
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D appendColumns(cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.ObjectMatrix2D) 1
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D appendRows(cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.ObjectMatrix2D)
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D appendRows(cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.ObjectMatrix2D) 0
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D appendRows(cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.ObjectMatrix2D) 1
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D compose(cern.colt.matrix.ObjectMatrix2D[][])
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D compose(cern.colt.matrix.ObjectMatrix2D[][]) 0
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D composeDiagonal(cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.ObjectMatrix2D)
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D composeDiagonal(cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.ObjectMatrix2D) 0
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D composeDiagonal(cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.ObjectMatrix2D) 1
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D composeDiagonal(cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.ObjectMatrix2D)
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D composeDiagonal(cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.ObjectMatrix2D) 0
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D composeDiagonal(cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.ObjectMatrix2D) 1
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D composeDiagonal(cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.ObjectMatrix2D) 2
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D diagonal(cern.colt.matrix.ObjectMatrix1D)
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D diagonal(cern.colt.matrix.ObjectMatrix1D) 0
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D make(int, int)
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D make(int, int, java.lang.Object)
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D make(int, int, java.lang.Object) 2
NULLABLE
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D make(java.lang.Object[], int)
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D make(java.lang.Object[], int) 0
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D make(java.lang.Object[][])
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D make(java.lang.Object[][]) 0
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D repeat(cern.colt.matrix.ObjectMatrix2D, int, int)
NOT_NULL
cern.colt.matrix.ObjectFactory2D cern.colt.matrix.ObjectMatrix2D repeat(cern.colt.matrix.ObjectMatrix2D, int, int) 0
NOT_NULL
cern.colt.matrix.ObjectFactory2D dense
NOT_NULL
cern.colt.matrix.ObjectFactory2D sparse
NOT_NULL
cern.colt.matrix.ObjectFactory2D void checkRectangularShape(cern.colt.matrix.ObjectMatrix2D[][]) 0
NOT_NULL
cern.colt.matrix.ObjectFactory2D void checkRectangularShape(java.lang.Object[][]) 0
NOT_NULL
cern.colt.matrix.ObjectFactory2D void decompose(cern.colt.matrix.ObjectMatrix2D[][], cern.colt.matrix.ObjectMatrix2D) 0
NOT_NULL
cern.colt.matrix.ObjectFactory3D cern.colt.matrix.ObjectMatrix3D make(int, int, int)
NOT_NULL
cern.colt.matrix.ObjectFactory3D cern.colt.matrix.ObjectMatrix3D make(int, int, int, java.lang.Object)
NOT_NULL
cern.colt.matrix.ObjectFactory3D cern.colt.matrix.ObjectMatrix3D make(java.lang.Object[][][])
NOT_NULL
cern.colt.matrix.ObjectFactory3D cern.colt.matrix.ObjectMatrix3D make(java.lang.Object[][][]) 0
NOT_NULL
cern.colt.matrix.ObjectFactory3D dense
NOT_NULL
cern.colt.matrix.ObjectFactory3D sparse
NOT_NULL
cern.colt.matrix.ObjectMatrix1D boolean equals(java.lang.Object, boolean) 0
NULLABLE
cern.colt.matrix.ObjectMatrix1D boolean haveSharedCells(cern.colt.matrix.ObjectMatrix1D) 0
NULLABLE
cern.colt.matrix.ObjectMatrix1D boolean haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix1D) 0
NULLABLE
cern.colt.matrix.ObjectMatrix1D cern.colt.matrix.ObjectMatrix1D assign(cern.colt.function.ObjectFunction)
NOT_NULL
cern.colt.matrix.ObjectMatrix1D cern.colt.matrix.ObjectMatrix1D assign(cern.colt.matrix.ObjectMatrix1D)
NOT_NULL
cern.colt.matrix.ObjectMatrix1D cern.colt.matrix.ObjectMatrix1D assign(cern.colt.matrix.ObjectMatrix1D, cern.colt.function.ObjectObjectFunction)
NOT_NULL
cern.colt.matrix.ObjectMatrix1D cern.colt.matrix.ObjectMatrix1D assign(java.lang.Object)
NOT_NULL
cern.colt.matrix.ObjectMatrix1D cern.colt.matrix.ObjectMatrix1D assign(java.lang.Object[])
NOT_NULL
cern.colt.matrix.ObjectMatrix1D cern.colt.matrix.ObjectMatrix1D assign(java.lang.Object[]) 0
NOT_NULL
cern.colt.matrix.ObjectMatrix1D cern.colt.matrix.ObjectMatrix1D copy()
NOT_NULL
cern.colt.matrix.ObjectMatrix1D cern.colt.matrix.ObjectMatrix1D getContent()
NOT_NULL
cern.colt.matrix.ObjectMatrix1D cern.colt.matrix.ObjectMatrix1D like(int)
NOT_NULL
cern.colt.matrix.ObjectMatrix1D cern.colt.matrix.ObjectMatrix1D viewSelection(int[]) 0
NULLABLE
cern.colt.matrix.ObjectMatrix1D cern.colt.matrix.ObjectMatrix1D viewSelectionLike(int[])
NOT_NULL
cern.colt.matrix.ObjectMatrix1D cern.colt.matrix.ObjectMatrix1D viewSelectionLike(int[]) 0
NOT_NULL
cern.colt.matrix.ObjectMatrix1D cern.colt.matrix.ObjectMatrix2D like2D(int, int)
NOT_NULL
cern.colt.matrix.ObjectMatrix1D java.lang.Object aggregate(cern.colt.function.ObjectObjectFunction, cern.colt.function.ObjectFunction)
NULLABLE
cern.colt.matrix.ObjectMatrix1D java.lang.Object aggregate(cern.colt.matrix.ObjectMatrix1D, cern.colt.function.ObjectObjectFunction, cern.colt.function.ObjectObjectFunction)
NULLABLE
cern.colt.matrix.ObjectMatrix1D java.lang.Object[] toArray()
NOT_NULL
cern.colt.matrix.ObjectMatrix1D void toArray(java.lang.Object[]) 0
NOT_NULL
cern.colt.matrix.ObjectMatrix2D boolean equals(java.lang.Object, boolean) 0
NULLABLE
cern.colt.matrix.ObjectMatrix2D boolean haveSharedCells(cern.colt.matrix.ObjectMatrix2D) 0
NULLABLE
cern.colt.matrix.ObjectMatrix2D boolean haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix2D) 0
NULLABLE
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix1D like1D(int)
NOT_NULL
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix1D like1D(int, int, int)
NOT_NULL
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix1D viewColumn(int)
NOT_NULL
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix1D viewRow(int)
NOT_NULL
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix2D assign(cern.colt.function.ObjectFunction)
NOT_NULL
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix2D assign(cern.colt.matrix.ObjectMatrix2D)
NOT_NULL
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix2D assign(cern.colt.matrix.ObjectMatrix2D, cern.colt.function.ObjectObjectFunction)
NOT_NULL
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix2D assign(java.lang.Object)
NOT_NULL
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix2D assign(java.lang.Object[][])
NOT_NULL
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix2D assign(java.lang.Object[][]) 0
NOT_NULL
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix2D copy()
NOT_NULL
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix2D getContent()
NOT_NULL
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix2D like(int, int)
NOT_NULL
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix2D viewSelection(int[], int[]) 0
NULLABLE
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix2D viewSelection(int[], int[]) 1
NULLABLE
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix2D viewSelectionLike(int[], int[])
NOT_NULL
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix2D viewSelectionLike(int[], int[]) 0
NOT_NULL
cern.colt.matrix.ObjectMatrix2D cern.colt.matrix.ObjectMatrix2D viewSelectionLike(int[], int[]) 1
NOT_NULL
cern.colt.matrix.ObjectMatrix2D java.lang.Object aggregate(cern.colt.function.ObjectObjectFunction, cern.colt.function.ObjectFunction)
NULLABLE
cern.colt.matrix.ObjectMatrix2D java.lang.Object aggregate(cern.colt.matrix.ObjectMatrix2D, cern.colt.function.ObjectObjectFunction, cern.colt.function.ObjectObjectFunction)
NULLABLE
cern.colt.matrix.ObjectMatrix2D java.lang.Object[][] toArray()
NOT_NULL
cern.colt.matrix.ObjectMatrix2D void getNonZeros(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.ObjectArrayList) 0
NOT_NULL
cern.colt.matrix.ObjectMatrix2D void getNonZeros(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.ObjectArrayList) 1
NOT_NULL
cern.colt.matrix.ObjectMatrix2D void getNonZeros(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.ObjectArrayList) 2
NOT_NULL
cern.colt.matrix.ObjectMatrix3D boolean equals(java.lang.Object, boolean) 0
NULLABLE
cern.colt.matrix.ObjectMatrix3D boolean haveSharedCells(cern.colt.matrix.ObjectMatrix3D) 0
NULLABLE
cern.colt.matrix.ObjectMatrix3D boolean haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix3D) 0
NULLABLE
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix2D like2D(int, int, int, int, int, int)
NOT_NULL
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix2D viewColumn(int)
NOT_NULL
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix2D viewRow(int)
NOT_NULL
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix2D viewSlice(int)
NOT_NULL
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix3D assign(cern.colt.function.ObjectFunction)
NOT_NULL
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix3D assign(cern.colt.matrix.ObjectMatrix3D)
NOT_NULL
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix3D assign(cern.colt.matrix.ObjectMatrix3D, cern.colt.function.ObjectObjectFunction)
NOT_NULL
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix3D assign(java.lang.Object)
NOT_NULL
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix3D assign(java.lang.Object[][][])
NOT_NULL
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix3D assign(java.lang.Object[][][]) 0
NOT_NULL
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix3D copy()
NOT_NULL
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix3D getContent()
NOT_NULL
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix3D like(int, int, int)
NOT_NULL
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelection(int[], int[], int[]) 0
NULLABLE
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelection(int[], int[], int[]) 1
NULLABLE
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelection(int[], int[], int[]) 2
NULLABLE
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[])
NOT_NULL
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[]) 0
NOT_NULL
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[]) 1
NOT_NULL
cern.colt.matrix.ObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[]) 2
NOT_NULL
cern.colt.matrix.ObjectMatrix3D java.lang.Object aggregate(cern.colt.function.ObjectObjectFunction, cern.colt.function.ObjectFunction)
NULLABLE
cern.colt.matrix.ObjectMatrix3D java.lang.Object aggregate(cern.colt.matrix.ObjectMatrix3D, cern.colt.function.ObjectObjectFunction, cern.colt.function.ObjectObjectFunction)
NULLABLE
cern.colt.matrix.ObjectMatrix3D java.lang.Object[][][] toArray()
NOT_NULL
cern.colt.matrix.ObjectMatrix3D void getNonZeros(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.ObjectArrayList) 0
NOT_NULL
cern.colt.matrix.ObjectMatrix3D void getNonZeros(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.ObjectArrayList) 1
NOT_NULL
cern.colt.matrix.ObjectMatrix3D void getNonZeros(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.ObjectArrayList) 2
NOT_NULL
cern.colt.matrix.ObjectMatrix3D void getNonZeros(cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.IntArrayList, cern.colt.list.ObjectArrayList) 3
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix boolean handle(java.lang.String[]) 0
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.DoubleFactory2D getFactory(java.lang.String)
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.DoubleFactory2D getFactory(java.lang.String) 0
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure funAssign()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure funAssignGetSet()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure funAssignGetSetQuick()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure funAssignLog()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure funAssignPlusMult()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure funCorrelation()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure funElementwiseMult()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure funElementwiseMultB()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure funGetQuick()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure funLUDecompose()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure funLUSolve()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure funMatMultLarge()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure funMatVectorMult()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure funSOR5()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure funSOR8()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure funSetQuick()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure funSort()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure fun_dgemm(boolean, boolean)
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure fun_dgemv(boolean)
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure fun_pow(int)
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure getGenericFunction(java.lang.String)
NULLABLE
cern.colt.matrix.bench.BenchmarkMatrix cern.colt.matrix.bench.Double2DProcedure getGenericFunction(java.lang.String) 0
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix java.lang.String commands()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix java.lang.String usage(java.lang.String) 0
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix void benchGeneric(cern.colt.matrix.bench.Double2DProcedure, java.lang.String[]) 1
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix void bench_dgemm(java.lang.String[]) 0
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix void bench_dgemv(java.lang.String[]) 0
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix void bench_pow(java.lang.String[]) 0
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix void main(java.lang.String[]) 0
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix void run(double, java.lang.String, cern.colt.matrix.bench.Double2DProcedure, java.lang.String[], int[], double[]) 3
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix void run(double, java.lang.String, cern.colt.matrix.bench.Double2DProcedure, java.lang.String[], int[], double[]) 4
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix void run(double, java.lang.String, cern.colt.matrix.bench.Double2DProcedure, java.lang.String[], int[], double[]) 5
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.1 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.1 void setParameters(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.1 void setParameters(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.10 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.11 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.12 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.13 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.14 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.14 void setParameters(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.14 void setParameters(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.15 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.15 void setParameters(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.15 void setParameters(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.16 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.16 void setParameters(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.16 void setParameters(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.17 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.18 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.2 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.2 void setParameters(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.2 void setParameters(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.20 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.22 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.3 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.3 void setParameters(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.3 void setParameters(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.4 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.5 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.6 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.7 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.8 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.9 java.lang.String toString()
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.9 void setParameters(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.bench.BenchmarkMatrix.9 void setParameters(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.bench.Double2DProcedure void setParameters(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.bench.Double2DProcedure void setParameters(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.doublealgo.DoubleMatrix1DComparator int compare(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.DoubleMatrix1DComparator int compare(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.doublealgo.DoubleMatrix2DComparator int compare(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.doublealgo.DoubleMatrix2DComparator int compare(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.doublealgo.Formatter int indexOfDecimalPoint(java.lang.String) 0
NOT_NULL
cern.colt.matrix.doublealgo.Formatter int lead(java.lang.String) 0
NOT_NULL
cern.colt.matrix.doublealgo.Formatter java.lang.String form(cern.colt.matrix.DoubleMatrix1D, int, cern.colt.matrix.impl.Former) 0
NOT_NULL
cern.colt.matrix.doublealgo.Formatter java.lang.String form(cern.colt.matrix.DoubleMatrix1D, int, cern.colt.matrix.impl.Former) 2
NOT_NULL
cern.colt.matrix.doublealgo.Formatter java.lang.String form(cern.colt.matrix.impl.AbstractMatrix1D, int, cern.colt.matrix.impl.Former) 0
NOT_NULL
cern.colt.matrix.doublealgo.Formatter java.lang.String form(cern.colt.matrix.impl.AbstractMatrix1D, int, cern.colt.matrix.impl.Former) 2
NOT_NULL
cern.colt.matrix.doublealgo.Formatter java.lang.String toSourceCode(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Formatter java.lang.String toSourceCode(cern.colt.matrix.DoubleMatrix3D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Formatter java.lang.String toString(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Formatter java.lang.String toString(cern.colt.matrix.DoubleMatrix3D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Formatter java.lang.String toTitleString(cern.colt.matrix.DoubleMatrix2D, java.lang.String[], java.lang.String[], java.lang.String, java.lang.String, java.lang.String) 0
NOT_NULL
cern.colt.matrix.doublealgo.Formatter java.lang.String toTitleString(cern.colt.matrix.DoubleMatrix2D, java.lang.String[], java.lang.String[], java.lang.String, java.lang.String, java.lang.String, hep.aida.bin.BinFunction1D[]) 0
NOT_NULL
cern.colt.matrix.doublealgo.Formatter java.lang.String toTitleString(cern.colt.matrix.DoubleMatrix3D, java.lang.String[], java.lang.String[], java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String, hep.aida.bin.BinFunction1D[]) 0
NOT_NULL
cern.colt.matrix.doublealgo.Formatter java.lang.String xtoTitleString(cern.colt.matrix.DoubleMatrix3D, java.lang.String[], java.lang.String[], java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String) 0
NOT_NULL
cern.colt.matrix.doublealgo.Formatter java.lang.String[][] format(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.doublealgo.Formatter java.lang.String[][] format(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Formatter java.lang.String[][] format(cern.colt.matrix.impl.AbstractMatrix2D)
NOT_NULL
cern.colt.matrix.doublealgo.Formatter java.lang.String[][] format(cern.colt.matrix.impl.AbstractMatrix2D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Partitioning cern.colt.matrix.DoubleMatrix2D partition(cern.colt.matrix.DoubleMatrix2D, int, double[], int[]) 0
NOT_NULL
cern.colt.matrix.doublealgo.Partitioning cern.colt.matrix.DoubleMatrix2D partition(cern.colt.matrix.DoubleMatrix2D, int, double[], int[]) 2
NOT_NULL
cern.colt.matrix.doublealgo.Partitioning cern.colt.matrix.DoubleMatrix2D partition(cern.colt.matrix.DoubleMatrix2D, int, double[], int[]) 3
NOT_NULL
cern.colt.matrix.doublealgo.Partitioning void partition(cern.colt.matrix.DoubleMatrix2D, int[], int, int, int, double[], int, int, int[]) 0
NOT_NULL
cern.colt.matrix.doublealgo.Partitioning void partition(cern.colt.matrix.DoubleMatrix2D, int[], int, int, int, double[], int, int, int[]) 1
NOT_NULL
cern.colt.matrix.doublealgo.Partitioning void partition(cern.colt.matrix.DoubleMatrix2D, int[], int, int, int, double[], int, int, int[]) 5
NOT_NULL
cern.colt.matrix.doublealgo.Partitioning void partition(cern.colt.matrix.DoubleMatrix2D, int[], int, int, int, double[], int, int, int[]) 8
NOT_NULL
cern.colt.matrix.doublealgo.Sorting cern.colt.matrix.DoubleMatrix1D sort(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Sorting cern.colt.matrix.DoubleMatrix1D sort(cern.colt.matrix.DoubleMatrix1D, cern.colt.function.DoubleComparator) 0
NOT_NULL
cern.colt.matrix.doublealgo.Sorting cern.colt.matrix.DoubleMatrix2D sort(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.doublealgo.DoubleMatrix1DComparator) 0
NOT_NULL
cern.colt.matrix.doublealgo.Sorting cern.colt.matrix.DoubleMatrix2D sort(cern.colt.matrix.DoubleMatrix2D, double[]) 0
NOT_NULL
cern.colt.matrix.doublealgo.Sorting cern.colt.matrix.DoubleMatrix2D sort(cern.colt.matrix.DoubleMatrix2D, double[]) 1
NOT_NULL
cern.colt.matrix.doublealgo.Sorting cern.colt.matrix.DoubleMatrix2D sort(cern.colt.matrix.DoubleMatrix2D, hep.aida.bin.BinFunction1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Sorting cern.colt.matrix.DoubleMatrix2D sort(cern.colt.matrix.DoubleMatrix2D, int) 0
NOT_NULL
cern.colt.matrix.doublealgo.Sorting cern.colt.matrix.DoubleMatrix3D sort(cern.colt.matrix.DoubleMatrix3D, cern.colt.matrix.doublealgo.DoubleMatrix2DComparator) 0
NOT_NULL
cern.colt.matrix.doublealgo.Sorting cern.colt.matrix.DoubleMatrix3D sort(cern.colt.matrix.DoubleMatrix3D, int, int) 0
NOT_NULL
cern.colt.matrix.doublealgo.Sorting mergeSort
NOT_NULL
cern.colt.matrix.doublealgo.Sorting quickSort
NOT_NULL
cern.colt.matrix.doublealgo.Sorting void runSort(int[], int, int, cern.colt.function.IntComparator) 0
NOT_NULL
cern.colt.matrix.doublealgo.Sorting.1 void runSort(int[], int, int, cern.colt.function.IntComparator) 0
NOT_NULL
cern.colt.matrix.doublealgo.Sorting.10 int compare(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Sorting.10 int compare(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.doublealgo.Sorting.11 int compare(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Sorting.11 int compare(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.doublealgo.Sorting.13 int compare(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Sorting.13 int compare(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.doublealgo.Statistic BRAY_CURTIS
NOT_NULL
cern.colt.matrix.doublealgo.Statistic CANBERRA
NOT_NULL
cern.colt.matrix.doublealgo.Statistic EUCLID
NOT_NULL
cern.colt.matrix.doublealgo.Statistic F
NOT_NULL
cern.colt.matrix.doublealgo.Statistic MANHATTAN
NOT_NULL
cern.colt.matrix.doublealgo.Statistic MAXIMUM
NOT_NULL
cern.colt.matrix.doublealgo.Statistic cern.colt.matrix.DoubleMatrix1D viewSample(cern.colt.matrix.DoubleMatrix1D, double, cern.jet.random.engine.RandomEngine) 0
NOT_NULL
cern.colt.matrix.doublealgo.Statistic cern.colt.matrix.DoubleMatrix2D aggregate(cern.colt.matrix.DoubleMatrix2D, hep.aida.bin.BinFunction1D[], cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Statistic cern.colt.matrix.DoubleMatrix2D correlation(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.doublealgo.Statistic cern.colt.matrix.DoubleMatrix2D correlation(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Statistic cern.colt.matrix.DoubleMatrix2D covariance(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.doublealgo.Statistic cern.colt.matrix.DoubleMatrix2D covariance(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Statistic cern.colt.matrix.DoubleMatrix2D distance(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.doublealgo.Statistic.VectorVectorFunction)
NOT_NULL
cern.colt.matrix.doublealgo.Statistic cern.colt.matrix.DoubleMatrix2D distance(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.doublealgo.Statistic.VectorVectorFunction) 0
NOT_NULL
cern.colt.matrix.doublealgo.Statistic cern.colt.matrix.DoubleMatrix2D viewSample(cern.colt.matrix.DoubleMatrix2D, double, double, cern.jet.random.engine.RandomEngine) 0
NOT_NULL
cern.colt.matrix.doublealgo.Statistic cern.colt.matrix.DoubleMatrix2D xdistanceOld(cern.colt.matrix.DoubleMatrix2D, int)
NULLABLE
cern.colt.matrix.doublealgo.Statistic cern.colt.matrix.DoubleMatrix2D xdistanceOld2(cern.colt.matrix.DoubleMatrix2D, int)
NULLABLE
cern.colt.matrix.doublealgo.Statistic cern.colt.matrix.DoubleMatrix3D viewSample(cern.colt.matrix.DoubleMatrix3D, double, double, double, cern.jet.random.engine.RandomEngine) 0
NOT_NULL
cern.colt.matrix.doublealgo.Statistic cern.jet.math.Functions access$000()
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.IHistogram1D histogram(hep.aida.IHistogram1D, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.IHistogram2D cube(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.IHistogram2D cube(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.IHistogram2D cube(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 2
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.IHistogram2D histogram(hep.aida.IHistogram2D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.IHistogram2D histogram(hep.aida.IHistogram2D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 2
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.IHistogram2D histogram(hep.aida.IHistogram2D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.IHistogram2D histogram(hep.aida.IHistogram2D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 2
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.IHistogram2D histogram(hep.aida.IHistogram2D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 3
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.IHistogram3D cube(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.IHistogram3D cube(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.IHistogram3D cube(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 2
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.IHistogram3D cube(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 3
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.IHistogram3D histogram(hep.aida.IHistogram3D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.IHistogram3D histogram(hep.aida.IHistogram3D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 2
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.IHistogram3D histogram(hep.aida.IHistogram3D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 3
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.IHistogram3D histogram(hep.aida.IHistogram3D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 4
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.bin.DynamicBin1D bin(cern.colt.matrix.DoubleMatrix1D)
NOT_NULL
cern.colt.matrix.doublealgo.Statistic hep.aida.bin.DynamicBin1D bin(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Statistic void main(java.lang.String[]) 0
NOT_NULL
cern.colt.matrix.doublealgo.Statistic.1 double apply(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Statistic.2 double apply(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Statistic.3 double apply(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Statistic.5 double apply(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Statistic.6 double apply(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Statistic.VectorVectorFunction double apply(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Stencil int stencil27(cern.colt.matrix.DoubleMatrix3D, cern.colt.function.Double27Function, int, cern.colt.matrix.DoubleMatrix3DProcedure, int) 0
NOT_NULL
cern.colt.matrix.doublealgo.Stencil int stencil9(cern.colt.matrix.DoubleMatrix2D, cern.colt.function.Double9Function, int, cern.colt.matrix.DoubleMatrix2DProcedure, int) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform F
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D abs(cern.colt.matrix.DoubleMatrix1D)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D abs(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D div(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D div(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D div(cern.colt.matrix.DoubleMatrix1D, double)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D div(cern.colt.matrix.DoubleMatrix1D, double) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D minus(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D minus(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D minus(cern.colt.matrix.DoubleMatrix1D, double)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D minus(cern.colt.matrix.DoubleMatrix1D, double) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D minusMult(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, double)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D minusMult(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, double) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D mult(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D mult(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D mult(cern.colt.matrix.DoubleMatrix1D, double)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D mult(cern.colt.matrix.DoubleMatrix1D, double) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D negate(cern.colt.matrix.DoubleMatrix1D)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D negate(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D plus(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D plus(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D plus(cern.colt.matrix.DoubleMatrix1D, double)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D plus(cern.colt.matrix.DoubleMatrix1D, double) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D plusMult(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, double)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D plusMult(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, double) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D pow(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D pow(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D pow(cern.colt.matrix.DoubleMatrix1D, double)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix1D pow(cern.colt.matrix.DoubleMatrix1D, double) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D abs(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D abs(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D div(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D div(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D div(cern.colt.matrix.DoubleMatrix2D, double)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D div(cern.colt.matrix.DoubleMatrix2D, double) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D equals(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D equals(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D equals(cern.colt.matrix.DoubleMatrix2D, double)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D equals(cern.colt.matrix.DoubleMatrix2D, double) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D greater(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D greater(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D greater(cern.colt.matrix.DoubleMatrix2D, double)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D greater(cern.colt.matrix.DoubleMatrix2D, double) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D less(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D less(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D less(cern.colt.matrix.DoubleMatrix2D, double)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D less(cern.colt.matrix.DoubleMatrix2D, double) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D minus(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D minus(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D minus(cern.colt.matrix.DoubleMatrix2D, double)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D minus(cern.colt.matrix.DoubleMatrix2D, double) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D minusMult(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, double)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D minusMult(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, double) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D mult(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D mult(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D mult(cern.colt.matrix.DoubleMatrix2D, double)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D mult(cern.colt.matrix.DoubleMatrix2D, double) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D negate(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D negate(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D plus(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D plus(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D plus(cern.colt.matrix.DoubleMatrix2D, double)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D plus(cern.colt.matrix.DoubleMatrix2D, double) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D plusMult(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, double)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D plusMult(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, double) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D pow(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D pow(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D pow(cern.colt.matrix.DoubleMatrix2D, double)
NOT_NULL
cern.colt.matrix.doublealgo.Transform cern.colt.matrix.DoubleMatrix2D pow(cern.colt.matrix.DoubleMatrix2D, double) 0
NOT_NULL
cern.colt.matrix.doublealgo.Transform transform
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter CENTER
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter DECIMAL
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter DEFAULT_COLUMN_SEPARATOR
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter DEFAULT_ROW_SEPARATOR
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter DEFAULT_SLICE_SEPARATOR
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter LEFT
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter RIGHT
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter factory
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter int alignmentCode(java.lang.String) 0
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter int lead(java.lang.String) 0
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter java.lang.String form(cern.colt.matrix.impl.AbstractMatrix1D, int, cern.colt.matrix.impl.Former) 0
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter java.lang.String form(cern.colt.matrix.impl.AbstractMatrix1D, int, cern.colt.matrix.impl.Former) 2
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter java.lang.String shape(cern.colt.matrix.impl.AbstractMatrix1D) 0
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter java.lang.String shape(cern.colt.matrix.impl.AbstractMatrix2D) 0
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter java.lang.String shape(cern.colt.matrix.impl.AbstractMatrix3D) 0
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter java.lang.String toString(java.lang.String[][]) 0
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter java.lang.String[] formatRow(cern.colt.matrix.impl.AbstractMatrix1D)
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter java.lang.String[] formatRow(cern.colt.matrix.impl.AbstractMatrix1D) 0
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter java.lang.String[][] format(cern.colt.matrix.impl.AbstractMatrix2D)
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter java.lang.String[][] format(cern.colt.matrix.impl.AbstractMatrix2D) 0
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter void align(java.lang.String[][]) 0
NOT_NULL
cern.colt.matrix.impl.AbstractFormatter void alignRow(java.lang.String[], int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix1D cern.colt.matrix.impl.AbstractMatrix1D vFlip()
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix1D cern.colt.matrix.impl.AbstractMatrix1D vPart(int, int)
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix1D cern.colt.matrix.impl.AbstractMatrix1D vStrides(int)
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix1D void checkIndexes(int[]) 0
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix1D void checkSize(cern.colt.matrix.impl.AbstractMatrix1D) 0
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix1D void checkSize(double[]) 0
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix2D cern.colt.matrix.impl.AbstractMatrix2D vColumnFlip()
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix2D cern.colt.matrix.impl.AbstractMatrix2D vDice()
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix2D cern.colt.matrix.impl.AbstractMatrix2D vPart(int, int, int, int)
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix2D cern.colt.matrix.impl.AbstractMatrix2D vRowFlip()
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix2D cern.colt.matrix.impl.AbstractMatrix2D vStrides(int, int)
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix2D void checkColumnIndexes(int[]) 0
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix2D void checkRowIndexes(int[]) 0
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix2D void checkShape(cern.colt.matrix.impl.AbstractMatrix2D) 0
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix2D void checkShape(cern.colt.matrix.impl.AbstractMatrix2D, cern.colt.matrix.impl.AbstractMatrix2D) 0
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix2D void checkShape(cern.colt.matrix.impl.AbstractMatrix2D, cern.colt.matrix.impl.AbstractMatrix2D) 1
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix3D cern.colt.matrix.impl.AbstractMatrix3D vColumnFlip()
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix3D cern.colt.matrix.impl.AbstractMatrix3D vDice(int, int, int)
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix3D cern.colt.matrix.impl.AbstractMatrix3D vPart(int, int, int, int, int, int)
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix3D cern.colt.matrix.impl.AbstractMatrix3D vRowFlip()
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix3D cern.colt.matrix.impl.AbstractMatrix3D vSliceFlip()
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix3D cern.colt.matrix.impl.AbstractMatrix3D vStrides(int, int, int)
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix3D int[] shape()
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix3D void checkColumnIndexes(int[]) 0
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix3D void checkRowIndexes(int[]) 0
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix3D void checkShape(cern.colt.matrix.impl.AbstractMatrix3D) 0
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix3D void checkShape(cern.colt.matrix.impl.AbstractMatrix3D, cern.colt.matrix.impl.AbstractMatrix3D) 0
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix3D void checkShape(cern.colt.matrix.impl.AbstractMatrix3D, cern.colt.matrix.impl.AbstractMatrix3D) 1
NOT_NULL
cern.colt.matrix.impl.AbstractMatrix3D void checkSliceIndexes(int[]) 0
NOT_NULL
cern.colt.matrix.impl.Benchmark void benchmark(int, int, java.lang.String, boolean, int, double, double, double) 2
NOT_NULL
cern.colt.matrix.impl.Benchmark void main(java.lang.String[]) 0
NOT_NULL
cern.colt.matrix.impl.BenchmarkMatrix2D void doubleBenchmark(int, int, int, java.lang.String, boolean, int, double, double) 3
NOT_NULL
cern.colt.matrix.impl.BenchmarkMatrix2D void doubleBenchmarkMult(int, int, int, java.lang.String, boolean, int, double, double) 3
NOT_NULL
cern.colt.matrix.impl.BenchmarkMatrix2D void main(java.lang.String[]) 0
NOT_NULL
cern.colt.matrix.impl.DelegateDoubleMatrix1D DelegateDoubleMatrix1D(cern.colt.matrix.DoubleMatrix2D, int) 0
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix1D DenseDoubleMatrix1D(double[]) 0
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix1D boolean haveSharedCellsRaw(cern.colt.matrix.DoubleMatrix1D) 0
NULLABLE
cern.colt.matrix.impl.DenseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D assign(cern.colt.function.DoubleFunction)
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D assign(cern.colt.matrix.DoubleMatrix1D)
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D assign(cern.colt.matrix.DoubleMatrix1D, cern.colt.function.DoubleDoubleFunction)
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D assign(double)
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D assign(double[])
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D assign(double[]) 0
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D like(int)
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewSelectionLike(int[])
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewSelectionLike(int[]) 0
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix1D cern.colt.matrix.DoubleMatrix2D like2D(int, int)
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix1D void toArray(double[]) 0
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix2D DenseDoubleMatrix2D(double[][]) 0
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix2D boolean haveSharedCellsRaw(cern.colt.matrix.DoubleMatrix2D) 0
NULLABLE
cern.colt.matrix.impl.DenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D like1D(int)
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D like1D(int, int, int)
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D zMult(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, double, double, boolean) 1
NULLABLE
cern.colt.matrix.impl.DenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(cern.colt.function.DoubleFunction)
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(cern.colt.matrix.DoubleMatrix2D, cern.colt.function.DoubleDoubleFunction)
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(double)
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(double[][])
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(double[][]) 0
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D like(int, int)
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelectionLike(int[], int[])
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelectionLike(int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelectionLike(int[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D zMult(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, double, double, boolean, boolean) 0
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix2D void zAssign8Neighbors(cern.colt.matrix.DoubleMatrix2D, cern.colt.function.Double9Function) 1
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix3D DenseDoubleMatrix3D(double[][][]) 0
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix3D boolean haveSharedCellsRaw(cern.colt.matrix.DoubleMatrix3D) 0
NULLABLE
cern.colt.matrix.impl.DenseDoubleMatrix3D cern.colt.matrix.DoubleMatrix2D like2D(int, int, int, int, int, int)
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D assign(cern.colt.matrix.DoubleMatrix3D)
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D assign(double[][][])
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D assign(double[][][]) 0
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D like(int, int, int)
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[])
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[]) 2
NOT_NULL
cern.colt.matrix.impl.DenseDoubleMatrix3D void zAssign27Neighbors(cern.colt.matrix.DoubleMatrix3D, cern.colt.function.Double27Function) 1
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix1D DenseObjectMatrix1D(java.lang.Object[]) 0
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix1D boolean haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix1D) 0
NULLABLE
cern.colt.matrix.impl.DenseObjectMatrix1D cern.colt.matrix.ObjectMatrix1D assign(cern.colt.function.ObjectFunction)
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix1D cern.colt.matrix.ObjectMatrix1D assign(cern.colt.matrix.ObjectMatrix1D)
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix1D cern.colt.matrix.ObjectMatrix1D assign(cern.colt.matrix.ObjectMatrix1D, cern.colt.function.ObjectObjectFunction)
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix1D cern.colt.matrix.ObjectMatrix1D assign(java.lang.Object[])
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix1D cern.colt.matrix.ObjectMatrix1D assign(java.lang.Object[]) 0
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix1D cern.colt.matrix.ObjectMatrix1D like(int)
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix1D cern.colt.matrix.ObjectMatrix1D viewSelectionLike(int[])
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix1D cern.colt.matrix.ObjectMatrix1D viewSelectionLike(int[]) 0
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix1D cern.colt.matrix.ObjectMatrix2D like2D(int, int)
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix1D void toArray(java.lang.Object[]) 0
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix2D DenseObjectMatrix2D(java.lang.Object[][]) 0
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix2D boolean haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix2D) 0
NULLABLE
cern.colt.matrix.impl.DenseObjectMatrix2D cern.colt.matrix.ObjectMatrix1D like1D(int)
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix2D cern.colt.matrix.ObjectMatrix1D like1D(int, int, int)
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D assign(cern.colt.function.ObjectFunction)
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D assign(cern.colt.matrix.ObjectMatrix2D)
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D assign(cern.colt.matrix.ObjectMatrix2D, cern.colt.function.ObjectObjectFunction)
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D assign(java.lang.Object[][])
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D assign(java.lang.Object[][]) 0
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D like(int, int)
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D viewSelectionLike(int[], int[])
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D viewSelectionLike(int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D viewSelectionLike(int[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix3D DenseObjectMatrix3D(java.lang.Object[][][]) 0
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix3D boolean haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix3D) 0
NULLABLE
cern.colt.matrix.impl.DenseObjectMatrix3D cern.colt.matrix.ObjectMatrix2D like2D(int, int, int, int, int, int)
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D assign(cern.colt.matrix.ObjectMatrix3D)
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D assign(java.lang.Object[][][])
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D assign(java.lang.Object[][][]) 0
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D like(int, int, int)
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[])
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.DenseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[]) 2
NOT_NULL
cern.colt.matrix.impl.FormerFactory cern.colt.matrix.impl.Former create(java.lang.String)
NOT_NULL
cern.colt.matrix.impl.RCDoubleMatrix2D RCDoubleMatrix2D(double[][]) 0
NOT_NULL
cern.colt.matrix.impl.RCDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D like1D(int)
NOT_NULL
cern.colt.matrix.impl.RCDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D zMult(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, double, double, boolean) 1
NULLABLE
cern.colt.matrix.impl.RCDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(cern.colt.function.DoubleFunction)
NOT_NULL
cern.colt.matrix.impl.RCDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.impl.RCDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(double)
NOT_NULL
cern.colt.matrix.impl.RCDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D forEachNonZero(cern.colt.function.IntIntDoubleFunction)
NOT_NULL
cern.colt.matrix.impl.RCDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D getContent()
NOT_NULL
cern.colt.matrix.impl.RCDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D like(int, int)
NOT_NULL
cern.colt.matrix.impl.RCDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D zMult(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, double, double, boolean, boolean)
NOT_NULL
cern.colt.matrix.impl.RCDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D zMult(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, double, double, boolean, boolean) 0
NOT_NULL
cern.colt.matrix.impl.RCMDoubleMatrix2D RCMDoubleMatrix2D(double[][]) 0
NOT_NULL
cern.colt.matrix.impl.RCMDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D like1D(int)
NOT_NULL
cern.colt.matrix.impl.RCMDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(double)
NOT_NULL
cern.colt.matrix.impl.RCMDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D getContent()
NOT_NULL
cern.colt.matrix.impl.RCMDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D like(int, int)
NOT_NULL
cern.colt.matrix.impl.RCMDoubleMatrix2D void zMult(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.list.IntArrayList, cern.colt.matrix.DoubleMatrix1D[], double, double) 0
NOT_NULL
cern.colt.matrix.impl.RCMDoubleMatrix2D void zMult(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.list.IntArrayList, cern.colt.matrix.DoubleMatrix1D[], double, double) 1
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix1D SelectedDenseDoubleMatrix1D(double[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix1D boolean haveSharedCellsRaw(cern.colt.matrix.DoubleMatrix1D) 0
NULLABLE
cern.colt.matrix.impl.SelectedDenseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D like(int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewSelectionLike(int[])
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewSelectionLike(int[]) 0
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix1D cern.colt.matrix.DoubleMatrix2D like2D(int, int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix2D SelectedDenseDoubleMatrix2D(double[], int[], int[], int) 1
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix2D SelectedDenseDoubleMatrix2D(double[], int[], int[], int) 2
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix2D boolean haveSharedCellsRaw(cern.colt.matrix.DoubleMatrix2D) 0
NULLABLE
cern.colt.matrix.impl.SelectedDenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D like1D(int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D viewColumn(int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D viewRow(int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D like(int, int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelectionLike(int[], int[])
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelectionLike(int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelectionLike(int[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix2D cern.colt.matrix.impl.AbstractMatrix2D vDice()
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix3D SelectedDenseDoubleMatrix3D(double[], int[], int[], int[], int) 1
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix3D SelectedDenseDoubleMatrix3D(double[], int[], int[], int[], int) 2
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix3D SelectedDenseDoubleMatrix3D(double[], int[], int[], int[], int) 3
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix3D boolean haveSharedCellsRaw(cern.colt.matrix.DoubleMatrix3D) 0
NULLABLE
cern.colt.matrix.impl.SelectedDenseDoubleMatrix3D cern.colt.matrix.DoubleMatrix2D viewColumn(int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix3D cern.colt.matrix.DoubleMatrix2D viewRow(int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix3D cern.colt.matrix.DoubleMatrix2D viewSlice(int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D like(int, int, int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[])
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[]) 2
NOT_NULL
cern.colt.matrix.impl.SelectedDenseDoubleMatrix3D cern.colt.matrix.impl.AbstractMatrix3D vDice(int, int, int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix1D SelectedDenseObjectMatrix1D(java.lang.Object[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix1D boolean haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix1D) 0
NULLABLE
cern.colt.matrix.impl.SelectedDenseObjectMatrix1D cern.colt.matrix.ObjectMatrix1D like(int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix1D cern.colt.matrix.ObjectMatrix1D viewSelectionLike(int[])
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix1D cern.colt.matrix.ObjectMatrix1D viewSelectionLike(int[]) 0
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix1D cern.colt.matrix.ObjectMatrix2D like2D(int, int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix2D SelectedDenseObjectMatrix2D(java.lang.Object[], int[], int[], int) 1
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix2D SelectedDenseObjectMatrix2D(java.lang.Object[], int[], int[], int) 2
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix2D boolean haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix2D) 0
NULLABLE
cern.colt.matrix.impl.SelectedDenseObjectMatrix2D cern.colt.matrix.ObjectMatrix1D like1D(int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix2D cern.colt.matrix.ObjectMatrix1D viewColumn(int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix2D cern.colt.matrix.ObjectMatrix1D viewRow(int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D like(int, int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D viewSelectionLike(int[], int[])
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D viewSelectionLike(int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D viewSelectionLike(int[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix2D cern.colt.matrix.impl.AbstractMatrix2D vDice()
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix3D SelectedDenseObjectMatrix3D(java.lang.Object[], int[], int[], int[], int) 1
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix3D SelectedDenseObjectMatrix3D(java.lang.Object[], int[], int[], int[], int) 2
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix3D SelectedDenseObjectMatrix3D(java.lang.Object[], int[], int[], int[], int) 3
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix3D boolean haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix3D) 0
NULLABLE
cern.colt.matrix.impl.SelectedDenseObjectMatrix3D cern.colt.matrix.ObjectMatrix2D viewColumn(int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix3D cern.colt.matrix.ObjectMatrix2D viewRow(int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix3D cern.colt.matrix.ObjectMatrix2D viewSlice(int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D like(int, int, int)
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[])
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[]) 2
NOT_NULL
cern.colt.matrix.impl.SelectedDenseObjectMatrix3D cern.colt.matrix.impl.AbstractMatrix3D vDice(int, int, int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix1D SelectedSparseDoubleMatrix1D(cern.colt.map.AbstractIntDoubleMap, int[]) 1
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix1D boolean haveSharedCellsRaw(cern.colt.matrix.DoubleMatrix1D) 0
NULLABLE
cern.colt.matrix.impl.SelectedSparseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D like(int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewSelectionLike(int[])
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewSelectionLike(int[]) 0
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix1D cern.colt.matrix.DoubleMatrix2D like2D(int, int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix2D SelectedSparseDoubleMatrix2D(cern.colt.map.AbstractIntDoubleMap, int[], int[], int) 1
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix2D SelectedSparseDoubleMatrix2D(cern.colt.map.AbstractIntDoubleMap, int[], int[], int) 2
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix2D boolean haveSharedCellsRaw(cern.colt.matrix.DoubleMatrix2D) 0
NULLABLE
cern.colt.matrix.impl.SelectedSparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D like1D(int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D viewColumn(int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D viewRow(int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D like(int, int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelectionLike(int[], int[])
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelectionLike(int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelectionLike(int[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix2D cern.colt.matrix.impl.AbstractMatrix2D vDice()
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix3D SelectedSparseDoubleMatrix3D(cern.colt.map.AbstractIntDoubleMap, int[], int[], int[], int) 1
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix3D SelectedSparseDoubleMatrix3D(cern.colt.map.AbstractIntDoubleMap, int[], int[], int[], int) 2
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix3D SelectedSparseDoubleMatrix3D(cern.colt.map.AbstractIntDoubleMap, int[], int[], int[], int) 3
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix3D boolean haveSharedCellsRaw(cern.colt.matrix.DoubleMatrix3D) 0
NULLABLE
cern.colt.matrix.impl.SelectedSparseDoubleMatrix3D cern.colt.matrix.DoubleMatrix2D viewColumn(int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix3D cern.colt.matrix.DoubleMatrix2D viewRow(int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix3D cern.colt.matrix.DoubleMatrix2D viewSlice(int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D like(int, int, int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[])
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[]) 2
NOT_NULL
cern.colt.matrix.impl.SelectedSparseDoubleMatrix3D cern.colt.matrix.impl.AbstractMatrix3D vDice(int, int, int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix1D SelectedSparseObjectMatrix1D(cern.colt.map.AbstractIntObjectMap, int[]) 1
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix1D boolean haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix1D) 0
NULLABLE
cern.colt.matrix.impl.SelectedSparseObjectMatrix1D cern.colt.matrix.ObjectMatrix1D like(int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix1D cern.colt.matrix.ObjectMatrix1D viewSelectionLike(int[])
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix1D cern.colt.matrix.ObjectMatrix1D viewSelectionLike(int[]) 0
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix1D cern.colt.matrix.ObjectMatrix2D like2D(int, int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix2D SelectedSparseObjectMatrix2D(cern.colt.map.AbstractIntObjectMap, int[], int[], int) 1
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix2D SelectedSparseObjectMatrix2D(cern.colt.map.AbstractIntObjectMap, int[], int[], int) 2
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix2D boolean haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix2D) 0
NULLABLE
cern.colt.matrix.impl.SelectedSparseObjectMatrix2D cern.colt.matrix.ObjectMatrix1D like1D(int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix2D cern.colt.matrix.ObjectMatrix1D viewColumn(int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix2D cern.colt.matrix.ObjectMatrix1D viewRow(int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D like(int, int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D viewSelectionLike(int[], int[])
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D viewSelectionLike(int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D viewSelectionLike(int[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix2D cern.colt.matrix.impl.AbstractMatrix2D vDice()
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix3D SelectedSparseObjectMatrix3D(cern.colt.map.AbstractIntObjectMap, int[], int[], int[], int) 1
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix3D SelectedSparseObjectMatrix3D(cern.colt.map.AbstractIntObjectMap, int[], int[], int[], int) 2
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix3D SelectedSparseObjectMatrix3D(cern.colt.map.AbstractIntObjectMap, int[], int[], int[], int) 3
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix3D boolean haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix3D) 0
NULLABLE
cern.colt.matrix.impl.SelectedSparseObjectMatrix3D cern.colt.matrix.ObjectMatrix2D viewColumn(int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix3D cern.colt.matrix.ObjectMatrix2D viewRow(int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix3D cern.colt.matrix.ObjectMatrix2D viewSlice(int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D like(int, int, int)
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[])
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[]) 2
NOT_NULL
cern.colt.matrix.impl.SelectedSparseObjectMatrix3D cern.colt.matrix.impl.AbstractMatrix3D vDice(int, int, int)
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix1D SparseDoubleMatrix1D(double[]) 0
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix1D boolean haveSharedCellsRaw(cern.colt.matrix.DoubleMatrix1D) 0
NULLABLE
cern.colt.matrix.impl.SparseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D assign(double)
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D like(int)
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewSelectionLike(int[])
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewSelectionLike(int[]) 0
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix1D cern.colt.matrix.DoubleMatrix2D like2D(int, int)
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix2D SparseDoubleMatrix2D(double[][]) 0
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix2D boolean haveSharedCellsRaw(cern.colt.matrix.DoubleMatrix2D) 0
NULLABLE
cern.colt.matrix.impl.SparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D like1D(int)
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D like1D(int, int, int)
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D zMult(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, double, double, boolean) 1
NULLABLE
cern.colt.matrix.impl.SparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(cern.colt.function.DoubleFunction)
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(cern.colt.matrix.DoubleMatrix2D, cern.colt.function.DoubleDoubleFunction)
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(double)
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D forEachNonZero(cern.colt.function.IntIntDoubleFunction)
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D like(int, int)
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelectionLike(int[], int[])
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelectionLike(int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelectionLike(int[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D zMult(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, double, double, boolean, boolean) 0
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix3D SparseDoubleMatrix3D(double[][][]) 0
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix3D boolean haveSharedCellsRaw(cern.colt.matrix.DoubleMatrix3D) 0
NULLABLE
cern.colt.matrix.impl.SparseDoubleMatrix3D cern.colt.matrix.DoubleMatrix2D like2D(int, int, int, int, int, int)
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D assign(double)
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D like(int, int, int)
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[])
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.SparseDoubleMatrix3D cern.colt.matrix.DoubleMatrix3D viewSelectionLike(int[], int[], int[]) 2
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix1D SparseObjectMatrix1D(java.lang.Object[]) 0
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix1D boolean haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix1D) 0
NULLABLE
cern.colt.matrix.impl.SparseObjectMatrix1D cern.colt.matrix.ObjectMatrix1D like(int)
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix1D cern.colt.matrix.ObjectMatrix1D viewSelectionLike(int[])
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix1D cern.colt.matrix.ObjectMatrix1D viewSelectionLike(int[]) 0
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix1D cern.colt.matrix.ObjectMatrix2D like2D(int, int)
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix2D SparseObjectMatrix2D(java.lang.Object[][]) 0
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix2D boolean haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix2D) 0
NULLABLE
cern.colt.matrix.impl.SparseObjectMatrix2D cern.colt.matrix.ObjectMatrix1D like1D(int)
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix2D cern.colt.matrix.ObjectMatrix1D like1D(int, int, int)
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D like(int, int)
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D viewSelectionLike(int[], int[])
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D viewSelectionLike(int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix2D cern.colt.matrix.ObjectMatrix2D viewSelectionLike(int[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix3D SparseObjectMatrix3D(java.lang.Object[][][]) 0
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix3D boolean haveSharedCellsRaw(cern.colt.matrix.ObjectMatrix3D) 0
NULLABLE
cern.colt.matrix.impl.SparseObjectMatrix3D cern.colt.matrix.ObjectMatrix2D like2D(int, int, int, int, int, int)
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D like(int, int, int)
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[])
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.SparseObjectMatrix3D cern.colt.matrix.ObjectMatrix3D viewSelectionLike(int[], int[], int[]) 2
NOT_NULL
cern.colt.matrix.impl.TestMatrix2D F
NOT_NULL
cern.colt.matrix.impl.TestMatrix2D Factory1D
NOT_NULL
cern.colt.matrix.impl.TestMatrix2D Factory2D
NOT_NULL
cern.colt.matrix.impl.TestMatrix2D LinearAlgebra
NOT_NULL
cern.colt.matrix.impl.TestMatrix2D Property
NOT_NULL
cern.colt.matrix.impl.TestMatrix2D Transform
NOT_NULL
cern.colt.matrix.impl.TestMatrix2D double[][] randomMatrix(int, cern.jet.random.engine.MersenneTwister)
NOT_NULL
cern.colt.matrix.impl.TestMatrix2D void doubleTest28(cern.colt.matrix.DoubleFactory2D) 0
NOT_NULL
cern.colt.matrix.impl.TestMatrix2D void doubleTest29(cern.colt.matrix.DoubleFactory2D) 0
NOT_NULL
cern.colt.matrix.impl.TestMatrix2D void doubleTest29(int, cern.colt.matrix.DoubleFactory2D) 1
NOT_NULL
cern.colt.matrix.impl.TestMatrix2D void main(java.lang.String[]) 0
NOT_NULL
cern.colt.matrix.impl.TestMatrix2D.5 int compare(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.impl.TestMatrix2D.5 int compare(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.impl.TridiagonalDoubleMatrix2D TridiagonalDoubleMatrix2D(double[][]) 0
NOT_NULL
cern.colt.matrix.impl.TridiagonalDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D like1D(int)
NOT_NULL
cern.colt.matrix.impl.TridiagonalDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D zMult(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, double, double, boolean) 1
NULLABLE
cern.colt.matrix.impl.TridiagonalDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(cern.colt.function.DoubleFunction)
NOT_NULL
cern.colt.matrix.impl.TridiagonalDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D assign(double)
NOT_NULL
cern.colt.matrix.impl.TridiagonalDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D forEachNonZero(cern.colt.function.IntIntDoubleFunction)
NOT_NULL
cern.colt.matrix.impl.TridiagonalDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D getContent()
NOT_NULL
cern.colt.matrix.impl.TridiagonalDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D like(int, int)
NOT_NULL
cern.colt.matrix.impl.TridiagonalDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D zMult(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, double, double, boolean, boolean)
NOT_NULL
cern.colt.matrix.impl.TridiagonalDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D zMult(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, double, double, boolean, boolean) 0
NOT_NULL
cern.colt.matrix.impl.WrapperDoubleMatrix1D WrapperDoubleMatrix1D(cern.colt.matrix.DoubleMatrix1D) 0
NULLABLE
cern.colt.matrix.impl.WrapperDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewFlip()
NOT_NULL
cern.colt.matrix.impl.WrapperDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewPart(int, int)
NOT_NULL
cern.colt.matrix.impl.WrapperDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewSelection(int[])
NOT_NULL
cern.colt.matrix.impl.WrapperDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewSelection(int[]) 0
NULLABLE
cern.colt.matrix.impl.WrapperDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewSelectionLike(int[]) 0
NOT_NULL
cern.colt.matrix.impl.WrapperDoubleMatrix1D cern.colt.matrix.DoubleMatrix1D viewStrides(int)
NOT_NULL
cern.colt.matrix.impl.WrapperDoubleMatrix2D WrapperDoubleMatrix2D(cern.colt.matrix.DoubleMatrix2D) 0
NULLABLE
cern.colt.matrix.impl.WrapperDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D like1D(int)
NOT_NULL
cern.colt.matrix.impl.WrapperDoubleMatrix2D cern.colt.matrix.DoubleMatrix1D viewRow(int)
NOT_NULL
cern.colt.matrix.impl.WrapperDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D getContent()
NOT_NULL
cern.colt.matrix.impl.WrapperDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D like(int, int)
NOT_NULL
cern.colt.matrix.impl.WrapperDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewColumnFlip()
NOT_NULL
cern.colt.matrix.impl.WrapperDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewDice()
NOT_NULL
cern.colt.matrix.impl.WrapperDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewPart(int, int, int, int)
NOT_NULL
cern.colt.matrix.impl.WrapperDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewRowFlip()
NOT_NULL
cern.colt.matrix.impl.WrapperDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelection(int[], int[])
NOT_NULL
cern.colt.matrix.impl.WrapperDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelection(int[], int[]) 0
NULLABLE
cern.colt.matrix.impl.WrapperDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelection(int[], int[]) 1
NULLABLE
cern.colt.matrix.impl.WrapperDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelectionLike(int[], int[]) 0
NOT_NULL
cern.colt.matrix.impl.WrapperDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewSelectionLike(int[], int[]) 1
NOT_NULL
cern.colt.matrix.impl.WrapperDoubleMatrix2D cern.colt.matrix.DoubleMatrix2D viewStrides(int, int)
NOT_NULL
cern.colt.matrix.linalg.Algebra DEFAULT
NOT_NULL
cern.colt.matrix.linalg.Algebra ZERO
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.function.DoubleDoubleFunction hypotFunction()
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix1D mult(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix1D permute(cern.colt.matrix.DoubleMatrix1D, int[], double[])
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix1D permute(cern.colt.matrix.DoubleMatrix1D, int[], double[]) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix1D permute(cern.colt.matrix.DoubleMatrix1D, int[], double[]) 1
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D inverse(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D mult(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D multOuter(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D multOuter(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D multOuter(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D multOuter(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix2D) 2
NULLABLE
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D permute(cern.colt.matrix.DoubleMatrix2D, int[], int[]) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D permuteColumns(cern.colt.matrix.DoubleMatrix2D, int[], int[])
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D permuteColumns(cern.colt.matrix.DoubleMatrix2D, int[], int[]) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D permuteColumns(cern.colt.matrix.DoubleMatrix2D, int[], int[]) 1
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D permuteRows(cern.colt.matrix.DoubleMatrix2D, int[], int[])
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D permuteRows(cern.colt.matrix.DoubleMatrix2D, int[], int[]) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D permuteRows(cern.colt.matrix.DoubleMatrix2D, int[], int[]) 1
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D pow(cern.colt.matrix.DoubleMatrix2D, int) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D solve(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D solve(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D solveTranspose(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D solveTranspose(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D subMatrix(cern.colt.matrix.DoubleMatrix2D, int, int, int, int) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D subMatrix(cern.colt.matrix.DoubleMatrix2D, int, int, int[]) 3
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D subMatrix(cern.colt.matrix.DoubleMatrix2D, int[], int, int) 1
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D transpose(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D trapezoidalLower(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D trapezoidalLower(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D xmultOuter(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D xmultOuter(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.DoubleMatrix2D xpowSlow(cern.colt.matrix.DoubleMatrix2D, int) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.linalg.CholeskyDecomposition chol(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.linalg.CholeskyDecomposition chol(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.linalg.EigenvalueDecomposition eig(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.linalg.EigenvalueDecomposition eig(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.linalg.LUDecomposition lu(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.linalg.LUDecomposition lu(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.linalg.QRDecomposition qr(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.linalg.QRDecomposition qr(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.linalg.SingularValueDecomposition svd(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.linalg.Algebra cern.colt.matrix.linalg.SingularValueDecomposition svd(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra double cond(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra double det(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra double mult(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra double norm1(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra double norm1(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra double norm2(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra double norm2(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra double normF(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra double normInfinity(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra double normInfinity(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra double trace(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra int rank(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Algebra java.lang.Object clone()
NOT_NULL
cern.colt.matrix.linalg.Blas double dasum(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.Blas double ddot(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.Blas double dnrm2(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.Blas int idamax(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.Blas void assign(cern.colt.matrix.DoubleMatrix2D, cern.colt.function.DoubleFunction) 0
NOT_NULL
cern.colt.matrix.linalg.Blas void assign(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, cern.colt.function.DoubleDoubleFunction) 0
NOT_NULL
cern.colt.matrix.linalg.Blas void daxpy(double, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 2
NOT_NULL
cern.colt.matrix.linalg.Blas void daxpy(double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 2
NOT_NULL
cern.colt.matrix.linalg.Blas void dcopy(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.linalg.Blas void dcopy(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.linalg.Blas void dgemm(boolean, boolean, double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, double, cern.colt.matrix.DoubleMatrix2D) 3
NOT_NULL
cern.colt.matrix.linalg.Blas void dgemv(boolean, double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D, double, cern.colt.matrix.DoubleMatrix1D) 2
NOT_NULL
cern.colt.matrix.linalg.Blas void dger(double, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix2D) 3
NOT_NULL
cern.colt.matrix.linalg.Blas void drot(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, double, double) 0
NOT_NULL
cern.colt.matrix.linalg.Blas void drot(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, double, double) 1
NOT_NULL
cern.colt.matrix.linalg.Blas void drotg(double, double, double[]) 2
NOT_NULL
cern.colt.matrix.linalg.Blas void dscal(double, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.linalg.Blas void dscal(double, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.linalg.Blas void dswap(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.linalg.Blas void dswap(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Blas void dsymv(boolean, double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D, double, cern.colt.matrix.DoubleMatrix1D) 2
NOT_NULL
cern.colt.matrix.linalg.Blas void dsymv(boolean, double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D, double, cern.colt.matrix.DoubleMatrix1D) 3
NOT_NULL
cern.colt.matrix.linalg.Blas void dsymv(boolean, double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D, double, cern.colt.matrix.DoubleMatrix1D) 5
NOT_NULL
cern.colt.matrix.linalg.Blas void dtrmv(boolean, boolean, boolean, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D) 3
NOT_NULL
cern.colt.matrix.linalg.Blas void dtrmv(boolean, boolean, boolean, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D) 4
NOT_NULL
cern.colt.matrix.linalg.CholeskyDecomposition CholeskyDecomposition(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.CholeskyDecomposition cern.colt.matrix.DoubleMatrix2D XXXsolveBuggy(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.linalg.CholeskyDecomposition cern.colt.matrix.DoubleMatrix2D XXXsolveBuggy(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.CholeskyDecomposition cern.colt.matrix.DoubleMatrix2D solve(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.linalg.CholeskyDecomposition cern.colt.matrix.DoubleMatrix2D solve(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Diagonal boolean inverse(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.EigenvalueDecomposition EigenvalueDecomposition(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.EigenvalueDecomposition cern.colt.matrix.DoubleMatrix1D getImagEigenvalues()
NOT_NULL
cern.colt.matrix.linalg.EigenvalueDecomposition cern.colt.matrix.DoubleMatrix1D getRealEigenvalues()
NOT_NULL
cern.colt.matrix.linalg.EigenvalueDecomposition cern.colt.matrix.DoubleMatrix2D getD()
NOT_NULL
cern.colt.matrix.linalg.EigenvalueDecomposition cern.colt.matrix.DoubleMatrix2D getV()
NOT_NULL
cern.colt.matrix.linalg.LUDecomposition LUDecomposition(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.LUDecomposition cern.colt.matrix.DoubleMatrix2D getL()
NOT_NULL
cern.colt.matrix.linalg.LUDecomposition cern.colt.matrix.DoubleMatrix2D getU()
NOT_NULL
cern.colt.matrix.linalg.LUDecomposition cern.colt.matrix.DoubleMatrix2D solve(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.linalg.LUDecomposition cern.colt.matrix.DoubleMatrix2D solve(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.LUDecomposition double[] getDoublePivot()
NOT_NULL
cern.colt.matrix.linalg.LUDecompositionQuick boolean isNonsingular(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.LUDecompositionQuick cern.colt.matrix.DoubleMatrix2D getL()
NOT_NULL
cern.colt.matrix.linalg.LUDecompositionQuick cern.colt.matrix.DoubleMatrix2D getLU()
NOT_NULL
cern.colt.matrix.linalg.LUDecompositionQuick cern.colt.matrix.DoubleMatrix2D getU()
NOT_NULL
cern.colt.matrix.linalg.LUDecompositionQuick cern.colt.matrix.DoubleMatrix2D lowerTriangular(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.linalg.LUDecompositionQuick cern.colt.matrix.DoubleMatrix2D lowerTriangular(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.LUDecompositionQuick cern.colt.matrix.DoubleMatrix2D upperTriangular(cern.colt.matrix.DoubleMatrix2D)
NOT_NULL
cern.colt.matrix.linalg.LUDecompositionQuick cern.colt.matrix.DoubleMatrix2D upperTriangular(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.LUDecompositionQuick double[] getDoublePivot()
NOT_NULL
cern.colt.matrix.linalg.LUDecompositionQuick double[] xgetDoublePivot()
NOT_NULL
cern.colt.matrix.linalg.LUDecompositionQuick void decompose(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.LUDecompositionQuick void decompose(cern.colt.matrix.DoubleMatrix2D, int) 0
NOT_NULL
cern.colt.matrix.linalg.LUDecompositionQuick void setLU(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.LUDecompositionQuick void solve(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.LUDecompositionQuick void solve(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.LUDecompositionQuick void solveOld(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Matrix2DMatrix2DFunction double apply(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property DEFAULT
NOT_NULL
cern.colt.matrix.linalg.Property TWELVE
NOT_NULL
cern.colt.matrix.linalg.Property ZERO
NOT_NULL
cern.colt.matrix.linalg.Property boolean equals(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NULLABLE
cern.colt.matrix.linalg.Property boolean equals(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 1
NULLABLE
cern.colt.matrix.linalg.Property boolean equals(cern.colt.matrix.DoubleMatrix1D, double) 0
NULLABLE
cern.colt.matrix.linalg.Property boolean equals(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NULLABLE
cern.colt.matrix.linalg.Property boolean equals(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NULLABLE
cern.colt.matrix.linalg.Property boolean equals(cern.colt.matrix.DoubleMatrix2D, double) 0
NULLABLE
cern.colt.matrix.linalg.Property boolean equals(cern.colt.matrix.DoubleMatrix3D, cern.colt.matrix.DoubleMatrix3D) 0
NULLABLE
cern.colt.matrix.linalg.Property boolean equals(cern.colt.matrix.DoubleMatrix3D, cern.colt.matrix.DoubleMatrix3D) 1
NULLABLE
cern.colt.matrix.linalg.Property boolean equals(cern.colt.matrix.DoubleMatrix3D, double) 0
NULLABLE
cern.colt.matrix.linalg.Property boolean isDiagonal(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isDiagonallyDominantByColumn(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isDiagonallyDominantByRow(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isIdentity(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isLowerBidiagonal(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isLowerTriangular(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isNonNegative(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isOrthogonal(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isPositive(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isSingular(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isSkewSymmetric(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isSquare(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isStrictlyLowerTriangular(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isStrictlyTriangular(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isStrictlyUpperTriangular(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isSymmetric(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isTriangular(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isTridiagonal(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isUnitTriangular(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isUpperBidiagonal(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property boolean isUpperTriangular(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property double density(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property int lowerBandwidth(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property int semiBandwidth(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property int upperBandwidth(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property java.lang.String get(cern.colt.list.ObjectArrayList, int) 0
NOT_NULL
cern.colt.matrix.linalg.Property void checkRectangular(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property void checkSquare(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.Property void generateNonSingular(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.QRDecomposition QRDecomposition(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.QRDecomposition cern.colt.matrix.DoubleMatrix2D getH()
NOT_NULL
cern.colt.matrix.linalg.QRDecomposition cern.colt.matrix.DoubleMatrix2D solve(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.SeqBlas F
NOT_NULL
cern.colt.matrix.linalg.SeqBlas double dasum(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.SeqBlas double ddot(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.SeqBlas double dnrm2(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.SeqBlas int idamax(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.SeqBlas seqBlas
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void assign(cern.colt.matrix.DoubleMatrix2D, cern.colt.function.DoubleFunction) 0
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void assign(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, cern.colt.function.DoubleDoubleFunction) 0
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void daxpy(double, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 2
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void daxpy(double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 2
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void dcopy(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void dcopy(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void dgemm(boolean, boolean, double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, double, cern.colt.matrix.DoubleMatrix2D) 3
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void dgemv(boolean, double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D, double, cern.colt.matrix.DoubleMatrix1D) 2
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void dger(double, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix2D) 3
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void drot(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, double, double) 0
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void drot(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, double, double) 1
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void drotg(double, double, double[]) 2
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void dscal(double, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void dscal(double, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void dswap(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void dswap(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void dsymv(boolean, double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D, double, cern.colt.matrix.DoubleMatrix1D) 2
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void dsymv(boolean, double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D, double, cern.colt.matrix.DoubleMatrix1D) 3
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void dsymv(boolean, double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D, double, cern.colt.matrix.DoubleMatrix1D) 5
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void dtrmv(boolean, boolean, boolean, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D) 3
NOT_NULL
cern.colt.matrix.linalg.SeqBlas void dtrmv(boolean, boolean, boolean, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D) 4
NOT_NULL
cern.colt.matrix.linalg.SingularValueDecomposition SingularValueDecomposition(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.SingularValueDecomposition cern.colt.matrix.DoubleMatrix2D getS()
NOT_NULL
cern.colt.matrix.linalg.SingularValueDecomposition cern.colt.matrix.DoubleMatrix2D getV()
NOT_NULL
cern.colt.matrix.linalg.Smp cern.colt.matrix.DoubleMatrix2D[] splitBlockedNN(cern.colt.matrix.DoubleMatrix2D, int, long)
NULLABLE
cern.colt.matrix.linalg.Smp cern.colt.matrix.DoubleMatrix2D[] splitBlockedNN(cern.colt.matrix.DoubleMatrix2D, int, long) 0
NOT_NULL
cern.colt.matrix.linalg.Smp cern.colt.matrix.DoubleMatrix2D[] splitStridedNN(cern.colt.matrix.DoubleMatrix2D, int, long)
NULLABLE
cern.colt.matrix.linalg.Smp cern.colt.matrix.DoubleMatrix2D[] splitStridedNN(cern.colt.matrix.DoubleMatrix2D, int, long) 0
NOT_NULL
cern.colt.matrix.linalg.Smp cern.colt.matrix.DoubleMatrix2D[][] splitBlockedNN(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, int, long)
NULLABLE
cern.colt.matrix.linalg.Smp cern.colt.matrix.DoubleMatrix2D[][] splitBlockedNN(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, int, long) 0
NOT_NULL
cern.colt.matrix.linalg.Smp void run(cern.colt.matrix.DoubleMatrix2D[], cern.colt.matrix.DoubleMatrix2D[], double[], cern.colt.matrix.linalg.Matrix2DMatrix2DFunction) 0
NOT_NULL
cern.colt.matrix.linalg.SmpBlas double dasum(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.SmpBlas double ddot(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.SmpBlas double dnrm2(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.SmpBlas double xsum(cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.SmpBlas double[] run(cern.colt.matrix.DoubleMatrix2D, boolean, cern.colt.matrix.linalg.Matrix2DMatrix2DFunction)
NULLABLE
cern.colt.matrix.linalg.SmpBlas double[] run(cern.colt.matrix.DoubleMatrix2D, boolean, cern.colt.matrix.linalg.Matrix2DMatrix2DFunction) 0
NOT_NULL
cern.colt.matrix.linalg.SmpBlas double[] run(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, boolean, cern.colt.matrix.linalg.Matrix2DMatrix2DFunction)
NULLABLE
cern.colt.matrix.linalg.SmpBlas double[] run(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, boolean, cern.colt.matrix.linalg.Matrix2DMatrix2DFunction) 0
NOT_NULL
cern.colt.matrix.linalg.SmpBlas int idamax(cern.colt.matrix.DoubleMatrix1D) 0
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void assign(cern.colt.matrix.DoubleMatrix2D, cern.colt.function.DoubleFunction) 0
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void assign(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, cern.colt.function.DoubleDoubleFunction) 0
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void daxpy(double, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 2
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void daxpy(double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 2
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void dcopy(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void dcopy(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void dgemm(boolean, boolean, double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D, double, cern.colt.matrix.DoubleMatrix2D) 3
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void dgemv(boolean, double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D, double, cern.colt.matrix.DoubleMatrix1D) 2
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void dger(double, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix2D) 3
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void drot(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, double, double) 0
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void drot(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D, double, double) 1
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void drotg(double, double, double[]) 2
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void dscal(double, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void dscal(double, cern.colt.matrix.DoubleMatrix2D) 1
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void dswap(cern.colt.matrix.DoubleMatrix1D, cern.colt.matrix.DoubleMatrix1D) 1
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void dswap(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void dsymv(boolean, double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D, double, cern.colt.matrix.DoubleMatrix1D) 2
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void dsymv(boolean, double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D, double, cern.colt.matrix.DoubleMatrix1D) 3
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void dsymv(boolean, double, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D, double, cern.colt.matrix.DoubleMatrix1D) 5
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void dtrmv(boolean, boolean, boolean, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D) 3
NOT_NULL
cern.colt.matrix.linalg.SmpBlas void dtrmv(boolean, boolean, boolean, cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix1D) 4
NOT_NULL
cern.colt.matrix.linalg.SmpBlas.1 double apply(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.SmpBlas.2 double apply(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.linalg.SmpBlas.7 double apply(cern.colt.matrix.DoubleMatrix2D, cern.colt.matrix.DoubleMatrix2D) 0
NOT_NULL
cern.colt.matrix.objectalgo.Formatter java.lang.String form(cern.colt.matrix.ObjectMatrix1D, int, cern.colt.matrix.impl.Former) 0
NOT_NULL
cern.colt.matrix.objectalgo.Formatter java.lang.String form(cern.colt.matrix.impl.AbstractMatrix1D, int, cern.colt.matrix.impl.Former) 0
NOT_NULL
cern.colt.matrix.objectalgo.Formatter java.lang.String form(cern.colt.matrix.impl.AbstractMatrix1D, int, cern.colt.matrix.impl.Former) 2
NOT_NULL
cern.colt.matrix.objectalgo.Formatter java.lang.String toSourceCode(cern.colt.matrix.ObjectMatrix1D) 0
NOT_NULL
cern.colt.matrix.objectalgo.Formatter java.lang.String toSourceCode(cern.colt.matrix.ObjectMatrix3D) 0
NOT_NULL
cern.colt.matrix.objectalgo.Formatter java.lang.String toString(cern.colt.matrix.ObjectMatrix1D) 0
NOT_NULL
cern.colt.matrix.objectalgo.Formatter java.lang.String toString(cern.colt.matrix.ObjectMatrix3D) 0
NOT_NULL
cern.colt.matrix.objectalgo.Formatter java.lang.String toTitleString(cern.colt.matrix.ObjectMatrix2D, java.lang.String[], java.lang.String[], java.lang.String, java.lang.String, java.lang.String) 0
NOT_NULL
cern.colt.matrix.objectalgo.Formatter java.lang.String toTitleString(cern.colt.matrix.ObjectMatrix3D, java.lang.String[], java.lang.String[], java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String) 0
NOT_NULL
cern.colt.matrix.objectalgo.Formatter java.lang.String[][] format(cern.colt.matrix.ObjectMatrix2D)
NOT_NULL
cern.colt.matrix.objectalgo.Formatter java.lang.String[][] format(cern.colt.matrix.ObjectMatrix2D) 0
NOT_NULL
cern.colt.matrix.objectalgo.Formatter java.lang.String[][] format(cern.colt.matrix.impl.AbstractMatrix2D)
NOT_NULL
cern.colt.matrix.objectalgo.Formatter java.lang.String[][] format(cern.colt.matrix.impl.AbstractMatrix2D) 0
NOT_NULL
cern.colt.matrix.objectalgo.Partitioning cern.colt.matrix.ObjectMatrix2D partition(cern.colt.matrix.ObjectMatrix2D, int, java.lang.Object[], int[]) 0
NOT_NULL
cern.colt.matrix.objectalgo.Partitioning cern.colt.matrix.ObjectMatrix2D partition(cern.colt.matrix.ObjectMatrix2D, int, java.lang.Object[], int[]) 2
NOT_NULL
cern.colt.matrix.objectalgo.Partitioning cern.colt.matrix.ObjectMatrix2D partition(cern.colt.matrix.ObjectMatrix2D, int, java.lang.Object[], int[]) 3
NOT_NULL
cern.colt.matrix.objectalgo.Partitioning void partition(cern.colt.matrix.ObjectMatrix2D, int[], int, int, int, java.lang.Object[], int, int, int[]) 0
NOT_NULL
cern.colt.matrix.objectalgo.Partitioning void partition(cern.colt.matrix.ObjectMatrix2D, int[], int, int, int, java.lang.Object[], int, int, int[]) 1
NOT_NULL
cern.colt.matrix.objectalgo.Partitioning void partition(cern.colt.matrix.ObjectMatrix2D, int[], int, int, int, java.lang.Object[], int, int, int[]) 5
NOT_NULL
cern.colt.matrix.objectalgo.Partitioning void partition(cern.colt.matrix.ObjectMatrix2D, int[], int, int, int, java.lang.Object[], int, int, int[]) 8
NOT_NULL
cern.colt.matrix.objectalgo.Sorting cern.colt.matrix.ObjectMatrix1D sort(cern.colt.matrix.ObjectMatrix1D) 0
NOT_NULL
cern.colt.matrix.objectalgo.Sorting cern.colt.matrix.ObjectMatrix1D sort(cern.colt.matrix.ObjectMatrix1D, java.util.Comparator) 0
NOT_NULL
cern.colt.matrix.objectalgo.Sorting cern.colt.matrix.ObjectMatrix2D sort(cern.colt.matrix.ObjectMatrix2D, cern.colt.matrix.objectalgo.ObjectMatrix1DComparator) 0
NOT_NULL
cern.colt.matrix.objectalgo.Sorting cern.colt.matrix.ObjectMatrix2D sort(cern.colt.matrix.ObjectMatrix2D, int) 0
NOT_NULL
cern.colt.matrix.objectalgo.Sorting cern.colt.matrix.ObjectMatrix3D sort(cern.colt.matrix.ObjectMatrix3D, cern.colt.matrix.objectalgo.ObjectMatrix2DComparator) 0
NOT_NULL
cern.colt.matrix.objectalgo.Sorting cern.colt.matrix.ObjectMatrix3D sort(cern.colt.matrix.ObjectMatrix3D, int, int) 0
NOT_NULL
cern.colt.matrix.objectalgo.Sorting mergeSort
NOT_NULL
cern.colt.matrix.objectalgo.Sorting quickSort
NOT_NULL
cern.colt.matrix.objectalgo.Sorting void runSort(int[], int, int, cern.colt.function.IntComparator) 0
NOT_NULL
cern.colt.matrix.objectalgo.Sorting.1 void runSort(int[], int, int, cern.colt.function.IntComparator) 0
NOT_NULL
cern.jet.math.Arithmetic double chbevl(double, double[], int) 1
NOT_NULL
cern.jet.math.Arithmetic doubleFactorials
NOT_NULL
cern.jet.math.Arithmetic logFactorials
NOT_NULL
cern.jet.math.Arithmetic longFactorials
NOT_NULL
cern.jet.math.Arithmetic stirlingCorrection
NOT_NULL
cern.jet.math.Bessel A_i0
NOT_NULL
cern.jet.math.Bessel A_i1
NOT_NULL
cern.jet.math.Bessel A_k0
NOT_NULL
cern.jet.math.Bessel A_k1
NOT_NULL
cern.jet.math.Bessel B_i0
NOT_NULL
cern.jet.math.Bessel B_i1
NOT_NULL
cern.jet.math.Bessel B_k0
NOT_NULL
cern.jet.math.Bessel B_k1
NOT_NULL
cern.jet.math.Functions IEEEremainder
NOT_NULL
cern.jet.math.Functions abs
NOT_NULL
cern.jet.math.Functions acos
NOT_NULL
cern.jet.math.Functions asin
NOT_NULL
cern.jet.math.Functions atan
NOT_NULL
cern.jet.math.Functions atan2
NOT_NULL
cern.jet.math.Functions ceil
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleDoubleFunction chain(cern.colt.function.DoubleDoubleFunction, cern.colt.function.DoubleFunction, cern.colt.function.DoubleFunction)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleDoubleFunction chain(cern.colt.function.DoubleFunction, cern.colt.function.DoubleDoubleFunction)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleDoubleFunction minusMult(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleDoubleFunction plusMult(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleDoubleFunction swapArgs(cern.colt.function.DoubleDoubleFunction)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction IEEEremainder(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction between(double, double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction bindArg1(cern.colt.function.DoubleDoubleFunction, double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction bindArg2(cern.colt.function.DoubleDoubleFunction, double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction chain(cern.colt.function.DoubleFunction, cern.colt.function.DoubleFunction)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction compare(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction constant(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction div(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction equals(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction greater(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction less(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction lg(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction max(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction min(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction minus(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction mod(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction mult(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction plus(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction pow(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction random()
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleFunction round(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleProcedure isBetween(double, double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleProcedure isEqual(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleProcedure isGreater(double)
NOT_NULL
cern.jet.math.Functions cern.colt.function.DoubleProcedure isLess(double)
NOT_NULL
cern.jet.math.Functions compare
NOT_NULL
cern.jet.math.Functions cos
NOT_NULL
cern.jet.math.Functions div
NOT_NULL
cern.jet.math.Functions equals
NOT_NULL
cern.jet.math.Functions exp
NOT_NULL
cern.jet.math.Functions floor
NOT_NULL
cern.jet.math.Functions functions
NOT_NULL
cern.jet.math.Functions greater
NOT_NULL
cern.jet.math.Functions identity
NOT_NULL
cern.jet.math.Functions inv
NOT_NULL
cern.jet.math.Functions isEqual
NOT_NULL
cern.jet.math.Functions isGreater
NOT_NULL
cern.jet.math.Functions isLess
NOT_NULL
cern.jet.math.Functions less
NOT_NULL
cern.jet.math.Functions lg
NOT_NULL
cern.jet.math.Functions log
NOT_NULL
cern.jet.math.Functions log2
NOT_NULL
cern.jet.math.Functions max
NOT_NULL
cern.jet.math.Functions min
NOT_NULL
cern.jet.math.Functions minus
NOT_NULL
cern.jet.math.Functions mod
NOT_NULL
cern.jet.math.Functions mult
NOT_NULL
cern.jet.math.Functions neg
NOT_NULL
cern.jet.math.Functions plus
NOT_NULL
cern.jet.math.Functions plusAbs
NOT_NULL
cern.jet.math.Functions pow
NOT_NULL
cern.jet.math.Functions rint
NOT_NULL
cern.jet.math.Functions sign
NOT_NULL
cern.jet.math.Functions sin
NOT_NULL
cern.jet.math.Functions sqrt
NOT_NULL
cern.jet.math.Functions square
NOT_NULL
cern.jet.math.Functions tan
NOT_NULL
cern.jet.math.Functions void main(java.lang.String[]) 0
NOT_NULL
cern.jet.math.IntFunctions abs
NOT_NULL
cern.jet.math.IntFunctions and
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction and(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction between(int, int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction bindArg1(cern.colt.function.IntIntFunction, int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction bindArg2(cern.colt.function.IntIntFunction, int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction chain(cern.colt.function.IntFunction, cern.colt.function.IntFunction)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction compare(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction constant(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction div(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction equals(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction max(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction min(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction minus(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction mod(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction mult(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction or(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction plus(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction pow(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction random()
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction shiftLeft(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction shiftRightSigned(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction shiftRightUnsigned(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntFunction xor(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntIntFunction chain(cern.colt.function.IntFunction, cern.colt.function.IntIntFunction)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntIntFunction chain(cern.colt.function.IntIntFunction, cern.colt.function.IntFunction, cern.colt.function.IntFunction)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntIntFunction swapArgs(cern.colt.function.IntIntFunction)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntProcedure isBetween(int, int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntProcedure isEqual(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntProcedure isGreater(int)
NOT_NULL
cern.jet.math.IntFunctions cern.colt.function.IntProcedure isLess(int)
NOT_NULL
cern.jet.math.IntFunctions compare
NOT_NULL
cern.jet.math.IntFunctions dec
NOT_NULL
cern.jet.math.IntFunctions div
NOT_NULL
cern.jet.math.IntFunctions equals
NOT_NULL
cern.jet.math.IntFunctions factorial
NOT_NULL
cern.jet.math.IntFunctions identity
NOT_NULL
cern.jet.math.IntFunctions inc
NOT_NULL
cern.jet.math.IntFunctions intFunctions
NOT_NULL
cern.jet.math.IntFunctions isEqual
NOT_NULL
cern.jet.math.IntFunctions isGreater
NOT_NULL
cern.jet.math.IntFunctions isLess
NOT_NULL
cern.jet.math.IntFunctions max
NOT_NULL
cern.jet.math.IntFunctions min
NOT_NULL
cern.jet.math.IntFunctions minus
NOT_NULL
cern.jet.math.IntFunctions mod
NOT_NULL
cern.jet.math.IntFunctions mult
NOT_NULL
cern.jet.math.IntFunctions neg
NOT_NULL
cern.jet.math.IntFunctions not
NOT_NULL
cern.jet.math.IntFunctions or
NOT_NULL
cern.jet.math.IntFunctions plus
NOT_NULL
cern.jet.math.IntFunctions pow
NOT_NULL
cern.jet.math.IntFunctions shiftLeft
NOT_NULL
cern.jet.math.IntFunctions shiftRightSigned
NOT_NULL
cern.jet.math.IntFunctions shiftRightUnsigned
NOT_NULL
cern.jet.math.IntFunctions sign
NOT_NULL
cern.jet.math.IntFunctions square
NOT_NULL
cern.jet.math.IntFunctions xor
NOT_NULL
cern.jet.math.Mult cern.jet.math.Mult div(double)
NOT_NULL
cern.jet.math.Mult cern.jet.math.Mult mult(double)
NOT_NULL
cern.jet.math.PlusMult cern.jet.math.PlusMult minusDiv(double)
NOT_NULL
cern.jet.math.PlusMult cern.jet.math.PlusMult minusMult(double)
NOT_NULL
cern.jet.math.PlusMult cern.jet.math.PlusMult plusDiv(double)
NOT_NULL
cern.jet.math.PlusMult cern.jet.math.PlusMult plusMult(double)
NOT_NULL
cern.jet.math.Polynomial double p1evl(double, double[], int) 1
NOT_NULL
cern.jet.math.Polynomial double polevl(double, double[], int) 1
NOT_NULL
cern.jet.random.AbstractDistribution cern.jet.random.engine.RandomEngine makeDefaultGenerator()
NOT_NULL
cern.jet.random.AbstractDistribution java.lang.Object clone()
NOT_NULL
cern.jet.random.Benchmark void main(java.lang.String[]) 0
NOT_NULL
cern.jet.random.Beta double b00(double, double, cern.jet.random.engine.RandomEngine) 2
NOT_NULL
cern.jet.random.Beta double b01(double, double, cern.jet.random.engine.RandomEngine) 2
NOT_NULL
cern.jet.random.Beta double b1prs(double, double, cern.jet.random.engine.RandomEngine) 2
NOT_NULL
cern.jet.random.Distributions double nextBurr1(double, int, cern.jet.random.engine.RandomEngine) 2
NOT_NULL
cern.jet.random.Distributions double nextBurr2(double, double, int, cern.jet.random.engine.RandomEngine) 3
NOT_NULL
cern.jet.random.Distributions double nextCauchy(cern.jet.random.engine.RandomEngine) 0
NOT_NULL
cern.jet.random.Distributions double nextLambda(double, double, cern.jet.random.engine.RandomEngine) 2
NOT_NULL
cern.jet.random.Distributions double nextLaplace(cern.jet.random.engine.RandomEngine) 0
NOT_NULL
cern.jet.random.Distributions double nextLogistic(cern.jet.random.engine.RandomEngine) 0
NOT_NULL
cern.jet.random.Distributions double nextPowLaw(double, double, cern.jet.random.engine.RandomEngine) 2
NOT_NULL
cern.jet.random.Distributions double nextTriangular(cern.jet.random.engine.RandomEngine) 0
NOT_NULL
cern.jet.random.Distributions double nextWeibull(double, double, cern.jet.random.engine.RandomEngine) 2
NOT_NULL
cern.jet.random.Distributions int nextGeometric(double, cern.jet.random.engine.RandomEngine) 1
NOT_NULL
cern.jet.random.Distributions int nextZipfInt(double, cern.jet.random.engine.RandomEngine) 1
NOT_NULL
cern.jet.random.EmpiricalWalker EmpiricalWalker(double[], int, cern.jet.random.engine.RandomEngine) 0
NOT_NULL
cern.jet.random.EmpiricalWalker void setState(double[], int) 0
NOT_NULL
cern.jet.random.EmpiricalWalker void setState2(double[]) 0
NOT_NULL
cern.jet.random.HyperGeometric int hmdu(int, int, int, cern.jet.random.engine.RandomEngine) 3
NOT_NULL
cern.jet.random.HyperGeometric int hprs(int, int, int, cern.jet.random.engine.RandomEngine) 3
NOT_NULL
cern.jet.random.HyperGeometric int nextInt(int, int, int, cern.jet.random.engine.RandomEngine) 3
NOT_NULL
cern.jet.random.NegativeBinomial java.lang.Object clone()
NOT_NULL
cern.jet.random.PoissonSlow cof
NOT_NULL
cern.jet.random.Zeta long generateZeta(double, double, cern.jet.random.engine.RandomEngine) 2
NOT_NULL
cern.jet.random.engine.Benchmark void main(java.lang.String[]) 0
NOT_NULL
cern.jet.random.engine.Benchmark void test(int, cern.jet.random.engine.RandomEngine) 1
NOT_NULL
cern.jet.random.engine.DRand DRand(java.util.Date) 0
NOT_NULL
cern.jet.random.engine.MersenneTwister MersenneTwister(java.util.Date) 0
NOT_NULL
cern.jet.random.engine.MersenneTwister java.lang.Object clone()
NOT_NULL
cern.jet.random.engine.MersenneTwister64 MersenneTwister64(java.util.Date) 0
NOT_NULL
cern.jet.random.engine.RandomEngine cern.jet.random.engine.RandomEngine makeDefault()
NOT_NULL
cern.jet.random.engine.RandomSeedGenerator void main(java.lang.String[]) 0
NOT_NULL
cern.jet.random.engine.RandomSeedTable seeds
NOT_NULL
cern.jet.random.sampling.RandomSampler java.lang.Object clone()
NOT_NULL
cern.jet.random.sampling.RandomSampler void main(java.lang.String[]) 0
NOT_NULL
cern.jet.random.sampling.RandomSampler void rejectMethodD(long, long, int, long, long[], int, cern.jet.random.engine.RandomEngine) 6
NOT_NULL
cern.jet.random.sampling.RandomSampler void sampleMethodD(long, long, int, long, long[], int, cern.jet.random.engine.RandomEngine) 6
NOT_NULL
cern.jet.random.sampling.RandomSamplingAssistant int[] sampleArray(int, int[])
NOT_NULL
cern.jet.random.sampling.RandomSamplingAssistant int[] sampleArray(int, int[]) 1
NOT_NULL
cern.jet.random.sampling.RandomSamplingAssistant java.lang.Object clone()
NOT_NULL
cern.jet.random.sampling.RandomSamplingAssistant void main(java.lang.String[]) 0
NOT_NULL
cern.jet.random.sampling.RandomSamplingAssistant void xsampleNextElements(cern.colt.list.BooleanArrayList) 0
NOT_NULL
cern.jet.random.sampling.WeightedRandomSampler WeightedRandomSampler(int, cern.jet.random.engine.RandomEngine) 1
NULLABLE
cern.jet.random.sampling.WeightedRandomSampler java.lang.Object clone()
NOT_NULL
cern.jet.random.sampling.WeightedRandomSampler void xsampleNextElements(cern.colt.list.BooleanArrayList) 0
NOT_NULL
cern.jet.stat.Descriptive cern.colt.list.DoubleArrayList quantiles(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList)
NOT_NULL
cern.jet.stat.Descriptive cern.colt.list.DoubleArrayList quantiles(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList) 1
NOT_NULL
cern.jet.stat.Descriptive cern.colt.list.DoubleArrayList[] split(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList)
NOT_NULL
cern.jet.stat.Descriptive cern.colt.list.DoubleArrayList[] split(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.Descriptive cern.colt.list.DoubleArrayList[] split(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList) 1
NOT_NULL
cern.jet.stat.Descriptive double autoCorrelation(cern.colt.list.DoubleArrayList, int, double, double) 0
NOT_NULL
cern.jet.stat.Descriptive double correlation(cern.colt.list.DoubleArrayList, double, cern.colt.list.DoubleArrayList, double) 0
NOT_NULL
cern.jet.stat.Descriptive double correlation(cern.colt.list.DoubleArrayList, double, cern.colt.list.DoubleArrayList, double) 2
NOT_NULL
cern.jet.stat.Descriptive double covariance(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.Descriptive double covariance(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList) 1
NOT_NULL
cern.jet.stat.Descriptive double covariance2(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.Descriptive double covariance2(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList) 1
NOT_NULL
cern.jet.stat.Descriptive double durbinWatson(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.Descriptive double geometricMean(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.Descriptive double kurtosis(cern.colt.list.DoubleArrayList, double, double) 0
NOT_NULL
cern.jet.stat.Descriptive double lag1(cern.colt.list.DoubleArrayList, double) 0
NOT_NULL
cern.jet.stat.Descriptive double max(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.Descriptive double mean(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.Descriptive double meanDeviation(cern.colt.list.DoubleArrayList, double) 0
NOT_NULL
cern.jet.stat.Descriptive double median(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.Descriptive double min(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.Descriptive double moment(cern.colt.list.DoubleArrayList, int, double) 0
NOT_NULL
cern.jet.stat.Descriptive double product(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.Descriptive double quantile(cern.colt.list.DoubleArrayList, double) 0
NOT_NULL
cern.jet.stat.Descriptive double quantileInverse(cern.colt.list.DoubleArrayList, double) 0
NOT_NULL
cern.jet.stat.Descriptive double rankInterpolated(cern.colt.list.DoubleArrayList, double) 0
NOT_NULL
cern.jet.stat.Descriptive double sampleKurtosis(cern.colt.list.DoubleArrayList, double, double) 0
NOT_NULL
cern.jet.stat.Descriptive double sampleSkew(cern.colt.list.DoubleArrayList, double, double) 0
NOT_NULL
cern.jet.stat.Descriptive double sampleVariance(cern.colt.list.DoubleArrayList, double) 0
NOT_NULL
cern.jet.stat.Descriptive double skew(cern.colt.list.DoubleArrayList, double, double) 0
NOT_NULL
cern.jet.stat.Descriptive double sum(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.Descriptive double sumOfInversions(cern.colt.list.DoubleArrayList, int, int) 0
NOT_NULL
cern.jet.stat.Descriptive double sumOfLogarithms(cern.colt.list.DoubleArrayList, int, int) 0
NOT_NULL
cern.jet.stat.Descriptive double sumOfPowerDeviations(cern.colt.list.DoubleArrayList, int, double) 0
NOT_NULL
cern.jet.stat.Descriptive double sumOfPowerDeviations(cern.colt.list.DoubleArrayList, int, double, int, int) 0
NOT_NULL
cern.jet.stat.Descriptive double sumOfPowers(cern.colt.list.DoubleArrayList, int) 0
NOT_NULL
cern.jet.stat.Descriptive double sumOfSquares(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.Descriptive double trimmedMean(cern.colt.list.DoubleArrayList, double, int, int) 0
NOT_NULL
cern.jet.stat.Descriptive double weightedMean(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.Descriptive double weightedMean(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList) 1
NOT_NULL
cern.jet.stat.Descriptive double winsorizedMean(cern.colt.list.DoubleArrayList, double, int, int) 0
NOT_NULL
cern.jet.stat.Descriptive void frequencies(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList, cern.colt.list.IntArrayList) 0
NOT_NULL
cern.jet.stat.Descriptive void frequencies(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList, cern.colt.list.IntArrayList) 1
NOT_NULL
cern.jet.stat.Descriptive void incrementalUpdate(cern.colt.list.DoubleArrayList, int, int, double[]) 0
NOT_NULL
cern.jet.stat.Descriptive void incrementalUpdate(cern.colt.list.DoubleArrayList, int, int, double[]) 3
NOT_NULL
cern.jet.stat.Descriptive void incrementalUpdateSumsOfPowers(cern.colt.list.DoubleArrayList, int, int, int, int, double[]) 0
NOT_NULL
cern.jet.stat.Descriptive void incrementalUpdateSumsOfPowers(cern.colt.list.DoubleArrayList, int, int, int, int, double[]) 5
NOT_NULL
cern.jet.stat.Descriptive void incrementalWeightedUpdate(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList, int, int, double[]) 0
NOT_NULL
cern.jet.stat.Descriptive void incrementalWeightedUpdate(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList, int, int, double[]) 1
NOT_NULL
cern.jet.stat.Descriptive void incrementalWeightedUpdate(cern.colt.list.DoubleArrayList, cern.colt.list.DoubleArrayList, int, int, double[]) 4
NOT_NULL
cern.jet.stat.Descriptive void standardize(cern.colt.list.DoubleArrayList, double, double) 0
NOT_NULL
cern.jet.stat.Probability P0
NOT_NULL
cern.jet.stat.Probability P1
NOT_NULL
cern.jet.stat.Probability P2
NOT_NULL
cern.jet.stat.Probability Q0
NOT_NULL
cern.jet.stat.Probability Q1
NOT_NULL
cern.jet.stat.Probability Q2
NOT_NULL
cern.jet.stat.quantile.DoubleBufferSet cern.jet.stat.quantile.DoubleBuffer _getFirstEmptyBuffer()
NULLABLE
cern.jet.stat.quantile.DoubleBufferSet cern.jet.stat.quantile.DoubleBuffer _getPartialBuffer()
NULLABLE
cern.jet.stat.quantile.DoubleBufferSet cern.jet.stat.quantile.DoubleBuffer collapse(cern.jet.stat.quantile.DoubleBuffer[])
NOT_NULL
cern.jet.stat.quantile.DoubleBufferSet cern.jet.stat.quantile.DoubleBuffer collapse(cern.jet.stat.quantile.DoubleBuffer[]) 0
NOT_NULL
cern.jet.stat.quantile.DoubleBufferSet cern.jet.stat.quantile.DoubleBuffer[] _getFullOrPartialBuffers()
NOT_NULL
cern.jet.stat.quantile.DoubleBufferSet cern.jet.stat.quantile.DoubleBuffer[] _getFullOrPartialBuffersWithLevel(int)
NOT_NULL
cern.jet.stat.quantile.DoubleBufferSet double[] getValuesAtPositions(cern.jet.stat.quantile.DoubleBuffer[], long[])
NOT_NULL
cern.jet.stat.quantile.DoubleBufferSet double[] getValuesAtPositions(cern.jet.stat.quantile.DoubleBuffer[], long[]) 0
NOT_NULL
cern.jet.stat.quantile.DoubleBufferSet double[] getValuesAtPositions(cern.jet.stat.quantile.DoubleBuffer[], long[]) 1
NOT_NULL
cern.jet.stat.quantile.DoubleBufferSet java.lang.Object clone()
NOT_NULL
cern.jet.stat.quantile.DoubleQuantileEstimator cern.colt.list.DoubleArrayList quantileElements(cern.colt.list.DoubleArrayList)
NOT_NULL
cern.jet.stat.quantile.DoubleQuantileEstimator cern.colt.list.DoubleArrayList quantileElements(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.quantile.DoubleQuantileEstimator cern.jet.stat.quantile.DoubleBuffer[] buffersToCollapse()
NOT_NULL
cern.jet.stat.quantile.DoubleQuantileEstimator void addAllOf(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.quantile.DoubleQuantileEstimator void addAllOfFromTo(cern.colt.list.DoubleArrayList, int, int) 0
NOT_NULL
cern.jet.stat.quantile.DoubleQuantileEstimator void postCollapse(cern.jet.stat.quantile.DoubleBuffer[]) 0
NOT_NULL
cern.jet.stat.quantile.DoubleQuantileFinder cern.colt.list.DoubleArrayList quantileElements(cern.colt.list.DoubleArrayList)
NOT_NULL
cern.jet.stat.quantile.DoubleQuantileFinder cern.colt.list.DoubleArrayList quantileElements(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.quantile.DoubleQuantileFinder void addAllOf(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.quantile.DoubleQuantileFinder void addAllOfFromTo(cern.colt.list.DoubleArrayList, int, int) 0
NOT_NULL
cern.jet.stat.quantile.ExactDoubleQuantileFinder cern.colt.list.DoubleArrayList quantileElements(cern.colt.list.DoubleArrayList)
NOT_NULL
cern.jet.stat.quantile.ExactDoubleQuantileFinder cern.colt.list.DoubleArrayList quantileElements(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.quantile.ExactDoubleQuantileFinder void addAllOf(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.quantile.ExactDoubleQuantileFinder void addAllOfFromTo(cern.colt.list.DoubleArrayList, int, int) 0
NOT_NULL
cern.jet.stat.quantile.KnownDoubleQuantileEstimator cern.colt.list.DoubleArrayList quantileElements(cern.colt.list.DoubleArrayList)
NOT_NULL
cern.jet.stat.quantile.KnownDoubleQuantileEstimator cern.colt.list.DoubleArrayList quantileElements(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.quantile.KnownDoubleQuantileEstimator cern.jet.stat.quantile.DoubleBuffer[] buffersToCollapse()
NOT_NULL
cern.jet.stat.quantile.KnownDoubleQuantileEstimator void postCollapse(cern.jet.stat.quantile.DoubleBuffer[]) 0
NOT_NULL
cern.jet.stat.quantile.KnownDoubleQuantileEstimator void removeInfinitiesFrom(int, cern.jet.stat.quantile.DoubleBuffer) 1
NOT_NULL
cern.jet.stat.quantile.QuantileCalc long[] known_N_compute_B_and_K(long, double, double, int, double[])
NOT_NULL
cern.jet.stat.quantile.QuantileCalc long[] known_N_compute_B_and_K(long, double, double, int, double[]) 4
NOT_NULL
cern.jet.stat.quantile.QuantileCalc long[] known_N_compute_B_and_K_quick(long, double)
NOT_NULL
cern.jet.stat.quantile.QuantileCalc long[] known_N_compute_B_and_K_slow(long, double, double, int, double[])
NOT_NULL
cern.jet.stat.quantile.QuantileCalc long[] known_N_compute_B_and_K_slow(long, double, double, int, double[]) 4
NOT_NULL
cern.jet.stat.quantile.QuantileCalc long[] unknown_N_compute_B_and_K(double, double, int)
NOT_NULL
cern.jet.stat.quantile.QuantileFinderFactory cern.colt.list.DoubleArrayList newEquiDepthPhis(int)
NOT_NULL
cern.jet.stat.quantile.QuantileFinderFactory cern.jet.stat.quantile.DoubleQuantileFinder newDoubleQuantileFinder(boolean, long, double, double, int, cern.jet.random.engine.RandomEngine)
NOT_NULL
cern.jet.stat.quantile.QuantileFinderFactory long[] known_N_compute_B_and_K(long, double, double, int, double[])
NOT_NULL
cern.jet.stat.quantile.QuantileFinderFactory long[] known_N_compute_B_and_K(long, double, double, int, double[]) 4
NOT_NULL
cern.jet.stat.quantile.QuantileFinderFactory long[] known_N_compute_B_and_K_quick(long, double)
NOT_NULL
cern.jet.stat.quantile.QuantileFinderFactory long[] known_N_compute_B_and_K_slow(long, double, double, int, double[])
NOT_NULL
cern.jet.stat.quantile.QuantileFinderFactory long[] known_N_compute_B_and_K_slow(long, double, double, int, double[]) 4
NOT_NULL
cern.jet.stat.quantile.QuantileFinderFactory long[] unknown_N_compute_B_and_K(double, double, int)
NOT_NULL
cern.jet.stat.quantile.QuantileFinderFactory long[] unknown_N_compute_B_and_K_raw(double, double, int)
NOT_NULL
cern.jet.stat.quantile.QuantileFinderTest cern.colt.list.DoubleArrayList observedEpsilonsAtPhis(cern.colt.list.DoubleArrayList, cern.jet.stat.quantile.ExactDoubleQuantileFinder, cern.jet.stat.quantile.DoubleQuantileFinder, double)
NOT_NULL
cern.jet.stat.quantile.QuantileFinderTest cern.colt.list.DoubleArrayList observedEpsilonsAtPhis(cern.colt.list.DoubleArrayList, cern.jet.stat.quantile.ExactDoubleQuantileFinder, cern.jet.stat.quantile.DoubleQuantileFinder, double) 0
NOT_NULL
cern.jet.stat.quantile.QuantileFinderTest cern.colt.list.IntArrayList binaryMultiSearch(cern.colt.list.DoubleArrayList, double)
NULLABLE
cern.jet.stat.quantile.QuantileFinderTest cern.colt.list.IntArrayList binaryMultiSearch(cern.colt.list.DoubleArrayList, double) 0
NOT_NULL
cern.jet.stat.quantile.QuantileFinderTest double epsilon(cern.colt.list.DoubleArrayList, cern.jet.stat.quantile.DoubleQuantileFinder, double) 0
NOT_NULL
cern.jet.stat.quantile.QuantileFinderTest double epsilon(cern.colt.list.DoubleArrayList, cern.jet.stat.quantile.DoubleQuantileFinder, double) 1
NOT_NULL
cern.jet.stat.quantile.QuantileFinderTest double epsilon(cern.colt.list.DoubleArrayList, double, double) 0
NOT_NULL
cern.jet.stat.quantile.QuantileFinderTest double observedEpsilonAtPhi(double, cern.jet.stat.quantile.ExactDoubleQuantileFinder, cern.jet.stat.quantile.DoubleQuantileFinder) 1
NOT_NULL
cern.jet.stat.quantile.QuantileFinderTest double observedEpsilonAtPhi(double, cern.jet.stat.quantile.ExactDoubleQuantileFinder, cern.jet.stat.quantile.DoubleQuantileFinder) 2
NOT_NULL
cern.jet.stat.quantile.QuantileFinderTest void testQuantileCalculation(java.lang.String[]) 0
NOT_NULL
cern.jet.stat.quantile.UnknownDoubleQuantileEstimator cern.colt.list.DoubleArrayList quantileElements(cern.colt.list.DoubleArrayList)
NOT_NULL
cern.jet.stat.quantile.UnknownDoubleQuantileEstimator cern.colt.list.DoubleArrayList quantileElements(cern.colt.list.DoubleArrayList) 0
NOT_NULL
cern.jet.stat.quantile.UnknownDoubleQuantileEstimator cern.jet.stat.quantile.DoubleBuffer[] buffersToCollapse()
NOT_NULL
cern.jet.stat.quantile.UnknownDoubleQuantileEstimator void postCollapse(cern.jet.stat.quantile.DoubleBuffer[]) 0
NOT_NULL
cern.jet.stat.quantile.UnknownDoubleQuantileEstimator void sortAscendingByLevel(cern.jet.stat.quantile.DoubleBuffer[]) 0
NOT_NULL
cern.jet.stat.quantile.UnknownDoubleQuantileEstimator.1 int compare(java.lang.Object, java.lang.Object) 0
NOT_NULL
cern.jet.stat.quantile.UnknownDoubleQuantileEstimator.1 int compare(java.lang.Object, java.lang.Object) 1
NOT_NULL
corejava.Format Format(java.lang.String) 0
NOT_NULL
corejava.Format double atof(java.lang.String) 0
NOT_NULL
corejava.Format int atoi(java.lang.String) 0
NOT_NULL
corejava.Format java.lang.String format(java.lang.String) 0
NOT_NULL
corejava.Format java.lang.String pad(java.lang.String) 0
NOT_NULL
corejava.Format java.lang.String sign(int, java.lang.String) 1
NOT_NULL
corejava.Format long atol(java.lang.String) 0
NOT_NULL
corejava.Format long parseLong(java.lang.String, int) 0
NOT_NULL
corejava.Format void printf(java.lang.String, char) 0
NOT_NULL
corejava.Format void printf(java.lang.String, double) 0
NOT_NULL
corejava.Format void printf(java.lang.String, int) 0
NOT_NULL
corejava.Format void printf(java.lang.String, java.lang.String) 0
NOT_NULL
corejava.Format void printf(java.lang.String, java.lang.String) 1
NOT_NULL
corejava.Format void printf(java.lang.String, long) 0
NOT_NULL
hep.aida.IHistogram1D int[] minMaxBins()
NOT_NULL
hep.aida.IHistogram2D int[] minMaxBins()
NOT_NULL
hep.aida.IHistogram3D int[] minMaxBins()
NOT_NULL
hep.aida.bin.AbstractBin boolean equals(java.lang.Object) 0
NULLABLE
hep.aida.bin.AbstractBin1D boolean equals(java.lang.Object) 0
NULLABLE
hep.aida.bin.AbstractBin1D cern.colt.buffer.DoubleBuffer buffered(int)
NOT_NULL
hep.aida.bin.AbstractBin1D java.lang.String compareWith(hep.aida.bin.AbstractBin1D) 0
NOT_NULL
hep.aida.bin.AbstractBin1D void addAllOf(cern.colt.list.DoubleArrayList) 0
NOT_NULL
hep.aida.bin.AbstractBin1D void addAllOfFromTo(cern.colt.list.DoubleArrayList, int, int) 0
NOT_NULL
hep.aida.bin.BinFunction1D double apply(hep.aida.bin.DynamicBin1D) 0
NOT_NULL
hep.aida.bin.BinFunction1D java.lang.String name()
NOT_NULL
hep.aida.bin.BinFunctions1D functions
NOT_NULL
hep.aida.bin.BinFunctions1D geometricMean
NOT_NULL
hep.aida.bin.BinFunctions1D hep.aida.bin.BinFunction1D quantile(double)
NOT_NULL
hep.aida.bin.BinFunctions1D max
NOT_NULL
hep.aida.bin.BinFunctions1D mean
NOT_NULL
hep.aida.bin.BinFunctions1D median
NOT_NULL
hep.aida.bin.BinFunctions1D min
NOT_NULL
hep.aida.bin.BinFunctions1D rms
NOT_NULL
hep.aida.bin.BinFunctions1D size
NOT_NULL
hep.aida.bin.BinFunctions1D stdDev
NOT_NULL
hep.aida.bin.BinFunctions1D sum
NOT_NULL
hep.aida.bin.BinFunctions1D sumLog
NOT_NULL
hep.aida.bin.BinFunctions1D.1 double apply(hep.aida.bin.DynamicBin1D) 0
NOT_NULL
hep.aida.bin.BinFunctions1D.1 java.lang.String name()
NOT_NULL
hep.aida.bin.BinFunctions1D.10 double apply(hep.aida.bin.DynamicBin1D) 0
NOT_NULL
hep.aida.bin.BinFunctions1D.10 java.lang.String name()
NOT_NULL
hep.aida.bin.BinFunctions1D.11 double apply(hep.aida.bin.DynamicBin1D) 0
NOT_NULL
hep.aida.bin.BinFunctions1D.2 double apply(hep.aida.bin.DynamicBin1D) 0
NOT_NULL
hep.aida.bin.BinFunctions1D.2 java.lang.String name()
NOT_NULL
hep.aida.bin.BinFunctions1D.3 double apply(hep.aida.bin.DynamicBin1D) 0
NOT_NULL
hep.aida.bin.BinFunctions1D.3 java.lang.String name()
NOT_NULL
hep.aida.bin.BinFunctions1D.4 double apply(hep.aida.bin.DynamicBin1D) 0
NOT_NULL
hep.aida.bin.BinFunctions1D.4 java.lang.String name()
NOT_NULL
hep.aida.bin.BinFunctions1D.5 double apply(hep.aida.bin.DynamicBin1D) 0
NOT_NULL
hep.aida.bin.BinFunctions1D.5 java.lang.String name()
NOT_NULL
hep.aida.bin.BinFunctions1D.6 double apply(hep.aida.bin.DynamicBin1D) 0
NOT_NULL
hep.aida.bin.BinFunctions1D.6 java.lang.String name()
NOT_NULL
hep.aida.bin.BinFunctions1D.7 double apply(hep.aida.bin.DynamicBin1D) 0
NOT_NULL
hep.aida.bin.BinFunctions1D.7 java.lang.String name()
NOT_NULL
hep.aida.bin.BinFunctions1D.8 double apply(hep.aida.bin.DynamicBin1D) 0
NOT_NULL
hep.aida.bin.BinFunctions1D.8 java.lang.String name()
NOT_NULL
hep.aida.bin.BinFunctions1D.9 double apply(hep.aida.bin.DynamicBin1D) 0
NOT_NULL
hep.aida.bin.BinFunctions1D.9 java.lang.String name()
NOT_NULL
hep.aida.bin.DynamicBin1D boolean equals(java.lang.Object) 0
NULLABLE
hep.aida.bin.DynamicBin1D boolean removeAllOf(cern.colt.list.DoubleArrayList) 0
NOT_NULL
hep.aida.bin.DynamicBin1D cern.colt.list.DoubleArrayList elements()
NOT_NULL
hep.aida.bin.DynamicBin1D cern.colt.list.DoubleArrayList quantiles(cern.colt.list.DoubleArrayList)
NOT_NULL
hep.aida.bin.DynamicBin1D cern.colt.list.DoubleArrayList quantiles(cern.colt.list.DoubleArrayList) 0
NOT_NULL
hep.aida.bin.DynamicBin1D cern.colt.list.DoubleArrayList sortedElements()
NOT_NULL
hep.aida.bin.DynamicBin1D cern.colt.map.AbstractDoubleIntMap frequencyMap()
NOT_NULL
hep.aida.bin.DynamicBin1D double correlation(hep.aida.bin.DynamicBin1D) 0
NOT_NULL
hep.aida.bin.DynamicBin1D double covariance(hep.aida.bin.DynamicBin1D) 0
NOT_NULL
hep.aida.bin.DynamicBin1D hep.aida.bin.DynamicBin1D sampleBootstrap(hep.aida.bin.DynamicBin1D, int, cern.jet.random.engine.RandomEngine, hep.aida.bin.BinBinFunction1D)
NOT_NULL
hep.aida.bin.DynamicBin1D hep.aida.bin.DynamicBin1D sampleBootstrap(hep.aida.bin.DynamicBin1D, int, cern.jet.random.engine.RandomEngine, hep.aida.bin.BinBinFunction1D) 0
NOT_NULL
hep.aida.bin.DynamicBin1D hep.aida.bin.DynamicBin1D sampleBootstrap(hep.aida.bin.DynamicBin1D, int, cern.jet.random.engine.RandomEngine, hep.aida.bin.BinBinFunction1D) 2
NULLABLE
hep.aida.bin.DynamicBin1D void addAllOfFromTo(cern.colt.list.DoubleArrayList, int, int) 0
NOT_NULL
hep.aida.bin.DynamicBin1D void frequencies(cern.colt.list.DoubleArrayList, cern.colt.list.IntArrayList) 0
NOT_NULL
hep.aida.bin.DynamicBin1D void sample(int, boolean, cern.jet.random.engine.RandomEngine, cern.colt.buffer.DoubleBuffer) 2
NULLABLE
hep.aida.bin.DynamicBin1D void sample(int, boolean, cern.jet.random.engine.RandomEngine, cern.colt.buffer.DoubleBuffer) 3
NOT_NULL
hep.aida.bin.MightyStaticBin1D boolean xequals(java.lang.Object) 0
NULLABLE
hep.aida.bin.MightyStaticBin1D java.lang.String compareWith(hep.aida.bin.AbstractBin1D) 0
NOT_NULL
hep.aida.bin.MightyStaticBin1D void addAllOfFromTo(cern.colt.list.DoubleArrayList, int, int) 0
NOT_NULL
hep.aida.bin.QuantileBin1D cern.colt.list.DoubleArrayList quantiles(cern.colt.list.DoubleArrayList)
NOT_NULL
hep.aida.bin.QuantileBin1D cern.colt.list.DoubleArrayList quantiles(cern.colt.list.DoubleArrayList) 0
NOT_NULL
hep.aida.bin.QuantileBin1D hep.aida.bin.MightyStaticBin1D[] splitApproximately(cern.colt.list.DoubleArrayList, int)
NOT_NULL
hep.aida.bin.QuantileBin1D hep.aida.bin.MightyStaticBin1D[] splitApproximately(cern.colt.list.DoubleArrayList, int) 0
NOT_NULL
hep.aida.bin.QuantileBin1D hep.aida.bin.MightyStaticBin1D[] splitApproximately(hep.aida.IAxis, int)
NOT_NULL
hep.aida.bin.QuantileBin1D hep.aida.bin.MightyStaticBin1D[] splitApproximately(hep.aida.IAxis, int) 0
NOT_NULL
hep.aida.bin.QuantileBin1D java.lang.String compareWith(hep.aida.bin.AbstractBin1D) 0
NOT_NULL
hep.aida.bin.QuantileBin1D void addAllOfFromTo(cern.colt.list.DoubleArrayList, int, int) 0
NOT_NULL
hep.aida.bin.StaticBin1D void addAllOfFromTo(cern.colt.list.DoubleArrayList, int, int) 0
NOT_NULL
hep.aida.ref.AbstractHistogram1D int[] minMaxBins()
NOT_NULL
hep.aida.ref.AbstractHistogram2D hep.aida.IHistogram1D internalSliceX(java.lang.String, int, int)
NOT_NULL
hep.aida.ref.AbstractHistogram2D hep.aida.IHistogram1D internalSliceY(java.lang.String, int, int)
NOT_NULL
hep.aida.ref.AbstractHistogram2D int[] minMaxBins()
NOT_NULL
hep.aida.ref.AbstractHistogram3D hep.aida.IHistogram2D internalSliceXY(java.lang.String, int, int)
NOT_NULL
hep.aida.ref.AbstractHistogram3D hep.aida.IHistogram2D internalSliceXZ(java.lang.String, int, int)
NOT_NULL
hep.aida.ref.AbstractHistogram3D hep.aida.IHistogram2D internalSliceYZ(java.lang.String, int, int)
NOT_NULL
hep.aida.ref.AbstractHistogram3D int[] minMaxBins()
NOT_NULL
hep.aida.ref.Converter double[] edges(hep.aida.IAxis)
NOT_NULL
hep.aida.ref.Converter double[] edges(hep.aida.IAxis) 0
NOT_NULL
hep.aida.ref.Converter double[] toArrayErrors(hep.aida.IHistogram1D)
NOT_NULL
hep.aida.ref.Converter double[] toArrayErrors(hep.aida.IHistogram1D) 0
NOT_NULL
hep.aida.ref.Converter double[] toArrayHeights(hep.aida.IHistogram1D)
NOT_NULL
hep.aida.ref.Converter double[] toArrayHeights(hep.aida.IHistogram1D) 0
NOT_NULL
hep.aida.ref.Converter double[][] toArrayErrors(hep.aida.IHistogram2D)
NOT_NULL
hep.aida.ref.Converter double[][] toArrayErrors(hep.aida.IHistogram2D) 0
NOT_NULL
hep.aida.ref.Converter double[][] toArrayHeights(hep.aida.IHistogram2D)
NOT_NULL
hep.aida.ref.Converter double[][] toArrayHeights(hep.aida.IHistogram2D) 0
NOT_NULL
hep.aida.ref.Converter double[][][] toArrayHeights(hep.aida.IHistogram3D)
NOT_NULL
hep.aida.ref.Converter double[][][] toArrayHeights(hep.aida.IHistogram3D) 0
NOT_NULL
hep.aida.ref.Converter java.lang.String form(cern.colt.matrix.impl.Former, double) 0
NOT_NULL
hep.aida.ref.Converter java.lang.String toString(double[]) 0
NOT_NULL
hep.aida.ref.Converter java.lang.String toString(hep.aida.IAxis) 0
NOT_NULL
hep.aida.ref.Converter java.lang.String toString(hep.aida.IHistogram1D) 0
NOT_NULL
hep.aida.ref.Converter java.lang.String toString(hep.aida.IHistogram2D) 0
NOT_NULL
hep.aida.ref.Converter java.lang.String toString(hep.aida.IHistogram3D) 0
NOT_NULL
hep.aida.ref.Converter java.lang.String toXML(hep.aida.IHistogram1D) 0
NOT_NULL
hep.aida.ref.Converter java.lang.String toXML(hep.aida.IHistogram2D) 0
NOT_NULL
hep.aida.ref.Histogram1D Histogram1D(java.lang.String, double[]) 1
NOT_NULL
hep.aida.ref.Histogram1D Histogram1D(java.lang.String, hep.aida.IAxis) 1
NOT_NULL
hep.aida.ref.Histogram1D void setContents(int[], double[], double[]) 0
NOT_NULL
hep.aida.ref.Histogram2D Histogram2D(java.lang.String, double[], double[]) 1
NOT_NULL
hep.aida.ref.Histogram2D Histogram2D(java.lang.String, double[], double[]) 2
NOT_NULL
hep.aida.ref.Histogram2D Histogram2D(java.lang.String, hep.aida.IAxis, hep.aida.IAxis) 1
NOT_NULL
hep.aida.ref.Histogram2D Histogram2D(java.lang.String, hep.aida.IAxis, hep.aida.IAxis) 2
NOT_NULL
hep.aida.ref.Histogram2D hep.aida.IHistogram1D internalSliceX(java.lang.String, int, int)
NOT_NULL
hep.aida.ref.Histogram2D hep.aida.IHistogram1D internalSliceY(java.lang.String, int, int)
NOT_NULL
hep.aida.ref.Histogram2D void setContents(int[][], double[][], double[][]) 0
NOT_NULL
hep.aida.ref.Histogram3D Histogram3D(java.lang.String, double[], double[], double[]) 1
NOT_NULL
hep.aida.ref.Histogram3D Histogram3D(java.lang.String, double[], double[], double[]) 2
NOT_NULL
hep.aida.ref.Histogram3D Histogram3D(java.lang.String, double[], double[], double[]) 3
NOT_NULL
hep.aida.ref.Histogram3D Histogram3D(java.lang.String, hep.aida.IAxis, hep.aida.IAxis, hep.aida.IAxis) 1
NOT_NULL
hep.aida.ref.Histogram3D Histogram3D(java.lang.String, hep.aida.IAxis, hep.aida.IAxis, hep.aida.IAxis) 2
NOT_NULL
hep.aida.ref.Histogram3D Histogram3D(java.lang.String, hep.aida.IAxis, hep.aida.IAxis, hep.aida.IAxis) 3
NOT_NULL
hep.aida.ref.Histogram3D hep.aida.IHistogram2D internalSliceXY(java.lang.String, int, int)
NOT_NULL
hep.aida.ref.Histogram3D hep.aida.IHistogram2D internalSliceXZ(java.lang.String, int, int)
NOT_NULL
hep.aida.ref.Histogram3D hep.aida.IHistogram2D internalSliceYZ(java.lang.String, int, int)
NOT_NULL
hep.aida.ref.Test2 void writeAsXML(hep.aida.IHistogram1D, java.lang.String) 0
NOT_NULL
hep.aida.ref.Test2 void writeAsXML(hep.aida.IHistogram2D, java.lang.String) 0
NOT_NULL
hep.aida.ref.Test2 void writeAsXML(hep.aida.IHistogram3D, java.lang.String) 0
NOT_NULL
hep.aida.ref.Util int maxBin(hep.aida.IHistogram1D) 0
NOT_NULL
hep.aida.ref.Util int maxBinX(hep.aida.IHistogram2D) 0
NOT_NULL
hep.aida.ref.Util int maxBinY(hep.aida.IHistogram2D) 0
NOT_NULL
hep.aida.ref.Util int minBin(hep.aida.IHistogram1D) 0
NOT_NULL
hep.aida.ref.Util int minBinX(hep.aida.IHistogram2D) 0
NOT_NULL
hep.aida.ref.Util int minBinY(hep.aida.IHistogram2D) 0
NOT_NULL
hep.aida.ref.VariableAxis VariableAxis(double[]) 0
NOT_NULL
hep.aida.ref.VariableAxis java.lang.String toString(double[]) 0
NOT_NULL
