<root>
    <item name='org.jetbrains.jps.ModuleChunk.1 java.lang.Object fun(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fun(x0 : Any) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ModuleChunk.1 java.lang.String fun(org.jetbrains.jps.model.module.JpsModule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fun(p0 : JpsModule) : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ModuleChunk ModuleChunk(java.util.Set&lt;org.jetbrains.jps.incremental.ModuleBuildTarget&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ModuleChunk(targets : Set&lt;ModuleBuildTarget?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths.1 void consume(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun consume(x0 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths.1 void consume(org.jetbrains.jps.model.module.JpsModule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun consume(module : JpsModule) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths.3 int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths.3 int compare(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(o1 : String, o2 : String?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths.AfterJavaSdkItemFilter boolean value(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun value(x0 : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths.AfterJavaSdkItemFilter boolean value(org.jetbrains.jps.model.module.JpsDependencyElement)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun value(dependency : JpsDependencyElement) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths.BeforeJavaSdkItemFilter boolean value(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun value(x0 : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths.BeforeJavaSdkItemFilter boolean value(org.jetbrains.jps.model.module.JpsDependencyElement)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun value(dependency : JpsDependencyElement) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths ProjectPaths(org.jetbrains.jps.model.JpsProject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ProjectPaths(p0 : JpsProject)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths void access$200(java.util.Set, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : MutableSet?, x1 : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths void addFile(java.util.Set&lt;java.io.File&gt;, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addFile(p0 : MutableSet&lt;File?&gt;?, p1 : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths java.io.File getAnnotationProcessorGeneratedSourcesOutputDir(org.jetbrains.jps.model.module.JpsModule, boolean, org.jetbrains.jps.model.java.compiler.ProcessorConfigProfile)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAnnotationProcessorGeneratedSourcesOutputDir(p0 : JpsModule?, p1 : Boolean, p2 : ProcessorConfigProfile) : File?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths java.util.Collection&lt;java.io.File&gt; getClasspathFiles(org.jetbrains.jps.ModuleChunk, org.jetbrains.jps.model.java.JpsJavaClasspathKind, boolean, org.jetbrains.jps.ProjectPaths.ClasspathPart, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getClasspathFiles(chunk : ModuleChunk, kind : JpsJavaClasspathKind?, excludeMainModuleOutput : Boolean, classpathPart : ProjectPaths.ClasspathPart?, exportedOnly : Boolean) : MutableCollection&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths java.util.Collection&lt;java.io.File&gt; getCompilationClasspath(org.jetbrains.jps.ModuleChunk, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCompilationClasspath(chunk : ModuleChunk, excludeMainModuleOutput : Boolean) : MutableCollection&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths java.util.Collection&lt;java.io.File&gt; getCompilationClasspathFiles(org.jetbrains.jps.ModuleChunk, boolean, boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCompilationClasspathFiles(chunk : ModuleChunk, includeTests : Boolean, excludeMainModuleOutput : Boolean, exportedOnly : Boolean) : MutableCollection&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths java.io.File getModuleOutputDir(org.jetbrains.jps.model.module.JpsModule, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getModuleOutputDir(p0 : JpsModule?, p1 : Boolean) : File?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths java.util.Collection&lt;java.io.File&gt; getOutputPathsWithDependents(org.jetbrains.jps.ModuleChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutputPathsWithDependents(chunk : ModuleChunk) : MutableCollection&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths java.util.Collection&lt;java.io.File&gt; getPlatformCompilationClasspath(org.jetbrains.jps.ModuleChunk, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPlatformCompilationClasspath(chunk : ModuleChunk, excludeMainModuleOutput : Boolean) : MutableCollection&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths java.util.Map&lt;java.io.File,java.lang.String&gt; getSourceRootsWithDependents(org.jetbrains.jps.ModuleChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSourceRootsWithDependents(p0 : ModuleChunk) : MutableMap&lt;File?, String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.ProjectPaths void processModulesRecursively(org.jetbrains.jps.ModuleChunk, org.jetbrains.jps.model.java.JpsJavaClasspathKind, com.intellij.util.Consumer&lt;org.jetbrains.jps.model.module.JpsModule&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processModulesRecursively(chunk : ModuleChunk, kind : JpsJavaClasspathKind?, processor : Consumer&lt;JpsModule?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.BasicFuture T get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : T?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.BasicFuture T get(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(timeout : Long, unit : TimeUnit?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope createAllTargetsScope(org.jetbrains.jps.builders.BuildTargetType&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAllTargetsScope(type : BuildTargetType&lt;*&gt;) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage createBuildCompletedEvent(java.lang.String, org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Status)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createBuildCompletedEvent(p0 : String?, p1 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Status?) : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage createBuildEvent(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Type, java.lang.String, org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Status, java.util.Collection&lt;com.intellij.openapi.util.Pair&lt;java.lang.String,java.lang.String&gt;&gt;, org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createBuildEvent(type : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Type, description : String?, status : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Status?, generatedPaths : Collection&lt;Pair&lt;String?, String?&gt;?&gt;?, builderMessage : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage?) : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type, java.lang.String, java.util.List&lt;org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;, java.util.Collection&lt;java.lang.String&gt;, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createBuildParametersMessage(buildType : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type, project : String, scopes : List&lt;CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope?&gt;?, userData : Map&lt;String?, String?&gt;, paths : Collection&lt;String?&gt;, globals : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings, initialEvent : CmdlineRemoteProto.Message.ControllerMessage.FSEvent?) : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage createCancelCommand()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCancelCommand() : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage createCompileMessage(org.jetbrains.jps.incremental.messages.BuildMessage.Kind, java.lang.String, java.lang.String, long, long, long, long, long, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCompileMessage(kind : BuildMessage.Kind, text : String?, path : String?, beginOffset : Long, endOffset : Long, offset : Long, line : Long, column : Long, done : Float) : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage createCompileProgressMessageResponse(java.lang.String, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCompileProgressMessageResponse(text : String?, done : Float) : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage createCustomBuilderMessage(java.lang.String, java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCustomBuilderMessage(builderId : String, messageType : String, messageText : String) : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure createFailure(java.lang.String, java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createFailure(p0 : String, p1 : Throwable?) : CmdlineRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage createFileGeneratedEvent(java.util.Collection&lt;com.intellij.openapi.util.Pair&lt;java.lang.String,java.lang.String&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createFileGeneratedEvent(paths : Collection&lt;Pair&lt;String?, String?&gt;?&gt;?) : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage createForceCompileRequest(java.lang.String, java.util.List&lt;org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&gt;, java.util.Collection&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createForceCompileRequest(p0 : String, p1 : List&lt;CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope?&gt;?, p2 : Collection&lt;String?&gt;, p3 : Map&lt;String?, String?&gt;, p4 : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings, p5 : CmdlineRemoteProto.Message.ControllerMessage.FSEvent?) : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage createMakeRequest(java.lang.String, java.util.List&lt;org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createMakeRequest(p0 : String, p1 : List&lt;CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope?&gt;?, p2 : Map&lt;String?, String?&gt;, p3 : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings, p4 : CmdlineRemoteProto.Message.ControllerMessage.FSEvent?) : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair createPair(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createPair(key : String, value : String) : CmdlineRemoteProto.Message.KeyValuePair&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage createParamRequest()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createParamRequest() : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage createRebuildRequest(java.lang.String, java.util.List&lt;org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createRebuildRequest(project : String, scopes : List&lt;CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope?&gt;?, userData : Map&lt;String?, String?&gt;, globals : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings) : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage createUpToDateCheckRequest(java.lang.String, java.util.List&lt;org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&gt;, java.util.Collection&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createUpToDateCheckRequest(p0 : String, p1 : List&lt;CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope?&gt;?, p2 : Collection&lt;String?&gt;, p3 : Map&lt;String?, String?&gt;, p4 : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings, p5 : CmdlineRemoteProto.Message.ControllerMessage.FSEvent?) : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message toMessage(java.util.UUID, org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toMessage(sessionId : UUID, builderMessage : CmdlineRemoteProto.Message.BuilderMessage) : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message toMessage(java.util.UUID, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toMessage(sessionId : UUID, builderMessage : CmdlineRemoteProto.Message.ControllerMessage) : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message toMessage(java.util.UUID, org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toMessage(sessionId : UUID, failure : CmdlineRemoteProto.Message.Failure) : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineProtoUtil org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID toProtoUUID(java.util.UUID)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toProtoUUID(sessionId : UUID) : CmdlineRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message access$11700(org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$11700(x0 : CmdlineRemoteProto.Message.Builder) : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder access$11800()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$11800() : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder clearBuilderMessage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearBuilderMessage() : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder clearControllerMessage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearControllerMessage() : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder clearFailure()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearFailure() : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder clearSessionId()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearSessionId() : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder clearType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearType() : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder mergeBuilderMessage(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeBuilderMessage(value : CmdlineRemoteProto.Message.BuilderMessage?) : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder mergeControllerMessage(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeControllerMessage(value : CmdlineRemoteProto.Message.ControllerMessage?) : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder mergeFailure(org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFailure(value : CmdlineRemoteProto.Message.Failure?) : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder mergeFrom(org.jetbrains.jps.api.CmdlineRemoteProto.Message)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : CmdlineRemoteProto.Message?) : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder mergeSessionId(org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeSessionId(value : CmdlineRemoteProto.Message.UUID?) : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder setBuilderMessage(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setBuilderMessage(builderForValue : CmdlineRemoteProto.Message.BuilderMessage.Builder) : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder setBuilderMessage(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setBuilderMessage(value : CmdlineRemoteProto.Message.BuilderMessage) : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder setControllerMessage(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setControllerMessage(builderForValue : CmdlineRemoteProto.Message.ControllerMessage.Builder) : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder setControllerMessage(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setControllerMessage(value : CmdlineRemoteProto.Message.ControllerMessage) : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder setFailure(org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setFailure(builderForValue : CmdlineRemoteProto.Message.Failure.Builder) : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder setFailure(org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setFailure(value : CmdlineRemoteProto.Message.Failure) : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder setSessionId(org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setSessionId(builderForValue : CmdlineRemoteProto.Message.UUID.Builder) : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder setSessionId(org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setSessionId(value : CmdlineRemoteProto.Message.UUID) : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder setType(org.jetbrains.jps.api.CmdlineRemoteProto.Message.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setType(value : CmdlineRemoteProto.Message.Type) : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent access$7800(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$7800(x0 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder access$7900()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$7900() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder addAllGeneratedFiles(java.lang.Iterable&lt;? extends org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllGeneratedFiles(values : Iterable&lt;out CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile?&gt;?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder addGeneratedFiles(int, org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addGeneratedFiles(index : Int, builderForValue : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder addGeneratedFiles(int, org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addGeneratedFiles(index : Int, value : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder addGeneratedFiles(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addGeneratedFiles(builderForValue : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder addGeneratedFiles(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addGeneratedFiles(value : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder clearCompletionStatus()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearCompletionStatus() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder clearCustomBuilderMessage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearCustomBuilderMessage() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder clearDescription()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearDescription() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder clearEventType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearEventType() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder clearGeneratedFiles()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearGeneratedFiles() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder mergeCustomBuilderMessage(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeCustomBuilderMessage(value : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder mergeFrom(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder removeGeneratedFiles(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeGeneratedFiles(index : Int) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder setCompletionStatus(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Status)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCompletionStatus(value : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Status) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder setCustomBuilderMessage(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCustomBuilderMessage(builderForValue : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder setCustomBuilderMessage(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCustomBuilderMessage(value : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder setDescription(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setDescription(value : String) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder setEventType(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setEventType(value : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Type) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder setGeneratedFiles(int, org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setGeneratedFiles(index : Int, builderForValue : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder setGeneratedFiles(int, org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setGeneratedFiles(index : Int, value : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage access$7100(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$7100(x0 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder access$7200()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$7200() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder clearBuilderId()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearBuilderId() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder clearMessageText()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearMessageText() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder clearMessageType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearMessageType() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder mergeFrom(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder setBuilderId(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setBuilderId(value : String) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder setMessageText(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setMessageText(value : String) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder setMessageType(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setMessageType(value : String) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage java.lang.Object access$7402(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$7402(x0 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage java.lang.Object access$7502(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$7502(x0 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage java.lang.Object access$7602(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$7602(x0 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage int access$7702(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$7702(x0 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage com.google.protobuf.ByteString getBuilderIdBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBuilderIdBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage com.google.protobuf.ByteString getMessageTextBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMessageTextBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage com.google.protobuf.ByteString getMessageTypeBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMessageTypeBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder newBuilder(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile access$6500(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6500(x0 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder access$6600()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6600() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder clearOutputRoot()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearOutputRoot() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder clearRelativePath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearRelativePath() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder mergeFrom(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder setOutputRoot(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOutputRoot(value : String) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder setRelativePath(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setRelativePath(value : String) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile java.lang.Object access$6802(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6802(x0 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile java.lang.Object access$6902(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6902(x0 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile int access$7002(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$7002(x0 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile com.google.protobuf.ByteString getOutputRootBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutputRootBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile com.google.protobuf.ByteString getRelativePathBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRelativePathBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder newBuilder(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.GeneratedFile.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Status.1 com.google.protobuf.Internal.EnumLite findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(x0 : Int) : Internal.EnumLite?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Status.1 org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Status findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(number : Int) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Status?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Status org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Status valueOf(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(value : Int) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Status?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Type.1 com.google.protobuf.Internal.EnumLite findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(x0 : Int) : Internal.EnumLite?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Type.1 org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Type findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(number : Int) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Type org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Type valueOf(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(value : Int) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Type access$8102(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent, org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$8102(x0 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent, x1 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Type?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent java.lang.Object access$8202(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$8202(x0 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Status access$8302(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent, org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Status)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$8302(x0 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent, x1 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Status?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Status?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent java.util.List access$8400(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$8400(x0 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent) : MutableList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent java.util.List access$8402(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent, java.util.List)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$8402(x0 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent, x1 : List?) : MutableList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage access$8502(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent, org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$8502(x0 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent, x1 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.CustomBuilderMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent int access$8602(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$8602(x0 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent com.google.protobuf.ByteString getDescriptionBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDescriptionBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder newBuilder(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage access$10900(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$10900(x0 : CmdlineRemoteProto.Message.BuilderMessage.Builder) : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder access$11000()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$11000() : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder clearBuildEvent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearBuildEvent() : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder clearCompileMessage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearCompileMessage() : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder clearConstantSearchTask()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearConstantSearchTask() : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder clearType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearType() : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder mergeBuildEvent(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeBuildEvent(value : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent?) : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder mergeCompileMessage(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeCompileMessage(value : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage?) : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder mergeConstantSearchTask(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeConstantSearchTask(value : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask?) : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder mergeFrom(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : CmdlineRemoteProto.Message.BuilderMessage?) : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder setBuildEvent(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setBuildEvent(builderForValue : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent.Builder) : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder setBuildEvent(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setBuildEvent(value : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent) : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder setCompileMessage(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCompileMessage(builderForValue : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder) : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder setCompileMessage(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCompileMessage(value : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage) : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder setConstantSearchTask(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setConstantSearchTask(builderForValue : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder) : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder setConstantSearchTask(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setConstantSearchTask(value : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask) : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder setType(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setType(value : CmdlineRemoteProto.Message.BuilderMessage.Type) : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage access$8700(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$8700(x0 : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder access$8800()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$8800() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder clearColumn()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearColumn() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder clearDone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearDone() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder clearKind()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearKind() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder clearLine()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLine() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder clearProblemBeginOffset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearProblemBeginOffset() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder clearProblemEndOffset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearProblemEndOffset() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder clearProblemLocationOffset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearProblemLocationOffset() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder clearSourceFilePath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearSourceFilePath() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder clearText()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearText() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder mergeFrom(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage?) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder setColumn(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColumn(value : Long) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder setDone(float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setDone(value : Float) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder setKind(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Kind)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setKind(value : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Kind) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder setLine(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLine(value : Long) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder setProblemBeginOffset(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setProblemBeginOffset(value : Long) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder setProblemEndOffset(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setProblemEndOffset(value : Long) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder setProblemLocationOffset(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setProblemLocationOffset(value : Long) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder setSourceFilePath(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setSourceFilePath(value : String) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder setText(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setText(value : String) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Kind.1 com.google.protobuf.Internal.EnumLite findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(x0 : Int) : Internal.EnumLite?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Kind.1 org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Kind findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(number : Int) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Kind?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Kind org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Kind valueOf(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(value : Int) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Kind?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Kind access$9002(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Kind)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$9002(x0 : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, x1 : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Kind?) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Kind?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage java.lang.Object access$9102(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$9102(x0 : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage java.lang.Object access$9202(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$9202(x0 : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage long access$9302(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$9302(x0 : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, x1 : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage long access$9402(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$9402(x0 : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, x1 : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage long access$9502(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$9502(x0 : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, x1 : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage long access$9602(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$9602(x0 : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, x1 : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage long access$9702(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$9702(x0 : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, x1 : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage float access$9802(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$9802(x0 : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, x1 : Float) : Float&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage int access$9902(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$9902(x0 : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage com.google.protobuf.ByteString getSourceFilePathBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSourceFilePathBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage com.google.protobuf.ByteString getTextBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder newBuilder(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage?) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask access$10000(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$10000(x0 : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder access$10100()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$10100() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder clearAccessFlags()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearAccessFlags() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder clearFieldName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearFieldName() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder clearIsAccessChanged()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearIsAccessChanged() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder clearIsFieldRemoved()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearIsFieldRemoved() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder clearOwnerClassName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearOwnerClassName() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder mergeFrom(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask?) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder setAccessFlags(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setAccessFlags(value : Int) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder setFieldName(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setFieldName(value : String) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder setIsAccessChanged(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setIsAccessChanged(value : Boolean) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder setIsFieldRemoved(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setIsFieldRemoved(value : Boolean) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder setOwnerClassName(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOwnerClassName(value : String) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask java.lang.Object access$10302(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$10302(x0 : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask java.lang.Object access$10402(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$10402(x0 : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask int access$10502(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$10502(x0 : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask boolean access$10602(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$10602(x0 : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask, x1 : Boolean) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask boolean access$10702(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$10702(x0 : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask, x1 : Boolean) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask int access$10802(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$10802(x0 : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask com.google.protobuf.ByteString getFieldNameBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getFieldNameBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask com.google.protobuf.ByteString getOwnerClassNameBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOwnerClassNameBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder newBuilder(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask?) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Type.1 com.google.protobuf.Internal.EnumLite findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(x0 : Int) : Internal.EnumLite?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Type.1 org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Type findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(number : Int) : CmdlineRemoteProto.Message.BuilderMessage.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Type org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Type valueOf(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(value : Int) : CmdlineRemoteProto.Message.BuilderMessage.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Type access$11202(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage, org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$11202(x0 : CmdlineRemoteProto.Message.BuilderMessage, x1 : CmdlineRemoteProto.Message.BuilderMessage.Type?) : CmdlineRemoteProto.Message.BuilderMessage.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent access$11302(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage, org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.BuildEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$11302(x0 : CmdlineRemoteProto.Message.BuilderMessage, x1 : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent?) : CmdlineRemoteProto.Message.BuilderMessage.BuildEvent?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage access$11402(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage, org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.CompileMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$11402(x0 : CmdlineRemoteProto.Message.BuilderMessage, x1 : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage?) : CmdlineRemoteProto.Message.BuilderMessage.CompileMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask access$11502(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage, org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$11502(x0 : CmdlineRemoteProto.Message.BuilderMessage, x1 : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask?) : CmdlineRemoteProto.Message.BuilderMessage.ConstantSearchTask?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage int access$11602(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$11602(x0 : CmdlineRemoteProto.Message.BuilderMessage, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder newBuilder(org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : CmdlineRemoteProto.Message.BuilderMessage?) : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : CmdlineRemoteProto.Message.BuilderMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.BuilderMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : CmdlineRemoteProto.Message.BuilderMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage access$5700(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5700(x0 : CmdlineRemoteProto.Message.ControllerMessage.Builder) : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder access$5800()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5800() : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder clearConstantSearchResult()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearConstantSearchResult() : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder clearFsEvent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearFsEvent() : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder clearParamsMessage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearParamsMessage() : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder clearType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearType() : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder mergeConstantSearchResult(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeConstantSearchResult(value : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult?) : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder mergeFrom(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : CmdlineRemoteProto.Message.ControllerMessage?) : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder mergeFsEvent(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFsEvent(value : CmdlineRemoteProto.Message.ControllerMessage.FSEvent?) : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder mergeParamsMessage(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeParamsMessage(value : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage?) : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder setConstantSearchResult(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setConstantSearchResult(builderForValue : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder) : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder setConstantSearchResult(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setConstantSearchResult(value : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult) : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder setFsEvent(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setFsEvent(builderForValue : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder) : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder setFsEvent(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setFsEvent(value : CmdlineRemoteProto.Message.ControllerMessage.FSEvent) : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder setParamsMessage(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setParamsMessage(builderForValue : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder) : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder setParamsMessage(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setParamsMessage(value : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage) : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder setType(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setType(value : CmdlineRemoteProto.Message.ControllerMessage.Type) : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult access$4900(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4900(x0 : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder access$5000()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5000() : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder addAllPath(java.lang.Iterable&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllPath(values : Iterable&lt;String?&gt;?) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder addPath(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addPath(value : String) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder clearFieldName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearFieldName() : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder clearIsSuccess()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearIsSuccess() : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder clearOwnerClassName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearOwnerClassName() : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder clearPath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearPath() : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder mergeFrom(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult?) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder setFieldName(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setFieldName(value : String) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder setIsSuccess(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setIsSuccess(value : Boolean) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder setOwnerClassName(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOwnerClassName(value : String) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder setPath(int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPath(index : Int, value : String) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult java.lang.Object access$5202(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5202(x0 : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult java.lang.Object access$5302(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5302(x0 : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult boolean access$5402(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5402(x0 : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult, x1 : Boolean) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult com.google.protobuf.LazyStringList access$5500(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5500(x0 : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult com.google.protobuf.LazyStringList access$5502(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult, com.google.protobuf.LazyStringList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5502(x0 : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult, x1 : LazyStringList?) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult int access$5602(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5602(x0 : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult com.google.protobuf.ByteString getFieldNameBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getFieldNameBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult com.google.protobuf.ByteString getOwnerClassNameBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOwnerClassNameBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder newBuilder(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult?) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent access$1900(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1900(x0 : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder access$2000()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2000() : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder addAllChangedPaths(java.lang.Iterable&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllChangedPaths(values : Iterable&lt;String?&gt;?) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder addAllDeletedPaths(java.lang.Iterable&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllDeletedPaths(values : Iterable&lt;String?&gt;?) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder addChangedPaths(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addChangedPaths(value : String) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder addDeletedPaths(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addDeletedPaths(value : String) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : CmdlineRemoteProto.Message.ControllerMessage.FSEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : CmdlineRemoteProto.Message.ControllerMessage.FSEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : CmdlineRemoteProto.Message.ControllerMessage.FSEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder clearChangedPaths()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearChangedPaths() : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder clearDeletedPaths()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearDeletedPaths() : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder clearOrdinal()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearOrdinal() : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.ControllerMessage.FSEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder mergeFrom(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : CmdlineRemoteProto.Message.ControllerMessage.FSEvent?) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder setChangedPaths(int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setChangedPaths(index : Int, value : String) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder setDeletedPaths(int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setDeletedPaths(index : Int, value : String) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder setOrdinal(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOrdinal(value : Long) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent long access$2202(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2202(x0 : CmdlineRemoteProto.Message.ControllerMessage.FSEvent, x1 : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent com.google.protobuf.LazyStringList access$2300(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2300(x0 : CmdlineRemoteProto.Message.ControllerMessage.FSEvent) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent com.google.protobuf.LazyStringList access$2302(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent, com.google.protobuf.LazyStringList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2302(x0 : CmdlineRemoteProto.Message.ControllerMessage.FSEvent, x1 : LazyStringList?) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent com.google.protobuf.LazyStringList access$2400(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2400(x0 : CmdlineRemoteProto.Message.ControllerMessage.FSEvent) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent com.google.protobuf.LazyStringList access$2402(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent, com.google.protobuf.LazyStringList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2402(x0 : CmdlineRemoteProto.Message.ControllerMessage.FSEvent, x1 : LazyStringList?) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent int access$2502(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2502(x0 : CmdlineRemoteProto.Message.ControllerMessage.FSEvent, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : CmdlineRemoteProto.Message.ControllerMessage.FSEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.ControllerMessage.FSEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder newBuilder(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : CmdlineRemoteProto.Message.ControllerMessage.FSEvent?) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : CmdlineRemoteProto.Message.ControllerMessage.FSEvent.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings access$2600(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2600(x0 : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder access$2700()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2700() : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder addAllPathVariable(java.lang.Iterable&lt;? extends org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllPathVariable(values : Iterable&lt;out CmdlineRemoteProto.Message.KeyValuePair?&gt;?) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder addPathVariable(int, org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addPathVariable(index : Int, builderForValue : CmdlineRemoteProto.Message.KeyValuePair.Builder) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder addPathVariable(int, org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addPathVariable(index : Int, value : CmdlineRemoteProto.Message.KeyValuePair) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder addPathVariable(org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addPathVariable(builderForValue : CmdlineRemoteProto.Message.KeyValuePair.Builder) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder addPathVariable(org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addPathVariable(value : CmdlineRemoteProto.Message.KeyValuePair) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder clearGlobalOptionsPath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearGlobalOptionsPath() : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder clearPathVariable()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearPathVariable() : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder mergeFrom(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings?) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder removePathVariable(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removePathVariable(index : Int) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder setGlobalOptionsPath(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setGlobalOptionsPath(value : String) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder setPathVariable(int, org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPathVariable(index : Int, builderForValue : CmdlineRemoteProto.Message.KeyValuePair.Builder) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder setPathVariable(int, org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPathVariable(index : Int, value : CmdlineRemoteProto.Message.KeyValuePair) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings java.util.List access$2900(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2900(x0 : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings) : MutableList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings java.util.List access$2902(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings, java.util.List)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2902(x0 : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings, x1 : List?) : MutableList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings java.lang.Object access$3002(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3002(x0 : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings int access$3102(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3102(x0 : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings com.google.protobuf.ByteString getGlobalOptionsPathBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getGlobalOptionsPathBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder newBuilder(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings?) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage access$3900(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3900(x0 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder access$4000()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4000() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder addAllBuilderParameter(java.lang.Iterable&lt;? extends org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllBuilderParameter(values : Iterable&lt;out CmdlineRemoteProto.Message.KeyValuePair?&gt;?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder addAllFilePath(java.lang.Iterable&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllFilePath(values : Iterable&lt;String?&gt;?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder addAllScope(java.lang.Iterable&lt;? extends org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllScope(values : Iterable&lt;out CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope?&gt;?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder addBuilderParameter(int, org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBuilderParameter(index : Int, builderForValue : CmdlineRemoteProto.Message.KeyValuePair.Builder) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder addBuilderParameter(int, org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBuilderParameter(index : Int, value : CmdlineRemoteProto.Message.KeyValuePair) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder addBuilderParameter(org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBuilderParameter(builderForValue : CmdlineRemoteProto.Message.KeyValuePair.Builder) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder addBuilderParameter(org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBuilderParameter(value : CmdlineRemoteProto.Message.KeyValuePair) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder addFilePath(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addFilePath(value : String) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder addScope(int, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addScope(index : Int, builderForValue : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder addScope(int, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addScope(index : Int, value : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder addScope(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addScope(builderForValue : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder addScope(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addScope(value : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder clearBuildType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearBuildType() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder clearBuilderParameter()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearBuilderParameter() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder clearFilePath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearFilePath() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder clearGlobalSettings()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearGlobalSettings() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder clearProjectId()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearProjectId() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder clearScope()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearScope() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder mergeFrom(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder mergeGlobalSettings(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeGlobalSettings(value : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder removeBuilderParameter(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBuilderParameter(index : Int) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder removeScope(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeScope(index : Int) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder setBuildType(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setBuildType(value : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder setBuilderParameter(int, org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setBuilderParameter(index : Int, builderForValue : CmdlineRemoteProto.Message.KeyValuePair.Builder) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder setBuilderParameter(int, org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setBuilderParameter(index : Int, value : CmdlineRemoteProto.Message.KeyValuePair) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder setFilePath(int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setFilePath(index : Int, value : String) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder setGlobalSettings(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setGlobalSettings(builderForValue : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings.Builder) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder setGlobalSettings(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setGlobalSettings(value : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder setProjectId(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setProjectId(value : String) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder setScope(int, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setScope(index : Int, builderForValue : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder setScope(int, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setScope(index : Int, value : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope access$3200(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3200(x0 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder access$3300()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3300() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder addAllTargetId(java.lang.Iterable&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllTargetId(values : Iterable&lt;String?&gt;?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder addTargetId(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addTargetId(value : String) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder clearAllTargets()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearAllTargets() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder clearTargetId()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearTargetId() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder clearTypeId()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearTypeId() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder mergeFrom(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder setAllTargets(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setAllTargets(value : Boolean) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder setTargetId(int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTargetId(index : Int, value : String) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder setTypeId(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTypeId(value : String) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope java.lang.Object access$3502(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3502(x0 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope boolean access$3602(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3602(x0 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope, x1 : Boolean) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope com.google.protobuf.LazyStringList access$3700(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3700(x0 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope com.google.protobuf.LazyStringList access$3702(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope, com.google.protobuf.LazyStringList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3702(x0 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope, x1 : LazyStringList?) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope int access$3802(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3802(x0 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope com.google.protobuf.ByteString getTypeIdBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTypeIdBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder newBuilder(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type.1 com.google.protobuf.Internal.EnumLite findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(x0 : Int) : Internal.EnumLite?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type.1 org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(number : Int) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type valueOf(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(value : Int) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type access$4202(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4202(x0 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage, x1 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings access$4302(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4302(x0 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage, x1 : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings?) : CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage java.lang.Object access$4402(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4402(x0 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage java.util.List access$4500(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4500(x0 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage) : MutableList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage java.util.List access$4502(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage, java.util.List)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4502(x0 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage, x1 : List?) : MutableList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage com.google.protobuf.LazyStringList access$4600(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4600(x0 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage com.google.protobuf.LazyStringList access$4602(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage, com.google.protobuf.LazyStringList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4602(x0 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage, x1 : LazyStringList?) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage java.util.List access$4700(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4700(x0 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage) : MutableList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage java.util.List access$4702(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage, java.util.List)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4702(x0 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage, x1 : List?) : MutableList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage int access$4802(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4802(x0 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage com.google.protobuf.ByteString getProjectIdBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getProjectIdBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder newBuilder(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Type.1 com.google.protobuf.Internal.EnumLite findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(x0 : Int) : Internal.EnumLite?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Type.1 org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Type findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(number : Int) : CmdlineRemoteProto.Message.ControllerMessage.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Type org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Type valueOf(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(value : Int) : CmdlineRemoteProto.Message.ControllerMessage.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Type access$6002(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6002(x0 : CmdlineRemoteProto.Message.ControllerMessage, x1 : CmdlineRemoteProto.Message.ControllerMessage.Type?) : CmdlineRemoteProto.Message.ControllerMessage.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage access$6102(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6102(x0 : CmdlineRemoteProto.Message.ControllerMessage, x1 : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage?) : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent access$6202(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6202(x0 : CmdlineRemoteProto.Message.ControllerMessage, x1 : CmdlineRemoteProto.Message.ControllerMessage.FSEvent?) : CmdlineRemoteProto.Message.ControllerMessage.FSEvent?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult access$6302(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6302(x0 : CmdlineRemoteProto.Message.ControllerMessage, x1 : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult?) : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage int access$6402(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6402(x0 : CmdlineRemoteProto.Message.ControllerMessage, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder newBuilder(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : CmdlineRemoteProto.Message.ControllerMessage?) : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : CmdlineRemoteProto.Message.ControllerMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.ControllerMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : CmdlineRemoteProto.Message.ControllerMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure access$1200(org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1200(x0 : CmdlineRemoteProto.Message.Failure.Builder) : CmdlineRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder access$1300()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1300() : CmdlineRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : CmdlineRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : CmdlineRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : CmdlineRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : CmdlineRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder clearDescription()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearDescription() : CmdlineRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder clearErrorCode()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearErrorCode() : CmdlineRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder clearStacktrace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearStacktrace() : CmdlineRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : CmdlineRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : CmdlineRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder mergeFrom(org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : CmdlineRemoteProto.Message.Failure?) : CmdlineRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder setDescription(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setDescription(value : String) : CmdlineRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder setErrorCode(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setErrorCode(value : Int) : CmdlineRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder setStacktrace(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setStacktrace(value : String) : CmdlineRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure int access$1502(org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1502(x0 : CmdlineRemoteProto.Message.Failure, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure java.lang.Object access$1602(org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1602(x0 : CmdlineRemoteProto.Message.Failure, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure java.lang.Object access$1702(org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1702(x0 : CmdlineRemoteProto.Message.Failure, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure int access$1802(org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1802(x0 : CmdlineRemoteProto.Message.Failure, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : CmdlineRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure com.google.protobuf.ByteString getDescriptionBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDescriptionBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure com.google.protobuf.ByteString getStacktraceBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getStacktraceBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : CmdlineRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder newBuilder(org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : CmdlineRemoteProto.Message.Failure?) : CmdlineRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : CmdlineRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : CmdlineRemoteProto.Message.Failure?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.Failure?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : CmdlineRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : CmdlineRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : CmdlineRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : CmdlineRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : CmdlineRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair access$600(org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$600(x0 : CmdlineRemoteProto.Message.KeyValuePair.Builder) : CmdlineRemoteProto.Message.KeyValuePair&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder access$700()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$700() : CmdlineRemoteProto.Message.KeyValuePair.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : CmdlineRemoteProto.Message.KeyValuePair&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : CmdlineRemoteProto.Message.KeyValuePair&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : CmdlineRemoteProto.Message.KeyValuePair&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : CmdlineRemoteProto.Message.KeyValuePair.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder clearKey()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearKey() : CmdlineRemoteProto.Message.KeyValuePair.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder clearValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearValue() : CmdlineRemoteProto.Message.KeyValuePair.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : CmdlineRemoteProto.Message.KeyValuePair.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : CmdlineRemoteProto.Message.KeyValuePair.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.KeyValuePair&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.KeyValuePair.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder mergeFrom(org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : CmdlineRemoteProto.Message.KeyValuePair?) : CmdlineRemoteProto.Message.KeyValuePair.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder setKey(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setKey(value : String) : CmdlineRemoteProto.Message.KeyValuePair.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder setValue(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValue(value : String) : CmdlineRemoteProto.Message.KeyValuePair.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair java.lang.Object access$1002(org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1002(x0 : CmdlineRemoteProto.Message.KeyValuePair, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair int access$1102(org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1102(x0 : CmdlineRemoteProto.Message.KeyValuePair, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair java.lang.Object access$902(org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$902(x0 : CmdlineRemoteProto.Message.KeyValuePair, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : CmdlineRemoteProto.Message.KeyValuePair&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.KeyValuePair&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair com.google.protobuf.ByteString getKeyBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKeyBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair com.google.protobuf.ByteString getValueBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValueBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : CmdlineRemoteProto.Message.KeyValuePair.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder newBuilder(org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : CmdlineRemoteProto.Message.KeyValuePair?) : CmdlineRemoteProto.Message.KeyValuePair.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : CmdlineRemoteProto.Message.KeyValuePair.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : CmdlineRemoteProto.Message.KeyValuePair?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.KeyValuePair?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : CmdlineRemoteProto.Message.KeyValuePair&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.KeyValuePair&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : CmdlineRemoteProto.Message.KeyValuePair&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.KeyValuePair&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : CmdlineRemoteProto.Message.KeyValuePair&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.KeyValuePair&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : CmdlineRemoteProto.Message.KeyValuePair&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.KeyValuePair&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair org.jetbrains.jps.api.CmdlineRemoteProto.Message.KeyValuePair.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : CmdlineRemoteProto.Message.KeyValuePair.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Type.1 com.google.protobuf.Internal.EnumLite findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(x0 : Int) : Internal.EnumLite?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Type.1 org.jetbrains.jps.api.CmdlineRemoteProto.Message.Type findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(number : Int) : CmdlineRemoteProto.Message.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.Type org.jetbrains.jps.api.CmdlineRemoteProto.Message.Type valueOf(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(value : Int) : CmdlineRemoteProto.Message.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID access$000(org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : CmdlineRemoteProto.Message.UUID.Builder) : CmdlineRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder access$100()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100() : CmdlineRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : CmdlineRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : CmdlineRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : CmdlineRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : CmdlineRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder clearLeastSigBits()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLeastSigBits() : CmdlineRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder clearMostSigBits()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearMostSigBits() : CmdlineRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : CmdlineRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : CmdlineRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder mergeFrom(org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : CmdlineRemoteProto.Message.UUID?) : CmdlineRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder setLeastSigBits(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLeastSigBits(value : Long) : CmdlineRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder setMostSigBits(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setMostSigBits(value : Long) : CmdlineRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID long access$302(org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$302(x0 : CmdlineRemoteProto.Message.UUID, x1 : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID long access$402(org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$402(x0 : CmdlineRemoteProto.Message.UUID, x1 : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID int access$502(org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$502(x0 : CmdlineRemoteProto.Message.UUID, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : CmdlineRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : CmdlineRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder newBuilder(org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : CmdlineRemoteProto.Message.UUID?) : CmdlineRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : CmdlineRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : CmdlineRemoteProto.Message.UUID?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.UUID?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : CmdlineRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : CmdlineRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : CmdlineRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : CmdlineRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : CmdlineRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID access$12002(org.jetbrains.jps.api.CmdlineRemoteProto.Message, org.jetbrains.jps.api.CmdlineRemoteProto.Message.UUID)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$12002(x0 : CmdlineRemoteProto.Message, x1 : CmdlineRemoteProto.Message.UUID?) : CmdlineRemoteProto.Message.UUID?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message.Type access$12102(org.jetbrains.jps.api.CmdlineRemoteProto.Message, org.jetbrains.jps.api.CmdlineRemoteProto.Message.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$12102(x0 : CmdlineRemoteProto.Message, x1 : CmdlineRemoteProto.Message.Type?) : CmdlineRemoteProto.Message.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage access$12202(org.jetbrains.jps.api.CmdlineRemoteProto.Message, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$12202(x0 : CmdlineRemoteProto.Message, x1 : CmdlineRemoteProto.Message.ControllerMessage?) : CmdlineRemoteProto.Message.ControllerMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage access$12302(org.jetbrains.jps.api.CmdlineRemoteProto.Message, org.jetbrains.jps.api.CmdlineRemoteProto.Message.BuilderMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$12302(x0 : CmdlineRemoteProto.Message, x1 : CmdlineRemoteProto.Message.BuilderMessage?) : CmdlineRemoteProto.Message.BuilderMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure access$12402(org.jetbrains.jps.api.CmdlineRemoteProto.Message, org.jetbrains.jps.api.CmdlineRemoteProto.Message.Failure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$12402(x0 : CmdlineRemoteProto.Message, x1 : CmdlineRemoteProto.Message.Failure?) : CmdlineRemoteProto.Message.Failure?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message int access$12502(org.jetbrains.jps.api.CmdlineRemoteProto.Message, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$12502(x0 : CmdlineRemoteProto.Message, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder newBuilder(org.jetbrains.jps.api.CmdlineRemoteProto.Message)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : CmdlineRemoteProto.Message?) : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : CmdlineRemoteProto.Message?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : CmdlineRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.CmdlineRemoteProto.Message org.jetbrains.jps.api.CmdlineRemoteProto.Message.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : CmdlineRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.api.RequestFuture RequestFuture(T, java.util.UUID, org.jetbrains.jps.api.RequestFuture.CancelAction&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RequestFuture(p0 : T?, p1 : UUID?, p2 : RequestFuture.CancelAction&lt;T&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.AdditionalRootsProviderService java.util.List&lt;R&gt; getAdditionalRoots(org.jetbrains.jps.builders.BuildTarget&lt;R&gt;, org.jetbrains.jps.builders.storage.BuildDataPaths)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAdditionalRoots(p0 : BuildTarget&lt;R&gt;, p1 : BuildDataPaths?) : MutableList&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildOutputConsumer void registerOutputFile(java.io.File, java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun registerOutputFile(p0 : File, p1 : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildRootDescriptor java.io.FileFilter createFileFilter()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createFileFilter() : FileFilter&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildRootDescriptor java.util.Set&lt;java.io.File&gt; getExcludedRoots()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getExcludedRoots() : MutableSet&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildRootDescriptor java.io.File getRootFile()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRootFile() : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildRootDescriptor org.jetbrains.jps.builders.BuildTarget&lt;?&gt; getTarget()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTarget() : BuildTarget&lt;*&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildRootIndex void associateTempRoot(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.BuildTarget&lt;R&gt;, R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?&gt; associateTempRoot(p0 : CompileContext, p1 : BuildTarget&lt;R&gt;, p2 : R) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildRootIndex java.util.Collection&lt;? extends org.jetbrains.jps.builders.BuildRootDescriptor&gt; clearTempRoots(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearTempRoots(p0 : CompileContext) : MutableCollection&lt;out BuildRootDescriptor?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildRootIndex java.util.Collection&lt;R&gt; findAllParentDescriptors(java.io.File, java.util.Collection&lt;? extends org.jetbrains.jps.builders.BuildTargetType&lt;? extends org.jetbrains.jps.builders.BuildTarget&lt;R&gt;&gt;&gt;, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?&gt; findAllParentDescriptors(p0 : File, p1 : Collection&lt;out BuildTargetType&lt;out BuildTarget&lt;R&gt;?&gt;?&gt;?, p2 : CompileContext?) : MutableCollection&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildRootIndex java.util.Collection&lt;R&gt; findAllParentDescriptors(java.io.File, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?&gt; findAllParentDescriptors(p0 : File, p1 : CompileContext?) : MutableCollection&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildRootIndex org.jetbrains.jps.builders.java.JavaSourceRootDescriptor findJavaRootDescriptor(org.jetbrains.jps.incremental.CompileContext, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findJavaRootDescriptor(p0 : CompileContext?, p1 : File) : JavaSourceRootDescriptor?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildRootIndex R findParentDescriptor(java.io.File, java.util.Collection&lt;? extends org.jetbrains.jps.builders.BuildTargetType&lt;? extends org.jetbrains.jps.builders.BuildTarget&lt;R&gt;&gt;&gt;, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?&gt; findParentDescriptor(p0 : File, p1 : Collection&lt;out BuildTargetType&lt;out BuildTarget&lt;R&gt;?&gt;?&gt;, p2 : CompileContext?) : R?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildRootIndex java.util.List&lt;R&gt; getRootDescriptors(java.io.File, java.util.Collection&lt;? extends org.jetbrains.jps.builders.BuildTargetType&lt;? extends org.jetbrains.jps.builders.BuildTarget&lt;R&gt;&gt;&gt;, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?&gt; getRootDescriptors(p0 : File, p1 : Collection&lt;out BuildTargetType&lt;out BuildTarget&lt;R&gt;?&gt;?&gt;?, p2 : CompileContext?) : MutableList&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildRootIndex java.io.FileFilter getRootFilter(org.jetbrains.jps.builders.BuildRootDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRootFilter(p0 : BuildRootDescriptor) : FileFilter&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildRootIndex java.util.List&lt;R&gt; getTargetRoots(org.jetbrains.jps.builders.BuildTarget&lt;R&gt;, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?&gt; getTargetRoots(p0 : BuildTarget&lt;R&gt;, p1 : CompileContext?) : MutableList&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildRootIndex java.util.List&lt;R&gt; getTempTargetRoots(org.jetbrains.jps.builders.BuildTarget&lt;R&gt;, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?&gt; getTempTargetRoots(p0 : BuildTarget&lt;R&gt;, p1 : CompileContext) : MutableList&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildTarget java.util.Collection&lt;org.jetbrains.jps.builders.BuildTarget&lt;?&gt;&gt; computeDependencies(org.jetbrains.jps.builders.BuildTargetRegistry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeDependencies(p0 : BuildTargetRegistry?) : MutableCollection&lt;BuildTarget&lt;*&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildTarget java.util.List&lt;R&gt; computeRootDescriptors(org.jetbrains.jps.model.JpsModel, org.jetbrains.jps.indices.ModuleExcludeIndex, org.jetbrains.jps.indices.IgnoredFileIndex, org.jetbrains.jps.builders.storage.BuildDataPaths)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeRootDescriptors(p0 : JpsModel, p1 : ModuleExcludeIndex, p2 : IgnoredFileIndex?, p3 : BuildDataPaths?) : MutableList&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildTarget R findRootDescriptor(java.lang.String, org.jetbrains.jps.builders.BuildRootIndex)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findRootDescriptor(p0 : String?, p1 : BuildRootIndex) : R?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildTarget java.util.Collection&lt;java.io.File&gt; getOutputRoots(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutputRoots(p0 : CompileContext) : MutableCollection&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildTarget java.lang.String getPresentableName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPresentableName() : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildTarget java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildTarget void writeConfiguration(java.io.PrintWriter, org.jetbrains.jps.builders.storage.BuildDataPaths, org.jetbrains.jps.builders.BuildRootIndex)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeConfiguration(p0 : PrintWriter, p1 : BuildDataPaths?, p2 : BuildRootIndex) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildTargetIndex java.util.Collection&lt;org.jetbrains.jps.builders.BuildTarget&lt;?&gt;&gt; getDependencies(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDependencies(p0 : BuildTarget&lt;*&gt;) : MutableCollection&lt;BuildTarget&lt;*&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildTargetIndex java.util.Set&lt;org.jetbrains.jps.builders.BuildTarget&lt;?&gt;&gt; getDependenciesRecursively(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDependenciesRecursively(p0 : BuildTarget&lt;*&gt;?) : MutableSet&lt;BuildTarget&lt;*&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildTargetLoader T createTarget(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createTarget(p0 : String) : T?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildTargetRegistry java.util.List&lt;T&gt; getAllTargets(org.jetbrains.jps.builders.BuildTargetType&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : BuildTarget&lt;*&gt;?&gt; getAllTargets(p0 : BuildTargetType&lt;T&gt;) : MutableList&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildTargetRegistry java.util.Collection&lt;org.jetbrains.jps.builders.ModuleBasedTarget&lt;?&gt;&gt; getModuleBasedTargets(org.jetbrains.jps.model.module.JpsModule, org.jetbrains.jps.builders.BuildTargetRegistry.ModuleTargetSelector)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getModuleBasedTargets(p0 : JpsModule?, p1 : BuildTargetRegistry.ModuleTargetSelector) : MutableCollection&lt;ModuleBasedTarget&lt;*&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildTargetType java.util.List&lt;T&gt; computeAllTargets(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeAllTargets(p0 : JpsModel) : MutableList&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.BuildTargetType org.jetbrains.jps.builders.BuildTargetLoader&lt;T&gt; createLoader(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createLoader(p0 : JpsModel) : BuildTargetLoader&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.DirtyFilesHolder java.util.Collection&lt;java.lang.String&gt; getRemovedFiles(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRemovedFiles(p0 : T) : MutableCollection&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.DirtyFilesHolder void processDirtyFiles(org.jetbrains.jps.builders.FileProcessor&lt;R,T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processDirtyFiles(p0 : FileProcessor&lt;R, T&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.FileProcessor boolean apply(T, java.io.File, R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : T?, p1 : File, p2 : R) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.ModuleBasedTarget ModuleBasedTarget(org.jetbrains.jps.builders.BuildTargetType&lt;?&gt;, org.jetbrains.jps.model.module.JpsModule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ModuleBasedTarget(p0 : BuildTargetType&lt;*&gt;?, p1 : JpsModule)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.ModuleBasedTarget boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.ModuleBasedTarget org.jetbrains.jps.model.module.JpsModule getModule()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getModule() : JpsModule&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.artifacts.ArtifactBuildTaskProvider java.util.List&lt;? extends org.jetbrains.jps.incremental.BuildTask&gt; createArtifactBuildTasks(org.jetbrains.jps.model.artifact.JpsArtifact, org.jetbrains.jps.builders.artifacts.ArtifactBuildTaskProvider.ArtifactBuildPhase)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createArtifactBuildTasks(p0 : JpsArtifact, p1 : ArtifactBuildTaskProvider.ArtifactBuildPhase) : MutableList&lt;out BuildTask?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildDataPathsImpl java.io.File getTargetDataRoot(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTargetDataRoot(target : BuildTarget&lt;*&gt;) : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildDataPathsImpl java.io.File getTargetTypeDataRoot(org.jetbrains.jps.builders.BuildTargetType&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTargetTypeDataRoot(targetType : BuildTargetType&lt;*&gt;) : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildDataPathsImpl java.io.File getTargetsDataRoot()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTargetsDataRoot() : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildOutputConsumerImpl void registerOutputFile(java.io.File, java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun registerOutputFile(outputFile : File, sourcePaths : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildRootIndexImpl void addRoots(org.jetbrains.jps.builders.storage.BuildDataPaths, java.lang.Iterable&lt;org.jetbrains.jps.builders.AdditionalRootsProviderService&gt;, org.jetbrains.jps.builders.BuildTarget&lt;R&gt;, org.jetbrains.jps.model.JpsModel, org.jetbrains.jps.indices.ModuleExcludeIndex, org.jetbrains.jps.indices.IgnoredFileIndex)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?&gt; addRoots(dataPaths : BuildDataPaths?, rootsProviders : Iterable&lt;AdditionalRootsProviderService?&gt;, target : BuildTarget&lt;R&gt;, model : JpsModel?, index : ModuleExcludeIndex?, ignoredFileIndex : IgnoredFileIndex?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildRootIndexImpl void associateTempRoot(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.BuildTarget&lt;R&gt;, R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?&gt; associateTempRoot(p0 : CompileContext, p1 : BuildTarget&lt;R&gt;, p2 : R) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildRootIndexImpl java.util.Map&lt;java.lang.String,java.util.List&lt;org.jetbrains.jps.incremental.ModuleBuildTarget&gt;&gt; buildModuleNameToTargetsMap(org.jetbrains.jps.builders.BuildTargetIndex)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildModuleNameToTargetsMap(targetIndex : BuildTargetIndex?) : MutableMap&lt;String?, List&lt;ModuleBuildTarget?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildRootIndexImpl java.util.Collection&lt;? extends org.jetbrains.jps.builders.BuildRootDescriptor&gt; clearTempRoots(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearTempRoots(p0 : CompileContext) : MutableCollection&lt;out BuildRootDescriptor?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildRootIndexImpl java.util.Collection&lt;R&gt; findAllParentDescriptors(java.io.File, java.util.Collection&lt;? extends org.jetbrains.jps.builders.BuildTargetType&lt;? extends org.jetbrains.jps.builders.BuildTarget&lt;R&gt;&gt;&gt;, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?&gt; findAllParentDescriptors(p0 : File, p1 : Collection&lt;out BuildTargetType&lt;out BuildTarget&lt;R&gt;?&gt;?&gt;?, p2 : CompileContext?) : MutableCollection&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildRootIndexImpl java.util.Collection&lt;R&gt; findAllParentDescriptors(java.io.File, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?&gt; findAllParentDescriptors(p0 : File, p1 : CompileContext?) : MutableCollection&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildRootIndexImpl org.jetbrains.jps.builders.java.JavaSourceRootDescriptor findJavaRootDescriptor(org.jetbrains.jps.incremental.CompileContext, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findJavaRootDescriptor(p0 : CompileContext?, p1 : File) : JavaSourceRootDescriptor?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildRootIndexImpl R findParentDescriptor(java.io.File, java.util.Collection&lt;? extends org.jetbrains.jps.builders.BuildTargetType&lt;? extends org.jetbrains.jps.builders.BuildTarget&lt;R&gt;&gt;&gt;, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?&gt; findParentDescriptor(p0 : File, p1 : Collection&lt;out BuildTargetType&lt;out BuildTarget&lt;R&gt;?&gt;?&gt;, p2 : CompileContext?) : R?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildRootIndexImpl java.util.List&lt;R&gt; getRootDescriptors(java.io.File, java.util.Collection&lt;? extends org.jetbrains.jps.builders.BuildTargetType&lt;? extends org.jetbrains.jps.builders.BuildTarget&lt;R&gt;&gt;&gt;, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?&gt; getRootDescriptors(p0 : File, p1 : Collection&lt;out BuildTargetType&lt;out BuildTarget&lt;R&gt;?&gt;?&gt;?, p2 : CompileContext?) : MutableList&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildRootIndexImpl java.io.FileFilter getRootFilter(org.jetbrains.jps.builders.BuildRootDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRootFilter(p0 : BuildRootDescriptor) : FileFilter&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildRootIndexImpl java.util.List&lt;R&gt; getTargetRoots(org.jetbrains.jps.builders.BuildTarget&lt;R&gt;, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?&gt; getTargetRoots(p0 : BuildTarget&lt;R&gt;, p1 : CompileContext?) : MutableList&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildRootIndexImpl java.util.List&lt;R&gt; getTempTargetRoots(org.jetbrains.jps.builders.BuildTarget&lt;R&gt;, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?&gt; getTempTargetRoots(target : BuildTarget&lt;R&gt;, context : CompileContext) : MutableList&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildRootIndexImpl void registerDescriptor(org.jetbrains.jps.builders.BuildRootDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun registerDescriptor(descriptor : BuildRootDescriptor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildTargetIndexImpl BuildTargetIndexImpl(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BuildTargetIndexImpl(p0 : JpsModel)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildTargetIndexImpl java.util.List access$000(org.jetbrains.jps.builders.impl.BuildTargetIndexImpl)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : BuildTargetIndexImpl) : MutableList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildTargetIndexImpl java.util.Map access$100(org.jetbrains.jps.builders.impl.BuildTargetIndexImpl)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : BuildTargetIndexImpl) : MutableMap?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildTargetIndexImpl java.util.List access$200(org.jetbrains.jps.builders.impl.BuildTargetIndexImpl)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : BuildTargetIndexImpl) : MutableList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildTargetIndexImpl void collectDependenciesRecursively(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;, java.util.LinkedHashSet&lt;org.jetbrains.jps.builders.BuildTarget&lt;?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun collectDependenciesRecursively(target : BuildTarget&lt;*&gt;?, result : LinkedHashSet&lt;BuildTarget&lt;*&gt;?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildTargetIndexImpl java.util.List&lt;T&gt; getAllTargets(org.jetbrains.jps.builders.BuildTargetType&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : BuildTarget&lt;*&gt;?&gt; getAllTargets(p0 : BuildTargetType&lt;T&gt;) : MutableList&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildTargetIndexImpl java.util.Collection&lt;org.jetbrains.jps.builders.BuildTarget&lt;?&gt;&gt; getDependencies(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDependencies(p0 : BuildTarget&lt;*&gt;) : MutableCollection&lt;BuildTarget&lt;*&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildTargetIndexImpl java.util.Set&lt;org.jetbrains.jps.builders.BuildTarget&lt;?&gt;&gt; getDependenciesRecursively(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDependenciesRecursively(target : BuildTarget&lt;*&gt;?) : MutableSet&lt;BuildTarget&lt;*&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.BuildTargetIndexImpl java.util.Collection&lt;org.jetbrains.jps.builders.ModuleBasedTarget&lt;?&gt;&gt; getModuleBasedTargets(org.jetbrains.jps.model.module.JpsModule, org.jetbrains.jps.builders.BuildTargetRegistry.ModuleTargetSelector)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getModuleBasedTargets(p0 : JpsModule?, p1 : BuildTargetRegistry.ModuleTargetSelector) : MutableCollection&lt;ModuleBasedTarget&lt;*&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.DirtyFilesHolderBase java.util.Collection&lt;java.lang.String&gt; getRemovedFiles(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRemovedFiles(p0 : T) : MutableCollection&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.logging.ProjectBuilderLoggerBase void logCompiledFiles(java.util.Collection&lt;java.io.File&gt;, java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun logCompiledFiles(files : Collection&lt;File?&gt;, builderName : String?, description : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.logging.ProjectBuilderLoggerBase void logCompiledPaths(java.util.Collection&lt;java.lang.String&gt;, java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun logCompiledPaths(paths : Collection&lt;String?&gt;, builderName : String?, description : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.impl.logging.ProjectBuilderLoggerBase void logDeletedFiles(java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun logDeletedFiles(paths : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.ExcludedJavaSourceRootProvider boolean isExcludedFromCompilation(org.jetbrains.jps.model.module.JpsModule, org.jetbrains.jps.model.module.JpsModuleSourceRoot)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isExcludedFromCompilation(p0 : JpsModule, p1 : JpsModuleSourceRoot) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaBuilderUtil.ModulesBasedFileFilter ModulesBasedFileFilter(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.ModuleChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ModulesBasedFileFilter(context : CompileContext?, chunk : ModuleChunk)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaBuilderUtil.ModulesBasedFileFilter ModulesBasedFileFilter(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.ModuleChunk, org.jetbrains.jps.builders.java.JavaBuilderUtil.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ModulesBasedFileFilter(x0 : CompileContext?, x1 : ModuleChunk, x2 : JavaBuilderUtil.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaBuilderUtil java.util.List&lt;com.intellij.openapi.util.Pair&lt;java.io.File,org.jetbrains.jps.model.module.JpsModule&gt;&gt; checkAffectedFilesInCorrectModules(org.jetbrains.jps.incremental.CompileContext, java.util.Collection&lt;java.io.File&gt;, org.jetbrains.jps.builders.java.JavaBuilderUtil.ModulesBasedFileFilter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkAffectedFilesInCorrectModules(context : CompileContext?, affected : Collection&lt;File?&gt;, moduleBasedFilter : JavaBuilderUtil.ModulesBasedFileFilter?) : MutableList&lt;Pair&lt;File?, JpsModule?&gt;?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaBuilderUtil boolean chunkContainsAffectedFiles(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.ModuleChunk, java.util.Set&lt;java.io.File&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun chunkContainsAffectedFiles(context : CompileContext?, chunk : ModuleChunk, affected : Set&lt;File?&gt;?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaBuilderUtil org.jetbrains.jps.model.library.sdk.JpsSdk&lt;org.jetbrains.jps.model.JpsDummyElement&gt; ensureModuleHasJdk(org.jetbrains.jps.model.module.JpsModule, org.jetbrains.jps.incremental.CompileContext, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ensureModuleHasJdk(p0 : JpsModule, p1 : CompileContext?, p2 : String?) : JpsSdk&lt;JpsDummyElement?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaBuilderUtil java.util.Set&lt;java.io.File&gt; getAllAffectedFilesContainer(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAllAffectedFilesContainer(context : CompileContext?) : MutableSet&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaBuilderUtil java.util.Set&lt;java.io.File&gt; getAllCompiledFilesContainer(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAllCompiledFilesContainer(context : CompileContext?) : MutableSet&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaBuilderUtil java.util.Set&lt;java.lang.String&gt; getRemovedPaths(org.jetbrains.jps.ModuleChunk, org.jetbrains.jps.builders.DirtyFilesHolder&lt;org.jetbrains.jps.builders.java.JavaSourceRootDescriptor,org.jetbrains.jps.incremental.ModuleBuildTarget&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRemovedPaths(chunk : ModuleChunk?, dirtyFilesHolder : DirtyFilesHolder&lt;JavaSourceRootDescriptor?, ModuleBuildTarget?&gt;) : MutableSet&lt;String?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaModuleBuildTargetType.Loader Loader(org.jetbrains.jps.builders.java.JavaModuleBuildTargetType, org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Loader(model : JpsModel)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaModuleBuildTargetType.Loader org.jetbrains.jps.builders.BuildTarget createTarget(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createTarget(x0 : String) : BuildTarget?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaModuleBuildTargetType.Loader org.jetbrains.jps.incremental.ModuleBuildTarget createTarget(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createTarget(p0 : String) : ModuleBuildTarget?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaModuleBuildTargetType java.util.List&lt;org.jetbrains.jps.incremental.ModuleBuildTarget&gt; computeAllTargets(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeAllTargets(p0 : JpsModel) : MutableList&lt;ModuleBuildTarget?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaModuleBuildTargetType org.jetbrains.jps.builders.BuildTargetLoader createLoader(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createLoader(x0 : JpsModel) : BuildTargetLoader&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaModuleBuildTargetType org.jetbrains.jps.builders.java.JavaModuleBuildTargetType.Loader createLoader(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createLoader(p0 : JpsModel) : JavaModuleBuildTargetType.Loader&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaModuleBuildTargetType org.jetbrains.jps.builders.java.JavaModuleBuildTargetType getInstance(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInstance(tests : Boolean) : JavaModuleBuildTargetType&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaSourceRootDescriptor JavaSourceRootDescriptor(java.io.File, org.jetbrains.jps.incremental.ModuleBuildTarget, boolean, boolean, java.lang.String, java.util.Set&lt;java.io.File&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun JavaSourceRootDescriptor(p0 : File, p1 : ModuleBuildTarget, p2 : Boolean, p3 : Boolean, p4 : String, p5 : Set&lt;File?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaSourceRootDescriptor java.io.FileFilter createFileFilter()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createFileFilter() : FileFilter&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaSourceRootDescriptor java.util.Set&lt;java.io.File&gt; getExcludedRoots()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getExcludedRoots() : MutableSet&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaSourceRootDescriptor java.lang.String getPackagePrefix()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPackagePrefix() : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaSourceRootDescriptor java.io.File getRootFile()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRootFile() : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaSourceRootDescriptor org.jetbrains.jps.builders.BuildTarget getTarget()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTarget() : BuildTarget&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.JavaSourceRootDescriptor org.jetbrains.jps.incremental.ModuleBuildTarget getTarget()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTarget() : ModuleBuildTarget&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.ResourceRootDescriptor ResourceRootDescriptor(java.io.File, org.jetbrains.jps.incremental.ResourcesTarget, boolean, java.lang.String, java.util.Set&lt;java.io.File&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ResourceRootDescriptor(p0 : File, p1 : ResourcesTarget, p2 : Boolean, p3 : String, p4 : Set&lt;File?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.ResourceRootDescriptor java.io.FileFilter createFileFilter()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createFileFilter() : FileFilter&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.ResourceRootDescriptor java.util.Set&lt;java.io.File&gt; getExcludedRoots()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getExcludedRoots() : MutableSet&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.ResourceRootDescriptor java.lang.String getPackagePrefix()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPackagePrefix() : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.ResourceRootDescriptor java.io.File getRootFile()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRootFile() : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.ResourceRootDescriptor org.jetbrains.jps.builders.BuildTarget getTarget()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTarget() : BuildTarget&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.ResourceRootDescriptor org.jetbrains.jps.incremental.ResourcesTarget getTarget()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTarget() : ResourcesTarget&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.ResourcesTargetType.Loader Loader(org.jetbrains.jps.builders.java.ResourcesTargetType, org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Loader(model : JpsModel)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.ResourcesTargetType.Loader org.jetbrains.jps.builders.BuildTarget createTarget(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createTarget(x0 : String) : BuildTarget?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.ResourcesTargetType.Loader org.jetbrains.jps.incremental.ResourcesTarget createTarget(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createTarget(p0 : String) : ResourcesTarget?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.ResourcesTargetType java.util.List&lt;org.jetbrains.jps.incremental.ResourcesTarget&gt; computeAllTargets(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeAllTargets(p0 : JpsModel) : MutableList&lt;ResourcesTarget?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.ResourcesTargetType org.jetbrains.jps.builders.BuildTargetLoader createLoader(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createLoader(x0 : JpsModel) : BuildTargetLoader&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.ResourcesTargetType org.jetbrains.jps.builders.java.ResourcesTargetType.Loader createLoader(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createLoader(p0 : JpsModel) : ResourcesTargetType.Loader&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.ResourcesTargetType org.jetbrains.jps.builders.java.ResourcesTargetType getInstance(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInstance(tests : Boolean) : ResourcesTargetType&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Callbacks.Backend void associate(java.lang.String, java.lang.String, org.jetbrains.asm4.ClassReader)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun associate(p0 : String?, p1 : String?, p2 : ClassReader) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Callbacks.Backend void registerImports(java.lang.String, java.util.Collection&lt;java.lang.String&gt;, java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun registerImports(p0 : String, p1 : Collection&lt;String?&gt;, p2 : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Callbacks.ConstantAffection java.util.Collection&lt;java.io.File&gt; getAffectedFiles()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAffectedFiles() : MutableCollection&lt;File?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Callbacks.ConstantAffectionResolver java.util.concurrent.Future&lt;org.jetbrains.jps.builders.java.dependencyView.Callbacks.ConstantAffection&gt; request(java.lang.String, java.lang.String, int, boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun request(p0 : String, p1 : String, p2 : Int, p3 : Boolean, p4 : Boolean) : Future&lt;Callbacks.ConstantAffection?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.1 org.jetbrains.jps.builders.java.dependencyView.Difference.Specifier&lt;org.jetbrains.jps.builders.java.dependencyView.FieldRepr&gt; fields()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fields() : Difference.Specifier&lt;FieldRepr?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.1 org.jetbrains.jps.builders.java.dependencyView.Difference.Specifier&lt;org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType&gt; interfaces()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun interfaces() : Difference.Specifier&lt;TypeRepr.AbstractType?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.1 org.jetbrains.jps.builders.java.dependencyView.Difference.Specifier&lt;org.jetbrains.jps.builders.java.dependencyView.MethodRepr&gt; methods()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun methods() : Difference.Specifier&lt;MethodRepr?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.1 org.jetbrains.jps.builders.java.dependencyView.Difference.Specifier&lt;org.jetbrains.jps.builders.java.dependencyView.ElemType&gt; targets()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun targets() : Difference.Specifier&lt;ElemType?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.2 java.lang.Object read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(x0 : DataInput) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.2 org.jetbrains.jps.builders.java.dependencyView.ClassRepr read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(in : DataInput) : ClassRepr&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.2 void save(java.io.DataOutput, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(x0 : DataOutput, x1 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.2 void save(java.io.DataOutput, org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput, value : ClassRepr) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.3 int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.3 int compare(org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType, org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(o1 : TypeRepr.AbstractType, o2 : TypeRepr.AbstractType) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.4 int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.4 int compare(org.jetbrains.jps.builders.java.dependencyView.FieldRepr, org.jetbrains.jps.builders.java.dependencyView.FieldRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(o1 : FieldRepr, o2 : FieldRepr) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.5 int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.5 int compare(org.jetbrains.jps.builders.java.dependencyView.MethodRepr, org.jetbrains.jps.builders.java.dependencyView.MethodRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(o1 : MethodRepr, o2 : MethodRepr) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.Diff org.jetbrains.jps.builders.java.dependencyView.Difference.Specifier&lt;org.jetbrains.jps.builders.java.dependencyView.FieldRepr&gt; fields()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fields() : Difference.Specifier&lt;FieldRepr?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.Diff org.jetbrains.jps.builders.java.dependencyView.Difference.Specifier&lt;org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType&gt; interfaces()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun interfaces() : Difference.Specifier&lt;TypeRepr.AbstractType?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.Diff org.jetbrains.jps.builders.java.dependencyView.Difference.Specifier&lt;org.jetbrains.jps.builders.java.dependencyView.MethodRepr&gt; methods()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun methods() : Difference.Specifier&lt;MethodRepr?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr.Diff org.jetbrains.jps.builders.java.dependencyView.Difference.Specifier&lt;org.jetbrains.jps.builders.java.dependencyView.ElemType&gt; targets()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun targets() : Difference.Specifier&lt;ElemType?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr ClassRepr(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int, int, int, int, int, java.lang.String[], java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.FieldRepr&gt;, java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.MethodRepr&gt;, java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.ElemType&gt;, java.lang.annotation.RetentionPolicy, int, boolean, boolean, java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ClassRepr(context : DependencyContext, a : Int, fn : Int, n : Int, sig : Int, sup : Int, i : Array&lt;out String?&gt;?, f : Set&lt;FieldRepr?&gt;?, m : Set&lt;MethodRepr?&gt;?, targets : Set&lt;ElemType?&gt;?, policy : RetentionPolicy?, outerClassName : Int, localClassFlag : Boolean, anonymousClassFlag : Boolean, usages : Set&lt;UsageRepr.Usage?&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr ClassRepr(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ClassRepr(context : DependencyContext?, in : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr org.jetbrains.jps.builders.java.dependencyView.TypeRepr.ClassType access$000(org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : ClassRepr) : TypeRepr.ClassType?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr org.jetbrains.jps.builders.java.dependencyView.DependencyContext access$100(org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : ClassRepr) : DependencyContext?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr java.util.Set access$200(org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : ClassRepr) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr java.util.Set access$300(org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : ClassRepr) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr java.util.Set access$400(org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : ClassRepr) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr java.util.Set access$500(org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$500(x0 : ClassRepr) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr java.lang.annotation.RetentionPolicy access$600(org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$600(x0 : ClassRepr) : RetentionPolicy?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr org.jetbrains.jps.builders.java.dependencyView.ClassRepr.Diff difference(org.jetbrains.jps.builders.java.dependencyView.Proto)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun difference(past : Proto) : ClassRepr.Diff&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr org.jetbrains.jps.builders.java.dependencyView.Difference difference(org.jetbrains.jps.builders.java.dependencyView.Proto)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun difference(x0 : Proto) : Difference&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr com.intellij.util.io.DataExternalizer&lt;org.jetbrains.jps.builders.java.dependencyView.ClassRepr&gt; externalizer(org.jetbrains.jps.builders.java.dependencyView.DependencyContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun externalizer(context : DependencyContext?) : DataExternalizer&lt;ClassRepr?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr org.jetbrains.jps.builders.java.dependencyView.FieldRepr findField(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findField(p0 : Int) : FieldRepr?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr java.util.Collection&lt;org.jetbrains.jps.builders.java.dependencyView.MethodRepr&gt; findMethods(org.jetbrains.jps.builders.java.dependencyView.MethodRepr.Predicate)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findMethods(p0 : MethodRepr.Predicate?) : MutableCollection&lt;MethodRepr?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr java.lang.String getPackageName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPackageName() : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr java.lang.String getPackageName(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPackageName(s : Int) : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr java.lang.String getPackageName(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPackageName(raw : String) : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr java.lang.annotation.RetentionPolicy getRetentionPolicy()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRetentionPolicy() : RetentionPolicy?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr int[] getSupers()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSupers() : IntArray&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(context : DependencyContext, stream : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassRepr void updateClassUsages(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateClassUsages(context : DependencyContext, s : MutableSet&lt;UsageRepr.Usage?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.1 org.jetbrains.asm4.signature.SignatureVisitor visitArrayType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitArrayType() : SignatureVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.1 org.jetbrains.asm4.signature.SignatureVisitor visitClassBound()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitClassBound() : SignatureVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.1 org.jetbrains.asm4.signature.SignatureVisitor visitExceptionType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitExceptionType() : SignatureVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.1 org.jetbrains.asm4.signature.SignatureVisitor visitInterface()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitInterface() : SignatureVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.1 org.jetbrains.asm4.signature.SignatureVisitor visitInterfaceBound()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitInterfaceBound() : SignatureVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.1 org.jetbrains.asm4.signature.SignatureVisitor visitParameterType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitParameterType() : SignatureVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.1 org.jetbrains.asm4.signature.SignatureVisitor visitReturnType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitReturnType() : SignatureVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.1 org.jetbrains.asm4.signature.SignatureVisitor visitSuperclass()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitSuperclass() : SignatureVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.1 org.jetbrains.asm4.signature.SignatureVisitor visitTypeArgument(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitTypeArgument(wildcard : Char) : SignatureVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.2 org.jetbrains.asm4.AnnotationVisitor visitAnnotation(java.lang.String, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitAnnotation(desc : String?, visible : Boolean) : AnnotationVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.3 void addClassUsage(org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addClassUsage(type : TypeRepr.AbstractType?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.3 org.jetbrains.asm4.AnnotationVisitor visitAnnotation(java.lang.String, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitAnnotation(desc : String?, visible : Boolean) : AnnotationVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.3 org.jetbrains.asm4.AnnotationVisitor visitAnnotationDefault()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitAnnotationDefault() : AnnotationVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.3 org.jetbrains.asm4.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitParameterAnnotation(parameter : Int, desc : String?, visible : Boolean) : AnnotationVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.3 void visitTypeInsn(int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitTypeInsn(opcode : Int, type : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.AnnotationCrawler AnnotationCrawler(org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler, org.jetbrains.jps.builders.java.dependencyView.TypeRepr.ClassType, org.jetbrains.jps.builders.java.dependencyView.ElemType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AnnotationCrawler(type : TypeRepr.ClassType, target : ElemType?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.AnnotationCrawler AnnotationCrawler(org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler, org.jetbrains.jps.builders.java.dependencyView.TypeRepr.ClassType, org.jetbrains.jps.builders.java.dependencyView.ElemType, org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AnnotationCrawler(x0 : ClassfileAnalyzer.ClassCrawler, x1 : TypeRepr.ClassType, x2 : ElemType?, x3 : ClassfileAnalyzer.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.AnnotationCrawler java.lang.String getMethodDescr(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMethodDescr(value : Any) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.AnnotationCrawler void visit(java.lang.String, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visit(name : String?, value : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.AnnotationCrawler org.jetbrains.asm4.AnnotationVisitor visitAnnotation(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitAnnotation(name : String?, desc : String?) : AnnotationVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.AnnotationCrawler org.jetbrains.asm4.AnnotationVisitor visitArray(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitArray(name : String?) : AnnotationVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.AnnotationRetentionPolicyCrawler org.jetbrains.asm4.AnnotationVisitor visitAnnotation(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitAnnotation(name : String?, desc : String?) : AnnotationVisitor?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.AnnotationRetentionPolicyCrawler org.jetbrains.asm4.AnnotationVisitor visitArray(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitArray(name : String?) : AnnotationVisitor?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.AnnotationTargetCrawler org.jetbrains.asm4.AnnotationVisitor visitAnnotation(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitAnnotation(name : String?, desc : String?) : AnnotationVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler.AnnotationTargetCrawler org.jetbrains.asm4.AnnotationVisitor visitArray(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitArray(name : String?) : AnnotationVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler java.lang.annotation.RetentionPolicy access$002(org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler, java.lang.annotation.RetentionPolicy)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$002(x0 : ClassfileAnalyzer.ClassCrawler, x1 : RetentionPolicy?) : RetentionPolicy?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler java.util.Set access$100(org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : ClassfileAnalyzer.ClassCrawler) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler void access$1000(org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1000(x0 : ClassfileAnalyzer.ClassCrawler, x1 : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler java.util.Set access$300(org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : ClassfileAnalyzer.ClassCrawler) : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler java.util.Set access$800(org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$800(x0 : ClassfileAnalyzer.ClassCrawler) : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler int access$900(org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$900(x0 : ClassfileAnalyzer.ClassCrawler) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler com.intellij.openapi.util.Pair&lt;org.jetbrains.jps.builders.java.dependencyView.ClassRepr,java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage&gt;&gt; getResult()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getResult() : Pair&lt;ClassRepr?, Set&lt;UsageRepr.Usage?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler void processSignature(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processSignature(sig : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler org.jetbrains.asm4.AnnotationVisitor visitAnnotation(java.lang.String, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitAnnotation(desc : String, visible : Boolean) : AnnotationVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler org.jetbrains.asm4.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitField(access : Int, n : String?, desc : String?, signature : String?, value : Any?) : FieldVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitInnerClass(name : String?, outerName : String?, innerName : String?, access : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler org.jetbrains.asm4.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitMethod(access : Int, n : String?, desc : String?, signature : String?, exceptions : Array&lt;out String?&gt;?) : MethodVisitor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer.ClassCrawler void visitOuterClass(java.lang.String, java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitOuterClass(owner : String?, name : String?, desc : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer org.jetbrains.jps.builders.java.dependencyView.DependencyContext access$200(org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : ClassfileAnalyzer) : DependencyContext?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ClassfileAnalyzer com.intellij.openapi.util.Pair&lt;org.jetbrains.jps.builders.java.dependencyView.ClassRepr,java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage&gt;&gt; analyze(int, org.jetbrains.asm4.ClassReader)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun analyze(fileName : Int, cr : ClassReader) : Pair&lt;ClassRepr?, Set&lt;UsageRepr.Usage?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.CollectionFactory java.util.Collection&lt;X&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : MutableCollection&lt;X&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.DependencyContext DependencyContext(java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun DependencyContext(rootDir : File)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.DependencyContext org.jetbrains.jps.builders.java.dependencyView.Logger&lt;java.lang.Integer&gt; getLogger(com.intellij.openapi.diagnostic.Logger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLogger(log : Logger?) : Logger&lt;Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.DependencyContext java.io.File getTableFile(java.io.File, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTableFile(rootDir : File, name : String?) : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.DependencyContext java.lang.String getValue(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue(s : Int) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Difference org.jetbrains.jps.builders.java.dependencyView.Difference.Specifier&lt;T&gt; make(java.util.Set&lt;T&gt;, java.util.Set&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; make(past : Set&lt;T&gt;?, now : Set&lt;T&gt;?) : Difference.Specifier&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.FieldRepr.1 java.lang.Object read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(x0 : DataInput) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.FieldRepr.1 org.jetbrains.jps.builders.java.dependencyView.FieldRepr read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(in : DataInput) : FieldRepr&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.FieldRepr.1 void save(java.io.DataOutput, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(x0 : DataOutput?, x1 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.FieldRepr.1 void save(java.io.DataOutput, org.jetbrains.jps.builders.java.dependencyView.FieldRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput?, value : FieldRepr) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.FieldRepr FieldRepr(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int, int, int, int, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FieldRepr(context : DependencyContext, a : Int, n : Int, d : Int, s : Int, v : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.FieldRepr FieldRepr(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FieldRepr(context : DependencyContext?, in : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.FieldRepr org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage createAssignUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAssignUsage(context : DependencyContext, owner : Int) : UsageRepr.Usage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.FieldRepr org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage createUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createUsage(context : DependencyContext, owner : Int) : UsageRepr.Usage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.FieldRepr boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.FieldRepr com.intellij.util.io.DataExternalizer&lt;org.jetbrains.jps.builders.java.dependencyView.FieldRepr&gt; externalizer(org.jetbrains.jps.builders.java.dependencyView.DependencyContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun externalizer(context : DependencyContext?) : DataExternalizer&lt;FieldRepr?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntMaplet void putAll(org.jetbrains.jps.builders.java.dependencyView.IntIntMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : IntIntMaplet) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntMaplet void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(p0 : DependencyContext, p1 : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntMultiMaplet gnu.trove.TIntHashSet get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Int) : TIntHashSet?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntMultiMaplet void putAll(org.jetbrains.jps.builders.java.dependencyView.IntIntMultiMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : IntIntMultiMaplet) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntMultiMaplet void replace(int, gnu.trove.TIntHashSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(p0 : Int, p1 : TIntHashSet?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntMultiMaplet void replaceAll(org.jetbrains.jps.builders.java.dependencyView.IntIntMultiMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceAll(p0 : IntIntMultiMaplet) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntMultiMaplet void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(p0 : DependencyContext, p1 : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMaplet.1 java.lang.Integer read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(in : DataInput) : Int?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMaplet.1 java.lang.Object read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(x0 : DataInput) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMaplet.1 void save(java.io.DataOutput, java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput, value : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMaplet.1 void save(java.io.DataOutput, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(x0 : DataOutput, x1 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMaplet.2 java.lang.Object createValue(java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createValue(p0 : Int?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMaplet.2 java.lang.Object createValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createValue(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMaplet.4 boolean process(java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(key : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMaplet.4 boolean process(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(x0 : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMaplet com.intellij.util.io.PersistentHashMap access$000(org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : IntIntPersistentMaplet) : PersistentHashMap&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMaplet java.lang.Object access$100()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMaplet void putAll(org.jetbrains.jps.builders.java.dependencyView.IntIntMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(m : IntIntMaplet) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMaplet void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(p0 : DependencyContext, p1 : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMultiMaplet.1 gnu.trove.TIntHashSet createValue(java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createValue(p0 : Int?) : TIntHashSet&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMultiMaplet.1 java.lang.Object createValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createValue(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMultiMaplet.3 void append(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun append(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMultiMaplet.6 boolean process(java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(key : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMultiMaplet.6 boolean process(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(x0 : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMultiMaplet.IntSetExternalizer gnu.trove.TIntHashSet read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(in : DataInput) : TIntHashSet&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMultiMaplet.IntSetExternalizer java.lang.Object read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(x0 : DataInput) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMultiMaplet.IntSetExternalizer void save(java.io.DataOutput, gnu.trove.TIntHashSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput?, value : TIntHashSet) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMultiMaplet.IntSetExternalizer void save(java.io.DataOutput, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(x0 : DataOutput?, x1 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMultiMaplet com.intellij.util.io.PersistentHashMap access$100(org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMultiMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : IntIntPersistentMultiMaplet) : PersistentHashMap&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMultiMaplet gnu.trove.TIntHashSet access$200()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200() : TIntHashSet&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMultiMaplet gnu.trove.TIntHashSet get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Int) : TIntHashSet?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMultiMaplet void putAll(org.jetbrains.jps.builders.java.dependencyView.IntIntMultiMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(m : IntIntMultiMaplet) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMultiMaplet void replace(int, gnu.trove.TIntHashSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(key : Int, value : TIntHashSet?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntPersistentMultiMaplet void replaceAll(org.jetbrains.jps.builders.java.dependencyView.IntIntMultiMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceAll(m : IntIntMultiMaplet) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntTransientMaplet gnu.trove.TIntIntHashMap access$000(org.jetbrains.jps.builders.java.dependencyView.IntIntTransientMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : IntIntTransientMaplet) : TIntIntHashMap&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntTransientMaplet void putAll(org.jetbrains.jps.builders.java.dependencyView.IntIntMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(m : IntIntMaplet) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntTransientMaplet void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(p0 : DependencyContext, p1 : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntTransientMultiMaplet void putAll(org.jetbrains.jps.builders.java.dependencyView.IntIntMultiMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(m : IntIntMultiMaplet) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntTransientMultiMaplet void replace(int, gnu.trove.TIntHashSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(key : Int, value : TIntHashSet?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntIntTransientMultiMaplet void replaceAll(org.jetbrains.jps.builders.java.dependencyView.IntIntMultiMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceAll(m : IntIntMultiMaplet) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectMaplet V get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Int) : V?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectMaplet void putAll(org.jetbrains.jps.builders.java.dependencyView.IntObjectMaplet&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : IntObjectMaplet&lt;V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectMaplet void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(p0 : DependencyContext, p1 : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectMultiMaplet java.util.Collection&lt;V&gt; get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Int) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectMultiMaplet void putAll(org.jetbrains.jps.builders.java.dependencyView.IntObjectMultiMaplet&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : IntObjectMultiMaplet&lt;V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectMultiMaplet void replace(int, java.util.Collection&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(p0 : Int, p1 : Collection&lt;V&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectMultiMaplet void replaceAll(org.jetbrains.jps.builders.java.dependencyView.IntObjectMultiMaplet&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceAll(p0 : IntObjectMultiMaplet&lt;V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectMultiMaplet void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(p0 : DependencyContext, p1 : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMaplet.1 java.lang.Object createValue(java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createValue(p0 : Int?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMaplet.1 java.lang.Object createValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createValue(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMaplet.3 boolean process(java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(key : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMaplet.3 boolean process(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(x0 : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMaplet com.intellij.util.io.PersistentHashMap access$000(org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : IntObjectPersistentMaplet) : PersistentHashMap&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMaplet java.lang.Object access$100()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMaplet V get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Int) : V?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMaplet void putAll(org.jetbrains.jps.builders.java.dependencyView.IntObjectMaplet&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(m : IntObjectMaplet&lt;V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMaplet void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(p0 : DependencyContext, p1 : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMultiMaplet.1 java.util.Collection createValue(java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createValue(p0 : Int?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMultiMaplet.1 java.lang.Object createValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createValue(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMultiMaplet.5 boolean process(java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(key : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMultiMaplet.5 boolean process(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(x0 : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMultiMaplet.CollectionDataExternalizer java.lang.Object read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(x0 : DataInput) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMultiMaplet.CollectionDataExternalizer java.util.Collection&lt;V&gt; read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(in : DataInput) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMultiMaplet.CollectionDataExternalizer void save(java.io.DataOutput, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(x0 : DataOutput?, x1 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMultiMaplet.CollectionDataExternalizer void save(java.io.DataOutput, java.util.Collection&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput?, value : Collection&lt;V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMultiMaplet com.intellij.util.io.PersistentHashMap access$000(org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMultiMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : IntObjectPersistentMultiMaplet) : PersistentHashMap&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMultiMaplet com.intellij.util.io.DataExternalizer access$200(org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMultiMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : IntObjectPersistentMultiMaplet) : DataExternalizer?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMultiMaplet java.util.Collection&lt;V&gt; get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Int) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMultiMaplet void putAll(org.jetbrains.jps.builders.java.dependencyView.IntObjectMultiMaplet&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(m : IntObjectMultiMaplet&lt;V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMultiMaplet void replace(int, java.util.Collection&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(key : Int, value : Collection&lt;V&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectPersistentMultiMaplet void replaceAll(org.jetbrains.jps.builders.java.dependencyView.IntObjectMultiMaplet&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceAll(m : IntObjectMultiMaplet&lt;V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectTransientMaplet gnu.trove.TIntObjectHashMap access$000(org.jetbrains.jps.builders.java.dependencyView.IntObjectTransientMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : IntObjectTransientMaplet) : TIntObjectHashMap&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectTransientMaplet void putAll(org.jetbrains.jps.builders.java.dependencyView.IntObjectMaplet&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(m : IntObjectMaplet&lt;V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectTransientMaplet void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(p0 : DependencyContext, p1 : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectTransientMultiMaplet void putAll(org.jetbrains.jps.builders.java.dependencyView.IntObjectMultiMaplet&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(m : IntObjectMultiMaplet&lt;V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectTransientMultiMaplet void replace(int, java.util.Collection&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(key : Int, value : Collection&lt;V&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.IntObjectTransientMultiMaplet void replaceAll(org.jetbrains.jps.builders.java.dependencyView.IntObjectMultiMaplet&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceAll(m : IntObjectMultiMaplet&lt;V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.10 void associate(java.lang.String, java.lang.String, org.jetbrains.asm4.ClassReader)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun associate(classFileName : String?, sourceFileName : String?, cr : ClassReader) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.10 void registerImports(java.lang.String, java.util.Collection&lt;java.lang.String&gt;, java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun registerImports(className : String, imports : Collection&lt;String?&gt;, staticImports : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.1 java.util.Collection create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.1 java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.ClassRepr&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : MutableSet&lt;ClassRepr?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential.DelayedWorks.Triple Triple(int, org.jetbrains.jps.builders.java.dependencyView.FieldRepr, java.util.concurrent.Future&lt;org.jetbrains.jps.builders.java.dependencyView.Callbacks.ConstantAffection&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Triple(p1 : Int, p2 : FieldRepr?, p3 : Future&lt;Callbacks.ConstantAffection?&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential.DelayedWorks boolean doWork(java.util.Collection&lt;java.io.File&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doWork(p0 : MutableCollection&lt;File?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential Differential(org.jetbrains.jps.builders.java.dependencyView.Mappings, org.jetbrains.jps.builders.java.dependencyView.Mappings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Differential(delta : Mappings)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential Differential(org.jetbrains.jps.builders.java.dependencyView.Mappings, java.util.Collection&lt;java.lang.String&gt;, java.util.Collection&lt;java.io.File&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Differential(delta : Mappings, removed : Collection&lt;String?&gt;?, filesToCompile : Collection&lt;File?&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential Differential(org.jetbrains.jps.builders.java.dependencyView.Mappings, java.util.Collection&lt;java.lang.String&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, org.jetbrains.jps.builders.java.dependencyView.Mappings.DependentFilesFilter, org.jetbrains.jps.builders.java.dependencyView.Callbacks.ConstantAffectionResolver)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Differential(p1 : Mappings, p2 : Collection&lt;String?&gt;?, p3 : Collection&lt;File?&gt;?, p4 : Collection&lt;File?&gt;?, p5 : Collection&lt;File?&gt;?, p6 : Mappings.DependentFilesFilter?, p7 : Callbacks.ConstantAffectionResolver?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential Differential(org.jetbrains.jps.builders.java.dependencyView.Mappings, org.jetbrains.jps.builders.java.dependencyView.Mappings, java.util.Collection, java.util.Collection, java.util.Collection, java.util.Collection, org.jetbrains.jps.builders.java.dependencyView.Mappings.DependentFilesFilter, org.jetbrains.jps.builders.java.dependencyView.Callbacks.ConstantAffectionResolver, org.jetbrains.jps.builders.java.dependencyView.Mappings.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Differential(x0 : Mappings?, x1 : Mappings, x2 : Collection?, x3 : Collection?, x4 : Collection?, x5 : Collection?, x6 : Mappings.DependentFilesFilter?, x7 : Callbacks.ConstantAffectionResolver?, x8 : Mappings.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential Differential(org.jetbrains.jps.builders.java.dependencyView.Mappings, org.jetbrains.jps.builders.java.dependencyView.Mappings, java.util.Collection, java.util.Collection, org.jetbrains.jps.builders.java.dependencyView.Mappings.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Differential(x0 : Mappings?, x1 : Mappings, x2 : Collection?, x3 : Collection?, x4 : Mappings.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential Differential(org.jetbrains.jps.builders.java.dependencyView.Mappings, org.jetbrains.jps.builders.java.dependencyView.Mappings, org.jetbrains.jps.builders.java.dependencyView.Mappings.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Differential(x0 : Mappings?, x1 : Mappings, x2 : Mappings.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential void calculateAffectedFiles(org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential.DiffState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun calculateAffectedFiles(state : Mappings.Differential.DiffState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential void processAddedClasses(org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential.DiffState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processAddedClasses(state : Mappings.Differential.DiffState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential boolean processAddedFields(org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential.DiffState, org.jetbrains.jps.builders.java.dependencyView.ClassRepr.Diff, org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processAddedFields(state : Mappings.Differential.DiffState?, diff : ClassRepr.Diff, classRepr : ClassRepr?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential void processAddedMethods(org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential.DiffState, org.jetbrains.jps.builders.java.dependencyView.ClassRepr.Diff, org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processAddedMethods(state : Mappings.Differential.DiffState?, diff : ClassRepr.Diff, it : ClassRepr?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential boolean processChangedClasses(org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential.DiffState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processChangedClasses(state : Mappings.Differential.DiffState) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential boolean processChangedFields(org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential.DiffState, org.jetbrains.jps.builders.java.dependencyView.ClassRepr.Diff, org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processChangedFields(state : Mappings.Differential.DiffState?, diff : ClassRepr.Diff, it : ClassRepr?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential void processChangedMethods(org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential.DiffState, org.jetbrains.jps.builders.java.dependencyView.ClassRepr.Diff, org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processChangedMethods(state : Mappings.Differential.DiffState?, diff : ClassRepr.Diff, it : ClassRepr?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential void processRemovedClases(org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential.DiffState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processRemovedClases(state : Mappings.Differential.DiffState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential boolean processRemovedFields(org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential.DiffState, org.jetbrains.jps.builders.java.dependencyView.ClassRepr.Diff, org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processRemovedFields(state : Mappings.Differential.DiffState?, diff : ClassRepr.Diff, it : ClassRepr?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential void processRemovedMethods(org.jetbrains.jps.builders.java.dependencyView.Mappings.Differential.DiffState, org.jetbrains.jps.builders.java.dependencyView.ClassRepr.Diff, org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processRemovedMethods(state : Mappings.Differential.DiffState?, diff : ClassRepr.Diff, it : ClassRepr?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.MemberComparator boolean isSame(org.jetbrains.jps.builders.java.dependencyView.ProtoMember)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isSame(p0 : ProtoMember) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util.2 boolean isSame(org.jetbrains.jps.builders.java.dependencyView.ProtoMember)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isSame(member : ProtoMember) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util.3 boolean isSame(org.jetbrains.jps.builders.java.dependencyView.ProtoMember)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isSame(member : ProtoMember) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util.4 boolean satisfy(org.jetbrains.jps.builders.java.dependencyView.MethodRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun satisfy(m : MethodRepr) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util.InheritanceConstraint InheritanceConstraint(org.jetbrains.jps.builders.java.dependencyView.Mappings.Util, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun InheritanceConstraint(rootClass : Int)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util Util(org.jetbrains.jps.builders.java.dependencyView.Mappings, org.jetbrains.jps.builders.java.dependencyView.Mappings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Util(p0 : Mappings?, p1 : Mappings)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util Util(org.jetbrains.jps.builders.java.dependencyView.Mappings, org.jetbrains.jps.builders.java.dependencyView.Mappings, org.jetbrains.jps.builders.java.dependencyView.Mappings.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Util(x0 : Mappings?, x1 : Mappings, x2 : Mappings.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util java.lang.Boolean access$1400(org.jetbrains.jps.builders.java.dependencyView.Mappings.Util, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1400(x0 : Mappings.Util, x1 : Int, x2 : Int) : Boolean?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util boolean access$2500(org.jetbrains.jps.builders.java.dependencyView.Mappings.Util, org.jetbrains.jps.builders.java.dependencyView.ClassRepr, org.jetbrains.jps.builders.java.dependencyView.MethodRepr.Predicate)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2500(x0 : Mappings.Util, x1 : ClassRepr, x2 : MethodRepr.Predicate?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util java.util.Collection access$2600(org.jetbrains.jps.builders.java.dependencyView.Mappings.Util, org.jetbrains.jps.builders.java.dependencyView.MethodRepr, org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2600(x0 : Mappings.Util, x1 : MethodRepr?, x2 : ClassRepr) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util java.util.Collection access$2900(org.jetbrains.jps.builders.java.dependencyView.Mappings.Util, org.jetbrains.jps.builders.java.dependencyView.MethodRepr, org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2900(x0 : Mappings.Util, x1 : MethodRepr?, x2 : ClassRepr) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util void access$500(org.jetbrains.jps.builders.java.dependencyView.Mappings.Util, org.jetbrains.jps.builders.java.dependencyView.MethodRepr, org.jetbrains.jps.builders.java.dependencyView.ClassRepr, org.jetbrains.jps.builders.java.dependencyView.MethodRepr.Predicate, java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$500(x0 : Mappings.Util, x1 : MethodRepr?, x2 : ClassRepr, x3 : MethodRepr.Predicate?, x4 : Collection?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util void addOverriddenFields(org.jetbrains.jps.builders.java.dependencyView.FieldRepr, org.jetbrains.jps.builders.java.dependencyView.ClassRepr, java.util.Collection&lt;com.intellij.openapi.util.Pair&lt;org.jetbrains.jps.builders.java.dependencyView.FieldRepr,org.jetbrains.jps.builders.java.dependencyView.ClassRepr&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addOverriddenFields(f : FieldRepr?, fromClass : ClassRepr, container : MutableCollection&lt;Pair&lt;FieldRepr?, ClassRepr?&gt;?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util void addOverridenMethods(org.jetbrains.jps.builders.java.dependencyView.ClassRepr, org.jetbrains.jps.builders.java.dependencyView.MethodRepr.Predicate, java.util.Collection&lt;com.intellij.openapi.util.Pair&lt;org.jetbrains.jps.builders.java.dependencyView.MethodRepr,org.jetbrains.jps.builders.java.dependencyView.ClassRepr&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addOverridenMethods(fromClass : ClassRepr, predicate : MethodRepr.Predicate?, container : MutableCollection&lt;Pair&lt;MethodRepr?, ClassRepr?&gt;?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util void addOverridingMethods(org.jetbrains.jps.builders.java.dependencyView.MethodRepr, org.jetbrains.jps.builders.java.dependencyView.ClassRepr, org.jetbrains.jps.builders.java.dependencyView.MethodRepr.Predicate, java.util.Collection&lt;com.intellij.openapi.util.Pair&lt;org.jetbrains.jps.builders.java.dependencyView.MethodRepr,org.jetbrains.jps.builders.java.dependencyView.ClassRepr&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addOverridingMethods(m : MethodRepr?, fromClass : ClassRepr, predicate : MethodRepr.Predicate?, container : Collection&lt;Pair&lt;MethodRepr?, ClassRepr?&gt;?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util void affectFieldUsages(org.jetbrains.jps.builders.java.dependencyView.FieldRepr, gnu.trove.TIntHashSet, org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage, java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage&gt;, gnu.trove.TIntHashSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun affectFieldUsages(field : FieldRepr?, classes : TIntHashSet, rootUsage : UsageRepr.Usage?, affectedUsages : MutableSet&lt;UsageRepr.Usage?&gt;, dependents : TIntHashSet?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util void affectMethodUsages(org.jetbrains.jps.builders.java.dependencyView.MethodRepr, gnu.trove.TIntHashSet, org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage, java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage&gt;, gnu.trove.TIntHashSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun affectMethodUsages(method : MethodRepr?, subclasses : TIntHashSet?, rootUsage : UsageRepr.Usage?, affectedUsages : MutableSet&lt;UsageRepr.Usage?&gt;, dependents : TIntHashSet?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util void affectSubclasses(int, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage&gt;, gnu.trove.TIntHashSet, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun affectSubclasses(className : Int, affectedFiles : MutableCollection&lt;File?&gt;?, affectedUsages : MutableCollection&lt;UsageRepr.Usage?&gt;?, dependants : TIntHashSet?, usages : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util void appendDependents(org.jetbrains.jps.builders.java.dependencyView.ClassRepr, gnu.trove.TIntHashSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendDependents(c : ClassRepr, result : TIntHashSet?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util void collectSupersRecursively(int, gnu.trove.TIntHashSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun collectSupersRecursively(className : Int, container : TIntHashSet) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util java.util.Collection&lt;com.intellij.openapi.util.Pair&lt;org.jetbrains.jps.builders.java.dependencyView.MethodRepr,org.jetbrains.jps.builders.java.dependencyView.ClassRepr&gt;&gt; findAllMethodsBySpecificity(org.jetbrains.jps.builders.java.dependencyView.MethodRepr, org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findAllMethodsBySpecificity(m : MethodRepr?, c : ClassRepr) : MutableCollection&lt;Pair&lt;MethodRepr?, ClassRepr?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util java.util.Collection&lt;com.intellij.openapi.util.Pair&lt;org.jetbrains.jps.builders.java.dependencyView.MethodRepr,org.jetbrains.jps.builders.java.dependencyView.ClassRepr&gt;&gt; findOverriddenMethods(org.jetbrains.jps.builders.java.dependencyView.MethodRepr, org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findOverriddenMethods(m : MethodRepr?, c : ClassRepr) : MutableCollection&lt;Pair&lt;MethodRepr?, ClassRepr?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util boolean hasOverriddenFields(org.jetbrains.jps.builders.java.dependencyView.FieldRepr, org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hasOverriddenFields(f : FieldRepr?, fromClass : ClassRepr) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util boolean hasOverriddenMethods(org.jetbrains.jps.builders.java.dependencyView.ClassRepr, org.jetbrains.jps.builders.java.dependencyView.MethodRepr.Predicate)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hasOverriddenMethods(fromClass : ClassRepr, predicate : MethodRepr.Predicate?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util java.lang.Boolean isInheritorOf(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isInheritorOf(p0 : Int, p1 : Int) : Boolean?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util java.lang.Boolean isSubtypeOf(org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType, org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isSubtypeOf(who : TypeRepr.AbstractType, whom : TypeRepr.AbstractType?) : Boolean?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util org.jetbrains.jps.builders.java.dependencyView.MethodRepr.Predicate lessSpecific(org.jetbrains.jps.builders.java.dependencyView.MethodRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lessSpecific(than : MethodRepr?) : MethodRepr.Predicate&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util gnu.trove.TIntHashSet propagateFieldAccess(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun propagateFieldAccess(name : Int, className : Int) : TIntHashSet&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util gnu.trove.TIntHashSet propagateMemberAccess(boolean, org.jetbrains.jps.builders.java.dependencyView.Mappings.MemberComparator, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun propagateMemberAccess(isField : Boolean, comparator : Mappings.MemberComparator?, className : Int) : TIntHashSet&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util gnu.trove.TIntHashSet propagateMethodAccess(org.jetbrains.jps.builders.java.dependencyView.MethodRepr, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun propagateMethodAccess(m : MethodRepr?, className : Int) : TIntHashSet&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings.Util org.jetbrains.jps.builders.java.dependencyView.ClassRepr reprByName(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reprByName(name : Int) : ClassRepr?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings Mappings(org.jetbrains.jps.builders.java.dependencyView.Mappings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Mappings(base : Mappings)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings org.jetbrains.jps.builders.java.dependencyView.IntIntMultiMaplet access$000(org.jetbrains.jps.builders.java.dependencyView.Mappings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : Mappings) : IntIntMultiMaplet?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings boolean access$100(gnu.trove.TIntHashSet, gnu.trove.TIntHashSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : TIntHashSet?, x1 : TIntHashSet) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void access$1000(org.jetbrains.jps.builders.java.dependencyView.Mappings, java.lang.String, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1000(x0 : Mappings, x1 : String?, x2 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings org.jetbrains.jps.builders.java.dependencyView.IntObjectMaplet access$1100(org.jetbrains.jps.builders.java.dependencyView.Mappings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1100(x0 : Mappings) : IntObjectMaplet?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void access$1300(org.jetbrains.jps.builders.java.dependencyView.Mappings, java.lang.String, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1300(x0 : Mappings, x1 : String?, x2 : File) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings gnu.trove.TIntHashSet access$1500(org.jetbrains.jps.builders.java.dependencyView.Mappings, int, gnu.trove.TIntHashSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1500(x0 : Mappings, x1 : Int, x2 : TIntHashSet) : TIntHashSet&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings boolean access$1800(org.jetbrains.jps.builders.java.dependencyView.Mappings, int, org.jetbrains.jps.builders.java.dependencyView.Proto, java.util.Collection, org.jetbrains.jps.builders.java.dependencyView.Mappings.DependentFilesFilter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1800(x0 : Mappings, x1 : Int, x2 : Proto, x3 : Collection?, x4 : Mappings.DependentFilesFilter?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings boolean access$1900(org.jetbrains.jps.builders.java.dependencyView.Mappings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1900(x0 : Mappings) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings boolean access$1902(org.jetbrains.jps.builders.java.dependencyView.Mappings, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1902(x0 : Mappings, x1 : Boolean) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings org.jetbrains.jps.builders.java.dependencyView.IntIntMultiMaplet access$200(org.jetbrains.jps.builders.java.dependencyView.Mappings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : Mappings) : IntIntMultiMaplet?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings java.util.Collection access$2000(org.jetbrains.jps.builders.java.dependencyView.Mappings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2000(x0 : Mappings) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings java.util.Collection access$2002(org.jetbrains.jps.builders.java.dependencyView.Mappings, java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2002(x0 : Mappings, x1 : Collection?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void access$2300(org.jetbrains.jps.builders.java.dependencyView.Mappings, java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2300(x0 : Mappings, x1 : Collection?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings org.jetbrains.jps.builders.java.dependencyView.ObjectObjectMultiMaplet access$2400(org.jetbrains.jps.builders.java.dependencyView.Mappings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2400(x0 : Mappings) : ObjectObjectMultiMaplet?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings gnu.trove.TIntHashSet access$2700(org.jetbrains.jps.builders.java.dependencyView.Mappings, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2700(x0 : Mappings, x1 : Int) : TIntHashSet&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings boolean access$2800(org.jetbrains.jps.builders.java.dependencyView.Mappings, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2800(x0 : Mappings, x1 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings int access$300(org.jetbrains.jps.builders.java.dependencyView.Mappings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : Mappings) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void access$3000(org.jetbrains.jps.builders.java.dependencyView.Mappings, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3000(x0 : Mappings, x1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void access$3100(org.jetbrains.jps.builders.java.dependencyView.Mappings, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3100(x0 : Mappings, x1 : Int, x2 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void access$3200(org.jetbrains.jps.builders.java.dependencyView.Mappings, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3200(x0 : Mappings, x1 : Int, x2 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void access$3300(org.jetbrains.jps.builders.java.dependencyView.Mappings, java.lang.String, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3300(x0 : Mappings, x1 : String?, x2 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings int access$3400(org.jetbrains.jps.builders.java.dependencyView.Mappings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3400(x0 : Mappings) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void access$3500(org.jetbrains.jps.builders.java.dependencyView.Mappings, org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3500(x0 : Mappings, x1 : ClassRepr) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings gnu.trove.THashSet access$3600(org.jetbrains.jps.builders.java.dependencyView.Mappings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3600(x0 : Mappings) : THashSet?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings java.lang.Object access$3700(org.jetbrains.jps.builders.java.dependencyView.Mappings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3700(x0 : Mappings) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings boolean access$3802(org.jetbrains.jps.builders.java.dependencyView.Mappings, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3802(x0 : Mappings, x1 : Boolean) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings boolean access$400(org.jetbrains.jps.builders.java.dependencyView.ClassRepr, org.jetbrains.jps.builders.java.dependencyView.ProtoMember, org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : ClassRepr?, x1 : ProtoMember, x2 : ClassRepr?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void access$4300(org.jetbrains.jps.builders.java.dependencyView.Mappings, int, java.util.Set, org.jetbrains.jps.builders.java.dependencyView.IntIntMultiMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4300(x0 : Mappings, x1 : Int, x2 : Set?, x3 : IntIntMultiMaplet?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings java.util.concurrent.LinkedBlockingQueue access$4400(org.jetbrains.jps.builders.java.dependencyView.Mappings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4400(x0 : Mappings) : LinkedBlockingQueue&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings org.jetbrains.jps.builders.java.dependencyView.MethodRepr access$600()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$600() : MethodRepr?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings org.jetbrains.jps.builders.java.dependencyView.ClassRepr access$700()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$700() : ClassRepr?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings org.jetbrains.jps.builders.java.dependencyView.ClassRepr access$800(org.jetbrains.jps.builders.java.dependencyView.Mappings, java.io.File, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$800(x0 : Mappings, x1 : File, x2 : Int) : ClassRepr?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings org.jetbrains.jps.builders.java.dependencyView.DependencyContext access$900(org.jetbrains.jps.builders.java.dependencyView.Mappings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$900(x0 : Mappings) : DependencyContext?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings boolean addAll(gnu.trove.TIntHashSet, gnu.trove.TIntHashSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(whereToAdd : TIntHashSet?, whatToAdd : TIntHashSet) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void addAllKeys(gnu.trove.TIntHashSet, org.jetbrains.jps.builders.java.dependencyView.IntIntMultiMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllKeys(whereToAdd : TIntHashSet?, maplet : IntIntMultiMaplet) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings gnu.trove.TIntHashSet addAllSubclasses(int, gnu.trove.TIntHashSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllSubclasses(root : Int, acc : TIntHashSet) : TIntHashSet&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void addDeletedClass(org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addDeletedClass(cr : ClassRepr) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void affectAll(int, java.util.Collection&lt;java.io.File&gt;, org.jetbrains.jps.builders.java.dependencyView.Mappings.DependentFilesFilter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun affectAll(className : Int, affectedFiles : Collection&lt;File?&gt;?, filter : Mappings.DependentFilesFilter?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void cleanupBackDependency(int, java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage&gt;, org.jetbrains.jps.builders.java.dependencyView.IntIntMultiMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cleanupBackDependency(p0 : Int, p1 : Set&lt;UsageRepr.Usage?&gt;?, p2 : IntIntMultiMaplet?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void cleanupRemovedClass(org.jetbrains.jps.builders.java.dependencyView.Mappings, org.jetbrains.jps.builders.java.dependencyView.ClassRepr, java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage&gt;, org.jetbrains.jps.builders.java.dependencyView.IntIntMultiMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cleanupRemovedClass(p0 : Mappings?, p1 : ClassRepr, p2 : Set&lt;UsageRepr.Usage?&gt;?, p3 : IntIntMultiMaplet?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void compensateRemovedContent(java.util.Collection&lt;java.io.File&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compensateRemovedContent(compiled : Collection&lt;File?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings org.jetbrains.jps.builders.java.dependencyView.Mappings createDelta()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createDelta() : Mappings&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void debug(java.lang.String, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun debug(comment : String?, f : File) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings boolean differentiateOnIncrementalMake(org.jetbrains.jps.builders.java.dependencyView.Mappings, java.util.Collection&lt;java.lang.String&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, org.jetbrains.jps.builders.java.dependencyView.Mappings.DependentFilesFilter, org.jetbrains.jps.builders.java.dependencyView.Callbacks.ConstantAffectionResolver)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun differentiateOnIncrementalMake(delta : Mappings, removed : Collection&lt;String?&gt;?, filesToCompile : Collection&lt;File?&gt;?, compiledFiles : Collection&lt;File?&gt;?, affectedFiles : Collection&lt;File?&gt;?, filter : Mappings.DependentFilesFilter?, constantSearch : Callbacks.ConstantAffectionResolver?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void differentiateOnNonIncrementalMake(org.jetbrains.jps.builders.java.dependencyView.Mappings, java.util.Collection&lt;java.lang.String&gt;, java.util.Collection&lt;java.io.File&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun differentiateOnNonIncrementalMake(delta : Mappings, removed : Collection&lt;String?&gt;?, filesToCompile : Collection&lt;File?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void differentiateOnRebuild(org.jetbrains.jps.builders.java.dependencyView.Mappings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun differentiateOnRebuild(delta : Mappings) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings gnu.trove.TIntHashSet getAllSubclasses(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAllSubclasses(p0 : Int) : TIntHashSet&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings org.jetbrains.jps.builders.java.dependencyView.Callbacks.Backend getCallback()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCallback() : Callbacks.Backend&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings gnu.trove.TIntHashSet getChangedClasses()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getChangedClasses() : TIntHashSet?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings gnu.trove.THashSet&lt;java.io.File&gt; getChangedFiles()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getChangedFiles() : THashSet&lt;File?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.ClassRepr&gt; getClasses(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getClasses(p0 : String?) : MutableSet&lt;ClassRepr?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.ClassRepr&gt; getDeletedClasses()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDeletedClasses() : MutableSet&lt;ClassRepr?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings org.jetbrains.jps.builders.java.dependencyView.ClassRepr getReprByName(java.io.File, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getReprByName(p0 : File?, p1 : Int) : ClassRepr?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings boolean incrementalDecision(int, org.jetbrains.jps.builders.java.dependencyView.Proto, java.util.Collection&lt;java.io.File&gt;, org.jetbrains.jps.builders.java.dependencyView.Mappings.DependentFilesFilter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun incrementalDecision(p0 : Int, p1 : Proto, p2 : Collection&lt;File?&gt;?, p3 : Mappings.DependentFilesFilter?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings void integrate(org.jetbrains.jps.builders.java.dependencyView.Mappings)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun integrate(delta : Mappings) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Mappings boolean isVisibleIn(org.jetbrains.jps.builders.java.dependencyView.ClassRepr, org.jetbrains.jps.builders.java.dependencyView.ProtoMember, org.jetbrains.jps.builders.java.dependencyView.ClassRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isVisibleIn(c : ClassRepr?, m : ProtoMember, scope : ClassRepr?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr.2 java.lang.Object read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(x0 : DataInput) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr.2 org.jetbrains.jps.builders.java.dependencyView.MethodRepr read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(in : DataInput) : MethodRepr&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr.2 void save(java.io.DataOutput, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(x0 : DataOutput, x1 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr.2 void save(java.io.DataOutput, org.jetbrains.jps.builders.java.dependencyView.MethodRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput, value : MethodRepr) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr.3 boolean satisfy(org.jetbrains.jps.builders.java.dependencyView.MethodRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun satisfy(p0 : MethodRepr) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr.4 int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr.4 int compare(org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType, org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(o1 : TypeRepr.AbstractType, o2 : TypeRepr.AbstractType) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr.Predicate boolean satisfy(org.jetbrains.jps.builders.java.dependencyView.MethodRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun satisfy(p0 : MethodRepr) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr MethodRepr(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int, int, int, java.lang.String, java.lang.String[], java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MethodRepr(context : DependencyContext, a : Int, n : Int, s : Int, d : String?, e : Array&lt;out String?&gt;?, value : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr MethodRepr(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MethodRepr(context : DependencyContext?, in : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage createMetaUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createMetaUsage(context : DependencyContext, owner : Int) : UsageRepr.Usage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage createUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createUsage(context : DependencyContext, owner : Int) : UsageRepr.Usage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr org.jetbrains.jps.builders.java.dependencyView.Difference difference(org.jetbrains.jps.builders.java.dependencyView.Proto)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun difference(past : Proto) : Difference&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr org.jetbrains.jps.builders.java.dependencyView.MethodRepr.Predicate equalByJavaRules(org.jetbrains.jps.builders.java.dependencyView.MethodRepr)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equalByJavaRules(me : MethodRepr?) : MethodRepr.Predicate&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr com.intellij.util.io.DataExternalizer&lt;org.jetbrains.jps.builders.java.dependencyView.MethodRepr&gt; externalizer(org.jetbrains.jps.builders.java.dependencyView.DependencyContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun externalizer(context : DependencyContext?) : DataExternalizer&lt;MethodRepr?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.MethodRepr void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(context : DependencyContext, stream : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectMultiMaplet.1 boolean execute(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun execute(x0 : Any, x1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectMultiMaplet.1 boolean execute(K, java.util.Collection&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun execute(a : K, b : Collection&lt;V&gt;?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectMultiMaplet.2 int compare(com.intellij.openapi.util.Pair&lt;K,java.lang.String&gt;, com.intellij.openapi.util.Pair&lt;K,java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(o1 : Pair&lt;K, String?&gt;, o2 : Pair&lt;K, String?&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectMultiMaplet.2 int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectMultiMaplet java.util.Collection&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectMultiMaplet void putAll(org.jetbrains.jps.builders.java.dependencyView.ObjectObjectMultiMaplet&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : ObjectObjectMultiMaplet&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectMultiMaplet void remove(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : K) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectMultiMaplet void replace(K, java.util.Collection&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(p0 : K?, p1 : Collection&lt;V&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectMultiMaplet void replaceAll(org.jetbrains.jps.builders.java.dependencyView.ObjectObjectMultiMaplet&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceAll(p0 : ObjectObjectMultiMaplet&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectMultiMaplet void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(p0 : DependencyContext, p1 : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectPersistentMultiMaplet.1 java.lang.Object createValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createValue(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectPersistentMultiMaplet.1 java.util.Collection createValue(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createValue(p0 : K?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectPersistentMultiMaplet.CollectionDataExternalizer java.lang.Object read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(x0 : DataInput) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectPersistentMultiMaplet.CollectionDataExternalizer java.util.Collection&lt;V&gt; read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(in : DataInput) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectPersistentMultiMaplet.CollectionDataExternalizer void save(java.io.DataOutput, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(x0 : DataOutput?, x1 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectPersistentMultiMaplet.CollectionDataExternalizer void save(java.io.DataOutput, java.util.Collection&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput?, value : Collection&lt;V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectPersistentMultiMaplet com.intellij.util.io.PersistentHashMap access$000(org.jetbrains.jps.builders.java.dependencyView.ObjectObjectPersistentMultiMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : ObjectObjectPersistentMultiMaplet) : PersistentHashMap&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectPersistentMultiMaplet com.intellij.util.io.DataExternalizer access$200(org.jetbrains.jps.builders.java.dependencyView.ObjectObjectPersistentMultiMaplet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : ObjectObjectPersistentMultiMaplet) : DataExternalizer?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectPersistentMultiMaplet java.util.Collection&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectPersistentMultiMaplet void putAll(org.jetbrains.jps.builders.java.dependencyView.ObjectObjectMultiMaplet&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(m : ObjectObjectMultiMaplet&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectPersistentMultiMaplet void remove(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : K) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectPersistentMultiMaplet void replace(K, java.util.Collection&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(key : K?, value : Collection&lt;V&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectPersistentMultiMaplet void replaceAll(org.jetbrains.jps.builders.java.dependencyView.ObjectObjectMultiMaplet&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceAll(m : ObjectObjectMultiMaplet&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectPersistentMultiMaplet void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(p0 : DependencyContext, p1 : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectTransientMultiMaplet void putAll(org.jetbrains.jps.builders.java.dependencyView.ObjectObjectMultiMaplet&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(m : ObjectObjectMultiMaplet&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectTransientMultiMaplet void remove(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : K) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectTransientMultiMaplet void replace(K, java.util.Collection&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(key : K?, value : Collection&lt;V&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectTransientMultiMaplet void replaceAll(org.jetbrains.jps.builders.java.dependencyView.ObjectObjectMultiMaplet&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceAll(m : ObjectObjectMultiMaplet&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ObjectObjectTransientMultiMaplet void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(p0 : DependencyContext, p1 : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.OrderProvider.Entry Entry(org.jetbrains.jps.builders.java.dependencyView.OrderProvider, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Entry(anInt : Int)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.OrderProvider.Entry Entry(org.jetbrains.jps.builders.java.dependencyView.OrderProvider, int, org.jetbrains.jps.builders.java.dependencyView.OrderProvider.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Entry(x0 : OrderProvider, x1 : Int, x2 : OrderProvider.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.OrderProvider.Entry int compareTo(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compareTo(x0 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.OrderProvider.Entry int compareTo(org.jetbrains.jps.builders.java.dependencyView.OrderProvider.Entry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compareTo(o : OrderProvider.Entry) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.OrderProvider org.jetbrains.jps.builders.java.dependencyView.DependencyContext access$000(org.jetbrains.jps.builders.java.dependencyView.OrderProvider)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : OrderProvider) : DependencyContext?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.OrderProvider int[] get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : IntArray&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Proto Proto(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Proto(in : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Proto org.jetbrains.jps.builders.java.dependencyView.Difference difference(org.jetbrains.jps.builders.java.dependencyView.Proto)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun difference(past : Proto) : Difference&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Proto void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Proto void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(context : DependencyContext, stream : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ProtoMember ProtoMember(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ProtoMember(context : DependencyContext?, in : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ProtoMember org.jetbrains.jps.builders.java.dependencyView.Difference difference(org.jetbrains.jps.builders.java.dependencyView.Proto)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun difference(past : Proto) : Difference&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ProtoMember java.lang.Object loadTyped(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun loadTyped(in : DataInput) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ProtoMember void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.ProtoMember void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(context : DependencyContext, stream : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW.2.1 void write(java.io.BufferedWriter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun write(w : BufferedWriter) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW.2 org.jetbrains.jps.builders.java.dependencyView.RW.Writable convert(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun convert(x0 : Any?) : RW.Writable&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW.2 org.jetbrains.jps.builders.java.dependencyView.RW.Writable convert(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun convert(s : String?) : RW.Writable&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW.3 java.lang.Object read(java.io.BufferedReader)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(x0 : BufferedReader) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW.3 java.lang.String read(java.io.BufferedReader)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(r : BufferedReader) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW.Reader T read(java.io.BufferedReader)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(p0 : BufferedReader) : T?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW.Savable void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(p0 : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW.ToWritable org.jetbrains.jps.builders.java.dependencyView.RW.Writable convert(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun convert(p0 : T?) : RW.Writable&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW.Writable void write(java.io.BufferedWriter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun write(p0 : BufferedWriter) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW java.lang.String lookString(java.io.BufferedReader)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lookString(r : BufferedReader) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW X[] read(com.intellij.util.io.DataExternalizer&lt;X&gt;, java.io.DataInput, X[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;X&gt; read(e : DataExternalizer&lt;X&gt;?, in : DataInput?, result : Array&lt;out X&gt;) : Array&lt;out X&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW java.util.Collection&lt;X&gt; read(com.intellij.util.io.DataExternalizer&lt;X&gt;, java.util.Collection&lt;X&gt;, java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;X&gt; read(e : DataExternalizer&lt;X&gt;?, acc : MutableCollection&lt;X&gt;?, in : DataInput) : MutableCollection&lt;X&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW gnu.trove.TIntHashSet read(gnu.trove.TIntHashSet, java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(acc : TIntHashSet?, in : DataInput) : TIntHashSet?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW int readInt(java.io.BufferedReader)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readInt(r : BufferedReader) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW long readLong(java.io.BufferedReader)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readLong(r : BufferedReader) : Long&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW java.util.Collection&lt;T&gt; readMany(java.io.BufferedReader, org.jetbrains.jps.builders.java.dependencyView.RW.Reader&lt;T&gt;, java.util.Collection&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; readMany(r : BufferedReader, c : RW.Reader&lt;T&gt;?, acc : MutableCollection&lt;T&gt;?) : MutableCollection&lt;T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW java.lang.String readString(java.io.BufferedReader)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readString(r : BufferedReader) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW java.lang.String readStringAttribute(java.io.BufferedReader, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readStringAttribute(r : BufferedReader, tag : String?) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW void readTag(java.io.BufferedReader, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readTag(r : BufferedReader, tag : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW void save(gnu.trove.TIntHashSet, java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;X&gt; save(x : TIntHashSet, out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW void save(java.util.Collection&lt;X&gt;, com.intellij.util.io.DataExternalizer&lt;X&gt;, java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;X&gt; save(x : Collection&lt;X&gt;, e : DataExternalizer&lt;X&gt;?, out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW void save(java.util.Collection&lt;X&gt;, java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;X : RW.Savable?&gt; save(x : Collection&lt;X&gt;, out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW void save(X[], java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;X : RW.Savable?&gt; save(x : Array&lt;out X&gt;, out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW void writeln(java.io.BufferedWriter, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeln(w : BufferedWriter, s : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW void writeln(java.io.BufferedWriter, java.util.Collection&lt;? extends org.jetbrains.jps.builders.java.dependencyView.RW.Writable&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeln(w : BufferedWriter, c : Collection&lt;out RW.Writable?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.RW void writeln(java.io.BufferedWriter, java.util.Collection&lt;T&gt;, org.jetbrains.jps.builders.java.dependencyView.RW.ToWritable&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : Comparable?&gt; writeln(w : BufferedWriter, c : Collection&lt;T&gt;?, t : RW.ToWritable&lt;T&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.Streamable void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(p0 : DependencyContext, p1 : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.1 java.lang.Object read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(x0 : DataInput) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.1 org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(in : DataInput) : TypeRepr.AbstractType?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.1 void save(java.io.DataOutput, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(x0 : DataOutput?, x1 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.1 void save(java.io.DataOutput, org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput?, value : TypeRepr.AbstractType) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType java.lang.String getDescr(org.jetbrains.jps.builders.java.dependencyView.DependencyContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDescr(p0 : DependencyContext) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(p0 : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType void updateClassUsages(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int, java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateClassUsages(p0 : DependencyContext, p1 : Int, p2 : MutableSet&lt;UsageRepr.Usage?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.ArrayType boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.ArrayType org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType getDeepElementType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDeepElementType() : TypeRepr.AbstractType?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.ArrayType java.lang.String getDescr(org.jetbrains.jps.builders.java.dependencyView.DependencyContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDescr(p0 : DependencyContext) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.ArrayType void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.ArrayType void updateClassUsages(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int, java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateClassUsages(p0 : DependencyContext, p1 : Int, p2 : MutableSet&lt;UsageRepr.Usage?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.ClassType ClassType(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ClassType(context : DependencyContext?, in : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.ClassType boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.ClassType java.lang.String getDescr(org.jetbrains.jps.builders.java.dependencyView.DependencyContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDescr(context : DependencyContext) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.ClassType void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.ClassType void updateClassUsages(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int, java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateClassUsages(context : DependencyContext, owner : Int, s : MutableSet&lt;UsageRepr.Usage?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.PrimitiveType PrimitiveType(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PrimitiveType(in : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.PrimitiveType boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.PrimitiveType java.lang.String getDescr(org.jetbrains.jps.builders.java.dependencyView.DependencyContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDescr(context : DependencyContext) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.PrimitiveType void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr.PrimitiveType void updateClassUsages(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int, java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateClassUsages(p0 : DependencyContext, p1 : Int, p2 : MutableSet&lt;UsageRepr.Usage?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr org.jetbrains.jps.builders.java.dependencyView.TypeRepr.ClassType createClassType(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createClassType(context : DependencyContext, s : Int) : TypeRepr.ClassType?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr java.util.Collection&lt;org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType&gt; createClassType(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.util.Collection&lt;java.lang.String&gt;, java.util.Collection&lt;org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createClassType(context : DependencyContext?, args : Collection&lt;String?&gt;?, acc : MutableCollection&lt;TypeRepr.AbstractType?&gt;?) : MutableCollection&lt;TypeRepr.AbstractType?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr java.util.Collection&lt;org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType&gt; createClassType(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.lang.String[], java.util.Collection&lt;org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createClassType(context : DependencyContext?, args : Array&lt;out String?&gt;?, acc : MutableCollection&lt;TypeRepr.AbstractType?&gt;?) : MutableCollection&lt;TypeRepr.AbstractType?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr com.intellij.util.io.DataExternalizer&lt;org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType&gt; externalizer(org.jetbrains.jps.builders.java.dependencyView.DependencyContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun externalizer(context : DependencyContext?) : DataExternalizer&lt;TypeRepr.AbstractType?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType getType(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getType(context : DependencyContext, descr : Int) : TypeRepr.AbstractType?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType getType(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, org.jetbrains.asm4.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getType(context : DependencyContext, t : Type) : TypeRepr.AbstractType?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.TypeRepr org.jetbrains.jps.builders.java.dependencyView.TypeRepr.AbstractType[] getType(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, org.jetbrains.asm4.Type[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getType(context : DependencyContext?, t : Array&lt;out Type?&gt;) : Array&lt;out TypeRepr.AbstractType?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.1 java.lang.Object read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(x0 : DataInput) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.1 org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(in : DataInput) : UsageRepr.Usage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.1 void save(java.io.DataOutput, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(x0 : DataOutput?, x1 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.1 void save(java.io.DataOutput, org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput?, value : UsageRepr.Usage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.AnnotationUsage.1 java.lang.Object read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(x0 : DataInput) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.AnnotationUsage.1 org.jetbrains.jps.builders.java.dependencyView.ElemType read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(in : DataInput) : ElemType&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.AnnotationUsage.1 void save(java.io.DataOutput, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(x0 : DataOutput, x1 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.AnnotationUsage.1 void save(java.io.DataOutput, org.jetbrains.jps.builders.java.dependencyView.ElemType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput, value : ElemType) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.AnnotationUsage AnnotationUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AnnotationUsage(context : DependencyContext?, in : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.AnnotationUsage AnnotationUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.DataInput, org.jetbrains.jps.builders.java.dependencyView.UsageRepr.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AnnotationUsage(x0 : DependencyContext?, x1 : DataInput, x2 : UsageRepr.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.AnnotationUsage boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.AnnotationUsage boolean satisfies(org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun satisfies(usage : UsageRepr.Usage?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.AnnotationUsage void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.AnnotationUsage void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(context : DependencyContext, stream : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.ClassAsGenericBoundUsage ClassAsGenericBoundUsage(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ClassAsGenericBoundUsage(in : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.ClassAsGenericBoundUsage void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.ClassExtendsUsage ClassExtendsUsage(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ClassExtendsUsage(in : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.ClassExtendsUsage ClassExtendsUsage(java.io.DataInput, org.jetbrains.jps.builders.java.dependencyView.UsageRepr.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ClassExtendsUsage(x0 : DataInput, x1 : UsageRepr.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.ClassExtendsUsage boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.ClassExtendsUsage void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.ClassExtendsUsage void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(context : DependencyContext, stream : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.ClassNewUsage ClassNewUsage(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ClassNewUsage(in : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.ClassNewUsage ClassNewUsage(java.io.DataInput, org.jetbrains.jps.builders.java.dependencyView.UsageRepr.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ClassNewUsage(x0 : DataInput, x1 : UsageRepr.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.ClassNewUsage void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.ClassNewUsage void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(context : DependencyContext, stream : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.ClassUsage ClassUsage(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ClassUsage(in : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.ClassUsage ClassUsage(java.io.DataInput, org.jetbrains.jps.builders.java.dependencyView.UsageRepr.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ClassUsage(x0 : DataInput, x1 : UsageRepr.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.ClassUsage boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.ClassUsage void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.ClassUsage void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(context : DependencyContext, stream : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FMUsage FMUsage(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FMUsage(in : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FMUsage FMUsage(java.io.DataInput, org.jetbrains.jps.builders.java.dependencyView.UsageRepr.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FMUsage(x0 : DataInput, x1 : UsageRepr.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FMUsage boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FMUsage void kindToStream(java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun kindToStream(p0 : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FMUsage void save(byte, java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(tag : Byte, out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FMUsage void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(context : DependencyContext, stream : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FieldAssignUsage FieldAssignUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FieldAssignUsage(context : DependencyContext, n : Int, o : Int, d : Int)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FieldAssignUsage FieldAssignUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int, int, int, org.jetbrains.jps.builders.java.dependencyView.UsageRepr.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FieldAssignUsage(x0 : DependencyContext, x1 : Int, x2 : Int, x3 : Int, x4 : UsageRepr.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FieldAssignUsage FieldAssignUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FieldAssignUsage(context : DependencyContext?, in : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FieldAssignUsage FieldAssignUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.DataInput, org.jetbrains.jps.builders.java.dependencyView.UsageRepr.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FieldAssignUsage(x0 : DependencyContext?, x1 : DataInput, x2 : UsageRepr.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FieldAssignUsage boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FieldAssignUsage void kindToStream(java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun kindToStream(stream : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FieldAssignUsage void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(p0 : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FieldUsage FieldUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FieldUsage(context : DependencyContext, name : Int, owner : Int, descriptor : Int)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FieldUsage FieldUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int, int, int, org.jetbrains.jps.builders.java.dependencyView.UsageRepr.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FieldUsage(x0 : DependencyContext, x1 : Int, x2 : Int, x3 : Int, x4 : UsageRepr.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FieldUsage FieldUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FieldUsage(context : DependencyContext?, in : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FieldUsage FieldUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.DataInput, org.jetbrains.jps.builders.java.dependencyView.UsageRepr.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FieldUsage(x0 : DependencyContext?, x1 : DataInput, x2 : UsageRepr.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FieldUsage boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FieldUsage void kindToStream(java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun kindToStream(stream : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FieldUsage void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(p0 : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.FieldUsage void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(context : DependencyContext, stream : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.MetaMethodUsage MetaMethodUsage(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MetaMethodUsage(in : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.MetaMethodUsage boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.MetaMethodUsage void kindToStream(java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun kindToStream(stream : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.MetaMethodUsage void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.MetaMethodUsage void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(context : DependencyContext, stream : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.MethodUsage MethodUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int, int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MethodUsage(context : DependencyContext, name : Int, owner : Int, descriptor : String?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.MethodUsage MethodUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int, int, java.lang.String, org.jetbrains.jps.builders.java.dependencyView.UsageRepr.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MethodUsage(x0 : DependencyContext, x1 : Int, x2 : Int, x3 : String?, x4 : UsageRepr.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.MethodUsage MethodUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MethodUsage(context : DependencyContext?, in : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.MethodUsage MethodUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.DataInput, org.jetbrains.jps.builders.java.dependencyView.UsageRepr.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MethodUsage(x0 : DependencyContext?, x1 : DataInput, x2 : UsageRepr.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.MethodUsage boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.MethodUsage void kindToStream(java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun kindToStream(stream : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.MethodUsage void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr.MethodUsage void toStream(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, java.io.PrintStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStream(context : DependencyContext, stream : PrintStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage createAnnotationUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, org.jetbrains.jps.builders.java.dependencyView.TypeRepr.ClassType, gnu.trove.TIntHashSet, java.util.Set&lt;org.jetbrains.jps.builders.java.dependencyView.ElemType&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAnnotationUsage(context : DependencyContext, type : TypeRepr.ClassType?, usedArguments : TIntHashSet?, targets : Set&lt;ElemType?&gt;?) : UsageRepr.Usage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage createClassAsGenericBoundUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createClassAsGenericBoundUsage(context : DependencyContext, name : Int) : UsageRepr.Usage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage createClassExtendsUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createClassExtendsUsage(context : DependencyContext, name : Int) : UsageRepr.Usage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage createClassNewUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createClassNewUsage(context : DependencyContext, name : Int) : UsageRepr.Usage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage createClassUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createClassUsage(context : DependencyContext, name : Int) : UsageRepr.Usage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage createFieldAssignUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createFieldAssignUsage(context : DependencyContext, name : Int, owner : Int, descr : Int) : UsageRepr.Usage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage createFieldUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createFieldUsage(context : DependencyContext, name : Int, owner : Int, descr : Int) : UsageRepr.Usage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage createMetaMethodUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int, int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createMetaMethodUsage(context : DependencyContext, name : Int, owner : Int, descr : String?) : UsageRepr.Usage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage createMethodUsage(org.jetbrains.jps.builders.java.dependencyView.DependencyContext, int, int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createMethodUsage(context : DependencyContext, name : Int, owner : Int, descr : String?) : UsageRepr.Usage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.java.dependencyView.UsageRepr com.intellij.util.io.DataExternalizer&lt;org.jetbrains.jps.builders.java.dependencyView.UsageRepr.Usage&gt; externalizer(org.jetbrains.jps.builders.java.dependencyView.DependencyContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun externalizer(context : DependencyContext?) : DataExternalizer&lt;UsageRepr.Usage?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.logging.BuildLoggingManager BuildLoggingManager(org.jetbrains.jps.builders.logging.ProjectBuilderLogger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BuildLoggingManager(p0 : ProjectBuilderLogger)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.logging.BuildLoggingManager org.jetbrains.jps.builders.logging.ProjectBuilderLogger getProjectBuilderLogger()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getProjectBuilderLogger() : ProjectBuilderLogger&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.logging.ProjectBuilderLogger void logCompiledFiles(java.util.Collection&lt;java.io.File&gt;, java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun logCompiledFiles(p0 : Collection&lt;File?&gt;, p1 : String?, p2 : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.logging.ProjectBuilderLogger void logCompiledPaths(java.util.Collection&lt;java.lang.String&gt;, java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun logCompiledPaths(p0 : Collection&lt;String?&gt;, p1 : String?, p2 : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.logging.ProjectBuilderLogger void logDeletedFiles(java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun logDeletedFiles(p0 : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.storage.BuildDataPaths java.io.File getTargetDataRoot(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTargetDataRoot(p0 : BuildTarget&lt;*&gt;) : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.storage.BuildDataPaths java.io.File getTargetTypeDataRoot(org.jetbrains.jps.builders.BuildTargetType&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTargetTypeDataRoot(p0 : BuildTargetType&lt;*&gt;) : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.storage.BuildDataPaths java.io.File getTargetsDataRoot()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTargetsDataRoot() : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.storage.SourceToOutputMapping void appendOutput(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendOutput(p0 : String, p1 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.storage.SourceToOutputMapping java.util.Collection&lt;java.lang.String&gt; getOutputs(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutputs(p0 : String) : MutableCollection&lt;String?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.storage.SourceToOutputMapping java.util.Collection&lt;java.lang.String&gt; getSources()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSources() : MutableCollection&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.storage.SourceToOutputMapping java.util.Iterator&lt;java.lang.String&gt; getSourcesIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSourcesIterator() : MutableIterator&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.storage.SourceToOutputMapping void remove(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.storage.SourceToOutputMapping void removeOutput(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeOutput(p0 : String, p1 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.storage.SourceToOutputMapping void setOutput(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOutput(p0 : String, p1 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.builders.storage.SourceToOutputMapping void setOutputs(java.lang.String, java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOutputs(p0 : String, p1 : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.client.ProtobufClientMessageHandler ProtobufClientMessageHandler(org.jetbrains.jps.client.UUIDGetter, org.jetbrains.jps.client.SimpleProtobufClient, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ProtobufClientMessageHandler(p0 : UUIDGetter, p1 : SimpleProtobufClient?, p2 : Executor?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.client.ProtobufClientMessageHandler org.jetbrains.jps.client.SimpleProtobufClient access$000(org.jetbrains.jps.client.ProtobufClientMessageHandler)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : ProtobufClientMessageHandler) : SimpleProtobufClient?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.client.ProtobufClientMessageHandler void messageReceived(org.jboss.netty.channel.ChannelHandlerContext, org.jboss.netty.channel.MessageEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun messageReceived(ctx : ChannelHandlerContext?, e : MessageEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.client.ProtobufResponseHandler boolean handleMessage(com.google.protobuf.MessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun handleMessage(p0 : MessageLite) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.client.SimpleProtobufClient.2 void operationComplete(org.jboss.netty.channel.ChannelFuture)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun operationComplete(future : ChannelFuture) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.client.SimpleProtobufClient SimpleProtobufClient(com.google.protobuf.MessageLite, java.util.concurrent.Executor, org.jetbrains.jps.client.UUIDGetter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SimpleProtobufClient(msgDefaultInstance : MessageLite?, asyncExec : Executor?, uuidGetter : UUIDGetter)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.client.SimpleProtobufClient org.jetbrains.jps.client.ProtobufClientMessageHandler access$000(org.jetbrains.jps.client.SimpleProtobufClient)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : SimpleProtobufClient) : ProtobufClientMessageHandler&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.client.SimpleProtobufClient void access$100(org.jetbrains.jps.client.SimpleProtobufClient, java.util.UUID, org.jetbrains.jps.api.RequestFuture, org.jetbrains.jps.client.ProtobufResponseHandler)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : SimpleProtobufClient, x1 : UUID?, x2 : RequestFuture, x3 : ProtobufResponseHandler?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.client.SimpleProtobufClient void notifyTerminated(java.util.UUID, org.jetbrains.jps.api.RequestFuture&lt;T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun notifyTerminated(messageId : UUID?, requestFuture : RequestFuture&lt;T&gt;, responseHandler : T?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.client.SimpleProtobufClient org.jetbrains.jps.api.RequestFuture&lt;T&gt; sendMessage(java.util.UUID, com.google.protobuf.MessageLite, T, org.jetbrains.jps.api.RequestFuture.CancelAction&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sendMessage(p0 : UUID?, p1 : MessageLite?, p2 : T?, p3 : RequestFuture.CancelAction&lt;T&gt;?) : RequestFuture&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.client.UUIDGetter java.util.UUID getSessionUUID(org.jboss.netty.channel.MessageEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSessionUUID(p0 : MessageEvent) : UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildMain.2.1 void debug(java.lang.String, java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun debug(p0 : String?, p1 : Throwable?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildMain.2.1 void debug(java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun debug(p0 : Throwable?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildMain.2.1 void error(java.lang.String, java.lang.Throwable, java.lang.String...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun error(p0 : String?, p1 : Throwable?, vararg p2 : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildMain.2.1 void info(java.lang.String, java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun info(p0 : String?, p1 : Throwable?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildMain.2.1 void warn(java.lang.String, java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun warn(p0 : String?, p1 : Throwable?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildMain.2 com.intellij.openapi.diagnostic.Logger getLoggerInstance(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLoggerInstance(category : String?) : Logger&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildMain.MyMessageHandler void channelDisconnected(org.jboss.netty.channel.ChannelHandlerContext, org.jboss.netty.channel.ChannelStateEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun channelDisconnected(ctx : ChannelHandlerContext, e : ChannelStateEvent?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildMain.MyMessageHandler void messageReceived(org.jboss.netty.channel.ChannelHandlerContext, org.jboss.netty.channel.MessageEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun messageReceived(ctx : ChannelHandlerContext, e : MessageEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildMain void main(java.lang.String[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun main(args : Array&lt;out String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildRunner org.jetbrains.jps.incremental.CompileScope createCompilationScope(org.jetbrains.jps.api.BuildType, org.jetbrains.jps.cmdline.ProjectDescriptor, java.util.List&lt;org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&gt;, java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCompilationScope(buildType : BuildType?, pd : ProjectDescriptor, scopes : List&lt;CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope?&gt;, paths : Collection&lt;String?&gt;) : CompileScope&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildRunner org.jetbrains.jps.cmdline.ProjectDescriptor load(org.jetbrains.jps.incremental.MessageHandler, java.io.File, org.jetbrains.jps.incremental.fs.BuildFSState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun load(msgHandler : MessageHandler?, dataStorageRoot : File?, fsState : BuildFSState?) : ProjectDescriptor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildRunner void runBuild(org.jetbrains.jps.cmdline.ProjectDescriptor, org.jetbrains.jps.api.CanceledStatus, org.jetbrains.jps.builders.java.dependencyView.Callbacks.ConstantAffectionResolver, org.jetbrains.jps.incremental.MessageHandler, org.jetbrains.jps.api.BuildType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun runBuild(p0 : ProjectDescriptor?, p1 : CanceledStatus?, p2 : Callbacks.ConstantAffectionResolver?, p3 : MessageHandler?, p4 : BuildType?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildSession.1 void processMessage(org.jetbrains.jps.incremental.messages.BuildMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processMessage(buildMessage : BuildMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildSession.ConstantSearch java.util.concurrent.Future&lt;org.jetbrains.jps.builders.java.dependencyView.Callbacks.ConstantAffection&gt; request(java.lang.String, java.lang.String, int, boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun request(p0 : String, p1 : String, p2 : Int, p3 : Boolean, p4 : Boolean) : Future&lt;Callbacks.ConstantAffection?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildSession BuildSession(java.util.UUID, org.jboss.netty.channel.Channel, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BuildSession(sessionId : UUID?, channel : Channel?, params : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage, delta : CmdlineRemoteProto.Message.ControllerMessage.FSEvent?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildSession org.jboss.netty.channel.Channel access$100(org.jetbrains.jps.cmdline.BuildSession)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : BuildSession) : Channel?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildSession java.util.UUID access$200(org.jetbrains.jps.cmdline.BuildSession)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : BuildSession) : UUID?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildSession org.jetbrains.jps.cmdline.ProjectDescriptor access$300(org.jetbrains.jps.cmdline.BuildSession)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : BuildSession) : ProjectDescriptor?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildSession void access$400(org.jetbrains.jps.cmdline.BuildSession, org.jetbrains.jps.cmdline.ProjectDescriptor, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : BuildSession, x1 : ProjectDescriptor?, x2 : CmdlineRemoteProto.Message.ControllerMessage.FSEvent?, x3 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildSession long access$514(org.jetbrains.jps.cmdline.BuildSession, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$514(x0 : BuildSession, x1 : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildSession java.util.Map access$800(org.jetbrains.jps.cmdline.BuildSession)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$800(x0 : BuildSession) : MutableMap?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildSession void applyFSEvent(org.jetbrains.jps.cmdline.ProjectDescriptor, org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun applyFSEvent(pd : ProjectDescriptor?, event : CmdlineRemoteProto.Message.ControllerMessage.FSEvent?, saveEventStamp : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildSession boolean containsChanges(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.FSEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsChanges(event : CmdlineRemoteProto.Message.ControllerMessage.FSEvent) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildSession org.jetbrains.jps.api.BuildType convertCompileType(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun convertCompileType(compileType : CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type) : BuildType&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildSession java.io.DataInputStream createFSDataStream(java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createFSDataStream(dataStorageRoot : File?) : DataInputStream?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildSession void finishBuild(java.lang.Throwable, boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun finishBuild(error : Throwable?, hadBuildErrors : Boolean, doneSomething : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildSession void processConstantSearchResult(org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processConstantSearchResult(result : CmdlineRemoteProto.Message.ControllerMessage.ConstantSearchResult) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildSession void saveOnDisk(com.intellij.openapi.util.io.BufferExposingByteArrayOutputStream, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun saveOnDisk(bytes : BufferExposingByteArrayOutputStream, file : File?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.BuildSession boolean scopeContainsModulesOnly(java.util.List&lt;org.jetbrains.jps.api.CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun scopeContainsModulesOnly(scopes : List&lt;CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.TargetTypeBuildScope?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.ClasspathBootstrap java.util.List&lt;java.io.File&gt; getJavacServerClasspath(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getJavacServerClasspath(sdkHome : String?) : MutableList&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.ClasspathBootstrap java.lang.Class&lt;javax.tools.StandardJavaFileManager&gt; getOptimizedFileManagerClass()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOptimizedFileManagerClass() : Class&lt;StandardJavaFileManager?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.ClasspathBootstrap java.io.File getResourceFile(java.lang.Class)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getResourceFile(aClass : Class) : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.ClasspathBootstrap java.lang.String getResourcePath(java.lang.Class)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getResourcePath(aClass : Class) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.JpsModelLoaderImpl boolean isDirectoryBased(java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isDirectoryBased(projectFile : File) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.ProjectDescriptor ProjectDescriptor(org.jetbrains.jps.model.JpsModel, org.jetbrains.jps.incremental.fs.BuildFSState, org.jetbrains.jps.incremental.storage.ProjectTimestamps, org.jetbrains.jps.incremental.storage.BuildDataManager, org.jetbrains.jps.builders.logging.BuildLoggingManager, org.jetbrains.jps.indices.ModuleExcludeIndex, org.jetbrains.jps.incremental.storage.BuildTargetsState, org.jetbrains.jps.builders.BuildTargetIndex, org.jetbrains.jps.builders.BuildRootIndex, org.jetbrains.jps.indices.IgnoredFileIndex)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ProjectDescriptor(model : JpsModel, fsState : BuildFSState?, timestamps : ProjectTimestamps?, dataManager : BuildDataManager?, loggingManager : BuildLoggingManager?, moduleExcludeIndex : ModuleExcludeIndex?, targetsState : BuildTargetsState?, buildTargetIndex : BuildTargetIndex?, buildRootIndex : BuildRootIndex?, ignoredFileIndex : IgnoredFileIndex?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.cmdline.ProjectDescriptor org.jetbrains.jps.model.JpsModel getModel()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getModel() : JpsModel&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.BuildListener void filesDeleted(java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun filesDeleted(p0 : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.BuildListener void filesGenerated(java.util.Collection&lt;com.intellij.openapi.util.Pair&lt;java.lang.String,java.lang.String&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun filesGenerated(p0 : Collection&lt;Pair&lt;String?, String?&gt;?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.BuildOperations.1 void processDirtyFiles(org.jetbrains.jps.builders.FileProcessor&lt;R,T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processDirtyFiles(p0 : FileProcessor&lt;R, T&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.BuildOperations.2 boolean apply(T, java.io.File, R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(target : T?, file : File, sourceRoot : R) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.BuildOperations void buildTarget(T, org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.incremental.TargetBuilder&lt;?,?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?, T : BuildTarget&lt;R&gt;?&gt; buildTarget(target : T, context : CompileContext?, builder : TargetBuilder&lt;*, *&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.BuildOperations java.util.Map&lt;T,java.util.Set&lt;java.io.File&gt;&gt; cleanOutputsCorrespondingToChangedFiles(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.DirtyFilesHolder&lt;R,T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?, T : BuildTarget&lt;R&gt;?&gt; cleanOutputsCorrespondingToChangedFiles(context : CompileContext, dirtyFilesHolder : DirtyFilesHolder&lt;R, T&gt;) : MutableMap&lt;T, Set&lt;File?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.BuildOperations void ensureFSStateInitialized(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ensureFSStateInitialized(context : CompileContext, target : BuildTarget&lt;*&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.BuildOperations void ensureFSStateInitialized(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.impl.BuildTargetChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ensureFSStateInitialized(context : CompileContext?, chunk : BuildTargetChunk) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.BuildOperations void initTargetFSState(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.BuildTarget&lt;?&gt;, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initTargetFSState(context : CompileContext, target : BuildTarget&lt;*&gt;, forceMarkDirty : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.BuildOperations void markTargetsUpToDate(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.impl.BuildTargetChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markTargetsUpToDate(context : CompileContext, chunk : BuildTargetChunk?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.Builder void buildStarted(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildStarted(p0 : CompileContext) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.Builder java.lang.String getPresentableName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPresentableName() : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.BuilderRegistry org.jetbrains.jps.incremental.BuilderRegistry getInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInstance() : BuilderRegistry&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.BuilderRegistry java.util.List&lt;org.jetbrains.jps.incremental.ModuleLevelBuilder&gt; getModuleLevelBuilders()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getModuleLevelBuilders() : MutableList&lt;ModuleLevelBuilder?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.BuilderRegistry java.util.List&lt;org.jetbrains.jps.incremental.TargetBuilder&lt;?,?&gt;&gt; getTargetBuilders()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTargetBuilders() : MutableList&lt;TargetBuilder&lt;*, *&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.BuilderRegistry org.jetbrains.jps.builders.BuildTargetType&lt;?&gt; getTargetType(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTargetType(typeId : String?) : BuildTargetType&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.BuilderService java.util.List&lt;? extends org.jetbrains.jps.incremental.TargetBuilder&lt;?,?&gt;&gt; createBuilders()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createBuilders() : MutableList&lt;out TargetBuilder&lt;*, *&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.BuilderService java.util.List&lt;? extends org.jetbrains.jps.incremental.ModuleLevelBuilder&gt; createModuleLevelBuilders()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createModuleLevelBuilders() : MutableList&lt;out ModuleLevelBuilder?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.BuilderService java.util.List&lt;? extends org.jetbrains.jps.builders.BuildTargetType&lt;?&gt;&gt; getTargetTypes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTargetTypes() : MutableList&lt;out BuildTargetType&lt;*&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ChunkBuildOutputConsumerImpl java.util.Map&lt;java.lang.String,org.jetbrains.jps.incremental.CompiledClass&gt; getCompiledClasses()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCompiledClasses() : MutableMap&lt;String?, CompiledClass?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ChunkBuildOutputConsumerImpl org.jetbrains.jps.javac.BinaryContent lookupClassBytes(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lookupClassBytes(p0 : String?) : BinaryContent?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ChunkBuildOutputConsumerImpl void registerCompiledClass(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;, org.jetbrains.jps.incremental.CompiledClass)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun registerCompiledClass(target : BuildTarget&lt;*&gt;?, compiled : CompiledClass) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ChunkBuildOutputConsumerImpl void registerOutputFile(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;, java.io.File, java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun registerOutputFile(target : BuildTarget&lt;*&gt;?, outputFile : File, sourcePaths : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileContext org.jetbrains.jps.model.java.compiler.ProcessorConfigProfile getAnnotationProcessingProfile(org.jetbrains.jps.model.module.JpsModule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAnnotationProcessingProfile(p0 : JpsModule?) : ProcessorConfigProfile&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileContext java.lang.String getBuilderParameter(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBuilderParameter(p0 : String?) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileContext org.jetbrains.jps.cmdline.ProjectDescriptor getProjectDescriptor()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getProjectDescriptor() : ProjectDescriptor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileContext org.jetbrains.jps.ProjectPaths getProjectPaths()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getProjectPaths() : ProjectPaths&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileContext void markNonIncremental(org.jetbrains.jps.incremental.ModuleBuildTarget)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markNonIncremental(p0 : ModuleBuildTarget) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileContextImpl CompileContextImpl(org.jetbrains.jps.incremental.CompileScope, org.jetbrains.jps.cmdline.ProjectDescriptor, boolean, boolean, org.jetbrains.jps.incremental.MessageHandler, java.util.Map&lt;java.lang.String,java.lang.String&gt;, org.jetbrains.jps.api.CanceledStatus)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CompileContextImpl(scope : CompileScope?, pd : ProjectDescriptor, isMake : Boolean, isProjectRebuild : Boolean, delegateMessageHandler : MessageHandler?, builderParams : Map&lt;String?, String?&gt;?, cancelStatus : CanceledStatus?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileContextImpl org.jetbrains.jps.model.java.compiler.ProcessorConfigProfile getAnnotationProcessingProfile(org.jetbrains.jps.model.module.JpsModule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAnnotationProcessingProfile(p0 : JpsModule?) : ProcessorConfigProfile&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileContextImpl java.lang.String getBuilderParameter(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBuilderParameter(p0 : String?) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileContextImpl org.jetbrains.jps.cmdline.ProjectDescriptor getProjectDescriptor()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getProjectDescriptor() : ProjectDescriptor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileContextImpl org.jetbrains.jps.ProjectPaths getProjectPaths()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getProjectPaths() : ProjectPaths&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileContextImpl void markNonIncremental(org.jetbrains.jps.incremental.ModuleBuildTarget)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markNonIncremental(target : ModuleBuildTarget) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileContextImpl void processMessage(org.jetbrains.jps.incremental.messages.BuildMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processMessage(msg : BuildMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileScope void expandScope(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun expandScope(p0 : BuildTarget&lt;*&gt;?, p1 : File) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileScope boolean isAffected(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAffected(p0 : BuildTarget&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileScope boolean isAffected(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAffected(p0 : BuildTarget&lt;*&gt;?, p1 : File) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileScope boolean isRecompilationForced(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isRecompilationForced(p0 : BuildTarget&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileScopeImpl void expandScope(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun expandScope(p0 : BuildTarget&lt;*&gt;?, p1 : File) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileScopeImpl boolean isAffected(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAffected(p0 : BuildTarget&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileScopeImpl boolean isAffected(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAffected(p0 : BuildTarget&lt;*&gt;?, p1 : File) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileScopeImpl boolean isAffectedByAssociatedModule(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAffectedByAssociatedModule(target : BuildTarget&lt;*&gt;?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompileScopeImpl boolean isRecompilationForced(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isRecompilationForced(p0 : BuildTarget&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompiledClass CompiledClass(java.io.File, java.io.File, java.lang.String, org.jetbrains.jps.javac.BinaryContent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CompiledClass(p0 : File, p1 : File, p2 : String?, p3 : BinaryContent)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompiledClass boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompiledClass java.lang.String getClassName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getClassName() : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompiledClass org.jetbrains.jps.javac.BinaryContent getContent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getContent() : BinaryContent&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompiledClass java.io.File getOutputFile()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutputFile() : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompiledClass java.io.File getSourceFile()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSourceFile() : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompiledClass void setContent(org.jetbrains.jps.javac.BinaryContent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setContent(p0 : BinaryContent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompilerEncodingConfiguration CompilerEncodingConfiguration(org.jetbrains.jps.model.JpsModel, org.jetbrains.jps.builders.BuildRootIndex)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CompilerEncodingConfiguration(jpsModel : JpsModel, index : BuildRootIndex?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompilerEncodingConfiguration java.util.Map&lt;org.jetbrains.jps.model.module.JpsModule,java.util.Set&lt;java.lang.String&gt;&gt; computeModuleCharsetMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeModuleCharsetMap() : MutableMap&lt;JpsModule?, Set&lt;String?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompilerEncodingConfiguration java.util.Set&lt;java.lang.String&gt; getAllModuleChunkEncodings(org.jetbrains.jps.ModuleChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAllModuleChunkEncodings(p0 : ModuleChunk) : MutableSet&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompilerEncodingConfiguration java.lang.String getPreferredModuleChunkEncoding(org.jetbrains.jps.ModuleChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPreferredModuleChunkEncoding(p0 : ModuleChunk) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.CompilerEncodingConfiguration boolean shouldHonorEncodingForCompilation(java.util.List&lt;org.jetbrains.jps.incremental.ModuleLevelBuilder&gt;, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun shouldHonorEncodingForCompilation(builders : List&lt;ModuleLevelBuilder?&gt;, file : File?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ExternalProcessUtil java.util.List&lt;java.lang.String&gt; buildJavaCommandLine(java.lang.String, java.lang.String, java.util.List&lt;java.lang.String&gt;, java.util.List&lt;java.lang.String&gt;, java.util.List&lt;java.lang.String&gt;, java.util.List&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildJavaCommandLine(javaExecutable : String?, mainClass : String?, bootClasspath : List&lt;String?&gt;, classpath : List&lt;String?&gt;, vmParams : List&lt;String?&gt;, programParams : List&lt;String?&gt;) : MutableList&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ExternalProcessUtil java.util.List&lt;java.lang.String&gt; buildJavaCommandLine(java.lang.String, java.lang.String, java.util.List&lt;java.lang.String&gt;, java.util.List&lt;java.lang.String&gt;, java.util.List&lt;java.lang.String&gt;, java.util.List&lt;java.lang.String&gt;, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildJavaCommandLine(javaExecutable : String?, mainClass : String?, bootClasspath : List&lt;String?&gt;, classpath : List&lt;String?&gt;, vmParams : List&lt;String?&gt;, programParams : List&lt;String?&gt;, useCommandLineWrapper : Boolean) : MutableList&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ExternalProcessUtil java.lang.Class getCommandLineWrapperClass()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCommandLineWrapperClass() : Class?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.FSOperations void markDeleted(org.jetbrains.jps.incremental.CompileContext, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markDeleted(context : CompileContext, file : File?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.FSOperations void markDirty(org.jetbrains.jps.incremental.CompileContext, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markDirty(context : CompileContext, file : File?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.FSOperations void markDirty(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.ModuleChunk, java.io.FileFilter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markDirty(p0 : CompileContext, p1 : ModuleChunk, p2 : FileFilter?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.FSOperations void markDirtyFiles(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.BuildTarget&lt;?&gt;, org.jetbrains.jps.incremental.storage.Timestamps, boolean, gnu.trove.THashSet&lt;java.io.File&gt;, java.io.FileFilter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markDirtyFiles(context : CompileContext, target : BuildTarget&lt;*&gt;, timestamps : Timestamps?, forceMarkDirty : Boolean, currentFiles : THashSet&lt;File?&gt;?, filter : FileFilter?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.FSOperations void markDirtyIfNotDeleted(org.jetbrains.jps.incremental.CompileContext, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markDirtyIfNotDeleted(context : CompileContext, file : File?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.FSOperations void markDirtyRecursively(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.ModuleChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markDirtyRecursively(context : CompileContext, chunk : ModuleChunk) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.FSOperations void processFilesToRecompile(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.ModuleChunk, org.jetbrains.jps.builders.FileProcessor&lt;org.jetbrains.jps.builders.java.JavaSourceRootDescriptor,org.jetbrains.jps.incremental.ModuleBuildTarget&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processFilesToRecompile(context : CompileContext?, chunk : ModuleChunk, processor : FileProcessor&lt;JavaSourceRootDescriptor?, ModuleBuildTarget?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.FSOperations void processFilesToRecompile(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.incremental.ModuleBuildTarget, org.jetbrains.jps.builders.FileProcessor&lt;org.jetbrains.jps.builders.java.JavaSourceRootDescriptor,org.jetbrains.jps.incremental.ModuleBuildTarget&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processFilesToRecompile(context : CompileContext, target : ModuleBuildTarget?, processor : FileProcessor&lt;JavaSourceRootDescriptor?, ModuleBuildTarget?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.FSOperations void pruneEmptyDirs(org.jetbrains.jps.incremental.CompileContext, java.util.Set&lt;java.io.File&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pruneEmptyDirs(context : CompileContext?, dirsToDelete : Set&lt;File?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.FSOperations void traverseRecursively(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.BuildRootDescriptor, java.io.File, org.jetbrains.jps.incremental.storage.Timestamps, boolean, java.util.Set&lt;java.io.File&gt;, java.io.FileFilter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun traverseRecursively(context : CompileContext, rd : BuildRootDescriptor?, file : File, tsStorage : Timestamps, forceDirty : Boolean, currentFiles : MutableSet&lt;File?&gt;?, filter : FileFilter?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder.1 void processMessage(org.jetbrains.jps.incremental.messages.BuildMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processMessage(p0 : BuildMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder.4 void processDirtyFiles(org.jetbrains.jps.builders.FileProcessor&lt;org.jetbrains.jps.builders.java.JavaSourceRootDescriptor,org.jetbrains.jps.incremental.ModuleBuildTarget&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processDirtyFiles(p0 : FileProcessor&lt;JavaSourceRootDescriptor?, ModuleBuildTarget?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder.5 java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun invoke(proxy : Any?, method : Method, args : Array&lt;out Any?&gt;?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder.ChunkGroup java.util.List&lt;org.jetbrains.jps.builders.impl.BuildTargetChunk&gt; getChunks()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getChunks() : MutableList&lt;BuildTargetChunk?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder IncProjectBuilder(org.jetbrains.jps.cmdline.ProjectDescriptor, org.jetbrains.jps.incremental.BuilderRegistry, java.util.Map&lt;java.lang.String,java.lang.String&gt;, org.jetbrains.jps.api.CanceledStatus, org.jetbrains.jps.builders.java.dependencyView.Callbacks.ConstantAffectionResolver)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun IncProjectBuilder(pd : ProjectDescriptor, builderRegistry : BuilderRegistry, builderParams : Map&lt;String?, String?&gt;?, cs : CanceledStatus?, constantSearch : Callbacks.ConstantAffectionResolver?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder java.util.List access$000(org.jetbrains.jps.incremental.IncProjectBuilder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : IncProjectBuilder) : MutableList&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder org.jetbrains.jps.cmdline.ProjectDescriptor access$100(org.jetbrains.jps.incremental.IncProjectBuilder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : IncProjectBuilder) : ProjectDescriptor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder void access$200(org.jetbrains.jps.incremental.IncProjectBuilder, org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.incremental.CompileScope, org.jetbrains.jps.builders.impl.BuildTargetChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : IncProjectBuilder, x1 : CompileContext, x2 : CompileScope?, x3 : BuildTargetChunk) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder java.util.Set access$500()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$500() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder java.util.List&lt;org.jetbrains.jps.incremental.IncProjectBuilder.ChunkGroup&gt; buildChunkGroups(org.jetbrains.jps.builders.BuildTargetIndex)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildChunkGroups(index : BuildTargetIndex) : MutableList&lt;IncProjectBuilder.ChunkGroup?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder void buildChunkIfAffected(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.incremental.CompileScope, org.jetbrains.jps.builders.impl.BuildTargetChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildChunkIfAffected(context : CompileContext, scope : CompileScope?, chunk : BuildTargetChunk) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder void buildChunks(org.jetbrains.jps.incremental.CompileContextImpl)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildChunks(context : CompileContextImpl) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder void buildTargetsChunk(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.impl.BuildTargetChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildTargetsChunk(context : CompileContext, chunk : BuildTargetChunk) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder void cleanOutputRoots(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cleanOutputRoots(context : CompileContext) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder void clearOutputFiles(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearOutputFiles(context : CompileContext, target : BuildTarget&lt;*&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder void clearOutputs(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearOutputs(context : CompileContext) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder void createClasspathIndex(org.jetbrains.jps.builders.impl.BuildTargetChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createClasspathIndex(chunk : BuildTargetChunk) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder org.jetbrains.jps.incremental.CompileContextImpl createContext(org.jetbrains.jps.incremental.CompileScope, boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createContext(scope : CompileScope?, isMake : Boolean, isProjectRebuild : Boolean) : CompileContextImpl&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder org.jetbrains.jps.incremental.CompileContext createContextWrapper(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createContextWrapper(delegate : CompileContext) : CompileContext?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder boolean dependsOnGroup(org.jetbrains.jps.builders.impl.BuildTargetChunk, org.jetbrains.jps.incremental.IncProjectBuilder.ChunkGroup, java.util.Map&lt;org.jetbrains.jps.builders.BuildTarget&lt;?&gt;,java.util.Set&lt;org.jetbrains.jps.builders.BuildTarget&lt;?&gt;&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun dependsOnGroup(chunk : BuildTargetChunk?, group : IncProjectBuilder.ChunkGroup, depsMap : Map&lt;BuildTarget&lt;*&gt;?, Set&lt;BuildTarget&lt;*&gt;?&gt;?&gt;?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder boolean isAffected(org.jetbrains.jps.incremental.CompileScope, org.jetbrains.jps.builders.impl.BuildTargetChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAffected(scope : CompileScope?, chunk : BuildTargetChunk) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder void onChunkBuildComplete(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.impl.BuildTargetChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun onChunkBuildComplete(context : CompileContext, chunk : BuildTargetChunk) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder boolean processDeletedPaths(org.jetbrains.jps.incremental.CompileContext, java.util.Set&lt;? extends org.jetbrains.jps.builders.BuildTarget&lt;?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processDeletedPaths(context : CompileContext?, targets : Set&lt;out BuildTarget&lt;*&gt;?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder void runBuild(org.jetbrains.jps.incremental.CompileContextImpl, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun runBuild(context : CompileContextImpl, forceCleanCaches : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder boolean runBuildersForChunk(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.impl.BuildTargetChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun runBuildersForChunk(context : CompileContext?, chunk : BuildTargetChunk) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder boolean runModuleLevelBuilders(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.ModuleChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun runModuleLevelBuilders(context : CompileContext, chunk : ModuleChunk) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder void runTasks(org.jetbrains.jps.incremental.CompileContext, java.util.List&lt;org.jetbrains.jps.incremental.BuildTask&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun runTasks(context : CompileContext?, tasks : List&lt;BuildTask?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder void updateDoneFraction(org.jetbrains.jps.incremental.CompileContext, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateDoneFraction(context : CompileContext, delta : Float) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.IncProjectBuilder void writeIndex(java.io.BufferedWriter, java.io.File, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeIndex(writer : BufferedWriter, file : File, path : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.JVMModuleBuildTarget JVMModuleBuildTarget(org.jetbrains.jps.builders.BuildTargetType&lt;? extends org.jetbrains.jps.incremental.JVMModuleBuildTarget&lt;R&gt;&gt;, org.jetbrains.jps.model.module.JpsModule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun JVMModuleBuildTarget(targetType : BuildTargetType&lt;out JVMModuleBuildTarget&lt;R&gt;?&gt;?, module : JpsModule)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.JVMModuleBuildTarget java.util.Set&lt;java.io.File&gt; computeRootExcludes(java.io.File, org.jetbrains.jps.indices.ModuleExcludeIndex)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeRootExcludes(p0 : File?, p1 : ModuleExcludeIndex) : MutableSet&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.JVMModuleBuildTarget R findRootDescriptor(java.lang.String, org.jetbrains.jps.builders.BuildRootIndex)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findRootDescriptor(rootId : String?, rootIndex : BuildRootIndex) : R?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.JavaBuilderService java.util.List&lt;? extends org.jetbrains.jps.incremental.TargetBuilder&lt;?,?&gt;&gt; createBuilders()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createBuilders() : MutableList&lt;out TargetBuilder&lt;*, *&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.JavaBuilderService java.util.List&lt;? extends org.jetbrains.jps.incremental.ModuleLevelBuilder&gt; createModuleLevelBuilders()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createModuleLevelBuilders() : MutableList&lt;out ModuleLevelBuilder?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.JavaBuilderService java.util.List&lt;? extends org.jetbrains.jps.builders.BuildTargetType&lt;?&gt;&gt; getTargetTypes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTargetTypes() : MutableList&lt;out BuildTargetType&lt;*&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.MessageHandler.1 void processMessage(org.jetbrains.jps.incremental.messages.BuildMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processMessage(p0 : BuildMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.MessageHandler void processMessage(org.jetbrains.jps.incremental.messages.BuildMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processMessage(p0 : BuildMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ModuleBuildTarget.1 void consume(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun consume(x0 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ModuleBuildTarget.1 void consume(org.jetbrains.jps.model.module.JpsModule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun consume(module : JpsModule) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ModuleBuildTarget ModuleBuildTarget(org.jetbrains.jps.model.module.JpsModule, org.jetbrains.jps.builders.java.JavaModuleBuildTargetType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ModuleBuildTarget(module : JpsModule, targetType : JavaModuleBuildTargetType?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ModuleBuildTarget org.jetbrains.jps.builders.java.JavaModuleBuildTargetType access$000(org.jetbrains.jps.incremental.ModuleBuildTarget)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : ModuleBuildTarget) : JavaModuleBuildTargetType?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ModuleBuildTarget java.util.Collection&lt;org.jetbrains.jps.builders.BuildTarget&lt;?&gt;&gt; computeDependencies(org.jetbrains.jps.builders.BuildTargetRegistry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeDependencies(targetRegistry : BuildTargetRegistry?) : MutableCollection&lt;BuildTarget&lt;*&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ModuleBuildTarget java.util.List&lt;org.jetbrains.jps.builders.java.JavaSourceRootDescriptor&gt; computeRootDescriptors(org.jetbrains.jps.model.JpsModel, org.jetbrains.jps.indices.ModuleExcludeIndex, org.jetbrains.jps.indices.IgnoredFileIndex, org.jetbrains.jps.builders.storage.BuildDataPaths)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeRootDescriptors(p0 : JpsModel, p1 : ModuleExcludeIndex, p2 : IgnoredFileIndex?, p3 : BuildDataPaths?) : MutableList&lt;JavaSourceRootDescriptor?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ModuleBuildTarget java.io.File getOutputDir()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutputDir() : File?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ModuleBuildTarget java.util.Collection&lt;java.io.File&gt; getOutputRoots(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutputRoots(p0 : CompileContext) : MutableCollection&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ModuleBuildTarget java.lang.String getPresentableName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPresentableName() : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ModuleBuildTarget void writeConfiguration(java.io.PrintWriter, org.jetbrains.jps.builders.storage.BuildDataPaths, org.jetbrains.jps.builders.BuildRootIndex)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeConfiguration(out : PrintWriter, dataPaths : BuildDataPaths?, buildRootIndex : BuildRootIndex) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ModuleLevelBuilder.OutputConsumer java.util.Map&lt;java.lang.String,org.jetbrains.jps.incremental.CompiledClass&gt; getCompiledClasses()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCompiledClasses() : MutableMap&lt;String?, CompiledClass?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ModuleLevelBuilder.OutputConsumer org.jetbrains.jps.javac.BinaryContent lookupClassBytes(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lookupClassBytes(p0 : String?) : BinaryContent?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ModuleLevelBuilder.OutputConsumer void registerCompiledClass(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;, org.jetbrains.jps.incremental.CompiledClass)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun registerCompiledClass(p0 : BuildTarget&lt;*&gt;?, p1 : CompiledClass) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ModuleLevelBuilder.OutputConsumer void registerOutputFile(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;, java.io.File, java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun registerOutputFile(p0 : BuildTarget&lt;*&gt;?, p1 : File, p2 : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ModuleLevelBuilder org.jetbrains.jps.incremental.ModuleLevelBuilder.ExitCode build(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.ModuleChunk, org.jetbrains.jps.builders.DirtyFilesHolder&lt;org.jetbrains.jps.builders.java.JavaSourceRootDescriptor,org.jetbrains.jps.incremental.ModuleBuildTarget&gt;, org.jetbrains.jps.incremental.ModuleLevelBuilder.OutputConsumer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build(p0 : CompileContext?, p1 : ModuleChunk?, p2 : DirtyFilesHolder&lt;JavaSourceRootDescriptor?, ModuleBuildTarget?&gt;?, p3 : ModuleLevelBuilder.OutputConsumer?) : ModuleLevelBuilder.ExitCode&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ProjectBuildException java.lang.Throwable fillInStackTrace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fillInStackTrace() : Throwable&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.RebuildRequestedException java.lang.Throwable fillInStackTrace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fillInStackTrace() : Throwable&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ResourcePatterns boolean isPatternNegated(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isPatternNegated(wildcardPattern : String) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ResourcePatterns boolean isResourceFile(java.io.File, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isResourceFile(p0 : File, p1 : File) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ResourcePatterns boolean matches(java.lang.String, java.lang.String, com.intellij.openapi.util.Pair&lt;java.util.regex.Pattern,java.util.regex.Pattern&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun matches(name : String?, parentRelativePath : String?, nameDirPatternPair : Pair&lt;Pattern?, Pattern?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ResourcePatterns java.lang.String optimize(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun optimize(wildcardPattern : String) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ResourcesTarget ResourcesTarget(org.jetbrains.jps.model.module.JpsModule, org.jetbrains.jps.builders.java.ResourcesTargetType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ResourcesTarget(module : JpsModule, targetType : ResourcesTargetType?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ResourcesTarget java.util.List&lt;org.jetbrains.jps.builders.java.ResourceRootDescriptor&gt; computeRootDescriptors(org.jetbrains.jps.model.JpsModel, org.jetbrains.jps.indices.ModuleExcludeIndex, org.jetbrains.jps.indices.IgnoredFileIndex, org.jetbrains.jps.builders.storage.BuildDataPaths)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeRootDescriptors(p0 : JpsModel, p1 : ModuleExcludeIndex, p2 : IgnoredFileIndex?, p3 : BuildDataPaths?) : MutableList&lt;ResourceRootDescriptor?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ResourcesTarget org.jetbrains.jps.model.java.compiler.ProcessorConfigProfile findAnnotationProcessingProfile(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findAnnotationProcessingProfile(model : JpsModel) : ProcessorConfigProfile?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ResourcesTarget java.io.File getOutputDir()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutputDir() : File?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ResourcesTarget java.util.Collection&lt;java.io.File&gt; getOutputRoots(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutputRoots(p0 : CompileContext) : MutableCollection&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ResourcesTarget java.lang.String getPresentableName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPresentableName() : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.ResourcesTarget void writeConfiguration(java.io.PrintWriter, org.jetbrains.jps.builders.storage.BuildDataPaths, org.jetbrains.jps.builders.BuildRootIndex)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeConfiguration(out : PrintWriter, dataPaths : BuildDataPaths?, buildRootIndex : BuildRootIndex) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.TargetBuilder void build(T, org.jetbrains.jps.builders.DirtyFilesHolder&lt;R,T&gt;, org.jetbrains.jps.builders.BuildOutputConsumer, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build(p0 : T, p1 : DirtyFilesHolder&lt;R, T&gt;, p2 : BuildOutputConsumer, p3 : CompileContext) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.Utils java.io.File convertToFile(java.net.URI)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun convertToFile(p0 : URI?) : File?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.Utils java.io.File getDataStorageRoot(java.io.File, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDataStorageRoot(systemRoot : File?, projectPath : String?) : File?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.Utils java.io.File getDataStorageRoot(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDataStorageRoot(projectPath : String?) : File?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.Utils boolean intersects(java.util.Set&lt;org.jetbrains.jps.model.module.JpsModule&gt;, java.util.Set&lt;org.jetbrains.jps.model.module.JpsModule&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersects(set1 : Set&lt;JpsModule?&gt;, set2 : Set&lt;JpsModule?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.Utils java.net.URI toURI(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toURI(localPath : String?) : URI&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.Utils java.net.URI toURI(java.lang.String, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toURI(localPath : String?, convertSpaces : Boolean) : URI&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget.1 boolean process(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(x0 : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget.1 boolean process(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(element : JpsPackagingElement) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget ArtifactBuildTarget(org.jetbrains.jps.model.artifact.JpsArtifact)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ArtifactBuildTarget(artifact : JpsArtifact)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget org.jetbrains.jps.model.artifact.JpsArtifact access$000(org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : ArtifactBuildTarget) : JpsArtifact&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget java.util.Collection&lt;org.jetbrains.jps.builders.BuildTarget&lt;?&gt;&gt; computeDependencies(org.jetbrains.jps.builders.BuildTargetRegistry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeDependencies(targetRegistry : BuildTargetRegistry?) : MutableCollection&lt;BuildTarget&lt;*&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget java.util.List&lt;org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor&gt; computeRootDescriptors(org.jetbrains.jps.model.JpsModel, org.jetbrains.jps.indices.ModuleExcludeIndex, org.jetbrains.jps.indices.IgnoredFileIndex, org.jetbrains.jps.builders.storage.BuildDataPaths)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeRootDescriptors(p0 : JpsModel, p1 : ModuleExcludeIndex, p2 : IgnoredFileIndex?, p3 : BuildDataPaths?) : MutableList&lt;ArtifactRootDescriptor?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget org.jetbrains.jps.builders.BuildRootDescriptor findRootDescriptor(java.lang.String, org.jetbrains.jps.builders.BuildRootIndex)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findRootDescriptor(x0 : String?, x1 : BuildRootIndex) : BuildRootDescriptor?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor findRootDescriptor(java.lang.String, org.jetbrains.jps.builders.BuildRootIndex)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findRootDescriptor(rootId : String?, rootIndex : BuildRootIndex) : ArtifactRootDescriptor?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget org.jetbrains.jps.model.artifact.JpsArtifact getArtifact()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getArtifact() : JpsArtifact&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget java.util.Collection&lt;java.io.File&gt; getOutputRoots(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutputRoots(p0 : CompileContext) : MutableCollection&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget java.lang.String getPresentableName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPresentableName() : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget void writeConfiguration(java.io.PrintWriter, org.jetbrains.jps.builders.storage.BuildDataPaths, org.jetbrains.jps.builders.BuildRootIndex)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeConfiguration(out : PrintWriter, dataPaths : BuildDataPaths?, buildRootIndex : BuildRootIndex) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTargetType.Loader org.jetbrains.jps.builders.BuildTarget createTarget(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createTarget(x0 : String) : BuildTarget?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTargetType.Loader org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget createTarget(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createTarget(p0 : String) : ArtifactBuildTarget?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTargetType java.util.List&lt;org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget&gt; computeAllTargets(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeAllTargets(p0 : JpsModel) : MutableList&lt;ArtifactBuildTarget?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTargetType org.jetbrains.jps.builders.BuildTargetLoader createLoader(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createLoader(x0 : JpsModel) : BuildTargetLoader&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuildTargetType org.jetbrains.jps.incremental.artifacts.ArtifactBuildTargetType.Loader createLoader(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createLoader(p0 : JpsModel) : ArtifactBuildTargetType.Loader&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactBuilderService java.util.List&lt;? extends org.jetbrains.jps.incremental.TargetBuilder&lt;?,?&gt;&gt; createBuilders()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createBuilders() : MutableList&lt;out TargetBuilder&lt;*, *&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactOutputToSourceMapping.SourcePathAndRootIndex java.lang.String access$100(org.jetbrains.jps.incremental.artifacts.ArtifactOutputToSourceMapping.SourcePathAndRootIndex)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : ArtifactOutputToSourceMapping.SourcePathAndRootIndex) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactOutputToSourceMapping.SourcePathListExternalizer java.lang.Object read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(x0 : DataInput) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactOutputToSourceMapping.SourcePathListExternalizer java.util.List&lt;org.jetbrains.jps.incremental.artifacts.ArtifactOutputToSourceMapping.SourcePathAndRootIndex&gt; read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(in : DataInput) : MutableList&lt;ArtifactOutputToSourceMapping.SourcePathAndRootIndex?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactOutputToSourceMapping.SourcePathListExternalizer void save(java.io.DataOutput, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(x0 : DataOutput?, x1 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactOutputToSourceMapping.SourcePathListExternalizer void save(java.io.DataOutput, java.util.List&lt;org.jetbrains.jps.incremental.artifacts.ArtifactOutputToSourceMapping.SourcePathAndRootIndex&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput?, value : List&lt;ArtifactOutputToSourceMapping.SourcePathAndRootIndex?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactSourceFilesState ArtifactSourceFilesState(org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget, org.jetbrains.jps.cmdline.ProjectDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ArtifactSourceFilesState(target : ArtifactBuildTarget?, projectDescriptor : ProjectDescriptor)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactSourceFilesState void ensureFsStateInitialized(org.jetbrains.jps.incremental.storage.BuildDataManager, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ensureFsStateInitialized(dataManager : BuildDataManager?, context : CompileContext) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactSourceFilesState void markDirtyFiles(java.util.Set&lt;java.io.File&gt;, boolean, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markDirtyFiles(currentPaths : MutableSet&lt;File?&gt;?, forceMarkDirty : Boolean, context : CompileContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactSourceFilesState void processRecursively(java.io.File, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor, org.jetbrains.jps.incremental.artifacts.instructions.SourceFileFilter, java.util.Set&lt;java.io.File&gt;, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processRecursively(file : File, descriptor : ArtifactRootDescriptor?, filter : SourceFileFilter, currentPaths : MutableSet&lt;File?&gt;?, forceMarkDirty : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.ArtifactsBuildData org.jetbrains.jps.incremental.artifacts.ArtifactSourceFilesState getOrCreateState(org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget, org.jetbrains.jps.cmdline.ProjectDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOrCreateState(target : ArtifactBuildTarget?, projectDescriptor : ProjectDescriptor?) : ArtifactSourceFilesState&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.IncArtifactBuilder.1 void filesDeleted(java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun filesDeleted(paths : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.IncArtifactBuilder.1 void filesGenerated(java.util.Collection&lt;com.intellij.openapi.util.Pair&lt;java.lang.String,java.lang.String&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun filesGenerated(paths : Collection&lt;Pair&lt;String?, String?&gt;?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.IncArtifactBuilder void addFileToProcess(gnu.trove.TIntObjectHashMap&lt;java.util.Set&lt;java.lang.String&gt;&gt;, int, java.lang.String, java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addFileToProcess(filesToProcess : TIntObjectHashMap&lt;Set&lt;String?&gt;?&gt;?, rootIndex : Int, path : String?, deletedFiles : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.IncArtifactBuilder void build(org.jetbrains.jps.builders.BuildTarget, org.jetbrains.jps.builders.DirtyFilesHolder, org.jetbrains.jps.builders.BuildOutputConsumer, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build(x0 : BuildTarget, x1 : DirtyFilesHolder, x2 : BuildOutputConsumer, x3 : CompileContext) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.IncArtifactBuilder void build(org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget, org.jetbrains.jps.builders.DirtyFilesHolder&lt;org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor,org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget&gt;, org.jetbrains.jps.builders.BuildOutputConsumer, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build(p0 : ArtifactBuildTarget, p1 : DirtyFilesHolder&lt;ArtifactRootDescriptor?, ArtifactBuildTarget?&gt;, p2 : BuildOutputConsumer, p3 : CompileContext) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.IncArtifactBuilder void buildStarted(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildStarted(context : CompileContext) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.IncArtifactBuilder void deleteOutdatedFiles(com.intellij.util.containers.MultiMap&lt;java.lang.String,java.lang.String&gt;, org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.storage.SourceToOutputMapping, org.jetbrains.jps.incremental.artifacts.ArtifactOutputToSourceMapping)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun deleteOutdatedFiles(filesToDelete : MultiMap&lt;String?, String?&gt;, context : CompileContext?, srcOutMapping : SourceToOutputMapping?, outSrcMapping : ArtifactOutputToSourceMapping?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.IncArtifactBuilder java.lang.String getPresentableName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPresentableName() : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.JarPathUtil java.io.File getLocalFile(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLocalFile(p0 : String) : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.JpsBuilderArtifactService java.util.Collection&lt;org.jetbrains.jps.model.artifact.JpsArtifact&gt; getArtifacts(org.jetbrains.jps.model.JpsModel, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getArtifacts(p0 : JpsModel, p1 : Boolean) : MutableCollection&lt;JpsArtifact?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.JpsBuilderArtifactService java.util.Collection&lt;org.jetbrains.jps.model.artifact.JpsArtifact&gt; getSyntheticArtifacts(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSyntheticArtifacts(p0 : JpsModel) : MutableCollection&lt;JpsArtifact?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.JpsSyntheticArtifactProvider java.util.List&lt;org.jetbrains.jps.model.artifact.JpsArtifact&gt; createArtifacts(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createArtifacts(p0 : JpsModel) : MutableList&lt;JpsArtifact?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuilderService void generateInstructions(E, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(p0 : E, p1 : ArtifactCompilerInstructionCreator, p2 : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuilderService java.util.Collection&lt;? extends org.jetbrains.jps.builders.BuildTarget&lt;?&gt;&gt; getDependencies(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDependencies(p0 : E) : MutableCollection&lt;out BuildTarget&lt;*&gt;?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.ArchiveElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsArchivePackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(element : JpsArchivePackagingElement, instructionCreator : ArtifactCompilerInstructionCreator, builderContext : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.ArchiveElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(x0 : JpsPackagingElement, x1 : ArtifactCompilerInstructionCreator, x2 : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.ArtifactOutputElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsArtifactOutputPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(element : JpsArtifactOutputPackagingElement, instructionCreator : ArtifactCompilerInstructionCreator?, builderContext : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.ArtifactOutputElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(x0 : JpsPackagingElement, x1 : ArtifactCompilerInstructionCreator, x2 : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.ComplexElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsComplexPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(element : JpsComplexPackagingElement, instructionCreator : ArtifactCompilerInstructionCreator?, builderContext : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.ComplexElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(x0 : JpsPackagingElement, x1 : ArtifactCompilerInstructionCreator, x2 : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.DirectoryCopyElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsDirectoryCopyPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(element : JpsDirectoryCopyPackagingElement, instructionCreator : ArtifactCompilerInstructionCreator?, builderContext : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.DirectoryCopyElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(x0 : JpsPackagingElement, x1 : ArtifactCompilerInstructionCreator, x2 : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.DirectoryElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsDirectoryPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(element : JpsDirectoryPackagingElement, instructionCreator : ArtifactCompilerInstructionCreator, builderContext : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.DirectoryElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(x0 : JpsPackagingElement, x1 : ArtifactCompilerInstructionCreator, x2 : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.ExtractedDirectoryElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsExtractedDirectoryPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(element : JpsExtractedDirectoryPackagingElement, instructionCreator : ArtifactCompilerInstructionCreator?, builderContext : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.ExtractedDirectoryElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(x0 : JpsPackagingElement, x1 : ArtifactCompilerInstructionCreator, x2 : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.FileCopyElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsFileCopyPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(element : JpsFileCopyPackagingElement, instructionCreator : ArtifactCompilerInstructionCreator?, builderContext : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.FileCopyElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(x0 : JpsPackagingElement, x1 : ArtifactCompilerInstructionCreator, x2 : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.ModuleOutputElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(x0 : JpsPackagingElement, x1 : ArtifactCompilerInstructionCreator, x2 : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.ModuleOutputElementBuilder void generateInstructions(org.jetbrains.jps.model.java.JpsProductionModuleOutputPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(element : JpsProductionModuleOutputPackagingElement, instructionCreator : ArtifactCompilerInstructionCreator?, builderContext : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.ModuleOutputElementBuilder java.util.Collection getDependencies(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDependencies(x0 : JpsPackagingElement) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.ModuleOutputElementBuilder java.util.Collection&lt;? extends org.jetbrains.jps.builders.BuildTarget&lt;?&gt;&gt; getDependencies(org.jetbrains.jps.model.java.JpsProductionModuleOutputPackagingElement)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDependencies(p0 : JpsProductionModuleOutputPackagingElement) : MutableCollection&lt;out BuildTarget&lt;*&gt;?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.ModuleTestOutputElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(x0 : JpsPackagingElement, x1 : ArtifactCompilerInstructionCreator, x2 : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.ModuleTestOutputElementBuilder void generateInstructions(org.jetbrains.jps.model.java.JpsTestModuleOutputPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(element : JpsTestModuleOutputPackagingElement, instructionCreator : ArtifactCompilerInstructionCreator?, builderContext : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.ModuleTestOutputElementBuilder java.util.Collection getDependencies(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDependencies(x0 : JpsPackagingElement) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.ModuleTestOutputElementBuilder java.util.Collection&lt;? extends org.jetbrains.jps.builders.BuildTarget&lt;?&gt;&gt; getDependencies(org.jetbrains.jps.model.java.JpsTestModuleOutputPackagingElement)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDependencies(p0 : JpsTestModuleOutputPackagingElement) : MutableCollection&lt;out BuildTarget&lt;*&gt;?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.RootElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsArtifactRootElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(element : JpsArtifactRootElement, instructionCreator : ArtifactCompilerInstructionCreator?, builderContext : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry.RootElementBuilder void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(x0 : JpsPackagingElement, x1 : ArtifactCompilerInstructionCreator, x2 : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry void access$100(org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry, org.jetbrains.jps.model.artifact.elements.JpsCompositePackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : LayoutElementBuildersRegistry, x1 : JpsCompositePackagingElement, x2 : ArtifactCompilerInstructionCreator?, x3 : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry void access$300(org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry, org.jetbrains.jps.model.artifact.elements.JpsComplexPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : LayoutElementBuildersRegistry, x1 : JpsComplexPackagingElement, x2 : ArtifactCompilerInstructionCreator?, x3 : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry void generateChildrenInstructions(org.jetbrains.jps.model.artifact.elements.JpsCompositePackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateChildrenInstructions(element : JpsCompositePackagingElement, instructionCreator : ArtifactCompilerInstructionCreator?, builderContext : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry void generateInstructions(java.util.List&lt;org.jetbrains.jps.model.artifact.elements.JpsPackagingElement&gt;, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(elements : List&lt;JpsPackagingElement?&gt;, instructionCreator : ArtifactCompilerInstructionCreator?, builderContext : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry void generateInstructions(org.jetbrains.jps.model.artifact.JpsArtifact, org.jetbrains.jps.incremental.artifacts.instructions.CopyToDirectoryInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(artifact : JpsArtifact, creator : CopyToDirectoryInstructionCreator?, context : ArtifactInstructionsBuilderContext) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry void generateInstructions(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateInstructions(layoutElement : JpsPackagingElement, instructionCreator : ArtifactCompilerInstructionCreator?, builderContext : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry void generateModuleOutputInstructions(java.lang.String, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateModuleOutputInstructions(p0 : String?, p1 : ArtifactCompilerInstructionCreator?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry void generateSubstitutionInstructions(org.jetbrains.jps.model.artifact.elements.JpsComplexPackagingElement, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateSubstitutionInstructions(element : JpsComplexPackagingElement, instructionCreator : ArtifactCompilerInstructionCreator?, builderContext : ArtifactInstructionsBuilderContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry java.util.Collection&lt;org.jetbrains.jps.builders.BuildTarget&lt;?&gt;&gt; getDependencies(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDependencies(element : JpsPackagingElement) : MutableCollection&lt;BuildTarget&lt;*&gt;?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuilderService&lt;?&gt; getElementBuilder(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getElementBuilder(layoutElement : JpsPackagingElement) : LayoutElementBuilderService&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry org.jetbrains.jps.incremental.artifacts.builders.LayoutElementBuildersRegistry getInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInstance() : LayoutElementBuildersRegistry&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.ArtifactSorter.3 boolean process(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(element : JpsPackagingElement?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.ArtifactSorter.ArtifactsGraph java.util.Set access$100(org.jetbrains.jps.incremental.artifacts.impl.ArtifactSorter.ArtifactsGraph)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : ArtifactSorter.ArtifactsGraph) : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.ArtifactSorter.ArtifactsGraph java.util.Iterator getIn(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getIn(x0 : Any) : MutableIterator?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.ArtifactSorter.ArtifactsGraph java.util.Iterator&lt;org.jetbrains.jps.model.artifact.JpsArtifact&gt; getIn(org.jetbrains.jps.model.artifact.JpsArtifact)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getIn(artifact : JpsArtifact) : MutableIterator&lt;JpsArtifact?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.ArtifactSorter.ArtifactsGraph java.util.Collection&lt;org.jetbrains.jps.model.artifact.JpsArtifact&gt; getNodes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNodes() : MutableCollection&lt;JpsArtifact?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.ArtifactSorter void access$000(org.jetbrains.jps.model.artifact.JpsArtifact, java.util.Set, java.util.Set, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : JpsArtifact?, x1 : MutableSet, x2 : MutableSet?, x3 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.ArtifactSorter void access$200(org.jetbrains.jps.model.artifact.JpsArtifact, com.intellij.util.Consumer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : JpsArtifact, x1 : Consumer?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.ArtifactSorter java.util.Set&lt;org.jetbrains.jps.model.artifact.JpsArtifact&gt; addIncludedArtifacts(java.util.Collection&lt;org.jetbrains.jps.model.artifact.JpsArtifact&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addIncludedArtifacts(p0 : Collection&lt;JpsArtifact?&gt;) : MutableSet&lt;JpsArtifact?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.ArtifactSorter void collectIncludedArtifacts(org.jetbrains.jps.model.artifact.JpsArtifact, java.util.Set&lt;org.jetbrains.jps.model.artifact.JpsArtifact&gt;, java.util.Set&lt;org.jetbrains.jps.model.artifact.JpsArtifact&gt;, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun collectIncludedArtifacts(artifact : JpsArtifact?, processed : MutableSet&lt;JpsArtifact?&gt;, result : MutableSet&lt;JpsArtifact?&gt;?, withOutputPathOnly : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.ArtifactSorter java.util.List&lt;org.jetbrains.jps.model.artifact.JpsArtifact&gt; doGetSortedArtifacts()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doGetSortedArtifacts() : MutableList&lt;JpsArtifact?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.ArtifactSorter void processIncludedArtifacts(org.jetbrains.jps.model.artifact.JpsArtifact, com.intellij.util.Consumer&lt;org.jetbrains.jps.model.artifact.JpsArtifact&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processIncludedArtifacts(artifact : JpsArtifact, consumer : Consumer&lt;JpsArtifact?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.DependentJarsEvaluator java.util.Set&lt;org.jetbrains.jps.incremental.artifacts.instructions.JarInfo&gt; getJars()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getJars() : MutableSet&lt;JarInfo?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder.1 void process(java.io.InputStream, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(p0 : InputStream?, p1 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder.2 void process(java.io.InputStream, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(p0 : InputStream?, p1 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder.JarsGraph java.util.Iterator getIn(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getIn(x0 : Any) : MutableIterator?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder.JarsGraph java.util.Iterator&lt;org.jetbrains.jps.incremental.artifacts.instructions.JarInfo&gt; getIn(org.jetbrains.jps.incremental.artifacts.instructions.JarInfo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getIn(n : JarInfo) : MutableIterator&lt;JarInfo?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder.JarsGraph java.util.Collection&lt;org.jetbrains.jps.incremental.artifacts.instructions.JarInfo&gt; getNodes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNodes() : MutableCollection&lt;JarInfo?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder JarsBuilder(java.util.Set&lt;org.jetbrains.jps.incremental.artifacts.instructions.JarInfo&gt;, org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.BuildOutputConsumer, org.jetbrains.jps.incremental.artifacts.ArtifactOutputToSourceMapping)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun JarsBuilder(jarsToBuild : Set&lt;JarInfo?&gt;, context : CompileContext?, outputConsumer : BuildOutputConsumer?, outSrcMapping : ArtifactOutputToSourceMapping?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder java.util.jar.Manifest access$100(org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder, java.io.InputStream, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : JarsBuilder, x1 : InputStream?, x2 : File?) : Manifest?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder java.lang.String access$200(java.util.jar.JarOutputStream, java.util.Set, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : JarOutputStream?, x1 : MutableSet?, x2 : String) : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder void access$300(java.util.zip.ZipOutputStream, java.lang.String, java.util.Set)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : ZipOutputStream?, x1 : String?, x2 : MutableSet) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder java.util.Set access$400(org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : JarsBuilder) : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder void addDirectoryEntry(java.util.zip.ZipOutputStream, java.lang.String, java.util.Set&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addDirectoryEntry(output : ZipOutputStream?, relativePath : String?, writtenPaths : MutableSet&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder void addFileOrDirRecursively(java.util.zip.ZipOutputStream, java.io.File, org.jetbrains.jps.incremental.artifacts.instructions.SourceFileFilter, java.lang.String, java.lang.String, java.util.Set&lt;java.lang.String&gt;, java.util.List&lt;java.lang.String&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addFileOrDirRecursively(jarOutputStream : ZipOutputStream, file : File, filter : SourceFileFilter, relativePath : String, targetJarPath : String?, writtenItemRelativePaths : MutableSet&lt;String?&gt;, packedFilePaths : MutableList&lt;String?&gt;?, rootIndex : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder void addFileToJar(java.util.jar.JarOutputStream, java.io.File, java.io.File, org.jetbrains.jps.incremental.artifacts.instructions.SourceFileFilter, java.lang.String, java.lang.String, java.util.Set&lt;java.lang.String&gt;, java.util.List&lt;java.lang.String&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addFileToJar(jarOutputStream : JarOutputStream, jarFile : File, file : File, filter : SourceFileFilter?, relativePath : String, targetJarPath : String?, writtenPaths : MutableSet&lt;String?&gt;, packedFilePaths : MutableList&lt;String?&gt;?, rootIndex : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder java.lang.String addParentDirectories(java.util.jar.JarOutputStream, java.util.Set&lt;java.lang.String&gt;, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addParentDirectories(jarOutputStream : JarOutputStream?, writtenPaths : MutableSet&lt;String?&gt;?, relativePath : String) : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder void buildJar(org.jetbrains.jps.incremental.artifacts.instructions.JarInfo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildJar(jar : JarInfo) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder java.util.jar.JarOutputStream createJarOutputStream(java.io.File, java.util.jar.Manifest)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createJarOutputStream(jarFile : File?, manifest : Manifest?) : JarOutputStream&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder java.util.jar.Manifest createManifest(java.io.InputStream, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createManifest(manifestStream : InputStream?, manifestFile : File?) : Manifest?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder void extractFileAndAddToJar(java.util.jar.JarOutputStream, org.jetbrains.jps.incremental.artifacts.instructions.JarBasedArtifactRootDescriptor, java.lang.String, java.util.Set&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun extractFileAndAddToJar(jarOutputStream : JarOutputStream?, root : JarBasedArtifactRootDescriptor, relativeOutputPath : String?, writtenPaths : Set&lt;String?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder java.util.jar.Manifest loadManifest(org.jetbrains.jps.incremental.artifacts.instructions.JarInfo, java.util.List&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun loadManifest(jar : JarInfo, packedFilePaths : MutableList&lt;String?&gt;?) : Manifest?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JarsBuilder org.jetbrains.jps.incremental.artifacts.instructions.JarInfo[] sortJars()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sortJars() : Array&lt;out JarInfo?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JpsArtifactPathUtil java.lang.String appendToPath(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendToPath(basePath : String, relativePath : String) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JpsArtifactPathUtil java.lang.String trimForwardSlashes(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun trimForwardSlashes(path : String) : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JpsArtifactUtil boolean processPackagingElements(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement, com.intellij.util.Processor&lt;org.jetbrains.jps.model.artifact.elements.JpsPackagingElement&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processPackagingElements(element : JpsPackagingElement, processor : Processor&lt;JpsPackagingElement?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JpsArtifactUtil boolean processPackagingElements(org.jetbrains.jps.model.artifact.elements.JpsPackagingElement, com.intellij.util.Processor&lt;org.jetbrains.jps.model.artifact.elements.JpsPackagingElement&gt;, java.util.Set&lt;org.jetbrains.jps.model.artifact.elements.JpsPackagingElement&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processPackagingElements(element : JpsPackagingElement, processor : Processor&lt;JpsPackagingElement?&gt;, processed : MutableSet&lt;JpsPackagingElement?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JpsBuilderArtifactServiceImpl java.util.List&lt;org.jetbrains.jps.model.artifact.JpsArtifact&gt; computeSyntheticArtifacts(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeSyntheticArtifacts(model : JpsModel?) : MutableList&lt;JpsArtifact?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JpsBuilderArtifactServiceImpl java.util.Collection&lt;org.jetbrains.jps.model.artifact.JpsArtifact&gt; getArtifacts(org.jetbrains.jps.model.JpsModel, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getArtifacts(model : JpsModel, includeSynthetic : Boolean) : MutableCollection&lt;JpsArtifact?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JpsBuilderArtifactServiceImpl java.util.Collection getSyntheticArtifacts(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSyntheticArtifacts(x0 : JpsModel) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.impl.JpsBuilderArtifactServiceImpl java.util.List&lt;org.jetbrains.jps.model.artifact.JpsArtifact&gt; getSyntheticArtifacts(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSyntheticArtifacts(model : JpsModel) : MutableList&lt;JpsArtifact?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator void addDirectoryCopyInstructions(java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addDirectoryCopyInstructions(p0 : File) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator void addDirectoryCopyInstructions(java.io.File, org.jetbrains.jps.incremental.artifacts.instructions.SourceFileFilter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addDirectoryCopyInstructions(p0 : File, p1 : SourceFileFilter?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator void addExtractDirectoryInstruction(java.io.File, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addExtractDirectoryInstruction(p0 : File, p1 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator void addFileCopyInstruction(java.io.File, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addFileCopyInstruction(p0 : File, p1 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator archive(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun archive(p0 : String) : ArtifactCompilerInstructionCreator&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator subFolder(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subFolder(p0 : String) : ArtifactCompilerInstructionCreator&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator subFolderByRelativePath(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subFolderByRelativePath(p0 : String) : ArtifactCompilerInstructionCreator?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase.SourceFileFilterImpl SourceFileFilterImpl(org.jetbrains.jps.incremental.artifacts.instructions.SourceFileFilter, org.jetbrains.jps.indices.ModuleExcludeIndex, org.jetbrains.jps.indices.IgnoredFileIndex, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SourceFileFilterImpl(p0 : SourceFileFilter?, p1 : ModuleExcludeIndex, p2 : IgnoredFileIndex?, p3 : Boolean)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase.SourceFileFilterImpl SourceFileFilterImpl(org.jetbrains.jps.incremental.artifacts.instructions.SourceFileFilter, org.jetbrains.jps.indices.ModuleExcludeIndex, org.jetbrains.jps.indices.IgnoredFileIndex, boolean, org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SourceFileFilterImpl(x0 : SourceFileFilter?, x1 : ModuleExcludeIndex, x2 : IgnoredFileIndex?, x3 : Boolean, x4 : ArtifactCompilerInstructionCreatorBase.1?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase.SourceFileFilterImpl boolean accept(java.lang.String, org.jetbrains.jps.cmdline.ProjectDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun accept(p0 : String, p1 : ProjectDescriptor?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase void addDirectoryCopyInstructions(java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addDirectoryCopyInstructions(p0 : File) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase void addDirectoryCopyInstructions(java.io.File, org.jetbrains.jps.incremental.artifacts.instructions.SourceFileFilter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addDirectoryCopyInstructions(directory : File, filter : SourceFileFilter?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase void addExtractDirectoryInstruction(java.io.File, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addExtractDirectoryInstruction(p0 : File, p1 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase void addFileCopyInstruction(java.io.File, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addFileCopyInstruction(p0 : File, p1 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo createDirectoryDestination()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createDirectoryDestination() : DestinationInfo?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo createFileDestination(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createFileDestination(p0 : String) : DestinationInfo?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase void onAdded(org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun onAdded(p0 : ArtifactRootDescriptor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator subFolder(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subFolder(x0 : String) : ArtifactCompilerInstructionCreator&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase subFolder(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subFolder(p0 : String) : ArtifactCompilerInstructionCreatorBase&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator subFolderByRelativePath(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subFolderByRelativePath(p0 : String) : ArtifactCompilerInstructionCreator?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilder java.util.List&lt;org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor&gt; getDescriptors()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDescriptors() : MutableList&lt;ArtifactRootDescriptor?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderImpl boolean addDestination(org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addDestination(descriptor : ArtifactRootDescriptor) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderImpl org.jetbrains.jps.incremental.artifacts.instructions.FileBasedArtifactRootDescriptor createFileBasedRoot(java.io.File, org.jetbrains.jps.incremental.artifacts.instructions.SourceFileFilter, org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createFileBasedRoot(file : File, filter : SourceFileFilter, destinationInfo : DestinationInfo) : FileBasedArtifactRootDescriptor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderImpl org.jetbrains.jps.incremental.artifacts.instructions.JarBasedArtifactRootDescriptor createJarBasedRoot(java.io.File, java.lang.String, org.jetbrains.jps.incremental.artifacts.instructions.SourceFileFilter, org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createJarBasedRoot(jarFile : File, pathInJar : String, filter : SourceFileFilter, destinationInfo : DestinationInfo) : JarBasedArtifactRootDescriptor&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderImpl java.util.List&lt;org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor&gt; getDescriptors()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDescriptors() : MutableList&lt;ArtifactRootDescriptor?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactInstructionsBuilderImpl boolean registerJarFile(org.jetbrains.jps.incremental.artifacts.instructions.JarInfo, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun registerJarFile(p0 : JarInfo, p1 : String) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor ArtifactRootDescriptor(java.io.File, org.jetbrains.jps.incremental.artifacts.instructions.SourceFileFilter, int, org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget, org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ArtifactRootDescriptor(p0 : File?, p1 : SourceFileFilter, p2 : Int, p3 : ArtifactBuildTarget?, p4 : DestinationInfo)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor void copyFromRoot(java.lang.String, int, java.lang.String, org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.BuildOutputConsumer, org.jetbrains.jps.incremental.artifacts.ArtifactOutputToSourceMapping)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFromRoot(p0 : String?, p1 : Int, p2 : String?, p3 : CompileContext, p4 : BuildOutputConsumer?, p5 : ArtifactOutputToSourceMapping?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor java.io.FileFilter createFileFilter()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createFileFilter() : FileFilter&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo getDestinationInfo()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDestinationInfo() : DestinationInfo&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor org.jetbrains.jps.incremental.artifacts.instructions.SourceFileFilter getFilter()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getFilter() : SourceFileFilter&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor java.io.File getRootFile()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRootFile() : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor void writeConfiguration(java.io.PrintWriter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeConfiguration(out : PrintWriter) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.CopyToDirectoryInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator archive(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun archive(p0 : String) : ArtifactCompilerInstructionCreator&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.CopyToDirectoryInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo createDirectoryDestination()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createDirectoryDestination() : DestinationInfo&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.CopyToDirectoryInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.ExplodedDestinationInfo createDirectoryDestination()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createDirectoryDestination() : ExplodedDestinationInfo&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.CopyToDirectoryInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo createFileDestination(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createFileDestination(p0 : String) : DestinationInfo&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.CopyToDirectoryInstructionCreator void onAdded(org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun onAdded(p0 : ArtifactRootDescriptor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.CopyToDirectoryInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator subFolder(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subFolder(x0 : String) : ArtifactCompilerInstructionCreator&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.CopyToDirectoryInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase subFolder(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subFolder(x0 : String) : ArtifactCompilerInstructionCreatorBase&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.CopyToDirectoryInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.CopyToDirectoryInstructionCreator subFolder(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subFolder(p0 : String) : CopyToDirectoryInstructionCreator&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo DestinationInfo(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun DestinationInfo(p0 : String, p1 : String)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo java.lang.String getOutputFilePath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutputFilePath() : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo java.lang.String getOutputPath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutputPath() : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.ExplodedDestinationInfo ExplodedDestinationInfo(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ExplodedDestinationInfo(outputPath : String)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.FileBasedArtifactRootDescriptor FileBasedArtifactRootDescriptor(java.io.File, org.jetbrains.jps.incremental.artifacts.instructions.SourceFileFilter, int, org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget, org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FileBasedArtifactRootDescriptor(file : File, filter : SourceFileFilter, index : Int, target : ArtifactBuildTarget?, destinationInfo : DestinationInfo)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.FileBasedArtifactRootDescriptor void copyFromRoot(java.lang.String, int, java.lang.String, org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.BuildOutputConsumer, org.jetbrains.jps.incremental.artifacts.ArtifactOutputToSourceMapping)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFromRoot(p0 : String?, p1 : Int, p2 : String?, p3 : CompileContext, p4 : BuildOutputConsumer?, p5 : ArtifactOutputToSourceMapping?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.JarBasedArtifactRootDescriptor.1 void process(java.io.InputStream, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(p0 : InputStream?, p1 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.JarBasedArtifactRootDescriptor.EntryProcessor void process(java.io.InputStream, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(p0 : InputStream?, p1 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.JarBasedArtifactRootDescriptor JarBasedArtifactRootDescriptor(java.io.File, java.lang.String, org.jetbrains.jps.incremental.artifacts.instructions.SourceFileFilter, int, org.jetbrains.jps.incremental.artifacts.ArtifactBuildTarget, org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun JarBasedArtifactRootDescriptor(jarFile : File, pathInJar : String, filter : SourceFileFilter, index : Int, target : ArtifactBuildTarget?, destinationInfo : DestinationInfo)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.JarBasedArtifactRootDescriptor void copyFromRoot(java.lang.String, int, java.lang.String, org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.BuildOutputConsumer, org.jetbrains.jps.incremental.artifacts.ArtifactOutputToSourceMapping)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFromRoot(filePath : String?, rootIndex : Int, outputPath : String?, context : CompileContext, outputConsumer : BuildOutputConsumer?, outSrcMapping : ArtifactOutputToSourceMapping?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.JarDestinationInfo JarDestinationInfo(java.lang.String, org.jetbrains.jps.incremental.artifacts.instructions.JarInfo, org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun JarDestinationInfo(pathInJar : String, jarInfo : JarInfo?, jarDestination : DestinationInfo)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.JarDestinationInfo java.lang.String appendPathInJar(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendPathInJar(outputPath : String, pathInJar : String?) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.JarInfo JarInfo(org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun JarInfo(destination : DestinationInfo)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.JarInfo java.util.List&lt;com.intellij.openapi.util.Pair&lt;java.lang.String,java.lang.Object&gt;&gt; getContent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getContent() : MutableList&lt;Pair&lt;String?, Any?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.JarInfo org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo getDestination()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDestination() : DestinationInfo&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.JarInfo java.lang.String getPresentableDestination()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPresentableDestination() : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.PackIntoArchiveInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator archive(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun archive(p0 : String) : ArtifactCompilerInstructionCreator&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.PackIntoArchiveInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo createDirectoryDestination()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createDirectoryDestination() : DestinationInfo&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.PackIntoArchiveInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo createFileDestination(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createFileDestination(x0 : String) : DestinationInfo&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.PackIntoArchiveInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.JarDestinationInfo createFileDestination(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createFileDestination(p0 : String) : JarDestinationInfo&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.PackIntoArchiveInstructionCreator void onAdded(org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun onAdded(descriptor : ArtifactRootDescriptor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.PackIntoArchiveInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator subFolder(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subFolder(x0 : String) : ArtifactCompilerInstructionCreator&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.PackIntoArchiveInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase subFolder(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subFolder(x0 : String) : ArtifactCompilerInstructionCreatorBase&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.PackIntoArchiveInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.PackIntoArchiveInstructionCreator subFolder(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subFolder(p0 : String) : PackIntoArchiveInstructionCreator&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.SkipAllInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator archive(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun archive(x0 : String) : ArtifactCompilerInstructionCreator&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.SkipAllInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.SkipAllInstructionCreator archive(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun archive(p0 : String) : SkipAllInstructionCreator&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.SkipAllInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo createDirectoryDestination()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createDirectoryDestination() : DestinationInfo?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.SkipAllInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.DestinationInfo createFileDestination(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createFileDestination(p0 : String) : DestinationInfo?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.SkipAllInstructionCreator void onAdded(org.jetbrains.jps.incremental.artifacts.instructions.ArtifactRootDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun onAdded(p0 : ArtifactRootDescriptor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.SkipAllInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreator subFolder(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subFolder(x0 : String) : ArtifactCompilerInstructionCreator&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.SkipAllInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.ArtifactCompilerInstructionCreatorBase subFolder(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subFolder(x0 : String) : ArtifactCompilerInstructionCreatorBase&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.SkipAllInstructionCreator org.jetbrains.jps.incremental.artifacts.instructions.SkipAllInstructionCreator subFolder(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subFolder(p0 : String) : SkipAllInstructionCreator&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.SourceFileFilter.1 boolean accept(java.lang.String, org.jetbrains.jps.cmdline.ProjectDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun accept(p0 : String, p1 : ProjectDescriptor?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.artifacts.instructions.SourceFileFilter boolean accept(java.lang.String, org.jetbrains.jps.cmdline.ProjectDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun accept(p0 : String, p1 : ProjectDescriptor?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.BuildFSState void beforeChunkBuildStart(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.impl.BuildTargetChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun beforeChunkBuildStart(context : CompileContext, chunk : BuildTargetChunk) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.BuildFSState void beforeNextRoundStart(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.ModuleChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun beforeNextRoundStart(context : CompileContext, chunk : ModuleChunk?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.BuildFSState void clearContextChunk(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearContextChunk(context : CompileContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.BuildFSState void clearContextRoundData(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearContextRoundData(context : CompileContext?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.BuildFSState org.jetbrains.jps.incremental.fs.FilesDelta getRoundDelta(com.intellij.openapi.util.Key&lt;org.jetbrains.jps.incremental.fs.FilesDelta&gt;, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRoundDelta(key : Key&lt;FilesDelta?&gt;, context : CompileContext?) : FilesDelta?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.BuildFSState java.util.Map&lt;org.jetbrains.jps.builders.BuildRootDescriptor,java.util.Set&lt;java.io.File&gt;&gt; getSourcesToRecompile(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSourcesToRecompile(context : CompileContext, target : BuildTarget&lt;*&gt;?) : MutableMap&lt;BuildRootDescriptor?, Set&lt;File?&gt;?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.BuildFSState boolean isInCurrentContextTargets(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.BuildRootDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isInCurrentContextTargets(context : CompileContext?, rd : BuildRootDescriptor?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.BuildFSState boolean markAllUpToDate(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.BuildRootDescriptor, org.jetbrains.jps.incremental.storage.Timestamps)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markAllUpToDate(context : CompileContext?, rd : BuildRootDescriptor, stamps : Timestamps?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.BuildFSState boolean markDirty(org.jetbrains.jps.incremental.CompileContext, java.io.File, org.jetbrains.jps.builders.BuildRootDescriptor, org.jetbrains.jps.incremental.storage.Timestamps, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markDirty(context : CompileContext?, file : File?, rd : BuildRootDescriptor, tsStorage : Timestamps?, saveEventStamp : Boolean) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.BuildFSState boolean markDirtyIfNotDeleted(org.jetbrains.jps.incremental.CompileContext, java.io.File, org.jetbrains.jps.builders.BuildRootDescriptor, org.jetbrains.jps.incremental.storage.Timestamps)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markDirtyIfNotDeleted(context : CompileContext?, file : File?, rd : BuildRootDescriptor, tsStorage : Timestamps?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.BuildFSState boolean processFilesToRecompile(org.jetbrains.jps.incremental.CompileContext, T, org.jetbrains.jps.builders.FileProcessor&lt;R,T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : BuildRootDescriptor?, T : BuildTarget&lt;R&gt;?&gt; processFilesToRecompile(context : CompileContext, target : T?, processor : FileProcessor&lt;R, T&gt;?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.BuildFSState void setContextTargets(org.jetbrains.jps.incremental.CompileContext, java.util.Set&lt;? extends org.jetbrains.jps.builders.BuildTarget&lt;?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setContextTargets(context : CompileContext?, targets : Set&lt;out BuildTarget&lt;*&gt;?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.BuildFSState void setRoundDelta(com.intellij.openapi.util.Key&lt;org.jetbrains.jps.incremental.fs.FilesDelta&gt;, org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.incremental.fs.FilesDelta)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setRoundDelta(key : Key&lt;FilesDelta?&gt;, context : CompileContext?, delta : FilesDelta?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.FSState void clearRecompile(org.jetbrains.jps.builders.BuildRootDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearRecompile(rd : BuildRootDescriptor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.FSState org.jetbrains.jps.incremental.fs.FilesDelta getDelta(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDelta(buildTarget : BuildTarget&lt;*&gt;?) : FilesDelta&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.FSState java.util.Map&lt;org.jetbrains.jps.builders.BuildRootDescriptor,java.util.Set&lt;java.io.File&gt;&gt; getSourcesToRecompile(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSourcesToRecompile(context : CompileContext, target : BuildTarget&lt;*&gt;?) : MutableMap&lt;BuildRootDescriptor?, Set&lt;File?&gt;?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.FSState void load(java.io.DataInputStream, org.jetbrains.jps.model.JpsModel, org.jetbrains.jps.builders.BuildRootIndex)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun load(in : DataInputStream, model : JpsModel?, buildRootIndex : BuildRootIndex?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.FSState boolean markDirty(org.jetbrains.jps.incremental.CompileContext, java.io.File, org.jetbrains.jps.builders.BuildRootDescriptor, org.jetbrains.jps.incremental.storage.Timestamps, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markDirty(context : CompileContext?, file : File?, rd : BuildRootDescriptor, tsStorage : Timestamps?, saveEventStamp : Boolean) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.FSState boolean markDirtyIfNotDeleted(org.jetbrains.jps.incremental.CompileContext, java.io.File, org.jetbrains.jps.builders.BuildRootDescriptor, org.jetbrains.jps.incremental.storage.Timestamps)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markDirtyIfNotDeleted(context : CompileContext?, file : File?, rd : BuildRootDescriptor, tsStorage : Timestamps?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.FSState void registerDeleted(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun registerDeleted(target : BuildTarget&lt;*&gt;?, file : File) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.FSState void registerDeleted(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;, java.io.File, org.jetbrains.jps.incremental.storage.Timestamps)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun registerDeleted(p0 : BuildTarget&lt;*&gt;?, p1 : File, p2 : Timestamps?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.FSState void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.FilesDelta void addDeleted(java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addDeleted(file : File) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.FilesDelta java.util.Set&lt;java.io.File&gt; clearRecompile(org.jetbrains.jps.builders.BuildRootDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearRecompile(root : BuildRootDescriptor?) : MutableSet&lt;File?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.FilesDelta java.util.Set&lt;java.lang.String&gt; getAndClearDeletedPaths()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAndClearDeletedPaths() : MutableSet&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.FilesDelta void load(java.io.DataInput, org.jetbrains.jps.builders.BuildTarget&lt;?&gt;, org.jetbrains.jps.builders.BuildRootIndex)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun load(in : DataInput, target : BuildTarget&lt;*&gt;, buildRootIndex : BuildRootIndex?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.FilesDelta void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.fs.FilesDelta void skip(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun skip(in : DataInput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.CopyResourcesUtil java.util.List&lt;java.io.File&gt; copyFormsRuntime(java.lang.String, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFormsRuntime(targetDir : String?, deleteOnExit : Boolean) : MutableList&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.CopyResourcesUtil java.io.File copyStreamToFile(java.io.InputStream, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyStreamToFile(stream : InputStream, file : File?) : File?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.FormsParsing.EmptyEntityResolver java.io.Reader getEntity(net.n3.nanoxml.IXMLReader, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEntity(xmlReader : IXMLReader?, name : String?) : Reader&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.FormsParsing.EmptyValidator void parseDTD(java.lang.String, net.n3.nanoxml.IXMLReader, net.n3.nanoxml.IXMLEntityResolver, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDTD(publicID : String?, reader : IXMLReader, entityResolver : IXMLEntityResolver?, external : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.FormsParsing.IXMLBuilderAdapter java.lang.Object getResult()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getResult() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.FormsParsing.MyXMLReader java.io.Reader openStream(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun openStream(publicId : String?, systemId : String?) : Reader&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.FormsParsing.ParserStoppedException java.lang.Throwable fillInStackTrace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fillInStackTrace() : Throwable&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder.1 boolean accept(java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun accept(file : File) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder.2 boolean accept(java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun accept(file : File) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder.3 boolean apply(org.jetbrains.jps.builders.BuildTarget, java.io.File, org.jetbrains.jps.builders.BuildRootDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : BuildTarget?, p1 : File, p2 : BuildRootDescriptor) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder.5 java.io.InputStream lookupClassBeforeClasspath(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lookupClassBeforeClasspath(internalClassName : String) : InputStream?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder.ClassProcessingConsumer.1 void save(org.jetbrains.jps.javac.OutputFileObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(p0 : OutputFileObject) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder.ClassProcessingConsumer ClassProcessingConsumer(org.jetbrains.jps.incremental.java.JavaBuilder, org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.javac.OutputFileConsumer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ClassProcessingConsumer(context : CompileContext?, sink : OutputFileConsumer?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder.ClassProcessingConsumer org.jetbrains.jps.incremental.CompileContext access$400(org.jetbrains.jps.incremental.java.JavaBuilder.ClassProcessingConsumer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : JavaBuilder.ClassProcessingConsumer) : CompileContext?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder.ClassProcessingConsumer org.jetbrains.jps.javac.OutputFileConsumer access$500(org.jetbrains.jps.incremental.java.JavaBuilder.ClassProcessingConsumer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$500(x0 : JavaBuilder.ClassProcessingConsumer) : OutputFileConsumer&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder.ClassProcessingConsumer void save(org.jetbrains.jps.javac.OutputFileObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(p0 : OutputFileObject) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder.DiagnosticSink org.jetbrains.jps.incremental.messages.BuildMessage.Kind getKindByMessageText(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKindByMessageText(line : String) : BuildMessage.Kind&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder.DiagnosticSink void outputLineAvailable(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun outputLineAvailable(p0 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder.DiagnosticSink void registerImports(java.lang.String, java.util.Collection&lt;java.lang.String&gt;, java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun registerImports(p0 : String, p1 : Collection&lt;String?&gt;, p2 : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder.DiagnosticSink void report(javax.tools.Diagnostic&lt;? extends javax.tools.JavaFileObject&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun report(diagnostic : Diagnostic&lt;out JavaFileObject?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder java.io.FileFilter access$000()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000() : FileFilter&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder java.util.List access$300()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300() : MutableList&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder void access$600(org.jetbrains.jps.incremental.java.JavaBuilder, org.jetbrains.jps.incremental.CompileContext, java.lang.Runnable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$600(x0 : JavaBuilder, x1 : CompileContext?, x2 : Runnable?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder org.jetbrains.jps.incremental.ModuleLevelBuilder.ExitCode build(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.ModuleChunk, org.jetbrains.jps.builders.DirtyFilesHolder&lt;org.jetbrains.jps.builders.java.JavaSourceRootDescriptor,org.jetbrains.jps.incremental.ModuleBuildTarget&gt;, org.jetbrains.jps.incremental.ModuleLevelBuilder.OutputConsumer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build(context : CompileContext?, chunk : ModuleChunk?, dirtyFilesHolder : DirtyFilesHolder&lt;JavaSourceRootDescriptor?, ModuleBuildTarget?&gt;?, outputConsumer : ModuleLevelBuilder.OutputConsumer?) : ModuleLevelBuilder.ExitCode&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder java.util.Map&lt;java.io.File,java.util.Set&lt;java.io.File&gt;&gt; buildOutputDirectoriesMap(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.ModuleChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildOutputDirectoriesMap(context : CompileContext?, chunk : ModuleChunk) : MutableMap&lt;File?, Set&lt;File?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder void buildStarted(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildStarted(context : CompileContext) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder org.jetbrains.jps.incremental.ModuleLevelBuilder.ExitCode compile(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.ModuleChunk, org.jetbrains.jps.builders.DirtyFilesHolder&lt;org.jetbrains.jps.builders.java.JavaSourceRootDescriptor,org.jetbrains.jps.incremental.ModuleBuildTarget&gt;, java.util.Collection&lt;java.io.File&gt;, org.jetbrains.jps.incremental.ModuleLevelBuilder.OutputConsumer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compile(context : CompileContext?, chunk : ModuleChunk?, dirtyFilesHolder : DirtyFilesHolder&lt;JavaSourceRootDescriptor?, ModuleBuildTarget?&gt;?, files : Collection&lt;File?&gt;, outputConsumer : ModuleLevelBuilder.OutputConsumer?) : ModuleLevelBuilder.ExitCode&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder boolean compileJava(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.ModuleChunk, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, org.jetbrains.jps.javac.DiagnosticOutputConsumer, org.jetbrains.jps.javac.OutputFileConsumer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compileJava(context : CompileContext, chunk : ModuleChunk, files : Collection&lt;File?&gt;?, classpath : Collection&lt;File?&gt;?, platformCp : Collection&lt;File?&gt;?, sourcePath : Collection&lt;File?&gt;?, diagnosticSink : DiagnosticOutputConsumer?, outputSink : OutputFileConsumer?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder int convertToNumber(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun convertToNumber(ver : String?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder com.intellij.compiler.instrumentation.InstrumentationClassFinder createInstrumentationClassFinder(java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, org.jetbrains.jps.incremental.ModuleLevelBuilder.OutputConsumer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createInstrumentationClassFinder(platformCp : Collection&lt;File?&gt;, classpath : Collection&lt;File?&gt;, outputConsumer : ModuleLevelBuilder.OutputConsumer?) : InstrumentationClassFinder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder java.lang.String getChunkPresentableName(org.jetbrains.jps.ModuleChunk)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getChunkPresentableName(chunk : ModuleChunk) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder int getClassFileVersion(org.jetbrains.asm4.ClassReader)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getClassFileVersion(reader : ClassReader) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder java.util.List&lt;java.lang.String&gt; getCompilationOptions(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.ModuleChunk, org.jetbrains.jps.model.java.compiler.ProcessorConfigProfile)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCompilationOptions(context : CompileContext, chunk : ModuleChunk, profile : ProcessorConfigProfile?) : MutableList&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder int getJavacServerHeapSize(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getJavacServerHeapSize(context : CompileContext) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder java.lang.String getLanguageLevel(org.jetbrains.jps.model.module.JpsModule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLanguageLevel(module : JpsModule?) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder java.lang.String getPresentableName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPresentableName() : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder java.util.Set&lt;java.io.File&gt; instrumentNotNull(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.incremental.ModuleLevelBuilder.OutputConsumer, com.intellij.compiler.instrumentation.InstrumentationClassFinder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun instrumentNotNull(context : CompileContext?, outputConsumer : ModuleLevelBuilder.OutputConsumer, finder : InstrumentationClassFinder?) : MutableSet&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder boolean isEncodingSet(java.util.List&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isEncodingSet(options : List&lt;String?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.JavaBuilder void loadCommonJavacOptions(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun loadCommonJavacOptions(context : CompileContext) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.OutputFilesSink void markError(java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markError(p0 : File) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.OutputFilesSink void markError(java.util.Set&lt;java.io.File&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markError(problematic : Set&lt;File?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.OutputFilesSink void save(org.jetbrains.jps.javac.OutputFileObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(p0 : OutputFileObject) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.java.OutputFilesSink void writeToDisk(org.jetbrains.jps.javac.OutputFileObject, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeToDisk(fileObject : OutputFileObject, isTemp : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.messages.CompilerMessage CompilerMessage(java.lang.String, java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CompilerMessage(compilerName : String?, internalError : Throwable)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.messages.CompilerMessage CompilerMessage(java.lang.String, org.jetbrains.jps.incremental.messages.BuildMessage.Kind, java.lang.String, java.lang.String, long, long, long, long, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CompilerMessage(compilerName : String?, kind : BuildMessage.Kind?, messageText : String?, sourcePath : String?, problemBeginOffset : Long, problemEndOffset : Long, problemLocationOffset : Long, locationLine : Long, locationColumn : Long)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.messages.CompilerMessage java.lang.String getSourcePath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSourcePath() : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.messages.CompilerMessage java.lang.String getTextFromThrowable(java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextFromThrowable(internalError : Throwable) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.messages.FileGeneratedEvent java.util.Collection&lt;com.intellij.openapi.util.Pair&lt;java.lang.String,java.lang.String&gt;&gt; getPaths()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPaths() : MutableCollection&lt;Pair&lt;String?, String?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.resources.ResourcesBuilder.1 boolean apply(org.jetbrains.jps.builders.BuildTarget, java.io.File, org.jetbrains.jps.builders.BuildRootDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : BuildTarget?, x1 : File, x2 : BuildRootDescriptor) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.resources.ResourcesBuilder.1 boolean apply(org.jetbrains.jps.incremental.ResourcesTarget, java.io.File, org.jetbrains.jps.builders.java.ResourceRootDescriptor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(target : ResourcesTarget?, file : File, sourceRoot : ResourceRootDescriptor) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.resources.ResourcesBuilder void access$000(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.java.ResourceRootDescriptor, java.io.File, org.jetbrains.jps.builders.BuildOutputConsumer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : CompileContext?, x1 : ResourceRootDescriptor, x2 : File?, x3 : BuildOutputConsumer?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.resources.ResourcesBuilder void build(org.jetbrains.jps.builders.BuildTarget, org.jetbrains.jps.builders.DirtyFilesHolder, org.jetbrains.jps.builders.BuildOutputConsumer, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build(x0 : BuildTarget, x1 : DirtyFilesHolder, x2 : BuildOutputConsumer, x3 : CompileContext) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.resources.ResourcesBuilder void build(org.jetbrains.jps.incremental.ResourcesTarget, org.jetbrains.jps.builders.DirtyFilesHolder&lt;org.jetbrains.jps.builders.java.ResourceRootDescriptor,org.jetbrains.jps.incremental.ResourcesTarget&gt;, org.jetbrains.jps.builders.BuildOutputConsumer, org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build(p0 : ResourcesTarget, p1 : DirtyFilesHolder&lt;ResourceRootDescriptor?, ResourcesTarget?&gt;, p2 : BuildOutputConsumer, p3 : CompileContext) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.resources.ResourcesBuilder void buildStarted(org.jetbrains.jps.incremental.CompileContext)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildStarted(p0 : CompileContext) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.resources.ResourcesBuilder void copyResource(org.jetbrains.jps.incremental.CompileContext, org.jetbrains.jps.builders.java.ResourceRootDescriptor, java.io.File, org.jetbrains.jps.builders.BuildOutputConsumer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyResource(context : CompileContext?, rd : ResourceRootDescriptor, file : File?, outputConsumer : BuildOutputConsumer?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.resources.ResourcesBuilder java.lang.String getPresentableName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPresentableName() : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.AbstractStateStorage com.intellij.util.io.DataExternalizer access$000(org.jetbrains.jps.incremental.storage.AbstractStateStorage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : AbstractStateStorage) : DataExternalizer?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.AbstractStateStorage void appendData(Key, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendData(p0 : Key, p1 : T) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.AbstractStateStorage com.intellij.util.io.PersistentHashMap&lt;Key,T&gt; createMap(java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createMap(file : File?) : PersistentHashMap&lt;Key, T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.AbstractStateStorage T getState(Key)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getState(p0 : Key) : T?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.AbstractStateStorage void remove(Key)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Key) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.AbstractStateStorage void update(Key, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun update(p0 : Key, p1 : T?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.BuildDataManager void closeSourceToOutputStorages(java.util.Collection&lt;org.jetbrains.jps.builders.impl.BuildTargetChunk&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun closeSourceToOutputStorages(chunks : Collection&lt;BuildTargetChunk?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.BuildDataManager void closeStorage(org.jetbrains.jps.incremental.storage.AbstractStateStorage&lt;?,?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun closeStorage(storage : AbstractStateStorage&lt;*, *&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.BuildDataManager org.jetbrains.jps.incremental.artifacts.ArtifactsBuildData getArtifactsBuildData()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getArtifactsBuildData() : ArtifactsBuildData&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.BuildDataManager org.jetbrains.jps.builders.java.dependencyView.Mappings getMappings()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMappings() : Mappings&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.BuildDataManager java.io.File getMappingsRoot()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMappingsRoot() : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.BuildDataManager org.jetbrains.jps.incremental.storage.OneToManyPathsMapping getSourceToFormMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSourceToFormMap() : OneToManyPathsMapping&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.BuildDataManager java.io.File getSourceToFormsRoot()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSourceToFormsRoot() : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.BuildDataManager org.jetbrains.jps.builders.storage.SourceToOutputMapping getSourceToOutputMap(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSourceToOutputMap(target : BuildTarget&lt;*&gt;?) : SourceToOutputMapping&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.BuildDataManager void wipeStorage(java.io.File, org.jetbrains.jps.incremental.storage.AbstractStateStorage&lt;?,?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun wipeStorage(root : File?, storage : AbstractStateStorage&lt;*, *&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.BuildTargetConfiguration java.io.File getConfigFile()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getConfigFile() : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.BuildTargetConfiguration java.lang.String load()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun load() : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.BuildTargetTypeState BuildTargetTypeState(org.jetbrains.jps.builders.BuildTargetType&lt;?&gt;, org.jetbrains.jps.incremental.storage.BuildTargetsState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BuildTargetTypeState(targetType : BuildTargetType&lt;*&gt;?, state : BuildTargetsState)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.BuildTargetsState int getBuildTargetId(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBuildTargetId(p0 : BuildTarget&lt;*&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.BuildTargetsState org.jetbrains.jps.incremental.storage.BuildTargetConfiguration getTargetConfiguration(org.jetbrains.jps.builders.BuildTarget&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTargetConfiguration(target : BuildTarget&lt;*&gt;) : BuildTargetConfiguration?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.BuildTargetsState java.io.File getTargetTypesFile()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTargetTypesFile() : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.FileKeyDescriptor java.io.File read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(in : DataInput?) : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.FileKeyDescriptor java.lang.Object read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(x0 : DataInput?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.FileKeyDescriptor void save(java.io.DataOutput, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput?, value : File) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.FileKeyDescriptor void save(java.io.DataOutput, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(x0 : DataOutput?, x1 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.ModuleOutputRootsLayout.PairDataExternalizer com.intellij.openapi.util.Pair&lt;java.lang.String,java.lang.String&gt; read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(in : DataInput?) : Pair&lt;String?, String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.ModuleOutputRootsLayout.PairDataExternalizer java.lang.Object read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(x0 : DataInput?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.ModuleOutputRootsLayout.PairDataExternalizer void save(java.io.DataOutput, com.intellij.openapi.util.Pair&lt;java.lang.String,java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput?, value : Pair&lt;String?, String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.ModuleOutputRootsLayout.PairDataExternalizer void save(java.io.DataOutput, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(x0 : DataOutput?, x1 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.ModuleOutputRootsLayout void appendData(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendData(p0 : Any, p1 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.OneToManyPathsMapping.PathCollectionExternalizer java.lang.Object read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(x0 : DataInput) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.OneToManyPathsMapping.PathCollectionExternalizer java.util.Collection&lt;java.lang.String&gt; read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(in : DataInput) : MutableCollection&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.OneToManyPathsMapping.PathCollectionExternalizer void save(java.io.DataOutput, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(x0 : DataOutput?, x1 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.OneToManyPathsMapping.PathCollectionExternalizer void save(java.io.DataOutput, java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput?, value : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.OneToManyPathsMapping void appendData(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendData(x0 : Any, x1 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.OneToManyPathsMapping void appendData(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendData(p0 : String, p1 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.OneToManyPathsMapping void appendData(java.lang.String, java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendData(p0 : String, p1 : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.OneToManyPathsMapping java.lang.Object getState(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getState(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.OneToManyPathsMapping java.util.Collection&lt;java.lang.String&gt; getState(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getState(keyPath : String) : MutableCollection&lt;String?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.OneToManyPathsMapping java.util.Collection&lt;java.lang.String&gt; normalizePaths(java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun normalizePaths(outputs : Collection&lt;String?&gt;) : MutableCollection&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.OneToManyPathsMapping void remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(x0 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.OneToManyPathsMapping void remove(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(keyPath : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.OneToManyPathsMapping void removeData(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeData(p0 : String, p1 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.OneToManyPathsMapping void update(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun update(x0 : Any, x1 : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.OneToManyPathsMapping void update(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun update(p0 : String, p1 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.OneToManyPathsMapping void update(java.lang.String, java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun update(p0 : String, p1 : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.ProjectTimestamps org.jetbrains.jps.incremental.storage.TimestampStorage getStorage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getStorage() : TimestampStorage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.SourceToOutputMappingImpl void appendOutput(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendOutput(p0 : String, p1 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.SourceToOutputMappingImpl java.util.Collection&lt;java.lang.String&gt; getOutputs(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutputs(p0 : String) : MutableCollection&lt;String?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.SourceToOutputMappingImpl java.util.Collection&lt;java.lang.String&gt; getSources()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSources() : MutableCollection&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.SourceToOutputMappingImpl java.util.Iterator&lt;java.lang.String&gt; getSourcesIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSourcesIterator() : MutableIterator&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.SourceToOutputMappingImpl void remove(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.SourceToOutputMappingImpl void removeOutput(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeOutput(p0 : String, p1 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.SourceToOutputMappingImpl void setOutput(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOutput(p0 : String, p1 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.SourceToOutputMappingImpl void setOutputs(java.lang.String, java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOutputs(p0 : String, p1 : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.TimestampStorage.StateExternalizer java.lang.Object read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(x0 : DataInput) : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.TimestampStorage.StateExternalizer org.jetbrains.jps.incremental.storage.TimestampStorage.TimestampPerTarget[] read(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun read(in : DataInput) : Array&lt;out TimestampStorage.TimestampPerTarget?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.TimestampStorage.StateExternalizer void save(java.io.DataOutput, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(x0 : DataOutput, x1 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.TimestampStorage.StateExternalizer void save(java.io.DataOutput, org.jetbrains.jps.incremental.storage.TimestampStorage.TimestampPerTarget[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput, value : Array&lt;out TimestampStorage.TimestampPerTarget?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.TimestampStorage void saveStamp(java.io.File, org.jetbrains.jps.builders.BuildTarget&lt;?&gt;, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun saveStamp(file : File?, buildTarget : BuildTarget&lt;*&gt;, timestamp : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.TimestampStorage org.jetbrains.jps.incremental.storage.TimestampStorage.TimestampPerTarget[] updateTimestamp(org.jetbrains.jps.incremental.storage.TimestampStorage.TimestampPerTarget[], int, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTimestamp(oldState : Array&lt;out TimestampStorage.TimestampPerTarget?&gt;?, targetId : Int, timestamp : Long) : Array&lt;out TimestampStorage.TimestampPerTarget?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.TimestampValidityState TimestampValidityState(java.io.DataInput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TimestampValidityState(is : DataInput)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.TimestampValidityState boolean equalsTo(org.jetbrains.jps.incremental.storage.ValidityState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equalsTo(otherState : ValidityState?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.TimestampValidityState void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(out : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.Timestamps void saveStamp(java.io.File, org.jetbrains.jps.builders.BuildTarget&lt;?&gt;, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun saveStamp(p0 : File?, p1 : BuildTarget&lt;*&gt;, p2 : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.ValidityState boolean equalsTo(org.jetbrains.jps.incremental.storage.ValidityState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equalsTo(p0 : ValidityState?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.incremental.storage.ValidityState void save(java.io.DataOutput)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(p0 : DataOutput) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.indices.impl.IgnoredFileIndexImpl IgnoredFileIndexImpl(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun IgnoredFileIndexImpl(model : JpsModel)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.indices.impl.ModuleExcludeIndexImpl ModuleExcludeIndexImpl(org.jetbrains.jps.model.JpsModel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ModuleExcludeIndexImpl(model : JpsModel)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.BinaryContent BinaryContent(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BinaryContent(buf : ByteArray)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.BinaryContent void _writeToFile(java.io.File, org.jetbrains.jps.javac.BinaryContent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun _writeToFile(file : File?, content : BinaryContent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.CompilationCanceledException java.lang.Throwable fillInStackTrace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fillInStackTrace() : Throwable&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.DiagnosticOutputConsumer void outputLineAvailable(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun outputLineAvailable(p0 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.DiagnosticOutputConsumer void registerImports(java.lang.String, java.util.Collection&lt;java.lang.String&gt;, java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun registerImports(p0 : String, p1 : Collection&lt;String?&gt;, p2 : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacASTAnalyser.ImportsCollector java.lang.Object visitClass(com.sun.source.tree.ClassTree, com.sun.source.util.Trees)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitClass(node : ClassTree?, trees : Trees?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacASTAnalyser.ImportsCollector java.lang.Object visitClass(com.sun.source.tree.ClassTree, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitClass(x0 : ClassTree?, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacASTAnalyser.ImportsCollector java.lang.Object visitImport(com.sun.source.tree.ImportTree, com.sun.source.util.Trees)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitImport(node : ImportTree, trees : Trees?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacASTAnalyser.ImportsCollector java.lang.Object visitImport(com.sun.source.tree.ImportTree, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun visitImport(x0 : ImportTree, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacASTAnalyser boolean process(java.util.Set&lt;? extends javax.lang.model.element.TypeElement&gt;, javax.annotation.processing.RoundEnvironment)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(annotations : Set&lt;out TypeElement?&gt;?, roundEnv : RoundEnvironment) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacFileManager.Context void consumeOutputFile(org.jetbrains.jps.javac.OutputFileObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun consumeOutputFile(p0 : OutputFileObject) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacFileManager JavacFileManager(org.jetbrains.jps.javac.JavacFileManager.Context)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun JavacFileManager(context : JavacFileManager.Context)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacFileManager java.lang.String externalizeFileName(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun externalizeFileName(name : CharSequence) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacFileManager java.lang.String externalizeFileName(java.lang.CharSequence, javax.tools.JavaFileObject.Kind)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun externalizeFileName(cs : CharSequence, kind : JavaFileObject.Kind) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacFileManager java.io.File findOutputDir(java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findOutputDir(src : File?) : File?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacFileManager org.jetbrains.jps.javac.JavacFileManager.Context getContext()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getContext() : JavacFileManager.Context&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacFileManager javax.tools.FileObject getFileForInput(javax.tools.JavaFileManager.Location, java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getFileForInput(location : JavaFileManager.Location?, packageName : String?, relativeName : String?) : FileObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacFileManager javax.tools.FileObject getFileForOutput(javax.tools.JavaFileManager.Location, java.lang.String, java.lang.String, javax.tools.FileObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getFileForOutput(location : JavaFileManager.Location?, packageName : String, relativeName : String?, sibling : FileObject?) : FileObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacFileManager org.jetbrains.jps.javac.OutputFileObject getFileForOutput(javax.tools.JavaFileManager.Location, javax.tools.JavaFileObject.Kind, java.lang.String, java.lang.String, javax.tools.FileObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getFileForOutput(location : JavaFileManager.Location?, kind : JavaFileObject.Kind, fileName : String?, className : String?, sibling : FileObject?) : OutputFileObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacFileManager javax.tools.JavaFileObject getJavaFileForInput(javax.tools.JavaFileManager.Location, java.lang.String, javax.tools.JavaFileObject.Kind)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getJavaFileForInput(location : JavaFileManager.Location?, className : String?, kind : JavaFileObject.Kind?) : JavaFileObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacFileManager javax.tools.JavaFileObject getJavaFileForOutput(javax.tools.JavaFileManager.Location, java.lang.String, javax.tools.JavaFileObject.Kind, javax.tools.FileObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getJavaFileForOutput(location : JavaFileManager.Location?, className : String, kind : JavaFileObject.Kind, sibling : FileObject?) : JavaFileObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacFileManager javax.tools.JavaFileObject.Kind getKind(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKind(name : String) : JavaFileObject.Kind?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacFileManager java.io.File getSingleOutputDirectory(javax.tools.JavaFileManager.Location, javax.tools.JavaFileObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSingleOutputDirectory(loc : JavaFileManager.Location?, sourceFile : JavaFileObject?) : File?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacFileManager javax.tools.StandardJavaFileManager getStdManager()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getStdManager() : StandardJavaFileManager&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacFileManager void setOutputDirectories(java.util.Map&lt;java.io.File,java.util.Set&lt;java.io.File&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOutputDirectories(outputDirToSrcRoots : Map&lt;File?, Set&lt;File?&gt;?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacMain.ContextImpl ContextImpl(javax.tools.JavaCompiler, org.jetbrains.jps.javac.DiagnosticOutputConsumer, org.jetbrains.jps.javac.OutputFileConsumer, org.jetbrains.jps.api.CanceledStatus, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ContextImpl(p0 : JavaCompiler, p1 : DiagnosticOutputConsumer, p2 : OutputFileConsumer, p3 : CanceledStatus?, p4 : Boolean)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacMain.ContextImpl void consumeOutputFile(org.jetbrains.jps.javac.OutputFileObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun consumeOutputFile(p0 : OutputFileObject) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacMain boolean compile(java.util.Collection&lt;java.lang.String&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Map&lt;java.io.File,java.util.Set&lt;java.io.File&gt;&gt;, org.jetbrains.jps.javac.DiagnosticOutputConsumer, org.jetbrains.jps.javac.OutputFileConsumer, org.jetbrains.jps.api.CanceledStatus, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compile(options : Collection&lt;String?&gt;?, sources : Collection&lt;File?&gt;?, classpath : Collection&lt;File?&gt;?, platformClasspath : Collection&lt;File?&gt;?, sourcePath : Collection&lt;File?&gt;?, outputDirToRoots : Map&lt;File?, Set&lt;File?&gt;?&gt;?, outConsumer : DiagnosticOutputConsumer, outputSink : OutputFileConsumer?, canceledStatus : CanceledStatus?, useEclipseCompiler : Boolean) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacMain boolean isAnnotationProcessingEnabled(java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAnnotationProcessingEnabled(options : Collection&lt;String?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacMain boolean isOptionSet(java.util.Collection&lt;java.lang.String&gt;, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isOptionSet(options : Collection&lt;String?&gt;, option : String?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacMain java.util.Collection&lt;java.lang.String&gt; prepareOptions(java.util.Collection&lt;java.lang.String&gt;, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun prepareOptions(options : Collection&lt;String?&gt;, usingJavac : Boolean) : MutableCollection&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacProtoUtil org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Kind convertKind(javax.tools.Diagnostic.Kind)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun convertKind(kind : Diagnostic.Kind) : JavacRemoteProto.Message.Response.CompileMessage.Kind&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacProtoUtil org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Kind convertKind(javax.tools.JavaFileObject.Kind)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun convertKind(kind : JavaFileObject.Kind) : JavacRemoteProto.Message.Response.OutputObject.Kind&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacProtoUtil org.jetbrains.jps.javac.JavacRemoteProto.Message.Response createBuildCompletedResponse(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createBuildCompletedResponse(code : Boolean) : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacProtoUtil org.jetbrains.jps.javac.JavacRemoteProto.Message.Response createBuildMessageResponse(javax.tools.Diagnostic&lt;? extends javax.tools.JavaFileObject&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createBuildMessageResponse(diagnostic : Diagnostic&lt;out JavaFileObject?&gt;) : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacProtoUtil org.jetbrains.jps.javac.JavacRemoteProto.Message.Request createCancelRequest()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCancelRequest() : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacProtoUtil org.jetbrains.jps.javac.JavacRemoteProto.Message.Response createClassDataResponse(java.lang.String, java.util.Collection&lt;java.lang.String&gt;, java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createClassDataResponse(className : String, imports : Collection&lt;String?&gt;, staticImports : Collection&lt;String?&gt;) : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacProtoUtil org.jetbrains.jps.javac.JavacRemoteProto.Message.Request createCompilationRequest(java.util.List&lt;java.lang.String&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Map&lt;java.io.File,java.util.Set&lt;java.io.File&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCompilationRequest(options : List&lt;String?&gt;?, files : Collection&lt;File?&gt;, classpath : Collection&lt;File?&gt;, platformCp : Collection&lt;File?&gt;, sourcePath : Collection&lt;File?&gt;, outs : Map&lt;File?, Set&lt;File?&gt;?&gt;) : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacProtoUtil org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure createFailure(java.lang.String, java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createFailure(p0 : String, p1 : Throwable?) : JavacRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacProtoUtil org.jetbrains.jps.javac.JavacRemoteProto.Message.Response createOutputObjectResponse(org.jetbrains.jps.javac.OutputFileObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createOutputObjectResponse(fileObject : OutputFileObject) : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacProtoUtil org.jetbrains.jps.javac.JavacRemoteProto.Message.Response createRequestAckResponse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createRequestAckResponse() : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacProtoUtil org.jetbrains.jps.javac.JavacRemoteProto.Message.Request createShutdownRequest()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createShutdownRequest() : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacProtoUtil org.jetbrains.jps.javac.JavacRemoteProto.Message.Response createStdOutputResponse(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createStdOutputResponse(text : String) : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacProtoUtil java.util.UUID fromProtoUUID(org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fromProtoUUID(requestId : JavacRemoteProto.Message.UUID) : UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacProtoUtil org.jetbrains.jps.javac.JavacRemoteProto.Message toMessage(java.util.UUID, org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toMessage(requestId : UUID, failure : JavacRemoteProto.Message.Failure) : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacProtoUtil org.jetbrains.jps.javac.JavacRemoteProto.Message toMessage(java.util.UUID, org.jetbrains.jps.javac.JavacRemoteProto.Message.Request)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toMessage(requestId : UUID, request : JavacRemoteProto.Message.Request) : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacProtoUtil org.jetbrains.jps.javac.JavacRemoteProto.Message toMessage(java.util.UUID, org.jetbrains.jps.javac.JavacRemoteProto.Message.Response)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toMessage(requestId : UUID, response : JavacRemoteProto.Message.Response) : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacProtoUtil org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID toProtoUUID(java.util.UUID)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toProtoUUID(requestId : UUID) : JavacRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message access$7000(org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$7000(x0 : JavacRemoteProto.Message.Builder) : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder access$7100()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$7100() : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder clearFailure()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearFailure() : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder clearMessageType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearMessageType() : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder clearRequest()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearRequest() : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder clearResponse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearResponse() : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder clearSessionId()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearSessionId() : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder mergeFailure(org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFailure(value : JavacRemoteProto.Message.Failure?) : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder mergeFrom(org.jetbrains.jps.javac.JavacRemoteProto.Message)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : JavacRemoteProto.Message?) : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder mergeRequest(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeRequest(value : JavacRemoteProto.Message.Request?) : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder mergeResponse(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeResponse(value : JavacRemoteProto.Message.Response?) : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder mergeSessionId(org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeSessionId(value : JavacRemoteProto.Message.UUID?) : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder setFailure(org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setFailure(builderForValue : JavacRemoteProto.Message.Failure.Builder) : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder setFailure(org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setFailure(value : JavacRemoteProto.Message.Failure) : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder setMessageType(org.jetbrains.jps.javac.JavacRemoteProto.Message.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setMessageType(value : JavacRemoteProto.Message.Type) : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder setRequest(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setRequest(builderForValue : JavacRemoteProto.Message.Request.Builder) : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder setRequest(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setRequest(value : JavacRemoteProto.Message.Request) : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder setResponse(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setResponse(builderForValue : JavacRemoteProto.Message.Response.Builder) : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder setResponse(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setResponse(value : JavacRemoteProto.Message.Response) : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder setSessionId(org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setSessionId(builderForValue : JavacRemoteProto.Message.UUID.Builder) : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder setSessionId(org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setSessionId(value : JavacRemoteProto.Message.UUID) : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure access$600(org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$600(x0 : JavacRemoteProto.Message.Failure.Builder) : JavacRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder access$700()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$700() : JavacRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : JavacRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : JavacRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : JavacRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : JavacRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder clearDescription()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearDescription() : JavacRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder clearErrorCode()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearErrorCode() : JavacRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder clearStacktrace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearStacktrace() : JavacRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : JavacRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : JavacRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder mergeFrom(org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : JavacRemoteProto.Message.Failure?) : JavacRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder setDescription(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setDescription(value : String) : JavacRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder setErrorCode(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setErrorCode(value : Int) : JavacRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder setStacktrace(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setStacktrace(value : String) : JavacRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure java.lang.Object access$1002(org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1002(x0 : JavacRemoteProto.Message.Failure, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure java.lang.Object access$1102(org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1102(x0 : JavacRemoteProto.Message.Failure, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure int access$1202(org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1202(x0 : JavacRemoteProto.Message.Failure, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure int access$902(org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$902(x0 : JavacRemoteProto.Message.Failure, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : JavacRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure com.google.protobuf.ByteString getDescriptionBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDescriptionBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure com.google.protobuf.ByteString getStacktraceBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getStacktraceBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : JavacRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder newBuilder(org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : JavacRemoteProto.Message.Failure?) : JavacRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : JavacRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : JavacRemoteProto.Message.Failure?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Failure?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : JavacRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : JavacRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : JavacRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : JavacRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Failure&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : JavacRemoteProto.Message.Failure.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request access$1900(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1900(x0 : JavacRemoteProto.Message.Request.Builder) : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder access$2000()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2000() : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder addAllClasspath(java.lang.Iterable&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllClasspath(values : Iterable&lt;String?&gt;?) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder addAllFile(java.lang.Iterable&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllFile(values : Iterable&lt;String?&gt;?) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder addAllOption(java.lang.Iterable&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllOption(values : Iterable&lt;String?&gt;?) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder addAllOutput(java.lang.Iterable&lt;? extends org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllOutput(values : Iterable&lt;out JavacRemoteProto.Message.Request.OutputGroup?&gt;?) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder addAllPlatformClasspath(java.lang.Iterable&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllPlatformClasspath(values : Iterable&lt;String?&gt;?) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder addAllSourcepath(java.lang.Iterable&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllSourcepath(values : Iterable&lt;String?&gt;?) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder addClasspath(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addClasspath(value : String) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder addFile(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addFile(value : String) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder addOption(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addOption(value : String) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder addOutput(int, org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addOutput(index : Int, builderForValue : JavacRemoteProto.Message.Request.OutputGroup.Builder) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder addOutput(int, org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addOutput(index : Int, value : JavacRemoteProto.Message.Request.OutputGroup) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder addOutput(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addOutput(builderForValue : JavacRemoteProto.Message.Request.OutputGroup.Builder) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder addOutput(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addOutput(value : JavacRemoteProto.Message.Request.OutputGroup) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder addPlatformClasspath(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addPlatformClasspath(value : String) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder addSourcepath(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addSourcepath(value : String) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder clearClasspath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearClasspath() : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder clearFile()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearFile() : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder clearOption()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearOption() : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder clearOutput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearOutput() : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder clearPlatformClasspath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearPlatformClasspath() : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder clearRequestType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearRequestType() : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder clearSourcepath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearSourcepath() : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder mergeFrom(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : JavacRemoteProto.Message.Request?) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder removeOutput(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeOutput(index : Int) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder setClasspath(int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setClasspath(index : Int, value : String) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder setFile(int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setFile(index : Int, value : String) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder setOption(int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOption(index : Int, value : String) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder setOutput(int, org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOutput(index : Int, builderForValue : JavacRemoteProto.Message.Request.OutputGroup.Builder) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder setOutput(int, org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOutput(index : Int, value : JavacRemoteProto.Message.Request.OutputGroup) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder setPlatformClasspath(int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPlatformClasspath(index : Int, value : String) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder setRequestType(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setRequestType(value : JavacRemoteProto.Message.Request.Type) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder setSourcepath(int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setSourcepath(index : Int, value : String) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup access$1300(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1300(x0 : JavacRemoteProto.Message.Request.OutputGroup.Builder) : JavacRemoteProto.Message.Request.OutputGroup&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder access$1400()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1400() : JavacRemoteProto.Message.Request.OutputGroup.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder addAllSourceRoot(java.lang.Iterable&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllSourceRoot(values : Iterable&lt;String?&gt;?) : JavacRemoteProto.Message.Request.OutputGroup.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder addSourceRoot(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addSourceRoot(value : String) : JavacRemoteProto.Message.Request.OutputGroup.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : JavacRemoteProto.Message.Request.OutputGroup&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : JavacRemoteProto.Message.Request.OutputGroup&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : JavacRemoteProto.Message.Request.OutputGroup&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : JavacRemoteProto.Message.Request.OutputGroup.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder clearOutputRoot()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearOutputRoot() : JavacRemoteProto.Message.Request.OutputGroup.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder clearSourceRoot()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearSourceRoot() : JavacRemoteProto.Message.Request.OutputGroup.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : JavacRemoteProto.Message.Request.OutputGroup.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : JavacRemoteProto.Message.Request.OutputGroup.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message.Request.OutputGroup&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Request.OutputGroup.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder mergeFrom(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : JavacRemoteProto.Message.Request.OutputGroup?) : JavacRemoteProto.Message.Request.OutputGroup.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder setOutputRoot(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOutputRoot(value : String) : JavacRemoteProto.Message.Request.OutputGroup.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder setSourceRoot(int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setSourceRoot(index : Int, value : String) : JavacRemoteProto.Message.Request.OutputGroup.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup java.lang.Object access$1602(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1602(x0 : JavacRemoteProto.Message.Request.OutputGroup, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup com.google.protobuf.LazyStringList access$1700(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1700(x0 : JavacRemoteProto.Message.Request.OutputGroup) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup com.google.protobuf.LazyStringList access$1702(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup, com.google.protobuf.LazyStringList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1702(x0 : JavacRemoteProto.Message.Request.OutputGroup, x1 : LazyStringList?) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup int access$1802(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1802(x0 : JavacRemoteProto.Message.Request.OutputGroup, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : JavacRemoteProto.Message.Request.OutputGroup&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message.Request.OutputGroup&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup com.google.protobuf.ByteString getOutputRootBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutputRootBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : JavacRemoteProto.Message.Request.OutputGroup.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder newBuilder(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : JavacRemoteProto.Message.Request.OutputGroup?) : JavacRemoteProto.Message.Request.OutputGroup.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : JavacRemoteProto.Message.Request.OutputGroup.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : JavacRemoteProto.Message.Request.OutputGroup?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Request.OutputGroup?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : JavacRemoteProto.Message.Request.OutputGroup&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Request.OutputGroup&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : JavacRemoteProto.Message.Request.OutputGroup&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Request.OutputGroup&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : JavacRemoteProto.Message.Request.OutputGroup&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Request.OutputGroup&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : JavacRemoteProto.Message.Request.OutputGroup&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Request.OutputGroup&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.OutputGroup.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : JavacRemoteProto.Message.Request.OutputGroup.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Type.1 com.google.protobuf.Internal.EnumLite findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(x0 : Int) : Internal.EnumLite?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Type.1 org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Type findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(number : Int) : JavacRemoteProto.Message.Request.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Type org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Type valueOf(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(value : Int) : JavacRemoteProto.Message.Request.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Type access$2202(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request, org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2202(x0 : JavacRemoteProto.Message.Request, x1 : JavacRemoteProto.Message.Request.Type?) : JavacRemoteProto.Message.Request.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request com.google.protobuf.LazyStringList access$2300(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2300(x0 : JavacRemoteProto.Message.Request) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request com.google.protobuf.LazyStringList access$2302(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request, com.google.protobuf.LazyStringList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2302(x0 : JavacRemoteProto.Message.Request, x1 : LazyStringList?) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request com.google.protobuf.LazyStringList access$2400(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2400(x0 : JavacRemoteProto.Message.Request) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request com.google.protobuf.LazyStringList access$2402(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request, com.google.protobuf.LazyStringList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2402(x0 : JavacRemoteProto.Message.Request, x1 : LazyStringList?) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request com.google.protobuf.LazyStringList access$2500(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2500(x0 : JavacRemoteProto.Message.Request) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request com.google.protobuf.LazyStringList access$2502(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request, com.google.protobuf.LazyStringList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2502(x0 : JavacRemoteProto.Message.Request, x1 : LazyStringList?) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request com.google.protobuf.LazyStringList access$2600(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2600(x0 : JavacRemoteProto.Message.Request) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request com.google.protobuf.LazyStringList access$2602(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request, com.google.protobuf.LazyStringList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2602(x0 : JavacRemoteProto.Message.Request, x1 : LazyStringList?) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request com.google.protobuf.LazyStringList access$2700(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2700(x0 : JavacRemoteProto.Message.Request) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request com.google.protobuf.LazyStringList access$2702(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request, com.google.protobuf.LazyStringList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2702(x0 : JavacRemoteProto.Message.Request, x1 : LazyStringList?) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request java.util.List access$2800(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2800(x0 : JavacRemoteProto.Message.Request) : MutableList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request java.util.List access$2802(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request, java.util.List)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2802(x0 : JavacRemoteProto.Message.Request, x1 : List?) : MutableList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request int access$2902(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$2902(x0 : JavacRemoteProto.Message.Request, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request org.jetbrains.jps.javac.JavacRemoteProto.Message.Request getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request org.jetbrains.jps.javac.JavacRemoteProto.Message.Request getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder newBuilder(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : JavacRemoteProto.Message.Request?) : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request org.jetbrains.jps.javac.JavacRemoteProto.Message.Request parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : JavacRemoteProto.Message.Request?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request org.jetbrains.jps.javac.JavacRemoteProto.Message.Request parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Request?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request org.jetbrains.jps.javac.JavacRemoteProto.Message.Request parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request org.jetbrains.jps.javac.JavacRemoteProto.Message.Request parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request org.jetbrains.jps.javac.JavacRemoteProto.Message.Request parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request org.jetbrains.jps.javac.JavacRemoteProto.Message.Request parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request org.jetbrains.jps.javac.JavacRemoteProto.Message.Request parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request org.jetbrains.jps.javac.JavacRemoteProto.Message.Request parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request org.jetbrains.jps.javac.JavacRemoteProto.Message.Request parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request org.jetbrains.jps.javac.JavacRemoteProto.Message.Request parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Request&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Request org.jetbrains.jps.javac.JavacRemoteProto.Message.Request.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : JavacRemoteProto.Message.Request.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response access$6100(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6100(x0 : JavacRemoteProto.Message.Response.Builder) : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder access$6200()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6200() : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder clearClassData()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearClassData() : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder clearCompileMessage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearCompileMessage() : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder clearCompletionStatus()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearCompletionStatus() : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder clearOutputObject()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearOutputObject() : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder clearResponseType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearResponseType() : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder mergeClassData(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeClassData(value : JavacRemoteProto.Message.Response.ClassData?) : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder mergeCompileMessage(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeCompileMessage(value : JavacRemoteProto.Message.Response.CompileMessage?) : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder mergeFrom(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : JavacRemoteProto.Message.Response?) : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder mergeOutputObject(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeOutputObject(value : JavacRemoteProto.Message.Response.OutputObject?) : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder setClassData(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setClassData(builderForValue : JavacRemoteProto.Message.Response.ClassData.Builder) : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder setClassData(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setClassData(value : JavacRemoteProto.Message.Response.ClassData) : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder setCompileMessage(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCompileMessage(builderForValue : JavacRemoteProto.Message.Response.CompileMessage.Builder) : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder setCompileMessage(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCompileMessage(value : JavacRemoteProto.Message.Response.CompileMessage) : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder setCompletionStatus(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCompletionStatus(value : Boolean) : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder setOutputObject(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOutputObject(builderForValue : JavacRemoteProto.Message.Response.OutputObject.Builder) : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder setOutputObject(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOutputObject(value : JavacRemoteProto.Message.Response.OutputObject) : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder setResponseType(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setResponseType(value : JavacRemoteProto.Message.Response.Type) : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData access$5300(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5300(x0 : JavacRemoteProto.Message.Response.ClassData.Builder) : JavacRemoteProto.Message.Response.ClassData&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder access$5400()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5400() : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder addAllIdentifier(java.lang.Iterable&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllIdentifier(values : Iterable&lt;String?&gt;?) : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder addAllImportStatement(java.lang.Iterable&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllImportStatement(values : Iterable&lt;String?&gt;?) : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder addAllStaticImport(java.lang.Iterable&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAllStaticImport(values : Iterable&lt;String?&gt;?) : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder addIdentifier(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addIdentifier(value : String) : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder addImportStatement(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addImportStatement(value : String) : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder addStaticImport(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addStaticImport(value : String) : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : JavacRemoteProto.Message.Response.ClassData&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : JavacRemoteProto.Message.Response.ClassData&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : JavacRemoteProto.Message.Response.ClassData&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder clearClassName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearClassName() : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder clearIdentifier()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearIdentifier() : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder clearImportStatement()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearImportStatement() : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder clearStaticImport()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearStaticImport() : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message.Response.ClassData&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder mergeFrom(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : JavacRemoteProto.Message.Response.ClassData?) : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder setClassName(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setClassName(value : String) : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder setIdentifier(int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setIdentifier(index : Int, value : String) : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder setImportStatement(int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setImportStatement(index : Int, value : String) : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder setStaticImport(int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setStaticImport(index : Int, value : String) : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData java.lang.Object access$5602(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5602(x0 : JavacRemoteProto.Message.Response.ClassData, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData com.google.protobuf.LazyStringList access$5700(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5700(x0 : JavacRemoteProto.Message.Response.ClassData) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData com.google.protobuf.LazyStringList access$5702(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData, com.google.protobuf.LazyStringList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5702(x0 : JavacRemoteProto.Message.Response.ClassData, x1 : LazyStringList?) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData com.google.protobuf.LazyStringList access$5800(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5800(x0 : JavacRemoteProto.Message.Response.ClassData) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData com.google.protobuf.LazyStringList access$5802(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData, com.google.protobuf.LazyStringList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5802(x0 : JavacRemoteProto.Message.Response.ClassData, x1 : LazyStringList?) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData com.google.protobuf.LazyStringList access$5900(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5900(x0 : JavacRemoteProto.Message.Response.ClassData) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData com.google.protobuf.LazyStringList access$5902(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData, com.google.protobuf.LazyStringList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5902(x0 : JavacRemoteProto.Message.Response.ClassData, x1 : LazyStringList?) : LazyStringList?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData int access$6002(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6002(x0 : JavacRemoteProto.Message.Response.ClassData, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData com.google.protobuf.ByteString getClassNameBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getClassNameBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : JavacRemoteProto.Message.Response.ClassData&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message.Response.ClassData&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder newBuilder(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : JavacRemoteProto.Message.Response.ClassData?) : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : JavacRemoteProto.Message.Response.ClassData?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.ClassData?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : JavacRemoteProto.Message.Response.ClassData&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.ClassData&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : JavacRemoteProto.Message.Response.ClassData&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.ClassData&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : JavacRemoteProto.Message.Response.ClassData&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.ClassData&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : JavacRemoteProto.Message.Response.ClassData&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.ClassData&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : JavacRemoteProto.Message.Response.ClassData.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage access$3000(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3000(x0 : JavacRemoteProto.Message.Response.CompileMessage.Builder) : JavacRemoteProto.Message.Response.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder access$3100()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3100() : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : JavacRemoteProto.Message.Response.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : JavacRemoteProto.Message.Response.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : JavacRemoteProto.Message.Response.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder clearColumn()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearColumn() : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder clearKind()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearKind() : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder clearLine()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLine() : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder clearProblemBeginOffset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearProblemBeginOffset() : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder clearProblemEndOffset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearProblemEndOffset() : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder clearProblemLocationOffset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearProblemLocationOffset() : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder clearSourceUri()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearSourceUri() : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder clearText()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearText() : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message.Response.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder mergeFrom(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : JavacRemoteProto.Message.Response.CompileMessage?) : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder setColumn(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColumn(value : Long) : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder setKind(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Kind)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setKind(value : JavacRemoteProto.Message.Response.CompileMessage.Kind) : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder setLine(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLine(value : Long) : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder setProblemBeginOffset(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setProblemBeginOffset(value : Long) : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder setProblemEndOffset(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setProblemEndOffset(value : Long) : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder setProblemLocationOffset(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setProblemLocationOffset(value : Long) : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder setSourceUri(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setSourceUri(value : String) : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder setText(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setText(value : String) : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Kind.1 com.google.protobuf.Internal.EnumLite findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(x0 : Int) : Internal.EnumLite?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Kind.1 org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Kind findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(number : Int) : JavacRemoteProto.Message.Response.CompileMessage.Kind?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Kind org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Kind valueOf(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(value : Int) : JavacRemoteProto.Message.Response.CompileMessage.Kind?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Kind access$3302(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage, org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Kind)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3302(x0 : JavacRemoteProto.Message.Response.CompileMessage, x1 : JavacRemoteProto.Message.Response.CompileMessage.Kind?) : JavacRemoteProto.Message.Response.CompileMessage.Kind?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage java.lang.Object access$3402(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3402(x0 : JavacRemoteProto.Message.Response.CompileMessage, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage java.lang.Object access$3502(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3502(x0 : JavacRemoteProto.Message.Response.CompileMessage, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage long access$3602(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3602(x0 : JavacRemoteProto.Message.Response.CompileMessage, x1 : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage long access$3702(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3702(x0 : JavacRemoteProto.Message.Response.CompileMessage, x1 : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage long access$3802(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3802(x0 : JavacRemoteProto.Message.Response.CompileMessage, x1 : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage long access$3902(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$3902(x0 : JavacRemoteProto.Message.Response.CompileMessage, x1 : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage long access$4002(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4002(x0 : JavacRemoteProto.Message.Response.CompileMessage, x1 : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage int access$4102(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4102(x0 : JavacRemoteProto.Message.Response.CompileMessage, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : JavacRemoteProto.Message.Response.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message.Response.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage com.google.protobuf.ByteString getSourceUriBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSourceUriBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage com.google.protobuf.ByteString getTextBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder newBuilder(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : JavacRemoteProto.Message.Response.CompileMessage?) : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : JavacRemoteProto.Message.Response.CompileMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.CompileMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : JavacRemoteProto.Message.Response.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : JavacRemoteProto.Message.Response.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : JavacRemoteProto.Message.Response.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : JavacRemoteProto.Message.Response.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.CompileMessage&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : JavacRemoteProto.Message.Response.CompileMessage.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject access$4200(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4200(x0 : JavacRemoteProto.Message.Response.OutputObject.Builder) : JavacRemoteProto.Message.Response.OutputObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder access$4300()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4300() : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : JavacRemoteProto.Message.Response.OutputObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : JavacRemoteProto.Message.Response.OutputObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : JavacRemoteProto.Message.Response.OutputObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder clearClassName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearClassName() : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder clearContent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearContent() : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder clearFilePath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearFilePath() : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder clearKind()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearKind() : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder clearOutputRoot()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearOutputRoot() : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder clearRelativePath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearRelativePath() : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder clearSourceUri()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearSourceUri() : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message.Response.OutputObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder mergeFrom(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : JavacRemoteProto.Message.Response.OutputObject?) : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder setClassName(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setClassName(value : String) : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder setContent(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setContent(value : ByteString) : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder setFilePath(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setFilePath(value : String) : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder setKind(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Kind)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setKind(value : JavacRemoteProto.Message.Response.OutputObject.Kind) : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder setOutputRoot(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOutputRoot(value : String) : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder setRelativePath(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setRelativePath(value : String) : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder setSourceUri(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setSourceUri(value : String) : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Kind.1 com.google.protobuf.Internal.EnumLite findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(x0 : Int) : Internal.EnumLite?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Kind.1 org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Kind findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(number : Int) : JavacRemoteProto.Message.Response.OutputObject.Kind?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Kind org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Kind valueOf(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(value : Int) : JavacRemoteProto.Message.Response.OutputObject.Kind?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Kind access$4502(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject, org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Kind)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4502(x0 : JavacRemoteProto.Message.Response.OutputObject, x1 : JavacRemoteProto.Message.Response.OutputObject.Kind?) : JavacRemoteProto.Message.Response.OutputObject.Kind?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject java.lang.Object access$4602(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4602(x0 : JavacRemoteProto.Message.Response.OutputObject, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject java.lang.Object access$4702(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4702(x0 : JavacRemoteProto.Message.Response.OutputObject, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject java.lang.Object access$4802(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4802(x0 : JavacRemoteProto.Message.Response.OutputObject, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject java.lang.Object access$4902(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$4902(x0 : JavacRemoteProto.Message.Response.OutputObject, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject java.lang.Object access$5002(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5002(x0 : JavacRemoteProto.Message.Response.OutputObject, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject com.google.protobuf.ByteString access$5102(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject, com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5102(x0 : JavacRemoteProto.Message.Response.OutputObject, x1 : ByteString?) : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject int access$5202(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$5202(x0 : JavacRemoteProto.Message.Response.OutputObject, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject com.google.protobuf.ByteString getClassNameBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getClassNameBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : JavacRemoteProto.Message.Response.OutputObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message.Response.OutputObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject com.google.protobuf.ByteString getFilePathBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getFilePathBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject com.google.protobuf.ByteString getOutputRootBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutputRootBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject com.google.protobuf.ByteString getRelativePathBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRelativePathBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject com.google.protobuf.ByteString getSourceUriBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSourceUriBytes() : ByteString?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder newBuilder(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : JavacRemoteProto.Message.Response.OutputObject?) : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : JavacRemoteProto.Message.Response.OutputObject?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.OutputObject?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : JavacRemoteProto.Message.Response.OutputObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.OutputObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : JavacRemoteProto.Message.Response.OutputObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.OutputObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : JavacRemoteProto.Message.Response.OutputObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.OutputObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : JavacRemoteProto.Message.Response.OutputObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response.OutputObject&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : JavacRemoteProto.Message.Response.OutputObject.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Type.1 com.google.protobuf.Internal.EnumLite findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(x0 : Int) : Internal.EnumLite?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Type.1 org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Type findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(number : Int) : JavacRemoteProto.Message.Response.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Type org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Type valueOf(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(value : Int) : JavacRemoteProto.Message.Response.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Type access$6402(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response, org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6402(x0 : JavacRemoteProto.Message.Response, x1 : JavacRemoteProto.Message.Response.Type?) : JavacRemoteProto.Message.Response.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage access$6502(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response, org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6502(x0 : JavacRemoteProto.Message.Response, x1 : JavacRemoteProto.Message.Response.CompileMessage?) : JavacRemoteProto.Message.Response.CompileMessage?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject access$6602(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response, org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6602(x0 : JavacRemoteProto.Message.Response, x1 : JavacRemoteProto.Message.Response.OutputObject?) : JavacRemoteProto.Message.Response.OutputObject?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData access$6702(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response, org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.ClassData)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6702(x0 : JavacRemoteProto.Message.Response, x1 : JavacRemoteProto.Message.Response.ClassData?) : JavacRemoteProto.Message.Response.ClassData?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response boolean access$6802(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6802(x0 : JavacRemoteProto.Message.Response, x1 : Boolean) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response int access$6902(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$6902(x0 : JavacRemoteProto.Message.Response, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder newBuilder(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : JavacRemoteProto.Message.Response?) : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : JavacRemoteProto.Message.Response?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.Response&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Response org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : JavacRemoteProto.Message.Response.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Type.1 com.google.protobuf.Internal.EnumLite findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(x0 : Int) : Internal.EnumLite?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Type.1 org.jetbrains.jps.javac.JavacRemoteProto.Message.Type findValueByNumber(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findValueByNumber(number : Int) : JavacRemoteProto.Message.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.Type org.jetbrains.jps.javac.JavacRemoteProto.Message.Type valueOf(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(value : Int) : JavacRemoteProto.Message.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID access$000(org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : JavacRemoteProto.Message.UUID.Builder) : JavacRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder access$100()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100() : JavacRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder com.google.protobuf.MessageLite build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : JavacRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID buildParsed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildParsed() : JavacRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder com.google.protobuf.MessageLite buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID buildPartial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildPartial() : JavacRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder com.google.protobuf.GeneratedMessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder com.google.protobuf.MessageLite.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder clear()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear() : JavacRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder clearLeastSigBits()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLeastSigBits() : JavacRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder clearMostSigBits()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearMostSigBits() : JavacRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder com.google.protobuf.AbstractMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder com.google.protobuf.GeneratedMessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder com.google.protobuf.MessageLite.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : JavacRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : JavacRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder com.google.protobuf.GeneratedMessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : GeneratedMessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder com.google.protobuf.AbstractMessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : AbstractMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder com.google.protobuf.MessageLite.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : CodedInputStream, x1 : ExtensionRegistryLite?) : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder com.google.protobuf.GeneratedMessageLite.Builder mergeFrom(com.google.protobuf.GeneratedMessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(x0 : GeneratedMessageLite?) : GeneratedMessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder mergeFrom(org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeFrom(other : JavacRemoteProto.Message.UUID?) : JavacRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder setLeastSigBits(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLeastSigBits(value : Long) : JavacRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder setMostSigBits(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setMostSigBits(value : Long) : JavacRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID long access$302(org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$302(x0 : JavacRemoteProto.Message.UUID, x1 : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID long access$402(org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$402(x0 : JavacRemoteProto.Message.UUID, x1 : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID int access$502(org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$502(x0 : JavacRemoteProto.Message.UUID, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : JavacRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : JavacRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder newBuilder(org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : JavacRemoteProto.Message.UUID?) : JavacRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : JavacRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : JavacRemoteProto.Message.UUID?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.UUID?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : JavacRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : JavacRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : JavacRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : JavacRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message.UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : JavacRemoteProto.Message.UUID.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID access$7302(org.jetbrains.jps.javac.JavacRemoteProto.Message, org.jetbrains.jps.javac.JavacRemoteProto.Message.UUID)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$7302(x0 : JavacRemoteProto.Message, x1 : JavacRemoteProto.Message.UUID?) : JavacRemoteProto.Message.UUID?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message.Type access$7402(org.jetbrains.jps.javac.JavacRemoteProto.Message, org.jetbrains.jps.javac.JavacRemoteProto.Message.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$7402(x0 : JavacRemoteProto.Message, x1 : JavacRemoteProto.Message.Type?) : JavacRemoteProto.Message.Type?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message.Request access$7502(org.jetbrains.jps.javac.JavacRemoteProto.Message, org.jetbrains.jps.javac.JavacRemoteProto.Message.Request)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$7502(x0 : JavacRemoteProto.Message, x1 : JavacRemoteProto.Message.Request?) : JavacRemoteProto.Message.Request?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message.Response access$7602(org.jetbrains.jps.javac.JavacRemoteProto.Message, org.jetbrains.jps.javac.JavacRemoteProto.Message.Response)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$7602(x0 : JavacRemoteProto.Message, x1 : JavacRemoteProto.Message.Response?) : JavacRemoteProto.Message.Response?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure access$7702(org.jetbrains.jps.javac.JavacRemoteProto.Message, org.jetbrains.jps.javac.JavacRemoteProto.Message.Failure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$7702(x0 : JavacRemoteProto.Message, x1 : JavacRemoteProto.Message.Failure?) : JavacRemoteProto.Message.Failure?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message int access$7802(org.jetbrains.jps.javac.JavacRemoteProto.Message, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$7802(x0 : JavacRemoteProto.Message, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message getDefaultInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstance() : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message com.google.protobuf.MessageLite getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : MessageLite&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message getDefaultInstanceForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDefaultInstanceForType() : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder newBuilder(org.jetbrains.jps.javac.JavacRemoteProto.Message)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder(prototype : JavacRemoteProto.Message?) : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message com.google.protobuf.MessageLite.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder newBuilderForType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilderForType() : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message parseDelimitedFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?) : JavacRemoteProto.Message?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message parseDelimitedFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDelimitedFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message parseFrom(com.google.protobuf.ByteString)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?) : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message parseFrom(com.google.protobuf.ByteString, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteString?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message parseFrom(com.google.protobuf.CodedInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream?) : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message parseFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : CodedInputStream, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message parseFrom(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?) : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message parseFrom(java.io.InputStream, com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(input : InputStream?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message parseFrom(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?) : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message parseFrom(byte[], com.google.protobuf.ExtensionRegistryLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseFrom(data : ByteArray?, extensionRegistry : ExtensionRegistryLite?) : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message com.google.protobuf.MessageLite.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : MessageLite.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacRemoteProto.Message org.jetbrains.jps.javac.JavacRemoteProto.Message.Builder toBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBuilder() : JavacRemoteProto.Message.Builder&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServer.3 void outputLineAvailable(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun outputLineAvailable(line : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServer.3 void registerImports(java.lang.String, java.util.Collection&lt;java.lang.String&gt;, java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun registerImports(className : String, imports : Collection&lt;String?&gt;, staticImports : Collection&lt;String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServer.3 void report(javax.tools.Diagnostic&lt;? extends javax.tools.JavaFileObject&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun report(diagnostic : Diagnostic&lt;out JavaFileObject?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServer.4 void save(org.jetbrains.jps.javac.OutputFileObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(p0 : OutputFileObject) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServer.ChannelRegistrar void channelOpen(org.jboss.netty.channel.ChannelHandlerContext, org.jboss.netty.channel.ChannelStateEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun channelOpen(ctx : ChannelHandlerContext?, e : ChannelStateEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServer.CompilationRequestsHandler void messageReceived(org.jboss.netty.channel.ChannelHandlerContext, org.jboss.netty.channel.MessageEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun messageReceived(ctx : ChannelHandlerContext?, e : MessageEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServer java.util.List access$200(java.util.List)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : List) : MutableList&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServer java.util.Set access$400(org.jetbrains.jps.javac.JavacServer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : JavacServer) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServer org.jboss.netty.channel.group.ChannelGroup access$500(org.jetbrains.jps.javac.JavacServer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$500(x0 : JavacServer) : ChannelGroup&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServer org.jetbrains.jps.javac.JavacRemoteProto.Message compile(org.jboss.netty.channel.ChannelHandlerContext, java.util.UUID, java.util.List&lt;java.lang.String&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Map&lt;java.io.File,java.util.Set&lt;java.io.File&gt;&gt;, org.jetbrains.jps.api.CanceledStatus)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compile(ctx : ChannelHandlerContext?, sessionId : UUID, options : List&lt;String?&gt;?, files : Collection&lt;File?&gt;?, classpath : Collection&lt;File?&gt;?, platformCp : Collection&lt;File?&gt;?, sourcePath : Collection&lt;File?&gt;?, outs : Map&lt;File?, Set&lt;File?&gt;?&gt;?, canceledStatus : CanceledStatus?) : JavacRemoteProto.Message&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServer java.util.List&lt;java.io.File&gt; toFiles(java.util.List&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toFiles(paths : List&lt;String?&gt;) : MutableList&lt;File?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServerBootstrap.2 void onTextAvailable(com.intellij.execution.process.ProcessEvent, com.intellij.openapi.util.Key)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun onTextAvailable(event : ProcessEvent, outputType : Key?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServerBootstrap void appendParam(java.util.List&lt;java.lang.String&gt;, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendParam(cmdLine : MutableList&lt;String?&gt;, param : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServerBootstrap void configureProcessHandler(com.intellij.execution.process.BaseOSProcessHandler)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun configureProcessHandler(processHandler : BaseOSProcessHandler) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServerBootstrap com.intellij.execution.process.BaseOSProcessHandler launchJavacServer(java.lang.String, int, int, java.io.File, java.util.List&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun launchJavacServer(sdkHomePath : String?, heapSize : Int, port : Int, workingDir : File, vmOptions : List&lt;String?&gt;) : BaseOSProcessHandler&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServerClient.1 java.util.UUID getSessionUUID(org.jboss.netty.channel.MessageEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSessionUUID(p0 : MessageEvent) : UUID&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServerClient org.jetbrains.jps.api.RequestFuture access$000(org.jetbrains.jps.javac.JavacServerClient, org.jetbrains.jps.javac.JavacRemoteProto.Message.Request, org.jetbrains.jps.javac.JavacServerResponseHandler, org.jetbrains.jps.api.RequestFuture.CancelAction)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : JavacServerClient, x1 : JavacRemoteProto.Message.Request, x2 : JavacServerResponseHandler?, x3 : RequestFuture.CancelAction?) : RequestFuture?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServerClient org.jetbrains.jps.api.RequestFuture&lt;org.jetbrains.jps.javac.JavacServerResponseHandler&gt; sendCompileRequest(java.util.List&lt;java.lang.String&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Collection&lt;java.io.File&gt;, java.util.Map&lt;java.io.File,java.util.Set&lt;java.io.File&gt;&gt;, org.jetbrains.jps.javac.DiagnosticOutputConsumer, org.jetbrains.jps.javac.OutputFileConsumer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sendCompileRequest(options : List&lt;String?&gt;?, files : Collection&lt;File?&gt;, classpath : Collection&lt;File?&gt;, platformCp : Collection&lt;File?&gt;, sourcePath : Collection&lt;File?&gt;, outs : Map&lt;File?, Set&lt;File?&gt;?&gt;, diagnosticSink : DiagnosticOutputConsumer?, outputSink : OutputFileConsumer?) : RequestFuture&lt;JavacServerResponseHandler?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServerClient org.jetbrains.jps.api.RequestFuture&lt;org.jetbrains.jps.javac.JavacServerResponseHandler&gt; sendRequest(org.jetbrains.jps.javac.JavacRemoteProto.Message.Request, org.jetbrains.jps.javac.JavacServerResponseHandler, org.jetbrains.jps.api.RequestFuture.CancelAction&lt;org.jetbrains.jps.javac.JavacServerResponseHandler&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sendRequest(request : JavacRemoteProto.Message.Request, responseHandler : JavacServerResponseHandler?, cancelAction : RequestFuture.CancelAction&lt;JavacServerResponseHandler?&gt;?) : RequestFuture&lt;JavacServerResponseHandler?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServerResponseHandler.DummyDiagnostic java.lang.String getCode()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCode() : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServerResponseHandler.DummyDiagnostic java.lang.String getMessage(java.util.Locale)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMessage(locale : Locale?) : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServerResponseHandler javax.tools.Diagnostic.Kind convertKind(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.CompileMessage.Kind)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun convertKind(kind : JavacRemoteProto.Message.Response.CompileMessage.Kind) : Diagnostic.Kind?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServerResponseHandler javax.tools.JavaFileObject.Kind convertKind(org.jetbrains.jps.javac.JavacRemoteProto.Message.Response.OutputObject.Kind)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun convertKind(kind : JavacRemoteProto.Message.Response.OutputObject.Kind) : JavaFileObject.Kind?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.JavacServerResponseHandler boolean handleMessage(com.google.protobuf.MessageLite)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun handleMessage(message : MessageLite) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.LineOutputWriter.ArrayCharSequence java.lang.CharSequence subSequence(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSequence(start : Int, end : Int) : CharSequence&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.LineOutputWriter.ArrayCharSequence java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.LineOutputWriter.CharSequenceIterator CharSequenceIterator(char[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CharSequenceIterator(chars : CharArray)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.LineOutputWriter.LineParser boolean parse(org.jetbrains.jps.javac.LineOutputWriter.CharIterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parse(it : LineOutputWriter.CharIterator) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.LineOutputWriter java.io.Writer append(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun append(c : Char) : Writer&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.LineOutputWriter java.lang.Appendable append(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun append(x0 : Char) : Appendable&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.LineOutputWriter java.io.Writer append(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun append(csq : CharSequence?) : Writer&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.LineOutputWriter java.lang.Appendable append(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun append(x0 : CharSequence?) : Appendable&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.LineOutputWriter java.io.Writer append(java.lang.CharSequence, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun append(csq : CharSequence, start : Int, end : Int) : Writer&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.LineOutputWriter java.lang.Appendable append(java.lang.CharSequence, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun append(x0 : CharSequence, x1 : Int, x2 : Int) : Appendable&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.LineOutputWriter void processData(org.jetbrains.jps.javac.LineOutputWriter.CharIterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processData(data : LineOutputWriter.CharIterator) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.LineOutputWriter void write(java.lang.String, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun write(str : String, off : Int, len : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.LineOutputWriter void write(char[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun write(cbuf : CharArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.OutputFileConsumer void save(org.jetbrains.jps.javac.OutputFileObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun save(p0 : OutputFileObject) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.OutputFileObject OutputFileObject(org.jetbrains.jps.javac.JavacFileManager.Context, java.io.File, java.lang.String, java.io.File, javax.tools.JavaFileObject.Kind, java.lang.String, java.net.URI)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun OutputFileObject(context : JavacFileManager.Context, outputRoot : File?, relativePath : String?, file : File, kind : JavaFileObject.Kind, className : String?, sourceUri : URI?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.OutputFileObject OutputFileObject(org.jetbrains.jps.javac.JavacFileManager.Context, java.io.File, java.lang.String, java.io.File, javax.tools.JavaFileObject.Kind, java.lang.String, java.net.URI, org.jetbrains.jps.javac.BinaryContent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun OutputFileObject(context : JavacFileManager.Context?, outputRoot : File?, relativePath : String?, file : File, kind : JavaFileObject.Kind, className : String?, srcUri : URI?, content : BinaryContent?)&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.OutputFileObject org.jetbrains.jps.javac.BinaryContent access$002(org.jetbrains.jps.javac.OutputFileObject, org.jetbrains.jps.javac.BinaryContent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$002(x0 : OutputFileObject, x1 : BinaryContent?) : BinaryContent?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.OutputFileObject org.jetbrains.jps.javac.JavacFileManager.Context access$100(org.jetbrains.jps.javac.OutputFileObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : OutputFileObject) : JavacFileManager.Context?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.OutputFileObject boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.OutputFileObject java.lang.CharSequence getCharContent(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCharContent(ignoreEncodingErrors : Boolean) : CharSequence&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.OutputFileObject java.lang.String getClassName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getClassName() : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.OutputFileObject org.jetbrains.jps.javac.BinaryContent getContent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getContent() : BinaryContent?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.OutputFileObject java.io.File getFile()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getFile() : File&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.OutputFileObject java.io.File getOutputRoot()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutputRoot() : File?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.OutputFileObject java.io.File getSourceFile()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSourceFile() : File?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.OutputFileObject java.net.URI getSourceUri()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSourceUri() : URI?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.OutputFileObject java.io.InputStream openInputStream()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun openInputStream() : InputStream&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.OutputFileObject java.io.ByteArrayOutputStream openOutputStream()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun openOutputStream() : ByteArrayOutputStream&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.OutputFileObject java.io.OutputStream openOutputStream()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun openOutputStream() : OutputStream&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.OutputFileObject void updateContent(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateContent(p0 : ByteArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.PlainMessageDiagnostic java.lang.String getCode()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCode() : String?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.PlainMessageDiagnostic java.lang.Object getSource()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSource() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='org.jetbrains.jps.javac.PlainMessageDiagnostic javax.tools.JavaFileObject getSource()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSource() : JavaFileObject?&quot;"/>
        </annotation>
    </item>
</root>
