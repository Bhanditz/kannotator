<root>
    <item name='edu.uci.ics.jung.samples.HyperbolicVertexImageShaperDemo.1 void paint(java.awt.Graphics)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun paint(g : Graphics) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.HyperbolicVertexImageShaperDemo.5 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.HyperbolicVertexImageShaperDemo.6 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.HyperbolicVertexImageShaperDemo.PickWithIconListener void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.HyperbolicVertexImageShaperDemo void createEdges(java.lang.Number[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEdges(v : Array&lt;out Number?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.HyperbolicVertexImageShaperDemo java.lang.Number[] createVertices(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createVertices(count : Int) : Array&lt;out Number?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveTransformerDemo.10 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveTransformerDemo.11 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveTransformerDemo.12 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveTransformerDemo.1 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveTransformerDemo.1 java.awt.Shape transform(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(v : String?) : Shape&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveTransformerDemo.4 java.awt.Dimension getPreferredSize()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPreferredSize() : Dimension&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveTransformerDemo.5 java.awt.Dimension getPreferredSize()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPreferredSize() : Dimension&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveTransformerDemo.8 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveTransformerDemo.9 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveTransformerDemo edu.uci.ics.jung.graph.Graph&lt;java.lang.String,java.lang.Number&gt; generateVertexGrid(java.util.Map&lt;java.lang.String,java.awt.geom.Point2D&gt;, java.awt.Dimension, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateVertexGrid(map : MutableMap&lt;String?, Point2D?&gt;?, d : Dimension, interval : Int) : Graph&lt;String?, Number?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveVertexImageShaperDemo.10 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveVertexImageShaperDemo.11 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveVertexImageShaperDemo.1 void paint(java.awt.Graphics)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun paint(g : Graphics) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveVertexImageShaperDemo.4 java.awt.Dimension getPreferredSize()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPreferredSize() : Dimension&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveVertexImageShaperDemo.5 java.awt.Dimension getPreferredSize()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPreferredSize() : Dimension&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveVertexImageShaperDemo.8 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveVertexImageShaperDemo.9 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveVertexImageShaperDemo.PickWithIconListener void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveVertexImageShaperDemo void createEdges(java.lang.Number[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEdges(v : Array&lt;out Number?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PerspectiveVertexImageShaperDemo java.lang.Number[] createVertices(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createVertices(count : Int) : Array&lt;out Number?&gt;&quot;"/>
        </annotation>
    </item>
</root>
