<root>
    <item name='edu.uci.ics.jung.graph.util.DefaultParallelEdgeIndexFunction int getIndex(edu.uci.ics.jung.graph.Graph&lt;V,E&gt;, E, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getIndex(graph : Graph&lt;V, E&gt;, e : E?, v : V?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.DefaultParallelEdgeIndexFunction int getIndex(edu.uci.ics.jung.graph.Graph&lt;V,E&gt;, E, V, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getIndex(graph : Graph&lt;V, E&gt;, e : E?, v : V?, u : V?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.DefaultParallelEdgeIndexFunction edu.uci.ics.jung.graph.util.DefaultParallelEdgeIndexFunction&lt;V,E&gt; getInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, E&gt; getInstance() : DefaultParallelEdgeIndexFunction&lt;V, E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.DefaultParallelEdgeIndexFunction void reset(edu.uci.ics.jung.graph.Graph&lt;V,E&gt;, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reset(graph : Graph&lt;V, E&gt;, e : E?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Graphs.SynchronizedAbstractGraph SynchronizedAbstractGraph(edu.uci.ics.jung.graph.Graph&lt;V,E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedAbstractGraph(delegate : Graph&lt;V, E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Graphs.UnmodifiableAbstractGraph UnmodifiableAbstractGraph(edu.uci.ics.jung.graph.Graph&lt;V,E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun UnmodifiableAbstractGraph(delegate : Graph&lt;V, E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Graphs edu.uci.ics.jung.graph.DirectedGraph&lt;V,E&gt; synchronizedDirectedGraph(edu.uci.ics.jung.graph.DirectedGraph&lt;V,E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, E&gt; synchronizedDirectedGraph(graph : DirectedGraph&lt;V, E&gt;?) : DirectedGraph&lt;V, E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Graphs edu.uci.ics.jung.graph.util.Graphs.SynchronizedForest&lt;V,E&gt; synchronizedForest(edu.uci.ics.jung.graph.Forest&lt;V,E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, E&gt; synchronizedForest(forest : Forest&lt;V, E&gt;?) : Graphs.SynchronizedForest&lt;V, E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Graphs edu.uci.ics.jung.graph.Graph&lt;V,E&gt; synchronizedGraph(edu.uci.ics.jung.graph.Graph&lt;V,E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, E&gt; synchronizedGraph(graph : Graph&lt;V, E&gt;?) : Graph&lt;V, E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Graphs edu.uci.ics.jung.graph.util.Graphs.SynchronizedTree&lt;V,E&gt; synchronizedTree(edu.uci.ics.jung.graph.Tree&lt;V,E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, E&gt; synchronizedTree(tree : Tree&lt;V, E&gt;?) : Graphs.SynchronizedTree&lt;V, E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Graphs edu.uci.ics.jung.graph.UndirectedGraph&lt;V,E&gt; synchronizedUndirectedGraph(edu.uci.ics.jung.graph.UndirectedGraph&lt;V,E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, E&gt; synchronizedUndirectedGraph(graph : UndirectedGraph&lt;V, E&gt;?) : UndirectedGraph&lt;V, E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Graphs edu.uci.ics.jung.graph.DirectedGraph&lt;V,E&gt; unmodifiableDirectedGraph(edu.uci.ics.jung.graph.DirectedGraph&lt;V,E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, E&gt; unmodifiableDirectedGraph(graph : DirectedGraph&lt;V, E&gt;?) : DirectedGraph&lt;V, E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Graphs edu.uci.ics.jung.graph.util.Graphs.UnmodifiableForest&lt;V,E&gt; unmodifiableForest(edu.uci.ics.jung.graph.Forest&lt;V,E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, E&gt; unmodifiableForest(forest : Forest&lt;V, E&gt;?) : Graphs.UnmodifiableForest&lt;V, E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Graphs edu.uci.ics.jung.graph.Graph&lt;V,E&gt; unmodifiableGraph(edu.uci.ics.jung.graph.Graph&lt;V,E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, E&gt; unmodifiableGraph(graph : Graph&lt;V, E&gt;?) : Graph&lt;V, E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Graphs edu.uci.ics.jung.graph.util.Graphs.UnmodifiableTree&lt;V,E&gt; unmodifiableTree(edu.uci.ics.jung.graph.Tree&lt;V,E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, E&gt; unmodifiableTree(tree : Tree&lt;V, E&gt;?) : Graphs.UnmodifiableTree&lt;V, E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Graphs edu.uci.ics.jung.graph.UndirectedGraph&lt;V,E&gt; unmodifiableUndirectedGraph(edu.uci.ics.jung.graph.UndirectedGraph&lt;V,E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, E&gt; unmodifiableUndirectedGraph(graph : UndirectedGraph&lt;V, E&gt;?) : UndirectedGraph&lt;V, E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.IncidentEdgeIndexFunction int getIndex(edu.uci.ics.jung.graph.Graph&lt;V,E&gt;, E, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getIndex(graph : Graph&lt;V, E&gt;, e : E?, v : V?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.IncidentEdgeIndexFunction int getIndex(edu.uci.ics.jung.graph.Graph&lt;V,E&gt;, E, V, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getIndex(graph : Graph&lt;V, E&gt;, e : E?, u : V?, v : V?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.IncidentEdgeIndexFunction edu.uci.ics.jung.graph.util.IncidentEdgeIndexFunction&lt;V,E&gt; getInstance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, E&gt; getInstance() : IncidentEdgeIndexFunction&lt;V, E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.IncidentEdgeIndexFunction void reset(edu.uci.ics.jung.graph.Graph&lt;V,E&gt;, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reset(graph : Graph&lt;V, E&gt;, e : E?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Pair.PairIterator T next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : T?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Pair Pair(T, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Pair(value1 : T, value2 : T)&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Pair Pair(java.util.Collection&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Pair(values : Collection&lt;out T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Pair Pair(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Pair(values : Array&lt;out T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Pair java.lang.Object access$100(edu.uci.ics.jung.graph.util.Pair)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : Pair) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Pair java.lang.Object access$200(edu.uci.ics.jung.graph.util.Pair)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : Pair) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Pair boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Pair java.util.Iterator&lt;T&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Pair java.lang.Object[] toArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray() : Array&lt;out Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.Pair S[] toArray(S[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S&gt; toArray(a : Array&lt;out S&gt;) : Array&lt;out S&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.TreeUtils void addFromSubTree(edu.uci.ics.jung.graph.Forest&lt;V,E&gt;, edu.uci.ics.jung.graph.Forest&lt;V,E&gt;, E, V, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, E&gt; addFromSubTree(tree : Forest&lt;V, E&gt;, subTree : Forest&lt;V, E&gt;, edge : E?, parent : V?, root : V?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.TreeUtils void addSubTree(edu.uci.ics.jung.graph.Forest&lt;V,E&gt;, edu.uci.ics.jung.graph.Forest&lt;V,E&gt;, V, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, E&gt; addSubTree(tree : Forest&lt;V, E&gt;, subTree : Forest&lt;V, E&gt;, node : V?, connectingEdge : E?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.TreeUtils java.util.List&lt;V&gt; getRoots(edu.uci.ics.jung.graph.Forest&lt;V,E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, E&gt; getRoots(forest : Forest&lt;V, E&gt;) : MutableList&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.TreeUtils edu.uci.ics.jung.graph.Tree&lt;V,E&gt; getSubTree(edu.uci.ics.jung.graph.Forest&lt;V,E&gt;, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, E&gt; getSubTree(forest : Forest&lt;V, E&gt;, root : V?) : Tree&lt;V, E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.graph.util.TreeUtils void growSubTree(edu.uci.ics.jung.graph.Forest&lt;V,E&gt;, edu.uci.ics.jung.graph.Forest&lt;V,E&gt;, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, E&gt; growSubTree(tree : Forest&lt;V, E&gt;, subTree : Forest&lt;V, E&gt;?, root : V?) : Unit&quot;"/>
        </annotation>
    </item>
</root>
