<root>
    <item name='edu.uci.ics.jung.samples.AddNodeDemo edu.uci.ics.jung.algorithms.layout.AbstractLayout access$000(edu.uci.ics.jung.samples.AddNodeDemo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : AddNodeDemo) : AbstractLayout?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.AddNodeDemo edu.uci.ics.jung.algorithms.layout.AbstractLayout access$002(edu.uci.ics.jung.samples.AddNodeDemo, edu.uci.ics.jung.algorithms.layout.AbstractLayout)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$002(x0 : AddNodeDemo, x1 : AbstractLayout?) : AbstractLayout?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.AddNodeDemo edu.uci.ics.jung.graph.Graph access$100(edu.uci.ics.jung.samples.AddNodeDemo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : AddNodeDemo) : Graph?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.AddNodeDemo edu.uci.ics.jung.visualization.VisualizationViewer access$200(edu.uci.ics.jung.samples.AddNodeDemo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : AddNodeDemo) : VisualizationViewer?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.AnimatingAddNodeDemo.2 void componentResized(java.awt.event.ComponentEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun componentResized(arg0 : ComponentEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.AnimatingAddNodeDemo edu.uci.ics.jung.algorithms.layout.AbstractLayout access$000(edu.uci.ics.jung.samples.AnimatingAddNodeDemo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : AnimatingAddNodeDemo) : AbstractLayout?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.AnimatingAddNodeDemo edu.uci.ics.jung.algorithms.layout.AbstractLayout access$002(edu.uci.ics.jung.samples.AnimatingAddNodeDemo, edu.uci.ics.jung.algorithms.layout.AbstractLayout)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$002(x0 : AnimatingAddNodeDemo, x1 : AbstractLayout?) : AbstractLayout?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.AnimatingAddNodeDemo edu.uci.ics.jung.visualization.VisualizationViewer access$100(edu.uci.ics.jung.samples.AnimatingAddNodeDemo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : AnimatingAddNodeDemo) : VisualizationViewer?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.AnimatingAddNodeDemo edu.uci.ics.jung.graph.Graph access$200(edu.uci.ics.jung.samples.AnimatingAddNodeDemo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : AnimatingAddNodeDemo) : Graph?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.BalloonLayoutDemo.1 edu.uci.ics.jung.graph.DirectedGraph&lt;java.lang.String,java.lang.Integer&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : DirectedGraph&lt;String?, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.BalloonLayoutDemo.1 java.lang.Object create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.BalloonLayoutDemo.2 edu.uci.ics.jung.graph.Tree&lt;java.lang.String,java.lang.Integer&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Tree&lt;String?, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.BalloonLayoutDemo.2 java.lang.Object create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.BalloonLayoutDemo.7 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.BalloonLayoutDemo.8 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.BalloonLayoutDemo.Rings void paint(java.awt.Graphics)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun paint(g : Graphics) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ClusteringDemo.4 java.awt.Stroke transform(java.lang.Number)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(e : Number?) : Stroke&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ClusteringDemo.4 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ClusteringDemo.6 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ClusteringDemo.7 void stateChanged(javax.swing.event.ChangeEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun stateChanged(e : ChangeEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ClusteringDemo void clusterAndRecolor(edu.uci.ics.jung.algorithms.layout.AggregateLayout&lt;java.lang.Number,java.lang.Number&gt;, int, java.awt.Color[], boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clusterAndRecolor(layout : AggregateLayout&lt;Number?, Number?&gt;, numEdgesToRemove : Int, colors : Array&lt;out Color?&gt;?, groupClusters : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ClusteringDemo void colorCluster(java.util.Set&lt;java.lang.Number&gt;, java.awt.Color)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun colorCluster(vertices : Set&lt;Number?&gt;, c : Color?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ClusteringDemo void groupCluster(edu.uci.ics.jung.algorithms.layout.AggregateLayout&lt;java.lang.Number,java.lang.Number&gt;, java.util.Set&lt;java.lang.Number&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun groupCluster(layout : AggregateLayout&lt;Number?, Number?&gt;, vertices : Set&lt;Number?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.DrawnIconVertexDemo.2.1 void paintIcon(java.awt.Component, java.awt.Graphics, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun paintIcon(c : Component?, g : Graphics, x : Int, y : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.DrawnIconVertexDemo.2 javax.swing.Icon transform(java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(v : Int?) : Icon&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.DrawnIconVertexDemo.2 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.DrawnIconVertexDemo void createEdges(java.lang.Integer[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEdges(v : Array&lt;out Int?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.DrawnIconVertexDemo java.lang.Integer[] createVertices(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createVertices(count : Int) : Array&lt;out Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.EdgeLabelDemo.10 java.awt.Dimension getPreferredSize()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPreferredSize() : Dimension&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.EdgeLabelDemo.11 void stateChanged(javax.swing.event.ChangeEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun stateChanged(e : ChangeEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.EdgeLabelDemo.4 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.EdgeLabelDemo.5 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.EdgeLabelDemo.6 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.EdgeLabelDemo.7 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.EdgeLabelDemo.8 java.awt.Dimension getPreferredSize()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPreferredSize() : Dimension&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.EdgeLabelDemo.9 java.awt.Dimension getPreferredSize()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPreferredSize() : Dimension&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.EdgeLabelDemo void createEdges(java.lang.Integer[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEdges(v : Array&lt;out Int?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.EdgeLabelDemo java.lang.Integer[] createVertices(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createVertices(count : Int) : Array&lt;out Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.GraphFromGraphMLDemo.TestGraphMouseListener void graphClicked(V, java.awt.event.MouseEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun graphClicked(v : V?, me : MouseEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.GraphFromGraphMLDemo.TestGraphMouseListener void graphPressed(V, java.awt.event.MouseEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun graphPressed(v : V?, me : MouseEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.GraphFromGraphMLDemo.TestGraphMouseListener void graphReleased(V, java.awt.event.MouseEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun graphReleased(v : V?, me : MouseEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.GraphFromGraphMLDemo void main(java.lang.String[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun main(args : Array&lt;out String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.GraphZoomScrollPaneDemo.1 void paint(java.awt.Graphics)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun paint(g : Graphics) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.GraphZoomScrollPaneDemo.2 void paint(java.awt.Graphics)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun paint(g : Graphics) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.GraphZoomScrollPaneDemo.TestGraphMouseListener void graphClicked(V, java.awt.event.MouseEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun graphClicked(v : V?, me : MouseEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.GraphZoomScrollPaneDemo.TestGraphMouseListener void graphPressed(V, java.awt.event.MouseEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun graphPressed(v : V?, me : MouseEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.GraphZoomScrollPaneDemo.TestGraphMouseListener void graphReleased(V, java.awt.event.MouseEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun graphReleased(v : V?, me : MouseEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.GraphZoomScrollPaneDemo void createEdges(java.lang.String[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEdges(v : Array&lt;out String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.GraphZoomScrollPaneDemo java.lang.String[] createVertices(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createVertices(count : Int) : Array&lt;out String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.L2RTreeLayoutDemo.1 edu.uci.ics.jung.graph.DirectedGraph&lt;java.lang.String,java.lang.Integer&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : DirectedGraph&lt;String?, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.L2RTreeLayoutDemo.1 java.lang.Object create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.L2RTreeLayoutDemo.2 edu.uci.ics.jung.graph.Tree&lt;java.lang.String,java.lang.Integer&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Tree&lt;String?, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.L2RTreeLayoutDemo.2 java.lang.Object create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.L2RTreeLayoutDemo.7 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.L2RTreeLayoutDemo.Rings java.util.Collection&lt;java.lang.Double&gt; getDepths()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDepths() : MutableCollection&lt;Double?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.L2RTreeLayoutDemo.Rings void paint(java.awt.Graphics)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun paint(g : Graphics) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.L2RTreeLayoutDemo void setLtoR(edu.uci.ics.jung.visualization.VisualizationViewer&lt;java.lang.String,java.lang.Integer&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLtoR(vv : VisualizationViewer&lt;String?, Int?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.LensDemo.3 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.LensDemo.4 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.LensDemo.5 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.LensDemo.6 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.LensDemo.7 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.LensDemo.8 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.LensDemo.9 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.LensDemo.VerticalLabelUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPreferredSize(c : JComponent?) : Dimension&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.LensDemo.VerticalLabelUI void paint(java.awt.Graphics, javax.swing.JComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun paint(g : Graphics?, c : JComponent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.LensDemo edu.uci.ics.jung.graph.Graph&lt;java.lang.String,java.lang.Number&gt; generateVertexGrid(java.util.Map&lt;java.lang.String,java.awt.geom.Point2D&gt;, java.awt.Dimension, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generateVertexGrid(vlf : MutableMap&lt;String?, Point2D?&gt;?, d : Dimension, interval : Int) : Graph&lt;String?, Number?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.LensVertexImageShaperDemo.1 void paint(java.awt.Graphics)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun paint(g : Graphics) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.LensVertexImageShaperDemo.5 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.LensVertexImageShaperDemo.6 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.LensVertexImageShaperDemo.PickWithIconListener void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.LensVertexImageShaperDemo void createEdges(java.lang.Number[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEdges(v : Array&lt;out Number?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.LensVertexImageShaperDemo java.lang.Number[] createVertices(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createVertices(count : Int) : Array&lt;out Number?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.MultiViewDemo.BannerLabel void paint(java.awt.Graphics)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun paint(g : Graphics) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PersistentLayoutDemo void main(java.lang.String[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun main(args : Array&lt;out String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PluggableRendererDemo.1 edu.uci.ics.jung.graph.Graph&lt;java.lang.Integer,java.lang.Number&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Graph&lt;Int?, Number?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PluggableRendererDemo.1 java.lang.Object create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PluggableRendererDemo.7 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PluggableRendererDemo.DirectionDisplayPredicate boolean evaluate(edu.uci.ics.jung.graph.util.Context&lt;edu.uci.ics.jung.graph.Graph&lt;V,E&gt;,E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun evaluate(context : Context&lt;Graph&lt;V, E&gt;?, E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PluggableRendererDemo.DirectionDisplayPredicate boolean evaluate(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun evaluate(x0 : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PluggableRendererDemo.PopupGraphMousePlugin void handlePopup(java.awt.event.MouseEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun handlePopup(e : MouseEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PluggableRendererDemo.SeedFillColor java.awt.Paint transform(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(v : V?) : Paint&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PluggableRendererDemo.SeedFillColor java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PluggableRendererDemo.VertexDisplayPredicate boolean evaluate(edu.uci.ics.jung.graph.util.Context&lt;edu.uci.ics.jung.graph.Graph&lt;V,E&gt;,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun evaluate(context : Context&lt;Graph&lt;V, E&gt;?, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PluggableRendererDemo.VertexDisplayPredicate boolean evaluate(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun evaluate(x0 : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PluggableRendererDemo void actionPerformed(java.awt.event.ActionEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun actionPerformed(e : ActionEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PluggableRendererDemo void addBottomControls(javax.swing.JPanel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBottomControls(jp : JPanel) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PluggableRendererDemo edu.uci.ics.jung.graph.Graph&lt;java.lang.Integer,java.lang.Number&gt; getGraph()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getGraph() : Graph&lt;Int?, Number?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.PluggableRendererDemo javax.swing.JPanel startFunction()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun startFunction() : JPanel&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.RadialTreeLensDemo.1 edu.uci.ics.jung.graph.DirectedGraph&lt;java.lang.String,java.lang.Integer&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : DirectedGraph&lt;String?, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.RadialTreeLensDemo.1 java.lang.Object create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.RadialTreeLensDemo.2 edu.uci.ics.jung.graph.Tree&lt;java.lang.String,java.lang.Integer&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Tree&lt;String?, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.RadialTreeLensDemo.2 java.lang.Object create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.RadialTreeLensDemo.7 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.RadialTreeLensDemo.Rings java.util.Collection&lt;java.lang.Double&gt; getDepths()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDepths() : MutableCollection&lt;Double?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.RadialTreeLensDemo.Rings void paint(java.awt.Graphics)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun paint(g : Graphics) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.SatelliteViewDemo.3 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.SatelliteViewDemo.ViewGrid void paint(java.awt.Graphics)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun paint(g : Graphics) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.SatelliteViewDemo void showGrid(edu.uci.ics.jung.visualization.VisualizationViewer, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun showGrid(vv : VisualizationViewer, state : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShortestPathDemo.GraphFactory edu.uci.ics.jung.graph.Graph&lt;java.lang.String,java.lang.Number&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Graph&lt;String?, Number?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShortestPathDemo.GraphFactory java.lang.Object create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShortestPathDemo.MyEdgeStrokeFunction java.awt.Stroke transform(java.lang.Number)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(e : Number?) : Stroke&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShortestPathDemo.MyEdgeStrokeFunction java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShortestPathDemo java.util.Set access$000(edu.uci.ics.jung.samples.ShortestPathDemo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : ShortestPathDemo) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShortestPathDemo edu.uci.ics.jung.graph.Graph access$100(edu.uci.ics.jung.samples.ShortestPathDemo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : ShortestPathDemo) : Graph?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShortestPathDemo java.lang.String access$200(edu.uci.ics.jung.samples.ShortestPathDemo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : ShortestPathDemo) : String?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShortestPathDemo java.lang.String access$202(edu.uci.ics.jung.samples.ShortestPathDemo, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$202(x0 : ShortestPathDemo, x1 : String?) : String?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShortestPathDemo java.lang.String access$300(edu.uci.ics.jung.samples.ShortestPathDemo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : ShortestPathDemo) : String?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShortestPathDemo java.lang.String access$302(edu.uci.ics.jung.samples.ShortestPathDemo, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$302(x0 : ShortestPathDemo, x1 : String?) : String?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShortestPathDemo edu.uci.ics.jung.graph.Graph&lt;java.lang.String,java.lang.Number&gt; getGraph()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getGraph() : Graph&lt;String?, Number?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShortestPathDemo java.awt.Component getSelectionBox(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSelectionBox(from : Boolean) : Component&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShortestPathDemo javax.swing.JPanel setUpControls()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setUpControls() : JPanel&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShowLayouts.1 edu.uci.ics.jung.graph.Graph&lt;java.lang.Integer,java.lang.Number&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Graph&lt;Int?, Number?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShowLayouts.1 java.lang.Object create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShowLayouts.7 java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getListCellRendererComponent(list : JList?, value : Any, index : Int, isSelected : Boolean, cellHasFocus : Boolean) : Component?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShowLayouts.GraphChooser void actionPerformed(java.awt.event.ActionEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun actionPerformed(e : ActionEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.ShowLayouts javax.swing.JPanel getGraphPanel()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getGraphPanel() : JPanel&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.SimpleGraphDraw edu.uci.ics.jung.graph.Graph getGraph()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getGraph() : Graph&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.SubLayoutDemo.10 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.SubLayoutDemo.11 void actionPerformed(java.awt.event.ActionEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun actionPerformed(e : ActionEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.SubLayoutDemo.5 java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getListCellRendererComponent(list : JList?, value : Any, index : Int, isSelected : Boolean, cellHasFocus : Boolean) : Component?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.SubLayoutDemo.6 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.SubLayoutDemo.7 java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getListCellRendererComponent(list : JList?, value : Any, index : Int, isSelected : Boolean, cellHasFocus : Boolean) : Component?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.SubLayoutDemo.8 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.SubLayoutDemo.9 java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getListCellRendererComponent(list : JList?, value : Any, index : Int, isSelected : Boolean, cellHasFocus : Boolean) : Component?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.SubLayoutDemo edu.uci.ics.jung.algorithms.layout.Layout getLayoutFor(java.lang.Class, edu.uci.ics.jung.graph.Graph)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLayoutFor(layoutClass : Class, graph : Graph?) : Layout?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.SubLayoutDemo void heightConstrain(java.awt.Component)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun heightConstrain(component : Component) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.TreeCollapseDemo.1 edu.uci.ics.jung.graph.DirectedGraph&lt;java.lang.String,java.lang.Integer&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : DirectedGraph&lt;String?, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.TreeCollapseDemo.1 java.lang.Object create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.TreeCollapseDemo.2 edu.uci.ics.jung.graph.Tree&lt;java.lang.String,java.lang.Integer&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Tree&lt;String?, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.TreeCollapseDemo.2 java.lang.Object create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.TreeCollapseDemo.7 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.TreeCollapseDemo.ClusterVertexSizeFunction ClusterVertexSizeFunction(edu.uci.ics.jung.samples.TreeCollapseDemo, java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ClusterVertexSizeFunction(size : Int)&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.TreeCollapseDemo.Rings java.util.Collection&lt;java.lang.Double&gt; getDepths()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDepths() : MutableCollection&lt;Double?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.TreeCollapseDemo.Rings void paint(java.awt.Graphics)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun paint(g : Graphics) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.TreeLayoutDemo.1 edu.uci.ics.jung.graph.DirectedGraph&lt;java.lang.String,java.lang.Integer&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : DirectedGraph&lt;String?, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.TreeLayoutDemo.1 java.lang.Object create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.TreeLayoutDemo.2 edu.uci.ics.jung.graph.Tree&lt;java.lang.String,java.lang.Integer&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Tree&lt;String?, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.TreeLayoutDemo.2 java.lang.Object create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create() : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.TreeLayoutDemo.7 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.TreeLayoutDemo.Rings java.util.Collection&lt;java.lang.Double&gt; getDepths()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDepths() : MutableCollection&lt;Double?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.TreeLayoutDemo.Rings void paint(java.awt.Graphics)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun paint(g : Graphics) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.UnicodeLabelDemo.3 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.UnicodeLabelDemo.UnicodeVertexStringer UnicodeVertexStringer(V[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun UnicodeVertexStringer(vertices : Array&lt;out V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.UnicodeLabelDemo void createEdges(java.lang.Integer[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEdges(v : Array&lt;out Int?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.UnicodeLabelDemo java.lang.Integer[] createVertices(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createVertices(count : Int) : Array&lt;out Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.UnicodeLabelDemo void loadImages(java.lang.Integer[], java.util.Map&lt;java.lang.Integer,javax.swing.Icon&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun loadImages(vertices : Array&lt;out Int?&gt;?, imageMap : MutableMap&lt;Int?, Icon?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.VertexCollapseDemo.10 void actionPerformed(java.awt.event.ActionEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun actionPerformed(e : ActionEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.VertexCollapseDemo.ClusterVertexSizeFunction ClusterVertexSizeFunction(edu.uci.ics.jung.samples.VertexCollapseDemo, java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ClusterVertexSizeFunction(size : Int)&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.VertexCollapseDemoWithLayouts.10 void actionPerformed(java.awt.event.ActionEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun actionPerformed(e : ActionEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.VertexCollapseDemoWithLayouts.11 java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getListCellRendererComponent(list : JList?, value : Any, index : Int, isSelected : Boolean, cellHasFocus : Boolean) : Component?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.VertexCollapseDemoWithLayouts.ClusterVertexSizeFunction ClusterVertexSizeFunction(edu.uci.ics.jung.samples.VertexCollapseDemoWithLayouts, java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ClusterVertexSizeFunction(size : Int)&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.VertexImageShaperDemo.1 void paint(java.awt.Graphics)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun paint(g : Graphics) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.VertexImageShaperDemo.4 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.VertexImageShaperDemo.5 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.VertexImageShaperDemo.6 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.VertexImageShaperDemo.DemoRenderer void paintIconForVertex(edu.uci.ics.jung.visualization.RenderContext&lt;V,E&gt;, V, edu.uci.ics.jung.algorithms.layout.Layout&lt;V,E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun paintIconForVertex(rc : RenderContext&lt;V, E&gt;, v : V?, layout : Layout&lt;V, E&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.VertexImageShaperDemo.DemoVertexIconTransformer java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.VertexImageShaperDemo.DemoVertexIconTransformer javax.swing.Icon transform(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(v : V?) : Icon?&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.VertexImageShaperDemo.PickWithIconListener void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.VertexLabelPositionDemo.3 void itemStateChanged(java.awt.event.ItemEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun itemStateChanged(e : ItemEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.VisualizationImageServerDemo void createEdges(java.lang.String[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEdges(v : Array&lt;out String?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.VisualizationImageServerDemo java.lang.String[] createVertices(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createVertices(count : Int) : Array&lt;out String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.WorldMapGraphDemo.1 void paint(java.awt.Graphics)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun paint(g : Graphics) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.WorldMapGraphDemo.LatLonPixelTransformer java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any&quot;"/>
        </annotation>
    </item>
    <item name='edu.uci.ics.jung.samples.WorldMapGraphDemo.LatLonPixelTransformer java.awt.geom.Point2D transform(java.lang.String[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(latlon : Array&lt;out String?&gt;) : Point2D&quot;"/>
        </annotation>
    </item>
</root>
