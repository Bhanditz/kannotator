<root>
    <item name='javax.media.j3d.Alpha javax.media.j3d.Alpha cloneAlpha()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneAlpha() : Alpha&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearance void addScope(javax.media.j3d.Group)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addScope(p0 : Group) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearance javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearance void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearance javax.media.j3d.Appearance getAppearance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAppearance() : Appearance?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearance javax.media.j3d.BoundingLeaf getInfluencingBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearance javax.media.j3d.Bounds getInfluencingBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearance void insertScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearance void setScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained void addScope(javax.media.j3d.Group)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addScope(p0 : Group) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained void clearMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained javax.media.j3d.Appearance getAppearance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAppearance() : Appearance?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained javax.media.j3d.BoundingLeaf getInfluencingBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained javax.media.j3d.Bounds getInfluencingBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained void getMirrorObjects(java.util.ArrayList, javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMirrorObjects(p0 : ArrayList, p1 : HashKey?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained void initAddScope(javax.media.j3d.Group)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initAddScope(p0 : Group) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained void initAppearance(javax.media.j3d.Appearance)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initAppearance(p0 : Appearance?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained void initInfluencingBoundingLeaf(javax.media.j3d.BoundingLeaf)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initInfluencingBoundingLeaf(p0 : BoundingLeaf?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained void initInfluencingBounds(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initInfluencingBounds(p0 : Bounds?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained void initInsertScope(javax.media.j3d.Node, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initInsertScope(p0 : Node, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained void initMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained void initScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained void insertScope(javax.media.j3d.Node, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertScope(p0 : Node, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained void setScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AlternateAppearanceRetained void updateImmediateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateImmediateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AmbientLight javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AmbientLightRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Appearance javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Appearance void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Appearance void duplicateNodeComponent(javax.media.j3d.NodeComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateNodeComponent(p0 : NodeComponent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Appearance javax.media.j3d.ColoringAttributes getColoringAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColoringAttributes() : ColoringAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Appearance javax.media.j3d.LineAttributes getLineAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLineAttributes() : LineAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Appearance javax.media.j3d.Material getMaterial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMaterial() : Material?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Appearance javax.media.j3d.PointAttributes getPointAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPointAttributes() : PointAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Appearance javax.media.j3d.PolygonAttributes getPolygonAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPolygonAttributes() : PolygonAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Appearance javax.media.j3d.RenderingAttributes getRenderingAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRenderingAttributes() : RenderingAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Appearance javax.media.j3d.TexCoordGeneration getTexCoordGeneration()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTexCoordGeneration() : TexCoordGeneration?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Appearance javax.media.j3d.Texture getTexture()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTexture() : Texture?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Appearance javax.media.j3d.TextureAttributes getTextureAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureAttributes() : TextureAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Appearance javax.media.j3d.TextureUnitState[] getTextureUnitState()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureUnitState() : Array&lt;out TextureUnitState?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Appearance javax.media.j3d.TextureUnitState getTextureUnitState(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureUnitState(p0 : Int) : TextureUnitState?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Appearance javax.media.j3d.TransparencyAttributes getTransparencyAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTransparencyAttributes() : TransparencyAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AppearanceRetained boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AppearanceRetained javax.media.j3d.ColoringAttributes getColoringAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColoringAttributes() : ColoringAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AppearanceRetained javax.media.j3d.LineAttributes getLineAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLineAttributes() : LineAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AppearanceRetained javax.media.j3d.Material getMaterial()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMaterial() : Material?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AppearanceRetained javax.media.j3d.PointAttributes getPointAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPointAttributes() : PointAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AppearanceRetained javax.media.j3d.PolygonAttributes getPolygonAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPolygonAttributes() : PolygonAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AppearanceRetained javax.media.j3d.RenderingAttributes getRenderingAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRenderingAttributes() : RenderingAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AppearanceRetained javax.media.j3d.TexCoordGeneration getTexCoordGeneration()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTexCoordGeneration() : TexCoordGeneration?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AppearanceRetained javax.media.j3d.Texture getTexture()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTexture() : Texture?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AppearanceRetained javax.media.j3d.TextureAttributes getTextureAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureAttributes() : TextureAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AppearanceRetained javax.media.j3d.TextureUnitState[] getTextureUnitState()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureUnitState() : Array&lt;out TextureUnitState?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AppearanceRetained javax.media.j3d.TextureUnitState getTextureUnitState(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureUnitState(p0 : Int) : TextureUnitState?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AppearanceRetained javax.media.j3d.TransparencyAttributes getTransparencyAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTransparencyAttributes() : TransparencyAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AttributeBin void addTextureBin(javax.media.j3d.TextureBin, javax.media.j3d.RenderBin, javax.media.j3d.RenderAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addTextureBin(p0 : TextureBin, p1 : RenderBin?, p2 : RenderAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AttributeBin boolean equals(javax.media.j3d.RenderingAttributesRetained, javax.media.j3d.RenderAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : RenderingAttributesRetained?, p1 : RenderAtom) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AttributeBin void insertTextureBin(javax.media.j3d.TextureBin)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertTextureBin(p0 : TextureBin) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AttributeBin void reInsertTextureBin(javax.media.j3d.TextureBin)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reInsertTextureBin(p0 : TextureBin) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AttributeBin void removeTextureBin(javax.media.j3d.TextureBin)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeTextureBin(p0 : TextureBin) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AttributeBin void reset(javax.media.j3d.AppearanceRetained, javax.media.j3d.RenderingAttributesRetained, javax.media.j3d.RenderBin)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reset(p0 : AppearanceRetained?, p1 : RenderingAttributesRetained?, p2 : RenderBin?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AttributeBin void updateAttributes(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateAttributes(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AudioDeviceEnumerator AudioDeviceEnumerator(javax.media.j3d.PhysicalEnvironment)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AudioDeviceEnumerator(p0 : PhysicalEnvironment)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AuralAttributes javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AuralAttributes void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AuralAttributesRetained void getDistanceFilter(float[], float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDistanceFilter(p0 : FloatArray?, p1 : FloatArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AuralAttributesRetained void getDistanceFilter(javax.vecmath.Point2f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDistanceFilter(p0 : Array&lt;out Point2f?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AuralAttributesRetained void reset(javax.media.j3d.AuralAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reset(p0 : AuralAttributesRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AuralAttributesRetained void setDistanceFilter(float[], float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setDistanceFilter(p0 : FloatArray?, p1 : FloatArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AuralAttributesRetained void setDistanceFilter(javax.vecmath.Point2f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setDistanceFilter(p0 : Array&lt;out Point2f?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.AuralAttributesRetained void update(javax.media.j3d.AuralAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun update(p0 : AuralAttributesRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHInternalNode void computeBoundingHull(javax.media.j3d.BoundingBox)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeBoundingHull(p0 : BoundingBox) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHInternalNode void destroyTree(javax.media.j3d.BHNode[], int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun destroyTree(p0 : Array&lt;out BHNode?&gt;, p1 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHLeafNode void destroyTree(javax.media.j3d.BHNode[], int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun destroyTree(p0 : Array&lt;out BHNode?&gt;, p1 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHNode void combineBHull(javax.media.j3d.BHNode, javax.media.j3d.BHNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun combineBHull(p0 : BHNode, p1 : BHNode) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHNode javax.media.j3d.BHNode deleteAndUpdateMarkedNodes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun deleteAndUpdateMarkedNodes() : BHNode?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHNode void destroyTree(javax.media.j3d.BHNode[], int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun destroyTree(p0 : Array&lt;out BHNode?&gt;, p1 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHNode javax.media.j3d.BHNode findNode(javax.media.j3d.BHNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findNode(p0 : BHNode?) : BHNode?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHNode boolean isInside(javax.media.j3d.BoundingBox)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isInside(p0 : BoundingBox?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree boolean aEncompassB(javax.media.j3d.BoundingBox, javax.media.j3d.BoundingBox)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun aEncompassB(p0 : BoundingBox, p1 : BoundingBox) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree void cluster(javax.media.j3d.BHInternalNode, javax.media.j3d.BHNode[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cluster(p0 : BHInternalNode?, p1 : Array&lt;out BHNode?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree float[][] computeCenterValues(javax.media.j3d.BHNode[], int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeCenterValues(p0 : Array&lt;out BHNode?&gt;, p1 : IntArray?) : Array&lt;out FloatArray?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree void computeMeansAndSumSquares(float[][], int[], float[], float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeMeansAndSumSquares(p0 : Array&lt;out FloatArray?&gt;?, p1 : IntArray, p2 : FloatArray, p3 : FloatArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree void constructTree(javax.media.j3d.BHInternalNode, javax.media.j3d.BHNode[], float[][], int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun constructTree(p0 : BHInternalNode, p1 : Array&lt;out BHNode?&gt;, p2 : Array&lt;out FloatArray?&gt;?, p3 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree void create(javax.media.j3d.BHNode[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create(p0 : Array&lt;out BHNode?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree void doSelect(javax.media.j3d.PickShape, javax.media.j3d.UnorderList, javax.media.j3d.BHNode, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doSelect(p0 : PickShape?, p1 : UnorderList?, p2 : BHNode?, p3 : Point4d?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree javax.media.j3d.BHNode doSelectAny(javax.media.j3d.Bounds, javax.media.j3d.BHNode, int, javax.media.j3d.GroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doSelectAny(p0 : Bounds?, p1 : BHNode?, p2 : Int, p3 : GroupRetained?) : BHNode?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree javax.media.j3d.BHNode doSelectAny(javax.media.j3d.Bounds, javax.media.j3d.BHNode, int, javax.media.j3d.NodeRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doSelectAny(p0 : Bounds?, p1 : BHNode?, p2 : Int, p3 : NodeRetained?) : BHNode?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree javax.media.j3d.BHNode doSelectAny(javax.media.j3d.GeometryAtom, javax.media.j3d.BHNode, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doSelectAny(p0 : GeometryAtom?, p1 : BHNode?, p2 : Int) : BHNode?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree javax.media.j3d.BHNode doSelectAny(javax.media.j3d.PickShape, javax.media.j3d.BHNode, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doSelectAny(p0 : PickShape?, p1 : BHNode?, p2 : Point4d?) : BHNode?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree javax.media.j3d.BHNode doSelectAny(javax.media.j3d.GeometryAtom[], int, javax.media.j3d.BHNode, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doSelectAny(p0 : Array&lt;out GeometryAtom?&gt;?, p1 : Int, p2 : BHNode?, p3 : Int) : BHNode?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree boolean getVisibleBHTrees(javax.media.j3d.RenderBin, java.util.ArrayList, javax.media.j3d.BoundingBox, long, boolean, int, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getVisibleBHTrees(p0 : RenderBin?, p1 : ArrayList?, p2 : BoundingBox?, p3 : Long, p4 : Boolean, p5 : Int, p6 : Boolean) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree void insert(javax.media.j3d.BHNode[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insert(p0 : Array&lt;out BHNode?&gt;?, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree boolean isDescendent(javax.media.j3d.NodeRetained, javax.media.j3d.GroupRetained, javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isDescendent(p0 : NodeRetained, p1 : GroupRetained, p2 : HashKey?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree void markParentChain(javax.media.j3d.BHNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markParentChain(p0 : BHNode) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree void printTree(javax.media.j3d.BHNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun printTree(p0 : BHNode?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree void select(javax.media.j3d.PickShape, javax.media.j3d.UnorderList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun select(p0 : PickShape?, p1 : UnorderList?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree void select(javax.media.j3d.RenderBin, java.util.ArrayList, javax.media.j3d.BoundingBox, javax.media.j3d.BHNode, long, int, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun select(p0 : RenderBin?, p1 : ArrayList?, p2 : BoundingBox?, p3 : BHNode?, p4 : Long, p5 : Int, p6 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree javax.media.j3d.BHLeafInterface selectAny(javax.media.j3d.Bounds, int, javax.media.j3d.GroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun selectAny(p0 : Bounds?, p1 : Int, p2 : GroupRetained?) : BHLeafInterface?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree javax.media.j3d.BHLeafInterface selectAny(javax.media.j3d.Bounds, int, javax.media.j3d.NodeRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun selectAny(p0 : Bounds?, p1 : Int, p2 : NodeRetained?) : BHLeafInterface?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree javax.media.j3d.BHLeafInterface selectAny(javax.media.j3d.GeometryAtom, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun selectAny(p0 : GeometryAtom, p1 : Int) : BHLeafInterface?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree javax.media.j3d.BHNode selectAny(javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun selectAny(p0 : PickShape?) : BHNode?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BHTree javax.media.j3d.BHLeafInterface selectAny(javax.media.j3d.GeometryAtom[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun selectAny(p0 : Array&lt;out GeometryAtom?&gt;?, p1 : Int, p2 : Int) : BHLeafInterface?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Background javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Background void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Background void duplicateNode(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateNode(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Background javax.media.j3d.BoundingLeaf getApplicationBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getApplicationBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Background javax.media.j3d.Bounds getApplicationBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getApplicationBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Background void getColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Background javax.media.j3d.ImageComponent2D getImage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImage() : ImageComponent2D?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BackgroundRetained void clearGeometryBranch(javax.media.j3d.BranchGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearGeometryBranch(p0 : BranchGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BackgroundRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BackgroundRetained javax.media.j3d.BoundingLeaf getApplicationBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getApplicationBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BackgroundRetained javax.media.j3d.Bounds getApplicationBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getApplicationBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BackgroundRetained void getColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BackgroundRetained javax.media.j3d.ImageComponent2D getImage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImage() : ImageComponent2D?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BackgroundRetained void getMirrorObjects(java.util.ArrayList, javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMirrorObjects(p0 : ArrayList, p1 : HashKey?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BackgroundRetained void initApplicationBoundingLeaf(javax.media.j3d.BoundingLeaf)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initApplicationBoundingLeaf(p0 : BoundingLeaf?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BackgroundRetained void initApplicationBounds(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initApplicationBounds(p0 : Bounds?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BackgroundRetained void initImage(javax.media.j3d.ImageComponent2D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initImage(p0 : ImageComponent2D?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BackgroundRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BackgroundRetained void setGeometryBranch(javax.media.j3d.BranchGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setGeometryBranch(p0 : BranchGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BackgroundRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BackgroundRetained void updateImmediateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateImmediateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BackgroundSound javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BackgroundSound void duplicateNode(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateNode(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Behavior void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Behavior javax.media.j3d.BoundingLeaf getSchedulingBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSchedulingBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Behavior javax.media.j3d.Bounds getSchedulingBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSchedulingBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Behavior javax.media.j3d.View getView()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getView() : View?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Behavior void wakeupOn(javax.media.j3d.WakeupCondition)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun wakeupOn(p0 : WakeupCondition) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorRetained javax.media.j3d.BoundingLeaf getSchedulingBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSchedulingBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorRetained javax.media.j3d.Bounds getSchedulingBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSchedulingBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorRetained javax.media.j3d.View getView()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getView() : View?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorRetained void updateTransformRegion(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTransformRegion(p0 : Bounds?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorRetained void wakeupOn(javax.media.j3d.WakeupCondition)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun wakeupOn(p0 : WakeupCondition) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorScheduler BehaviorScheduler(java.lang.ThreadGroup, javax.media.j3d.VirtualUniverse)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BehaviorScheduler(p0 : ThreadGroup?, p1 : VirtualUniverse)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorScheduler void stopBehaviorScheduler(long[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun stopBehaviorScheduler(p0 : LongArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void addSensorEntryCondition(javax.media.j3d.WakeupOnSensorEntry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addSensorEntryCondition(p0 : WakeupOnSensorEntry) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void addSensorExitCondition(javax.media.j3d.WakeupOnSensorExit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addSensorExitCondition(p0 : WakeupOnSensorExit) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void addToScheduleList(javax.media.j3d.BehaviorRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addToScheduleList(p0 : BehaviorRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void addVPEntryCondition(javax.media.j3d.WakeupOnViewPlatformEntry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addVPEntryCondition(p0 : WakeupOnViewPlatformEntry) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void addVPExitCondition(javax.media.j3d.WakeupOnViewPlatformExit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addVPExitCondition(p0 : WakeupOnViewPlatformExit) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void addViewPlatform(javax.media.j3d.ViewPlatformRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addViewPlatform(p0 : ViewPlatformRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void insertNodes(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertNodes(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure javax.media.j3d.ViewPlatformRetained intersectVPCenter(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectVPCenter(p0 : Bounds?) : ViewPlatformRetained?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure boolean intersectVPRegion(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectVPRegion(p0 : Bounds?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void processBehXformChanged(javax.media.j3d.UnorderList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processBehXformChanged(p0 : UnorderList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void processBehaviorTransform(javax.media.j3d.BehaviorRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processBehaviorTransform(p0 : BehaviorRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void processBoundingLeafChanged(java.lang.Object[], javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processBoundingLeafChanged(p0 : Array&lt;out Any?&gt;, p1 : Bounds?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void processConditionMet(javax.media.j3d.BehaviorRetained, java.lang.Boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processConditionMet(p0 : BehaviorRetained, p1 : Boolean?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void processSwitchChanged(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processSwitchChanged(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void processTransformChanged(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processTransformChanged(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void processViewPlatformTransform(javax.media.j3d.ViewPlatformRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processViewPlatformTransform(p0 : ViewPlatformRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void processVpfXformChanged(javax.media.j3d.UnorderList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processVpfXformChanged(p0 : UnorderList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void removeBehavior(javax.media.j3d.BehaviorRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBehavior(p0 : BehaviorRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void removeFromScheduleList(javax.media.j3d.BehaviorRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeFromScheduleList(p0 : BehaviorRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void removeNodes(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodes(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void removeSensorEntryCondition(javax.media.j3d.WakeupOnSensorEntry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeSensorEntryCondition(p0 : WakeupOnSensorEntry) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void removeSensorExitCondition(javax.media.j3d.WakeupOnSensorExit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeSensorExitCondition(p0 : WakeupOnSensorExit) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void removeVPEntryCondition(javax.media.j3d.WakeupCondition)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeVPEntryCondition(p0 : WakeupCondition) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void removeVPExitCondition(javax.media.j3d.WakeupOnViewPlatformExit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeVPExitCondition(p0 : WakeupOnViewPlatformExit) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void removeViewPlatform(javax.media.j3d.ViewPlatformRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeViewPlatform(p0 : ViewPlatformRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure void resetConditionMet(javax.media.j3d.WakeupIndexedList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resetConditionMet(p0 : WakeupIndexedList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BehaviorStructure javax.media.j3d.Sensor sensorIntersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sensorIntersect(p0 : Bounds?) : Sensor?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Billboard Billboard(javax.media.j3d.TransformGroup, int, javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Billboard(p0 : TransformGroup?, p1 : Int, p2 : Vector3f)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Billboard javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Billboard void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Billboard void getAlignmentAxis(javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAlignmentAxis(p0 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Billboard void getRotationPoint(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRotationPoint(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Billboard boolean projectToPlane(javax.vecmath.Vector3d, javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun projectToPlane(p0 : Vector3d, p1 : Vector3d) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Billboard void setAlignmentAxis(javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setAlignmentAxis(p0 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox BoundingBox(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BoundingBox(p0 : Bounds?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox BoundingBox(javax.media.j3d.Bounds[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BoundingBox(p0 : Array&lt;out Bounds?&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox javax.media.j3d.Bounds closestIntersection(javax.media.j3d.Bounds[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun closestIntersection(p0 : Array&lt;out Bounds?&gt;?) : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox void combine(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun combine(p0 : Bounds?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox void combine(javax.media.j3d.Bounds[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun combine(p0 : Array&lt;out Bounds?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox javax.media.j3d.Bounds copy(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy(p0 : Bounds?) : Bounds&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox void getLower(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLower(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox void getUpper(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getUpper(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox boolean intersect(javax.media.j3d.Bounds, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds, p1 : Point4d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox boolean intersect(javax.media.j3d.Bounds[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Bounds?&gt;?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox void set(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Bounds?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox void setLower(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLower(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox void setUpper(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setUpper(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox void transform(javax.media.j3d.Bounds, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Bounds?, p1 : Transform3D?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox void transform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingBox void translate(javax.media.j3d.BoundingBox, javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun translate(p0 : BoundingBox?, p1 : Vector3d?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingLeaf javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingLeaf void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingLeaf javax.media.j3d.Bounds getRegion()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRegion() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingLeafRetained void addUser(javax.media.j3d.LeafRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addUser(p0 : LeafRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingLeafRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingLeafRetained javax.media.j3d.Bounds getRegion()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRegion() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingLeafRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingLeafRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingLeafRetained void updateImmediateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateImmediateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingPolytope BoundingPolytope(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BoundingPolytope(p0 : Bounds?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingPolytope BoundingPolytope(javax.media.j3d.Bounds[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BoundingPolytope(p0 : Array&lt;out Bounds?&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingPolytope BoundingPolytope(javax.vecmath.Vector4d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BoundingPolytope(p0 : Array&lt;out Vector4d?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingPolytope java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingPolytope javax.media.j3d.Bounds closestIntersection(javax.media.j3d.Bounds[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun closestIntersection(p0 : Array&lt;out Bounds?&gt;?) : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingPolytope void combine(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun combine(p0 : Bounds?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingPolytope void combine(javax.media.j3d.Bounds[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun combine(p0 : Array&lt;out Bounds?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingPolytope javax.media.j3d.Bounds copy(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy(p0 : Bounds?) : Bounds&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingPolytope void getPlanes(javax.vecmath.Vector4d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPlanes(p0 : Array&lt;out Vector4d?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingPolytope boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingPolytope boolean intersect(javax.media.j3d.Bounds, javax.media.j3d.BoundingPolytope)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds?, p1 : BoundingPolytope) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingPolytope boolean intersect(javax.media.j3d.Bounds, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds, p1 : Point4d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingPolytope boolean intersect(javax.media.j3d.Bounds[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Bounds?&gt;?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingPolytope void set(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Bounds?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingPolytope void setPlanes(javax.vecmath.Vector4d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPlanes(p0 : Array&lt;out Vector4d?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingPolytope void transform(javax.media.j3d.Bounds, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Bounds?, p1 : Transform3D?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingPolytope void transform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingSphere BoundingSphere(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BoundingSphere(p0 : Bounds?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingSphere BoundingSphere(javax.media.j3d.Bounds[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BoundingSphere(p0 : Array&lt;out Bounds?&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingSphere java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingSphere javax.media.j3d.Bounds closestIntersection(javax.media.j3d.Bounds[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun closestIntersection(p0 : Array&lt;out Bounds?&gt;?) : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingSphere void combine(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun combine(p0 : Bounds?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingSphere void combine(javax.media.j3d.Bounds[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun combine(p0 : Array&lt;out Bounds?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingSphere javax.media.j3d.Bounds copy(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy(p0 : Bounds?) : Bounds&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingSphere void getCenter(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCenter(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingSphere boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingSphere boolean intersect(javax.media.j3d.Bounds, javax.media.j3d.BoundingSphere)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds?, p1 : BoundingSphere) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingSphere boolean intersect(javax.media.j3d.Bounds, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds, p1 : Point4d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingSphere boolean intersect(javax.media.j3d.Bounds[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Bounds?&gt;?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingSphere void set(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Bounds?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingSphere void setCenter(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCenter(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingSphere java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingSphere void transform(javax.media.j3d.Bounds, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Bounds?, p1 : Transform3D?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BoundingSphere void transform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Bounds java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Bounds javax.media.j3d.Bounds closestIntersection(javax.media.j3d.Bounds[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun closestIntersection(p0 : Array&lt;out Bounds?&gt;?) : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Bounds void combine(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun combine(p0 : Bounds?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Bounds void combine(javax.media.j3d.Bounds[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun combine(p0 : Array&lt;out Bounds?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Bounds javax.media.j3d.Bounds copy(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy(p0 : Bounds?) : Bounds&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Bounds void getWithLock(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getWithLock(p0 : Bounds) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Bounds boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Bounds boolean intersect(javax.media.j3d.Bounds, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds, p1 : Point4d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Bounds boolean intersect(javax.media.j3d.Bounds[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Bounds?&gt;?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Bounds boolean intersect_ptope_abox(javax.media.j3d.BoundingPolytope, javax.media.j3d.BoundingBox)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect_ptope_abox(p0 : BoundingPolytope, p1 : BoundingBox) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Bounds boolean intersect_ptope_ptope(javax.media.j3d.BoundingPolytope, javax.media.j3d.BoundingPolytope)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect_ptope_ptope(p0 : BoundingPolytope, p1 : BoundingPolytope) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Bounds boolean intersect_ptope_sphere(javax.media.j3d.BoundingPolytope, javax.media.j3d.BoundingSphere)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect_ptope_sphere(p0 : BoundingPolytope, p1 : BoundingSphere) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Bounds void set(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Bounds?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Bounds void test_point(javax.vecmath.Vector4d[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun test_point(p0 : Array&lt;out Vector4d?&gt;, p1 : Point3d?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Bounds void transform(javax.media.j3d.Bounds, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Bounds?, p1 : Transform3D?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Bounds void transform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BranchGroup javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BranchGroup javax.media.j3d.SceneGraphPath[] pickAll(javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickAll(p0 : PickShape?) : Array&lt;out SceneGraphPath?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BranchGroup javax.media.j3d.SceneGraphPath[] pickAllSorted(javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickAllSorted(p0 : PickShape?) : Array&lt;out SceneGraphPath?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BranchGroup javax.media.j3d.SceneGraphPath pickAny(javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickAny(p0 : PickShape?) : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BranchGroup javax.media.j3d.SceneGraphPath pickClosest(javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickClosest(p0 : PickShape?) : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BranchGroupRetained void compile(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compile(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BranchGroupRetained void removeNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BranchGroupRetained void setAuxData(javax.media.j3d.SetLiveState, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setAuxData(p0 : SetLiveState, p1 : Int, p2 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BranchGroupRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.BranchGroupRetained void setNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CachedFrustum CachedFrustum(javax.vecmath.Vector4d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CachedFrustum(p0 : Array&lt;out Vector4d?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CachedFrustum void computeEdges(javax.vecmath.Vector4d[], int, int, javax.vecmath.Point4d, javax.vecmath.Point4d, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeEdges(p0 : Array&lt;out Vector4d?&gt;, p1 : Int, p2 : Int, p3 : Point4d, p4 : Point4d, p5 : Point4d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CachedFrustum void set(javax.vecmath.Vector4d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Array&lt;out Vector4d?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D Canvas3D(java.awt.GraphicsConfiguration, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Canvas3D(p0 : GraphicsConfiguration, p1 : Boolean)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void freeContextResources(javax.media.j3d.Renderer, boolean, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun freeContextResources(p0 : Renderer?, p1 : Boolean, p2 : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void getCenterEyeInImagePlate(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCenterEyeInImagePlate(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void getImagePlateToVworld(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImagePlateToVworld(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void getInverseVworldProjection(javax.media.j3d.Transform3D, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInverseVworldProjection(p0 : Transform3D, p1 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void getLastVworldToImagePlate(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLastVworldToImagePlate(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void getLeftEyeInImagePlate(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLeftEyeInImagePlate(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void getLeftManualEyeInImagePlate(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLeftManualEyeInImagePlate(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D java.awt.Point getOffScreenLocation()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOffScreenLocation() : Point&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D java.awt.Point getOffScreenLocation(java.awt.Point)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOffScreenLocation(p0 : Point?) : Point&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void getPixelLocationFromImagePlate(javax.vecmath.Point3d, javax.vecmath.Point2d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPixelLocationFromImagePlate(p0 : Point3d?, p1 : Point2d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void getPixelLocationInImagePlate(double, double, double, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPixelLocationInImagePlate(p0 : Double, p1 : Double, p2 : Double, p3 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void getPixelLocationInImagePlate(int, int, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPixelLocationInImagePlate(p0 : Int, p1 : Int, p2 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void getPixelLocationInImagePlate(javax.vecmath.Point2d, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPixelLocationInImagePlate(p0 : Point2d?, p1 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void getRightEyeInImagePlate(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRightEyeInImagePlate(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void getRightManualEyeInImagePlate(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRightManualEyeInImagePlate(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void getVworldProjection(javax.media.j3d.Transform3D, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getVworldProjection(p0 : Transform3D, p1 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void getVworldToImagePlate(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getVworldToImagePlate(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void setFrustumPlanes(javax.vecmath.Vector4d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setFrustumPlanes(p0 : Array&lt;out Vector4d?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void setModelViewMatrix(long, double[], javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setModelViewMatrix(p0 : Long, p1 : DoubleArray?, p2 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Canvas3D void setOffScreenBuffer(javax.media.j3d.ImageComponent2D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOffScreenBuffer(p0 : ImageComponent2D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CanvasViewCache void analyzeProjection(javax.media.j3d.Transform3D, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun analyzeProjection(p0 : Transform3D, p1 : Double) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CanvasViewCache void buildProjView(javax.vecmath.Point3d, javax.media.j3d.Transform3D, javax.media.j3d.Transform3D, double, double, javax.media.j3d.Transform3D, javax.media.j3d.Transform3D, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildProjView(p0 : Point3d, p1 : Transform3D?, p2 : Transform3D, p3 : Double, p4 : Double, p5 : Transform3D, p6 : Transform3D, p7 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CanvasViewCache void computeFrustumPlanes(javax.media.j3d.Transform3D, javax.media.j3d.Transform3D, javax.vecmath.Vector4d[], javax.vecmath.Point4d[], javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeFrustumPlanes(p0 : Transform3D, p1 : Transform3D, p2 : Array&lt;out Vector4d?&gt;, p3 : Array&lt;out Point4d?&gt;, p4 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CanvasViewCache void computePlaneEq(javax.vecmath.Point4d, javax.vecmath.Point4d, javax.vecmath.Point4d, javax.vecmath.Point4d, javax.vecmath.Vector4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computePlaneEq(p0 : Point4d, p1 : Point4d, p2 : Point4d, p3 : Point4d?, p4 : Vector4d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CanvasViewCache void copyComputedCanvasViewCache(javax.media.j3d.CanvasViewCache, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyComputedCanvasViewCache(p0 : CanvasViewCache, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CanvasViewCache void getPixelLocationFromImagePlate(javax.vecmath.Point3d, javax.vecmath.Point2d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPixelLocationFromImagePlate(p0 : Point3d?, p1 : Point2d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CanvasViewCache void getPixelLocationInImagePlate(double, double, double, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPixelLocationInImagePlate(p0 : Double, p1 : Double, p2 : Double, p3 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CanvasViewEventCatcher void componentResized(java.awt.event.ComponentEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun componentResized(p0 : ComponentEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Clip javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Clip void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Clip javax.media.j3d.BoundingLeaf getApplicationBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getApplicationBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Clip javax.media.j3d.Bounds getApplicationBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getApplicationBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ClipRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ClipRetained javax.media.j3d.BoundingLeaf getApplicationBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getApplicationBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ClipRetained javax.media.j3d.Bounds getApplicationBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getApplicationBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ClipRetained void getMirrorObjects(java.util.ArrayList, javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMirrorObjects(p0 : ArrayList, p1 : HashKey?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ClipRetained void initApplicationBoundingLeaf(javax.media.j3d.BoundingLeaf)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initApplicationBoundingLeaf(p0 : BoundingLeaf?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ClipRetained void initApplicationBounds(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initApplicationBounds(p0 : Bounds?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ClipRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ClipRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ClipRetained void updateImmediateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateImmediateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ColorInterpolator javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ColorInterpolator void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ColorInterpolator void getEndColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEndColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ColorInterpolator void getStartColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getStartColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ColoringAttributes javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ColoringAttributes void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ColoringAttributes void getColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ColoringAttributes java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ColoringAttributesRetained java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ColoringAttributesRetained boolean equivalent(javax.media.j3d.ColoringAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equivalent(p0 : ColoringAttributesRetained?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ColoringAttributesRetained void getColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ColoringAttributesRetained void set(javax.media.j3d.ColoringAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : ColoringAttributesRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompileState javax.media.j3d.AppearanceRetained getAppearance(javax.media.j3d.AppearanceRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAppearance(p0 : AppearanceRetained) : AppearanceRetained?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompileState int getCompileFlags(javax.media.j3d.Shape3DRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCompileFlags(p0 : Shape3DRetained) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompressedGeometry CompressedGeometry(javax.media.j3d.CompressedGeometryHeader, byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CompressedGeometry(p0 : CompressedGeometryHeader, p1 : ByteArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompressedGeometry CompressedGeometry(javax.media.j3d.CompressedGeometryHeader, byte[], boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CompressedGeometry(p0 : CompressedGeometryHeader, p1 : ByteArray, p2 : Boolean)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompressedGeometry javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompressedGeometry javax.media.j3d.Shape3D[] decompress()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun decompress() : Array&lt;out Shape3D?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompressedGeometry void getCompressedGeometry(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCompressedGeometry(p0 : ByteArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompressedGeometry javax.media.j3d.J3DBuffer getCompressedGeometryBuffer()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCompressedGeometryBuffer() : J3DBuffer?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompressedGeometry void getCompressedGeometryHeader(javax.media.j3d.CompressedGeometryHeader)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCompressedGeometryHeader(p0 : CompressedGeometryHeader) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompressedGeometryHeader void copy(javax.media.j3d.CompressedGeometryHeader)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy(p0 : CompressedGeometryHeader) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompressedGeometryRenderMethod boolean render(javax.media.j3d.RenderMolecule, javax.media.j3d.Canvas3D, int, javax.media.j3d.RenderAtomListInfo, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun render(p0 : RenderMolecule, p1 : Canvas3D, p2 : Int, p3 : RenderAtomListInfo?, p4 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompressedGeometryRenderMethod void renderCompressedGeo(javax.media.j3d.RenderAtomListInfo, javax.media.j3d.RenderMolecule, javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun renderCompressedGeo(p0 : RenderAtomListInfo, p1 : RenderMolecule, p2 : Canvas3D?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompressedGeometryRetained void createCompressedGeometry(javax.media.j3d.CompressedGeometryHeader, byte[], boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCompressedGeometry(p0 : CompressedGeometryHeader, p1 : ByteArray?, p2 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompressedGeometryRetained void duplicate(javax.media.j3d.CompressedGeometryRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicate(p0 : CompressedGeometryRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompressedGeometryRetained void execute(javax.media.j3d.Canvas3D, javax.media.j3d.RenderAtom, boolean, boolean, float, boolean, int, boolean, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun execute(p0 : Canvas3D, p1 : RenderAtom?, p2 : Boolean, p3 : Boolean, p4 : Float, p5 : Boolean, p6 : Int, p7 : Boolean, p8 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompressedGeometryRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompressedGeometryRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.CompressedGeometryRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ConeSound ConeSound(javax.media.j3d.MediaContainer, float, int, boolean, boolean, boolean, javax.media.j3d.Bounds, float, javax.vecmath.Point3f, javax.vecmath.Point2f[], javax.vecmath.Vector3f, javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConeSound(p0 : MediaContainer?, p1 : Float, p2 : Int, p3 : Boolean, p4 : Boolean, p5 : Boolean, p6 : Bounds?, p7 : Float, p8 : Point3f, p9 : Array&lt;out Point2f?&gt;?, p10 : Vector3f?, p11 : Array&lt;out Point3f?&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ConeSound ConeSound(javax.media.j3d.MediaContainer, float, int, boolean, boolean, boolean, javax.media.j3d.Bounds, float, javax.vecmath.Point3f, javax.vecmath.Point2f[], javax.vecmath.Point2f[], javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConeSound(p0 : MediaContainer?, p1 : Float, p2 : Int, p3 : Boolean, p4 : Boolean, p5 : Boolean, p6 : Bounds?, p7 : Float, p8 : Point3f, p9 : Array&lt;out Point2f?&gt;?, p10 : Array&lt;out Point2f?&gt;?, p11 : Vector3f?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ConeSound ConeSound(javax.media.j3d.MediaContainer, float, int, boolean, boolean, boolean, javax.media.j3d.Bounds, float, javax.vecmath.Point3f, javax.vecmath.Point2f[], javax.vecmath.Point2f[], javax.vecmath.Vector3f, javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConeSound(p0 : MediaContainer?, p1 : Float, p2 : Int, p3 : Boolean, p4 : Boolean, p5 : Boolean, p6 : Bounds?, p7 : Float, p8 : Point3f, p9 : Array&lt;out Point2f?&gt;?, p10 : Array&lt;out Point2f?&gt;?, p11 : Vector3f?, p12 : Array&lt;out Point3f?&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ConeSound ConeSound(javax.media.j3d.MediaContainer, float, javax.vecmath.Point3f, javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConeSound(p0 : MediaContainer?, p1 : Float, p2 : Point3f, p3 : Vector3f?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ConeSound javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ConeSound void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ConeSound void duplicateNode(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateNode(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ConeSoundRetained void getAngularAttenuation(float[], float[], float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAngularAttenuation(p0 : FloatArray?, p1 : FloatArray?, p2 : FloatArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ConeSoundRetained void getAngularAttenuation(javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAngularAttenuation(p0 : Array&lt;out Point3f?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ConeSoundRetained void getBackDistanceGain(float[], float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBackDistanceGain(p0 : FloatArray?, p1 : FloatArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ConeSoundRetained void getBackDistanceGain(javax.vecmath.Point2f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBackDistanceGain(p0 : Array&lt;out Point2f?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ConeSoundRetained void getXformDirection(javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getXformDirection(p0 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ConeSoundRetained void initMirrorObject(javax.media.j3d.ConeSoundRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initMirrorObject(p0 : ConeSoundRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ConeSoundRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ConeSoundRetained void updateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DecalGroup javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DefaultRenderMethod boolean render(javax.media.j3d.RenderMolecule, javax.media.j3d.Canvas3D, int, javax.media.j3d.RenderAtomListInfo, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun render(p0 : RenderMolecule, p1 : Canvas3D, p2 : Int, p3 : RenderAtomListInfo?, p4 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DepthComponentFloat javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DepthComponentFloat void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DepthComponentFloat void setDepthData(float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setDepthData(p0 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DepthComponentFloatRetained void setDepthData(float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setDepthData(p0 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DepthComponentInt javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DepthComponentInt void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DepthComponentInt void setDepthData(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setDepthData(p0 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DepthComponentIntRetained void setDepthData(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setDepthData(p0 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DepthComponentNative javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DepthComponentNative void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DetailTextureImage void bindTexture(javax.media.j3d.Canvas3D, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun bindTexture(p0 : Canvas3D, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DetailTextureImage void updateNative(javax.media.j3d.Canvas3D, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateNative(p0 : Canvas3D, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DirectionalLight javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DirectionalLight void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DirectionalLight void getDirection(javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDirection(p0 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DirectionalLightRetained java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DirectionalLightRetained void getDirection(javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDirection(p0 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DirectionalLightRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DirectionalLightRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DirectionalLightRetained void updateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DisplayListRenderMethod void buildDisplayList(javax.media.j3d.RenderMolecule, javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildDisplayList(p0 : RenderMolecule, p1 : Canvas3D?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DisplayListRenderMethod void buildDlistPerRinfo(javax.media.j3d.RenderAtomListInfo, javax.media.j3d.RenderMolecule, javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildDlistPerRinfo(p0 : RenderAtomListInfo, p1 : RenderMolecule, p2 : Canvas3D?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DisplayListRenderMethod void buildIndividualDisplayList(javax.media.j3d.RenderAtomListInfo, javax.media.j3d.Canvas3D, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildIndividualDisplayList(p0 : RenderAtomListInfo, p1 : Canvas3D, p2 : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DisplayListRenderMethod boolean render(javax.media.j3d.RenderMolecule, javax.media.j3d.Canvas3D, int, javax.media.j3d.RenderAtomListInfo, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun render(p0 : RenderMolecule, p1 : Canvas3D, p2 : Int, p3 : RenderAtomListInfo?, p4 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DisplayListRenderMethod boolean renderSeparateDlistPerRinfo(javax.media.j3d.RenderMolecule, javax.media.j3d.Canvas3D, int, javax.media.j3d.RenderAtomListInfo, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun renderSeparateDlistPerRinfo(p0 : RenderMolecule, p1 : Canvas3D?, p2 : Int, p3 : RenderAtomListInfo?, p4 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DisplayListRenderMethod boolean renderSeparateDlists(javax.media.j3d.RenderMolecule, javax.media.j3d.Canvas3D, int, javax.media.j3d.RenderAtomListInfo, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun renderSeparateDlists(p0 : RenderMolecule, p1 : Canvas3D?, p2 : Int, p3 : RenderAtomListInfo?, p4 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DistanceLOD DistanceLOD(float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun DistanceLOD(p0 : FloatArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DistanceLOD DistanceLOD(float[], javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun DistanceLOD(p0 : FloatArray, p1 : Point3f?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DistanceLOD javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DistanceLOD void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DistanceLOD void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DrawingSurfaceObject DrawingSurfaceObject(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun DrawingSurfaceObject(p0 : Canvas3D)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DrawingSurfaceObjectAWT DrawingSurfaceObjectAWT(javax.media.j3d.Canvas3D, long, long, int, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun DrawingSurfaceObjectAWT(p0 : Canvas3D, p1 : Long, p2 : Long, p3 : Int, p4 : Boolean)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DrawingSurfaceObjectAWT void freeDrawingSurface(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun freeDrawingSurface(p0 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.DrawingSurfaceObjectDSI DrawingSurfaceObjectDSI(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun DrawingSurfaceObjectDSI(p0 : Canvas3D)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.EnvironmentSet void addAttributeBin(javax.media.j3d.AttributeBin, javax.media.j3d.RenderBin)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAttributeBin(p0 : AttributeBin, p1 : RenderBin?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.EnvironmentSet void removeAttributeBin(javax.media.j3d.AttributeBin)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAttributeBin(p0 : AttributeBin) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.EnvironmentSet void render(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun render(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.EnvironmentSet void updateAttributes(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateAttributes(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.EventCatcher void componentResized(java.awt.event.ComponentEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun componentResized(p0 : ComponentEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ExponentialFog javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ExponentialFog void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ExponentialFogRetained java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ExponentialFogRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ExponentialFogRetained void updateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Fog void addScope(javax.media.j3d.Group)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addScope(p0 : Group) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Fog void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Fog void getColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Fog javax.media.j3d.BoundingLeaf getInfluencingBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Fog javax.media.j3d.Bounds getInfluencingBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Fog void insertScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Fog void setScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained void addScope(javax.media.j3d.Group)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addScope(p0 : Group) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained void clearMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained void getColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained javax.media.j3d.BoundingLeaf getInfluencingBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained javax.media.j3d.Bounds getInfluencingBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained void getMirrorObjects(java.util.ArrayList, javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMirrorObjects(p0 : ArrayList, p1 : HashKey?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained void initAddScope(javax.media.j3d.Group)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initAddScope(p0 : Group) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained void initInfluencingBoundingLeaf(javax.media.j3d.BoundingLeaf)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initInfluencingBoundingLeaf(p0 : BoundingLeaf?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained void initInsertScope(javax.media.j3d.Node, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initInsertScope(p0 : Node, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained void initMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained void initScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained void insertScope(javax.media.j3d.Node, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertScope(p0 : Node, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained void setScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained void updateImmediateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateImmediateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FogRetained void updateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Font3D int check2Contours(int, int, int, int, javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun check2Contours(p0 : Int, p1 : Int, p2 : Int, p3 : Int, p4 : Array&lt;out Point3f?&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Font3D void getBoundingBox(int, javax.media.j3d.BoundingBox)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBoundingBox(p0 : Int, p1 : BoundingBox) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Font3D boolean getNormal(javax.vecmath.Point3f, javax.vecmath.Point3f, javax.vecmath.Point3f, javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNormal(p0 : Point3f?, p1 : Point3f?, p2 : Point3f?, p3 : Vector3f) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Font3D boolean normalize(javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun normalize(p0 : Vector3f) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Font3D boolean pointInPolygon2D(float, float, int, int, javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pointInPolygon2D(p0 : Float, p1 : Float, p2 : Int, p3 : Int, p4 : Array&lt;out Point3f?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Font3D javax.media.j3d.GeometryArrayRetained triangulateGlyphs(java.awt.font.GlyphVector, char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun triangulateGlyphs(p0 : GlyphVector?, p1 : Char) : GeometryArrayRetained?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FreeListManager javax.media.j3d.MemoryFreeList getFreeList(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getFreeList(p0 : Int) : MemoryFreeList?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.FreeListManager java.lang.Object getObject(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getObject(p0 : Int) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedStrip.IntList IntList(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun IntList(p0 : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedStrip void addFan(javax.media.j3d.GeneralizedStrip.IntList, javax.media.j3d.GeneralizedStrip.IntList, int, int, int, int, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addFan(p0 : GeneralizedStrip.IntList, p1 : GeneralizedStrip.IntList, p2 : Int, p3 : Int, p4 : Int, p5 : Int, p6 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedStrip void addStrip(javax.media.j3d.GeneralizedStrip.IntList, javax.media.j3d.GeneralizedStrip.IntList, int, int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addStrip(p0 : GeneralizedStrip.IntList?, p1 : GeneralizedStrip.IntList, p2 : Int, p3 : Int, p4 : Int, p5 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedStrip javax.media.j3d.GeneralizedStrip.StripArray fanToStrips(int, int, int[], boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fanToStrips(p0 : Int, p1 : Int, p2 : IntArray?, p3 : Boolean) : GeneralizedStrip.StripArray&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedStrip int[] fansToTriangles(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fansToTriangles(p0 : IntArray) : IntArray&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedStrip int getLineCount(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLineCount(p0 : IntArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedStrip int getTriangleCount(javax.media.j3d.GeneralizedStrip.IntList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTriangleCount(p0 : GeneralizedStrip.IntList) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedStrip int getTriangleCount(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTriangleCount(p0 : IntArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedStrip int[] stripsToTriangles(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun stripsToTriangles(p0 : IntArray) : IntArray&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedStrip javax.media.j3d.GeneralizedStrip.StripArray toLineStrips(javax.media.j3d.GeneralizedStripFlags)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toLineStrips(p0 : GeneralizedStripFlags) : GeneralizedStrip.StripArray?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedStrip javax.media.j3d.GeneralizedStrip.StripArray[] toStripsAndFans(javax.media.j3d.GeneralizedStripFlags, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStripsAndFans(p0 : GeneralizedStripFlags, p1 : Int) : Array&lt;out GeneralizedStrip.StripArray?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedStrip void toStripsAndFans(javax.media.j3d.GeneralizedStripFlags, int, javax.media.j3d.GeneralizedStrip.IntList, javax.media.j3d.GeneralizedStrip.IntList, javax.media.j3d.GeneralizedStrip.IntList, javax.media.j3d.GeneralizedStrip.IntList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStripsAndFans(p0 : GeneralizedStripFlags, p1 : Int, p2 : GeneralizedStrip.IntList?, p3 : GeneralizedStrip.IntList?, p4 : GeneralizedStrip.IntList?, p5 : GeneralizedStrip.IntList?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedStrip javax.media.j3d.GeneralizedStrip.StripArray[] toStripsAndTriangles(javax.media.j3d.GeneralizedStripFlags, int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStripsAndTriangles(p0 : GeneralizedStripFlags, p1 : Int, p2 : Int, p3 : Int) : Array&lt;out GeneralizedStrip.StripArray?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedStrip javax.media.j3d.GeneralizedStrip.StripArray toTriangleStrips(javax.media.j3d.GeneralizedStripFlags, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toTriangleStrips(p0 : GeneralizedStripFlags, p1 : Int) : GeneralizedStrip.StripArray?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedStrip int[] toTriangles(javax.media.j3d.GeneralizedStripFlags, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toTriangles(p0 : GeneralizedStripFlags, p1 : Int) : IntArray&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedVertexList.Vertex Vertex(javax.media.j3d.GeneralizedVertexList, javax.vecmath.Point3f, javax.vecmath.Vector3f, javax.vecmath.Color4f, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Vertex(p0 : GeneralizedVertexList, p1 : Point3f?, p2 : Vector3f?, p3 : Color4f?, p4 : Int)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedVertexList boolean access$000(javax.media.j3d.GeneralizedVertexList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(p0 : GeneralizedVertexList) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedVertexList boolean access$100(javax.media.j3d.GeneralizedVertexList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(p0 : GeneralizedVertexList) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedVertexList boolean access$200(javax.media.j3d.GeneralizedVertexList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(p0 : GeneralizedVertexList) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedVertexList void copyVertexData(javax.media.j3d.GeometryArray, javax.media.j3d.GeneralizedStrip.IntList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyVertexData(p0 : GeometryArray, p1 : GeneralizedStrip.IntList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedVertexList javax.media.j3d.LineStripArray toLineStripArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toLineStripArray() : LineStripArray?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedVertexList javax.media.j3d.PointArray toPointArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toPointArray() : PointArray?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedVertexList javax.media.j3d.GeometryStripArray[] toStripAndFanArrays()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStripAndFanArrays() : Array&lt;out GeometryStripArray?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedVertexList javax.media.j3d.GeometryArray[] toStripAndTriangleArrays()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStripAndTriangleArrays() : Array&lt;out GeometryArray?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedVertexList javax.media.j3d.TriangleArray toTriangleArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toTriangleArray() : TriangleArray&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeneralizedVertexList javax.media.j3d.TriangleStripArray toTriangleStripArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toTriangleStripArray() : TriangleStripArray?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getColor(int, javax.vecmath.Color3b)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Int, p1 : Color3b) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getColor(int, javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Int, p1 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getColor(int, javax.vecmath.Color4b)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Int, p1 : Color4b) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getColor(int, javax.vecmath.Color4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Int, p1 : Color4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getColor(int, byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Int, p1 : ByteArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getColor(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getColors(int, byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColors(p0 : Int, p1 : ByteArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getColors(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColors(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getColors(int, javax.vecmath.Color3b[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColors(p0 : Int, p1 : Array&lt;out Color3b?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getColors(int, javax.vecmath.Color3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColors(p0 : Int, p1 : Array&lt;out Color3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getColors(int, javax.vecmath.Color4b[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColors(p0 : Int, p1 : Array&lt;out Color4b?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getColors(int, javax.vecmath.Color4f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColors(p0 : Int, p1 : Array&lt;out Color4f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getCoordinate(int, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinate(p0 : Int, p1 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getCoordinate(int, javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinate(p0 : Int, p1 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getCoordinate(int, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinate(p0 : Int, p1 : DoubleArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getCoordinate(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinate(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getCoordinates(int, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinates(p0 : Int, p1 : DoubleArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getCoordinates(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinates(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getCoordinates(int, javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinates(p0 : Int, p1 : Array&lt;out Point3d?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getCoordinates(int, javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinates(p0 : Int, p1 : Array&lt;out Point3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getNormal(int, javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNormal(p0 : Int, p1 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getNormal(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNormal(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getNormals(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNormals(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getNormals(int, javax.vecmath.Vector3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNormals(p0 : Int, p1 : Array&lt;out Vector3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray javax.vecmath.TexCoord2f[] getTexCoordRef2f(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTexCoordRef2f(p0 : Int) : Array&lt;out TexCoord2f?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray javax.vecmath.TexCoord3f[] getTexCoordRef3f(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTexCoordRef3f(p0 : Int) : Array&lt;out TexCoord3f?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getTextureCoordinate(int, int, javax.vecmath.TexCoord2f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinate(p0 : Int, p1 : Int, p2 : TexCoord2f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getTextureCoordinate(int, int, javax.vecmath.TexCoord3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinate(p0 : Int, p1 : Int, p2 : TexCoord3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getTextureCoordinate(int, int, javax.vecmath.TexCoord4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinate(p0 : Int, p1 : Int, p2 : TexCoord4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getTextureCoordinate(int, int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinate(p0 : Int, p1 : Int, p2 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getTextureCoordinate(int, javax.vecmath.Point2f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinate(p0 : Int, p1 : Point2f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getTextureCoordinate(int, javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinate(p0 : Int, p1 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getTextureCoordinate(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinate(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getTextureCoordinates(int, int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinates(p0 : Int, p1 : Int, p2 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getTextureCoordinates(int, int, javax.vecmath.TexCoord2f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinates(p0 : Int, p1 : Int, p2 : Array&lt;out TexCoord2f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getTextureCoordinates(int, int, javax.vecmath.TexCoord3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinates(p0 : Int, p1 : Int, p2 : Array&lt;out TexCoord3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getTextureCoordinates(int, int, javax.vecmath.TexCoord4f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinates(p0 : Int, p1 : Int, p2 : Array&lt;out TexCoord4f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getTextureCoordinates(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinates(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getTextureCoordinates(int, javax.vecmath.Point2f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinates(p0 : Int, p1 : Array&lt;out Point2f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void getTextureCoordinates(int, javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinates(p0 : Int, p1 : Array&lt;out Point3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setColor(int, javax.vecmath.Color3b)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColor(p0 : Int, p1 : Color3b) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setColor(int, javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColor(p0 : Int, p1 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setColor(int, javax.vecmath.Color4b)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColor(p0 : Int, p1 : Color4b) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setColor(int, javax.vecmath.Color4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColor(p0 : Int, p1 : Color4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setColor(int, byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColor(p0 : Int, p1 : ByteArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setColor(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColor(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setColors(int, byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColors(p0 : Int, p1 : ByteArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setColors(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColors(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setColors(int, javax.vecmath.Color3b[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColors(p0 : Int, p1 : Array&lt;out Color3b?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setColors(int, javax.vecmath.Color3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColors(p0 : Int, p1 : Array&lt;out Color3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setColors(int, javax.vecmath.Color4b[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColors(p0 : Int, p1 : Array&lt;out Color4b?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setColors(int, javax.vecmath.Color4f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColors(p0 : Int, p1 : Array&lt;out Color4f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setCoordinate(int, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinate(p0 : Int, p1 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setCoordinate(int, javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinate(p0 : Int, p1 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setCoordinate(int, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinate(p0 : Int, p1 : DoubleArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setCoordinate(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinate(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setCoordinates(int, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinates(p0 : Int, p1 : DoubleArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setCoordinates(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinates(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setCoordinates(int, javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinates(p0 : Int, p1 : Array&lt;out Point3d?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setCoordinates(int, javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinates(p0 : Int, p1 : Array&lt;out Point3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setNormal(int, javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNormal(p0 : Int, p1 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setNormal(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNormal(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setNormals(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNormals(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setNormals(int, javax.vecmath.Vector3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNormals(p0 : Int, p1 : Array&lt;out Vector3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setTextureCoordinates(int, int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTextureCoordinates(p0 : Int, p1 : Int, p2 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setTextureCoordinates(int, int, javax.vecmath.TexCoord2f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTextureCoordinates(p0 : Int, p1 : Int, p2 : Array&lt;out TexCoord2f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setTextureCoordinates(int, int, javax.vecmath.TexCoord3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTextureCoordinates(p0 : Int, p1 : Int, p2 : Array&lt;out TexCoord3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setTextureCoordinates(int, int, javax.vecmath.TexCoord4f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTextureCoordinates(p0 : Int, p1 : Int, p2 : Array&lt;out TexCoord4f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setTextureCoordinates(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTextureCoordinates(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setTextureCoordinates(int, javax.vecmath.Point2f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTextureCoordinates(p0 : Int, p1 : Array&lt;out Point2f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void setTextureCoordinates(int, javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTextureCoordinates(p0 : Int, p1 : Array&lt;out Point3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArray void updateData(javax.media.j3d.GeometryUpdater)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateData(p0 : GeometryUpdater) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void addMorphUser(javax.media.j3d.MorphRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addMorphUser(p0 : MorphRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void buildGA(javax.media.j3d.Canvas3D, javax.media.j3d.RenderAtom, boolean, boolean, float, boolean, javax.media.j3d.Transform3D, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildGA(p0 : Canvas3D, p1 : RenderAtom?, p2 : Boolean, p3 : Boolean, p4 : Float, p5 : Boolean, p6 : Transform3D?, p7 : Transform3D?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void compile(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compile(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void computeMinDistance(javax.vecmath.Point3d[], javax.vecmath.Point3d, javax.vecmath.Vector3d, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeMinDistance(p0 : Array&lt;out Point3d?&gt;, p1 : Point3d?, p2 : Vector3d?, p3 : DoubleArray, p4 : Point3d?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean coplanarTriTri(javax.vecmath.Vector3d, javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun coplanarTriTri(p0 : Vector3d, p1 : Point3d, p2 : Point3d, p3 : Point3d?, p4 : Point3d, p5 : Point3d, p6 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained double det2D(javax.vecmath.Point2d, javax.vecmath.Point2d, javax.vecmath.Point2d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun det2D(p0 : Point2d, p1 : Point2d, p2 : Point2d) : Double&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean edgeAgainstEdge(javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d, double, double, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun edgeAgainstEdge(p0 : Point3d, p1 : Point3d, p2 : Point3d, p3 : Double, p4 : Double, p5 : Int, p6 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean edgeAgainstTriEdges(javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun edgeAgainstTriEdges(p0 : Point3d, p1 : Point3d, p2 : Point3d, p3 : Point3d, p4 : Point3d?, p5 : Int, p6 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean edgeIntersectPlane(javax.vecmath.Vector3d, javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun edgeIntersectPlane(p0 : Vector3d, p1 : Point3d?, p2 : Point3d, p3 : Point3d, p4 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean edgeIntersectPolygon2D(javax.vecmath.Vector3d, javax.vecmath.Point3d[], javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun edgeIntersectPolygon2D(p0 : Vector3d, p1 : Array&lt;out Point3d?&gt;, p2 : Array&lt;out Point3d?&gt;?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean edgeIntersectSphere(javax.media.j3d.BoundingSphere, javax.vecmath.Point3d, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun edgeIntersectSphere(p0 : BoundingSphere, p1 : Point3d, p2 : Point3d) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void execute(javax.media.j3d.Canvas3D, javax.media.j3d.RenderAtom, boolean, boolean, float, boolean, int, boolean, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun execute(p0 : Canvas3D, p1 : RenderAtom?, p2 : Boolean, p3 : Boolean, p4 : Float, p5 : Boolean, p6 : Int, p7 : Boolean, p8 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained double generalStandardSimplexSolver(double[][], double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun generalStandardSimplexSolver(p0 : Array&lt;out DoubleArray?&gt;, p1 : Double) : Double&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getColor(int, javax.vecmath.Color3b)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Int, p1 : Color3b) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getColor(int, javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Int, p1 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getColor(int, javax.vecmath.Color4b)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Int, p1 : Color4b) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getColor(int, javax.vecmath.Color4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Int, p1 : Color4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getColor(int, byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Int, p1 : ByteArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getColor(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getColors(int, byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColors(p0 : Int, p1 : ByteArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getColors(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColors(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getColors(int, javax.vecmath.Color3b[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColors(p0 : Int, p1 : Array&lt;out Color3b?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getColors(int, javax.vecmath.Color3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColors(p0 : Int, p1 : Array&lt;out Color3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getColors(int, javax.vecmath.Color4b[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColors(p0 : Int, p1 : Array&lt;out Color4b?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getColors(int, javax.vecmath.Color4f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColors(p0 : Int, p1 : Array&lt;out Color4f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained double getCompValue(javax.vecmath.Point3d, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCompValue(p0 : Point3d, p1 : Int) : Double&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained double getCompValue(javax.vecmath.Point3d, javax.vecmath.Point3d, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCompValue(p0 : Point3d, p1 : Point3d, p2 : Int) : Double&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getCoordinate(int, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinate(p0 : Int, p1 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getCoordinate(int, javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinate(p0 : Int, p1 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getCoordinate(int, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinate(p0 : Int, p1 : DoubleArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getCoordinate(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinate(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getCoordinates(int, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinates(p0 : Int, p1 : DoubleArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getCoordinates(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinates(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getCoordinates(int, javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinates(p0 : Int, p1 : Array&lt;out Point3d?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getCoordinates(int, javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinates(p0 : Int, p1 : Array&lt;out Point3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getCrossValue(javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCrossValue(p0 : Point3d, p1 : Point3d, p2 : Vector3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getNormal(int, javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNormal(p0 : Int, p1 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getNormal(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNormal(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getNormals(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNormals(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getNormals(int, javax.vecmath.Vector3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNormals(p0 : Int, p1 : Array&lt;out Vector3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained javax.vecmath.Point3d getPoint3d()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPoint3d() : Point3d?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained javax.vecmath.TexCoord2f[] getTexCoordRef2f(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTexCoordRef2f(p0 : Int) : Array&lt;out TexCoord2f?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained javax.vecmath.TexCoord3f[] getTexCoordRef3f(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTexCoordRef3f(p0 : Int) : Array&lt;out TexCoord3f?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getTextureCoordinate(int, int, javax.vecmath.TexCoord2f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinate(p0 : Int, p1 : Int, p2 : TexCoord2f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getTextureCoordinate(int, int, javax.vecmath.TexCoord3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinate(p0 : Int, p1 : Int, p2 : TexCoord3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getTextureCoordinate(int, int, javax.vecmath.TexCoord4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinate(p0 : Int, p1 : Int, p2 : TexCoord4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getTextureCoordinate(int, int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinate(p0 : Int, p1 : Int, p2 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getTextureCoordinates(int, int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinates(p0 : Int, p1 : Int, p2 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getTextureCoordinates(int, int, javax.vecmath.Point2f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinates(p0 : Int, p1 : Int, p2 : Array&lt;out Point2f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getTextureCoordinates(int, int, javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinates(p0 : Int, p1 : Int, p2 : Array&lt;out Point3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getTextureCoordinates(int, int, javax.vecmath.TexCoord2f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinates(p0 : Int, p1 : Int, p2 : Array&lt;out TexCoord2f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getTextureCoordinates(int, int, javax.vecmath.TexCoord3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinates(p0 : Int, p1 : Int, p2 : Array&lt;out TexCoord3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void getTextureCoordinates(int, int, javax.vecmath.TexCoord4f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinates(p0 : Int, p1 : Int, p2 : Array&lt;out TexCoord4f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained javax.vecmath.Vector3d getVector3d()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getVector3d() : Vector3d?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean inside(javax.vecmath.Point3d[], javax.media.j3d.PickPoint, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun inside(p0 : Array&lt;out Point3d?&gt;, p1 : PickPoint?, p2 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean intersect(javax.media.j3d.Transform3D, javax.media.j3d.Transform3D, javax.media.j3d.GeometryRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Transform3D, p1 : Transform3D?, p2 : GeometryRetained) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean intersectBoundingBox(javax.vecmath.Point3d[], javax.media.j3d.BoundingBox, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectBoundingBox(p0 : Array&lt;out Point3d?&gt;, p1 : BoundingBox?, p2 : DoubleArray?, p3 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean intersectBoundingPolytope(javax.vecmath.Point3d[], javax.media.j3d.BoundingPolytope, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectBoundingPolytope(p0 : Array&lt;out Point3d?&gt;, p1 : BoundingPolytope, p2 : DoubleArray?, p3 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean intersectBoundingSphere(javax.vecmath.Point3d[], javax.media.j3d.BoundingSphere, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectBoundingSphere(p0 : Array&lt;out Point3d?&gt;, p1 : BoundingSphere?, p2 : DoubleArray?, p3 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean intersectCone(javax.vecmath.Point3d, javax.media.j3d.PickCone, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectCone(p0 : Point3d?, p1 : PickCone, p2 : DoubleArray?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean intersectCone(javax.vecmath.Point3d[], javax.media.j3d.PickCone, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectCone(p0 : Array&lt;out Point3d?&gt;, p1 : PickCone, p2 : DoubleArray?, p3 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean intersectCylinder(javax.vecmath.Point3d, javax.media.j3d.PickCylinder, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectCylinder(p0 : Point3d?, p1 : PickCylinder, p2 : DoubleArray?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean intersectCylinder(javax.vecmath.Point3d[], javax.media.j3d.PickCylinder, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectCylinder(p0 : Array&lt;out Point3d?&gt;, p1 : PickCylinder, p2 : DoubleArray?, p3 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean intersectLineAndRay(javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Vector3d, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectLineAndRay(p0 : Point3d, p1 : Point3d, p2 : Point3d?, p3 : Vector3d, p4 : DoubleArray?, p5 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean intersectPntAndPnt(javax.vecmath.Point3d, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectPntAndPnt(p0 : Point3d, p1 : Point3d) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean intersectPntAndRay(javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Vector3d, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectPntAndRay(p0 : Point3d?, p1 : Point3d?, p2 : Vector3d, p3 : DoubleArray?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean intersectPolygon(javax.vecmath.Point3d[], javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectPolygon(p0 : Array&lt;out Point3d?&gt;, p1 : Array&lt;out Point3d?&gt;?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean intersectRay(javax.vecmath.Point3d[], javax.media.j3d.PickRay, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectRay(p0 : Array&lt;out Point3d?&gt;, p1 : PickRay, p2 : DoubleArray?, p3 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean intersectRayOrSegment(javax.vecmath.Point3d[], javax.vecmath.Vector3d, javax.vecmath.Point3d, double[], javax.vecmath.Point3d, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectRayOrSegment(p0 : Array&lt;out Point3d?&gt;, p1 : Vector3d?, p2 : Point3d?, p3 : DoubleArray?, p4 : Point3d?, p5 : Boolean) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean intersectSegment(javax.vecmath.Point3d[], javax.vecmath.Point3d, javax.vecmath.Point3d, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectSegment(p0 : Array&lt;out Point3d?&gt;, p1 : Point3d, p2 : Point3d, p3 : DoubleArray?, p4 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean intersectTriPnt(javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectTriPnt(p0 : Point3d, p1 : Point3d, p2 : Point3d, p3 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean intersectTriTri(javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectTriTri(p0 : Point3d, p1 : Point3d, p2 : Point3d, p3 : Point3d?, p4 : Point3d?, p5 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void mergeGeometryArrays(java.util.ArrayList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeGeometryArrays(p0 : ArrayList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean pointInTri(javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pointInTri(p0 : Point3d, p1 : Point3d, p2 : Point3d, p3 : Point3d, p4 : Int, p5 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean pointInTri(javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pointInTri(p0 : Point3d, p1 : Point3d, p2 : Point3d, p3 : Point3d, p4 : Vector3d) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained boolean pointIntersectPolygon2D(javax.vecmath.Vector3d, javax.vecmath.Point3d[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pointIntersectPolygon2D(p0 : Vector3d, p1 : Array&lt;out Point3d?&gt;, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setColor(int, javax.vecmath.Color3b)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColor(p0 : Int, p1 : Color3b) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setColor(int, javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColor(p0 : Int, p1 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setColor(int, javax.vecmath.Color4b)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColor(p0 : Int, p1 : Color4b) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setColor(int, javax.vecmath.Color4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColor(p0 : Int, p1 : Color4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setColor(int, byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColor(p0 : Int, p1 : ByteArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setColor(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColor(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setColors(int, byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColors(p0 : Int, p1 : ByteArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setColors(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColors(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setColors(int, javax.vecmath.Color3b[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColors(p0 : Int, p1 : Array&lt;out Color3b?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setColors(int, javax.vecmath.Color3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColors(p0 : Int, p1 : Array&lt;out Color3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setColors(int, javax.vecmath.Color4b[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColors(p0 : Int, p1 : Array&lt;out Color4b?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setColors(int, javax.vecmath.Color4f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColors(p0 : Int, p1 : Array&lt;out Color4f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setCompiled(java.util.ArrayList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCompiled(p0 : ArrayList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setCoordinate(int, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinate(p0 : Int, p1 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setCoordinate(int, javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinate(p0 : Int, p1 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setCoordinate(int, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinate(p0 : Int, p1 : DoubleArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setCoordinate(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinate(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setCoordinates(int, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinates(p0 : Int, p1 : DoubleArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setCoordinates(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinates(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setCoordinates(int, javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinates(p0 : Int, p1 : Array&lt;out Point3d?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setCoordinates(int, javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinates(p0 : Int, p1 : Array&lt;out Point3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setNormal(int, javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNormal(p0 : Int, p1 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setNormal(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNormal(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setNormals(int, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNormals(p0 : Int, p1 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void setNormals(int, javax.vecmath.Vector3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNormals(p0 : Int, p1 : Array&lt;out Vector3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained int[] texCoordSetMapOffset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun texCoordSetMapOffset() : IntArray?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void unIndexify(javax.media.j3d.IndexedGeometryArrayRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun unIndexify(p0 : IndexedGeometryArrayRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void unIndexifyJavaArray(javax.media.j3d.IndexedGeometryArrayRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun unIndexifyJavaArray(p0 : IndexedGeometryArrayRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void unIndexifyNIOBuffer(javax.media.j3d.IndexedGeometryArrayRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun unIndexifyNIOBuffer(p0 : IndexedGeometryArrayRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained byte[] updateAlphaInByteRefColors(javax.media.j3d.Canvas3D, int, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateAlphaInByteRefColors(p0 : Canvas3D, p1 : Int, p2 : Float) : ByteArray?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained float[] updateAlphaInFloatRefColors(javax.media.j3d.Canvas3D, int, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateAlphaInFloatRefColors(p0 : Canvas3D, p1 : Int, p2 : Float) : FloatArray?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained java.lang.Object[] updateAlphaInInterLeavedData(javax.media.j3d.Canvas3D, int, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateAlphaInInterLeavedData(p0 : Canvas3D, p1 : Int, p2 : Float) : Array&lt;out Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained java.lang.Object[] updateAlphaInVertexData(javax.media.j3d.Canvas3D, int, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateAlphaInVertexData(p0 : Canvas3D, p1 : Int, p2 : Float) : Array&lt;out Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryArrayRetained void updateData(javax.media.j3d.GeometryUpdater)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateData(p0 : GeometryUpdater) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryAtom int equal(javax.media.j3d.NnuId)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equal(p0 : NnuId) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryAtom javax.media.j3d.RenderAtom getRenderAtom(javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRenderAtom(p0 : View) : RenderAtom?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryDecompressor void decompress(int, int, byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun decompress(p0 : Int, p1 : Int, p2 : ByteArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryDecompressor void indexNormal(int, int, int, int, javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexNormal(p0 : Int, p1 : Int, p2 : Int, p3 : Int, p4 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryDecompressor void outputVertex(javax.vecmath.Point3f, javax.vecmath.Vector3f, javax.vecmath.Color4f, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun outputVertex(p0 : Point3f, p1 : Vector3f?, p2 : Color4f?, p3 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryDecompressorRetained javax.media.j3d.GeometryRetained decompress(javax.media.j3d.CompressedGeometryRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun decompress(p0 : CompressedGeometryRetained) : GeometryRetained?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryDecompressorRetained void getBoundingBox(javax.media.j3d.BoundingBox)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBoundingBox(p0 : BoundingBox) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryDecompressorRetained void outputVertex(javax.vecmath.Point3f, javax.vecmath.Vector3f, javax.vecmath.Color4f, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun outputVertex(p0 : Point3f, p1 : Vector3f?, p2 : Color4f?, p3 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryDecompressorShape3D javax.media.j3d.Shape3D[] decompress(javax.media.j3d.CompressedGeometryRetained, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun decompress(p0 : CompressedGeometryRetained, p1 : Int) : Array&lt;out Shape3D?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryDecompressorShape3D void outputVertex(javax.vecmath.Point3f, javax.vecmath.Vector3f, javax.vecmath.Color4f, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun outputVertex(p0 : Point3f, p1 : Vector3f?, p2 : Color4f?, p3 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryDecompressorShape3D javax.media.j3d.Shape3D[] toStripAndFanArrays(javax.media.j3d.CompressedGeometryRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStripAndFanArrays(p0 : CompressedGeometryRetained) : Array&lt;out Shape3D?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryDecompressorShape3D javax.media.j3d.Shape3D[] toStripAndTriangleArrays(javax.media.j3d.CompressedGeometryRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStripAndTriangleArrays(p0 : CompressedGeometryRetained) : Array&lt;out Shape3D?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryDecompressorShape3D javax.media.j3d.Shape3D[] toTriangleArrays(javax.media.j3d.CompressedGeometryRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toTriangleArrays(p0 : CompressedGeometryRetained) : Array&lt;out Shape3D?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryDecompressorShape3D javax.media.j3d.Shape3D[] toTriangleStripArrays(javax.media.j3d.CompressedGeometryRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toTriangleStripArrays(p0 : CompressedGeometryRetained) : Array&lt;out Shape3D?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryRetained void addUser(javax.media.j3d.Shape3DRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addUser(p0 : Shape3DRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryRetained void execute(javax.media.j3d.Canvas3D, javax.media.j3d.RenderAtom, boolean, boolean, float, boolean, int, boolean, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun execute(p0 : Canvas3D, p1 : RenderAtom?, p2 : Boolean, p3 : Boolean, p4 : Float, p5 : Boolean, p6 : Int, p7 : Boolean, p8 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryRetained boolean intersect(javax.media.j3d.Transform3D, javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Transform3D?, p1 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryRetained boolean intersect(javax.media.j3d.Transform3D, javax.media.j3d.Transform3D, javax.media.j3d.GeometryRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Transform3D, p1 : Transform3D?, p2 : GeometryRetained) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryRetained boolean isEquivalenceClass(javax.media.j3d.GeometryRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isEquivalenceClass(p0 : GeometryRetained) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryRetained void removeUser(javax.media.j3d.Shape3DRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeUser(p0 : Shape3DRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStripArray GeometryStripArray(int, int, int, int[], int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun GeometryStripArray(p0 : Int, p1 : Int, p2 : Int, p3 : IntArray?, p4 : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStripArray GeometryStripArray(int, int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun GeometryStripArray(p0 : Int, p1 : Int, p2 : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStripArray void setStripVertexCounts(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setStripVertexCounts(p0 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStripArrayRetained void mergeGeometryArrays(java.util.ArrayList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeGeometryArrays(p0 : ArrayList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStripArrayRetained void setStripVertexCounts(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setStripVertexCounts(p0 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStripArrayRetained void unIndexify(javax.media.j3d.IndexedGeometryStripArrayRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun unIndexify(p0 : IndexedGeometryStripArrayRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStripArrayRetained void unIndexifyJavaArray(javax.media.j3d.IndexedGeometryStripArrayRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun unIndexifyJavaArray(p0 : IndexedGeometryStripArrayRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStripArrayRetained void unIndexifyNIOBuffer(javax.media.j3d.IndexedGeometryStripArrayRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun unIndexifyNIOBuffer(p0 : IndexedGeometryStripArrayRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStructure void addWakeupOnCollision(javax.media.j3d.WakeupOnCollisionEntry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addWakeupOnCollision(p0 : WakeupOnCollisionEntry) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStructure void addWakeupOnCollision(javax.media.j3d.WakeupOnCollisionExit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addWakeupOnCollision(p0 : WakeupOnCollisionExit) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStructure void addWakeupOnCollision(javax.media.j3d.WakeupOnCollisionMovement)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addWakeupOnCollision(p0 : WakeupOnCollisionMovement) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStructure void checkDuplicateEvent(javax.media.j3d.WakeupOnCollisionMovement, javax.media.j3d.Bounds, javax.media.j3d.BHLeafInterface)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkDuplicateEvent(p0 : WakeupOnCollisionMovement, p1 : Bounds?, p2 : BHLeafInterface?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStructure javax.media.j3d.BHLeafInterface collide(javax.media.j3d.Locale, int, javax.media.j3d.UnorderList, javax.media.j3d.Bounds, javax.media.j3d.BoundingLeafRetained, javax.media.j3d.NodeRetained, javax.media.j3d.WakeupCriterion)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun collide(p0 : Locale?, p1 : Int, p2 : UnorderList?, p3 : Bounds?, p4 : BoundingLeafRetained?, p5 : NodeRetained?, p6 : WakeupCriterion?) : BHLeafInterface?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStructure boolean getVisibleBHTrees(javax.media.j3d.RenderBin, java.util.ArrayList, javax.media.j3d.BoundingBox, javax.media.j3d.Locale, long, boolean, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getVisibleBHTrees(p0 : RenderBin?, p1 : ArrayList, p2 : BoundingBox?, p3 : Locale?, p4 : Long, p5 : Boolean, p6 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStructure void insertNodes(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertNodes(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStructure javax.media.j3d.GeometryAtom[] pickAll(javax.media.j3d.Locale, javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickAll(p0 : Locale?, p1 : PickShape?) : Array&lt;out GeometryAtom?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStructure javax.media.j3d.GeometryAtom pickAny(javax.media.j3d.Locale, javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickAny(p0 : Locale?, p1 : PickShape?) : GeometryAtom?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStructure void processBoundsChanged(java.lang.Object[], boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processBoundsChanged(p0 : Array&lt;out Any?&gt;, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStructure void processTransformChanged(javax.media.j3d.UpdateTargets)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processTransformChanged(p0 : UpdateTargets) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStructure void processVisibleChanged(java.lang.Object, javax.media.j3d.GeometryAtom[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processVisibleChanged(p0 : Any?, p1 : Array&lt;out GeometryAtom?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStructure void removeNodes(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodes(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStructure void removeWakeupOnCollision(javax.media.j3d.WakeupOnCollisionEntry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeWakeupOnCollision(p0 : WakeupOnCollisionEntry) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStructure void removeWakeupOnCollision(javax.media.j3d.WakeupOnCollisionExit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeWakeupOnCollision(p0 : WakeupOnCollisionExit) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryStructure void removeWakeupOnCollision(javax.media.j3d.WakeupOnCollisionMovement)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeWakeupOnCollision(p0 : WakeupOnCollisionMovement) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GeometryUpdater void updateData(javax.media.j3d.Geometry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateData(p0 : Geometry) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsConfigTemplate3D java.awt.GraphicsConfiguration getBestConfiguration(java.awt.GraphicsConfiguration[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBestConfiguration(p0 : Array&lt;out GraphicsConfiguration?&gt;?) : GraphicsConfiguration?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsConfigTemplate3D boolean isGraphicsConfigSupported(java.awt.GraphicsConfiguration)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isGraphicsConfigSupported(p0 : GraphicsConfiguration?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void addLight(javax.media.j3d.Light)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addLight(p0 : Light) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void addSound(javax.media.j3d.Sound)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addSound(p0 : Sound) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void doAddLight(javax.media.j3d.Light)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doAddLight(p0 : Light) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void doAddSound(javax.media.j3d.Sound)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doAddSound(p0 : Sound) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void doInsertLight(javax.media.j3d.Light, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doInsertLight(p0 : Light, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void doInsertSound(javax.media.j3d.Sound, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doInsertSound(p0 : Sound, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void doMultiplyModelTransform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doMultiplyModelTransform(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void doSetAppearance(javax.media.j3d.Appearance)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doSetAppearance(p0 : Appearance?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void doSetBackground(javax.media.j3d.Background)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doSetBackground(p0 : Background) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void doSetHiRes(javax.media.j3d.HiResCoord)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doSetHiRes(p0 : HiResCoord) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void doSetLight(javax.media.j3d.Light, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doSetLight(p0 : Light, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void doSetModelTransform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doSetModelTransform(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void doSetSound(javax.media.j3d.Sound, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doSetSound(p0 : Sound, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void draw(javax.media.j3d.Shape3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun draw(p0 : Shape3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void getHiRes(javax.media.j3d.HiResCoord)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getHiRes(p0 : HiResCoord) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void getModelTransform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getModelTransform(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D javax.media.j3d.SoundScheduler getSoundScheduler()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSoundScheduler() : SoundScheduler?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void insertLight(javax.media.j3d.Light, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertLight(p0 : Light, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void insertSound(javax.media.j3d.Sound, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertSound(p0 : Sound, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void setAppearance(javax.media.j3d.Appearance)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setAppearance(p0 : Appearance?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void setBackground(javax.media.j3d.Background)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setBackground(p0 : Background) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void setHiRes(javax.media.j3d.HiResCoord)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setHiRes(p0 : HiResCoord) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void setLight(javax.media.j3d.Light, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLight(p0 : Light, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void setSound(javax.media.j3d.Sound, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setSound(p0 : Sound, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void updateFogState(javax.media.j3d.LinearFogRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateFogState(p0 : LinearFogRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GraphicsContext3D void updateLightState(javax.media.j3d.LightRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateLightState(p0 : LightRetained?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Group javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Group javax.media.j3d.Node cloneTree(boolean, java.util.Hashtable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneTree(p0 : Boolean, p1 : Hashtable) : Node?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Group void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Group javax.media.j3d.Node getChild(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getChild(p0 : Int) : Node?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Group javax.media.j3d.Bounds getCollisionBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCollisionBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void checkValidChild(javax.media.j3d.Node, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkValidChild(p0 : Node?, p1 : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void childCheckSetLive(javax.media.j3d.NodeRetained, int, javax.media.j3d.SetLiveState, javax.media.j3d.NodeRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun childCheckSetLive(p0 : NodeRetained, p1 : Int, p2 : SetLiveState, p3 : NodeRetained?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void childDoSetLive(javax.media.j3d.NodeRetained, int, javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun childDoSetLive(p0 : NodeRetained?, p1 : Int, p2 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void compile(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compile(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void computeCombineBounds(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeCombineBounds(p0 : Bounds) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void doSetLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doSetLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void gatherBlUsers(java.util.ArrayList, java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun gatherBlUsers(p0 : ArrayList?, p1 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained javax.media.j3d.Node getChild(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getChild(p0 : Int) : Node?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained javax.media.j3d.TargetsInterface getClosestTargetsInterface(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getClosestTargetsInterface(p0 : Int) : TargetsInterface&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained javax.media.j3d.Bounds getCollisionBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCollisionBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained javax.media.j3d.Bounds getEffectiveBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEffectiveBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained javax.media.j3d.TargetsInterface initSwitchStates(javax.media.j3d.SetLiveState, javax.media.j3d.NodeRetained, javax.media.j3d.NodeRetained, javax.media.j3d.NodeRetained, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initSwitchStates(p0 : SetLiveState?, p1 : NodeRetained?, p2 : NodeRetained?, p3 : NodeRetained?, p4 : Boolean) : TargetsInterface?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained javax.media.j3d.TargetsInterface initTransformStates(javax.media.j3d.SetLiveState, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initTransformStates(p0 : SetLiveState, p1 : Boolean) : TargetsInterface?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained boolean isNodeSwitchOn(javax.media.j3d.NodeRetained, javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isNodeSwitchOn(p0 : NodeRetained, p1 : HashKey?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void merge(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun merge(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void processCollisionTarget(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processCollisionTarget(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void removeNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void searchGeometryAtoms(javax.media.j3d.UnorderList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun searchGeometryAtoms(p0 : UnorderList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void setNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void setScopingInfo(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setScopingInfo(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void updateCollidable(javax.media.j3d.HashKey[], boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateCollidable(p0 : Array&lt;out HashKey?&gt;?, p1 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void updatePickable(javax.media.j3d.HashKey[], boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updatePickable(p0 : Array&lt;out HashKey?&gt;?, p1 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained void updateSwitchStates(javax.media.j3d.SetLiveState, javax.media.j3d.TargetsInterface, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateSwitchStates(p0 : SetLiveState?, p1 : TargetsInterface?, p2 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained javax.media.j3d.CachedTargets[] updateTransformStates(javax.media.j3d.SetLiveState, javax.media.j3d.TargetsInterface, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTransformStates(p0 : SetLiveState?, p1 : TargetsInterface?, p2 : Boolean) : Array&lt;out CachedTargets?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.GroupRetained boolean validSwitchChild(javax.media.j3d.SwitchRetained, javax.media.j3d.NodeRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun validSwitchChild(p0 : SwitchRetained, p1 : NodeRetained?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HashKey HashKey(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun HashKey(p0 : String)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HashKey HashKey(javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun HashKey(p0 : HashKey)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HashKey javax.media.j3d.HashKey append(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun append(p0 : String?) : HashKey&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HashKey boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HashKey int equals(javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : HashKey) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HashKey int equals(javax.media.j3d.HashKey[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Array&lt;out HashKey?&gt;, p1 : Int, p2 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HashKey boolean equals(javax.media.j3d.HashKey[], int[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Array&lt;out HashKey?&gt;, p1 : IntArray?, p2 : Int, p3 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HashKey java.lang.String getLastNodeId()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLastNodeId() : String&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HashKey void set(javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : HashKey) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HashKey java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord HiResCoord(javax.media.j3d.HiResCoord)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun HiResCoord(p0 : HiResCoord)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void add(javax.media.j3d.HiResCoord, javax.media.j3d.HiResCoord)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : HiResCoord, p1 : HiResCoord) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void difference(javax.media.j3d.HiResCoord, javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun difference(p0 : HiResCoord, p1 : Vector3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord double distance(javax.media.j3d.HiResCoord)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun distance(p0 : HiResCoord) : Double&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void getHiResCoord(javax.media.j3d.HiResCoord)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getHiResCoord(p0 : HiResCoord) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void getHiResCoord(int[], int[], int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getHiResCoord(p0 : IntArray, p1 : IntArray, p2 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void getHiResCoordX(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getHiResCoordX(p0 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void getHiResCoordY(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getHiResCoordY(p0 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void getHiResCoordZ(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getHiResCoordZ(p0 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void hiResAdd(javax.media.j3d.HiResCoord, javax.media.j3d.HiResCoord, javax.media.j3d.HiResCoord)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hiResAdd(p0 : HiResCoord, p1 : HiResCoord, p2 : HiResCoord) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void hiResDiff(javax.media.j3d.HiResCoord, javax.media.j3d.HiResCoord, javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hiResDiff(p0 : HiResCoord, p1 : HiResCoord, p2 : Vector3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void hiResNegate(javax.media.j3d.HiResCoord, javax.media.j3d.HiResCoord)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hiResNegate(p0 : HiResCoord, p1 : HiResCoord) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void hiResScale(int[], int[], double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hiResScale(p0 : IntArray, p1 : IntArray, p2 : Double) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void negate(javax.media.j3d.HiResCoord)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun negate(p0 : HiResCoord) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void scale(int, javax.media.j3d.HiResCoord)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun scale(p0 : Int, p1 : HiResCoord) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void setHiResCoord(javax.media.j3d.HiResCoord)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setHiResCoord(p0 : HiResCoord) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void setHiResCoordX(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setHiResCoordX(p0 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void setHiResCoordY(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setHiResCoordY(p0 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void setHiResCoordZ(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setHiResCoordZ(p0 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.HiResCoord void sub(javax.media.j3d.HiResCoord, javax.media.j3d.HiResCoord)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sub(p0 : HiResCoord, p1 : HiResCoord) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent2D ImageComponent2D(int, java.awt.image.BufferedImage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ImageComponent2D(p0 : Int, p1 : BufferedImage)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent2D ImageComponent2D(int, java.awt.image.BufferedImage, boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ImageComponent2D(p0 : Int, p1 : BufferedImage, p2 : Boolean, p3 : Boolean)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent2D ImageComponent2D(int, java.awt.image.RenderedImage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ImageComponent2D(p0 : Int, p1 : RenderedImage)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent2D ImageComponent2D(int, java.awt.image.RenderedImage, boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ImageComponent2D(p0 : Int, p1 : RenderedImage, p2 : Boolean, p3 : Boolean)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent2D javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent2D void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent2D java.awt.image.BufferedImage getImage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImage() : BufferedImage?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent2D void set(java.awt.image.BufferedImage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : BufferedImage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent2D void set(java.awt.image.RenderedImage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : RenderedImage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent2D void updateData(javax.media.j3d.ImageComponent2D.Updater, int, int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateData(p0 : ImageComponent2D.Updater, p1 : Int, p2 : Int, p3 : Int, p4 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent2DRetained void copyRImage(java.awt.image.RenderedImage, byte[], boolean, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyRImage(p0 : RenderedImage, p1 : ByteArray?, p2 : Boolean, p3 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent2DRetained void set(java.awt.image.BufferedImage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : BufferedImage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent2DRetained void set(java.awt.image.RenderedImage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : RenderedImage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent2DRetained void storeRasterImageWithFlip(java.awt.image.RenderedImage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun storeRasterImageWithFlip(p0 : RenderedImage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent2DRetained void storeTextureImageWithFlip(java.awt.image.RenderedImage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun storeTextureImageWithFlip(p0 : RenderedImage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent2DRetained void updateData(javax.media.j3d.ImageComponent2D.Updater, int, int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateData(p0 : ImageComponent2D.Updater, p1 : Int, p2 : Int, p3 : Int, p4 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3D ImageComponent3D(int, java.awt.image.BufferedImage[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ImageComponent3D(p0 : Int, p1 : Array&lt;out BufferedImage?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3D ImageComponent3D(int, java.awt.image.BufferedImage[], boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ImageComponent3D(p0 : Int, p1 : Array&lt;out BufferedImage?&gt;, p2 : Boolean, p3 : Boolean)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3D ImageComponent3D(int, java.awt.image.RenderedImage[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ImageComponent3D(p0 : Int, p1 : Array&lt;out RenderedImage?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3D ImageComponent3D(int, java.awt.image.RenderedImage[], boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ImageComponent3D(p0 : Int, p1 : Array&lt;out RenderedImage?&gt;, p2 : Boolean, p3 : Boolean)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3D javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3D void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3D java.awt.image.BufferedImage[] getImage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImage() : Array&lt;out BufferedImage?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3D java.awt.image.BufferedImage getImage(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImage(p0 : Int) : BufferedImage?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3D java.awt.image.RenderedImage[] getRenderedImage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRenderedImage() : Array&lt;out RenderedImage?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3D void set(int, java.awt.image.BufferedImage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Int, p1 : BufferedImage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3D void set(int, java.awt.image.RenderedImage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Int, p1 : RenderedImage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3D void set(java.awt.image.BufferedImage[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Array&lt;out BufferedImage?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3D void set(java.awt.image.RenderedImage[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Array&lt;out RenderedImage?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3D void updateData(javax.media.j3d.ImageComponent3D.Updater, int, int, int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateData(p0 : ImageComponent3D.Updater, p1 : Int, p2 : Int, p3 : Int, p4 : Int, p5 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3DRetained java.awt.image.BufferedImage[] getImage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImage() : Array&lt;out BufferedImage?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3DRetained java.awt.image.RenderedImage[] getRenderedImage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRenderedImage() : Array&lt;out RenderedImage?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3DRetained void set(int, java.awt.image.RenderedImage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Int, p1 : RenderedImage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponent3DRetained void updateData(javax.media.j3d.ImageComponent3D.Updater, int, int, int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateData(p0 : ImageComponent3D.Updater, p1 : Int, p2 : Int, p3 : Int, p4 : Int, p5 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponentRetained void copyImage(java.awt.image.BufferedImage, int, int, byte[], int, int, boolean, int, int, int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyImage(p0 : BufferedImage, p1 : Int, p2 : Int, p3 : ByteArray?, p4 : Int, p5 : Int, p6 : Boolean, p7 : Int, p8 : Int, p9 : Int, p10 : Int, p11 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponentRetained void copyImage(java.awt.image.BufferedImage, byte[], boolean, int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyImage(p0 : BufferedImage, p1 : ByteArray?, p2 : Boolean, p3 : Int, p4 : Int, p5 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponentRetained void copyImage(java.awt.image.RenderedImage, int, int, byte[], int, int, boolean, int, int, int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyImage(p0 : RenderedImage, p1 : Int, p2 : Int, p3 : ByteArray?, p4 : Int, p5 : Int, p6 : Boolean, p7 : Int, p8 : Int, p9 : Int, p10 : Int, p11 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponentRetained void copyImage(java.awt.image.RenderedImage, byte[], boolean, int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyImage(p0 : RenderedImage, p1 : ByteArray?, p2 : Boolean, p3 : Int, p4 : Int, p5 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponentRetained java.lang.Object getData(java.awt.image.DataBuffer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getData(p0 : DataBuffer) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponentRetained java.lang.Object getDataElementBuffer(java.awt.image.Raster)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDataElementBuffer(p0 : Raster) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponentRetained int getImageType(java.awt.image.RenderedImage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImageType(p0 : RenderedImage) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImageComponentRetained boolean is4ByteRGBAOr3ByteRGB(java.awt.image.RenderedImage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun is4ByteRGBAOr3ByteRGB(p0 : RenderedImage) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ImplementationVersion java.lang.String getJ3dVersion()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getJ3dVersion() : String&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArray void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArray void getColorIndices(int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColorIndices(p0 : Int, p1 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArray void getCoordinateIndices(int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinateIndices(p0 : Int, p1 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArray void getNormalIndices(int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNormalIndices(p0 : Int, p1 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArray void getTextureCoordinateIndices(int, int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinateIndices(p0 : Int, p1 : Int, p2 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArray void getTextureCoordinateIndices(int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinateIndices(p0 : Int, p1 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArray void setColorIndices(int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColorIndices(p0 : Int, p1 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArray void setCoordinateIndices(int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinateIndices(p0 : Int, p1 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArray void setNormalIndices(int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNormalIndices(p0 : Int, p1 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArray void setTextureCoordinateIndices(int, int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTextureCoordinateIndices(p0 : Int, p1 : Int, p2 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArray void setTextureCoordinateIndices(int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTextureCoordinateIndices(p0 : Int, p1 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArrayRetained void buildGA(javax.media.j3d.Canvas3D, javax.media.j3d.RenderAtom, boolean, boolean, float, boolean, javax.media.j3d.Transform3D, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildGA(p0 : Canvas3D, p1 : RenderAtom?, p2 : Boolean, p3 : Boolean, p4 : Float, p5 : Boolean, p6 : Transform3D?, p7 : Transform3D?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArrayRetained java.lang.Object cloneNonIndexedGeometry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNonIndexedGeometry() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArrayRetained int doIndicesCheck(int, int, int[], int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doIndicesCheck(p0 : Int, p1 : Int, p2 : IntArray?, p3 : IntArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArrayRetained void execute(javax.media.j3d.Canvas3D, javax.media.j3d.RenderAtom, boolean, boolean, float, boolean, int, boolean, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun execute(p0 : Canvas3D, p1 : RenderAtom?, p2 : Boolean, p3 : Boolean, p4 : Float, p5 : Boolean, p6 : Int, p7 : Boolean, p8 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArrayRetained void getColorIndices(int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColorIndices(p0 : Int, p1 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArrayRetained void getCoordinateIndices(int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoordinateIndices(p0 : Int, p1 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArrayRetained void getNormalIndices(int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNormalIndices(p0 : Int, p1 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArrayRetained void getTextureCoordinateIndices(int, int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureCoordinateIndices(p0 : Int, p1 : Int, p2 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArrayRetained void mergeGeometryArrays(java.util.ArrayList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeGeometryArrays(p0 : ArrayList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArrayRetained void setColorIndices(int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setColorIndices(p0 : Int, p1 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArrayRetained void setCoordinateIndices(int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoordinateIndices(p0 : Int, p1 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArrayRetained void setNormalIndices(int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNormalIndices(p0 : Int, p1 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryArrayRetained void setTextureCoordinateIndices(int, int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTextureCoordinateIndices(p0 : Int, p1 : Int, p2 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryStripArray IndexedGeometryStripArray(int, int, int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun IndexedGeometryStripArray(p0 : Int, p1 : Int, p2 : Int, p3 : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryStripArray IndexedGeometryStripArray(int, int, int, int[], int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun IndexedGeometryStripArray(p0 : Int, p1 : Int, p2 : Int, p3 : IntArray?, p4 : Int, p5 : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryStripArray void getStripIndexCounts(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getStripIndexCounts(p0 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryStripArray void setStripIndexCounts(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setStripIndexCounts(p0 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryStripArrayRetained java.lang.Object cloneNonIndexedGeometry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNonIndexedGeometry() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryStripArrayRetained void getStripIndexCounts(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getStripIndexCounts(p0 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryStripArrayRetained void mergeGeometryArrays(java.util.ArrayList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeGeometryArrays(p0 : ArrayList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedGeometryStripArrayRetained void setStripIndexCounts(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setStripIndexCounts(p0 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedLineArray javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedLineArrayRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedLineArrayRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedLineArrayRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedLineStripArray IndexedLineStripArray(int, int, int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun IndexedLineStripArray(p0 : Int, p1 : Int, p2 : Int, p3 : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedLineStripArray IndexedLineStripArray(int, int, int, int[], int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun IndexedLineStripArray(p0 : Int, p1 : Int, p2 : Int, p3 : IntArray?, p4 : Int, p5 : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedLineStripArray javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedLineStripArrayRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedLineStripArrayRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedLineStripArrayRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedObject javax.media.j3d.VirtualUniverse getVirtualUniverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getVirtualUniverse() : VirtualUniverse?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedPointArray javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedPointArrayRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedPointArrayRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedPointArrayRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedQuadArray javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedQuadArrayRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedQuadArrayRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedQuadArrayRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedTriangleArray javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedTriangleArrayRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedTriangleArrayRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedTriangleArrayRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedTriangleFanArray IndexedTriangleFanArray(int, int, int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun IndexedTriangleFanArray(p0 : Int, p1 : Int, p2 : Int, p3 : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedTriangleFanArray IndexedTriangleFanArray(int, int, int, int[], int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun IndexedTriangleFanArray(p0 : Int, p1 : Int, p2 : Int, p3 : IntArray?, p4 : Int, p5 : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedTriangleFanArray javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedTriangleFanArrayRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedTriangleFanArrayRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedTriangleFanArrayRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedTriangleStripArray IndexedTriangleStripArray(int, int, int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun IndexedTriangleStripArray(p0 : Int, p1 : Int, p2 : Int, p3 : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedTriangleStripArray IndexedTriangleStripArray(int, int, int, int[], int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun IndexedTriangleStripArray(p0 : Int, p1 : Int, p2 : Int, p3 : IntArray?, p4 : Int, p5 : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedTriangleStripArray javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedTriangleStripArrayRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedTriangleStripArrayRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedTriangleStripArrayRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedUnorderSet void add(javax.media.j3d.IndexedObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : IndexedObject) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedUnorderSet java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedUnorderSet boolean contains(javax.media.j3d.IndexedObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : IndexedObject) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedUnorderSet int indexOf(javax.media.j3d.IndexedObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(p0 : IndexedObject) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedUnorderSet void init(javax.media.j3d.IndexedObject, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun init(p0 : IndexedObject, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedUnorderSet void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(p0 : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedUnorderSet boolean remove(javax.media.j3d.IndexedObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : IndexedObject) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedUnorderSet java.lang.Object removeLastElement()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeLastElement() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedUnorderSet void set(int, javax.media.j3d.IndexedObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Int, p1 : IndexedObject) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedUnorderSet java.lang.Object[] toArray(javax.media.j3d.IndexedObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray(p0 : IndexedObject) : Array&lt;out Any?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.IndexedUnorderSet void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(p0 : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.InputDeviceScheduler InputDeviceScheduler(java.lang.ThreadGroup, javax.media.j3d.PhysicalEnvironment)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun InputDeviceScheduler(p0 : ThreadGroup?, p1 : PhysicalEnvironment)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.InputDeviceScheduler void addInputDevice(javax.media.j3d.InputDevice)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addInputDevice(p0 : InputDevice) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.InputDeviceScheduler void removeInputDevice(javax.media.j3d.InputDevice)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeInputDevice(p0 : InputDevice) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Interpolator void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3DBuffer boolean checkNativeBufferAccess(java.nio.Buffer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkNativeBufferAccess(p0 : Buffer?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3DGraphics2D void drawAndFlushImage(java.awt.image.BufferedImage, int, int, java.awt.image.ImageObserver)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun drawAndFlushImage(p0 : BufferedImage, p1 : Int, p2 : Int, p3 : ImageObserver?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3DGraphics2DImpl J3DGraphics2DImpl(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun J3DGraphics2DImpl(p0 : Canvas3D)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3DGraphics2DImpl void copyGraphics2D(java.awt.Graphics2D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyGraphics2D(p0 : Graphics2D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3DGraphics2DImpl void copyImage(java.awt.image.BufferedImage, byte[], int, int, int, int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyImage(p0 : BufferedImage, p1 : ByteArray?, p2 : Int, p3 : Int, p4 : Int, p5 : Int, p6 : Int, p7 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3DGraphics2DImpl void doDrawAndFlushImage(java.awt.image.BufferedImage, int, int, java.awt.image.ImageObserver)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doDrawAndFlushImage(p0 : BufferedImage, p1 : Int, p2 : Int, p3 : ImageObserver?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3DGraphics2DImpl void draw(java.awt.Shape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun draw(p0 : Shape) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3DGraphics2DImpl void drawAndFlushImage(java.awt.image.BufferedImage, int, int, java.awt.image.ImageObserver)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun drawAndFlushImage(p0 : BufferedImage, p1 : Int, p2 : Int, p3 : ImageObserver?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3DGraphics2DImpl boolean drawImage(java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun drawImage(p0 : Image, p1 : Int, p2 : Int, p3 : Color?, p4 : ImageObserver?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3DGraphics2DImpl boolean drawImage(java.awt.Image, int, int, java.awt.image.ImageObserver)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun drawImage(p0 : Image, p1 : Int, p2 : Int, p3 : ImageObserver?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3DGraphics2DImpl boolean drawImage(java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun drawImage(p0 : Image, p1 : AffineTransform?, p2 : ImageObserver?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3DGraphics2DImpl void drawImage(java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun drawImage(p0 : BufferedImage, p1 : BufferedImageOp?, p2 : Int, p3 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3DGraphics2DImpl void drawRenderableImage(java.awt.image.renderable.RenderableImage, java.awt.geom.AffineTransform)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun drawRenderableImage(p0 : RenderableImage, p1 : AffineTransform?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3DGraphics2DImpl void drawRenderedImage(java.awt.image.RenderedImage, java.awt.geom.AffineTransform)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun drawRenderedImage(p0 : RenderedImage, p1 : AffineTransform?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3DGraphics2DImpl void fill(java.awt.Shape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fill(p0 : Shape) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3DGraphics2DImpl void validate(float, float, float, float, java.awt.geom.AffineTransform)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun validate(p0 : Float, p1 : Float, p2 : Float, p3 : Float, p4 : AffineTransform?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3dNodeTable int getNodeValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNodeValue(p0 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3dNodeTable java.lang.Object getObject(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getObject(p0 : Int) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3dQueryProps.EntrySet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3dQueryProps.MapIterator MapIterator(javax.media.j3d.J3dQueryProps)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MapIterator(p0 : J3dQueryProps)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3dQueryProps.MapIterator MapIterator(javax.media.j3d.J3dQueryProps, javax.media.j3d.J3dQueryProps.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MapIterator(p0 : J3dQueryProps, p1 : J3dQueryProps.1?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3dQueryProps J3dQueryProps(java.lang.String[], java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun J3dQueryProps(p0 : Array&lt;out String?&gt;, p1 : Array&lt;out Any?&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3dQueryProps java.util.Hashtable access$100(javax.media.j3d.J3dQueryProps)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(p0 : J3dQueryProps) : Hashtable?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3dStructure void addMessage(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addMessage(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.J3dStructure void removeNodes(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodes(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LOD void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LeafRetained void getMirrorObjects(java.util.ArrayList, javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMirrorObjects(p0 : ArrayList, p1 : HashKey?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LeafRetained void updateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Light void addScope(javax.media.j3d.Group)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addScope(p0 : Group) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Light void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Light void getColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Light javax.media.j3d.BoundingLeaf getInfluencingBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Light javax.media.j3d.Bounds getInfluencingBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Light void insertScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Light void setScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightBin void addEnvironmentSet(javax.media.j3d.EnvironmentSet, javax.media.j3d.RenderBin)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addEnvironmentSet(p0 : EnvironmentSet, p1 : RenderBin?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightBin void removeEnvironmentSet(javax.media.j3d.EnvironmentSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeEnvironmentSet(p0 : EnvironmentSet) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightBin void render(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun render(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightBin void updateAttributes(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateAttributes(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightBin boolean willEnvironmentSetFit(javax.media.j3d.EnvironmentSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun willEnvironmentSetFit(p0 : EnvironmentSet) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained void addScope(javax.media.j3d.Group)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addScope(p0 : Group) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained void clearMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained void getColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained javax.media.j3d.BoundingLeaf getInfluencingBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained javax.media.j3d.Bounds getInfluencingBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained void getMirrorObjects(java.util.ArrayList, javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMirrorObjects(p0 : ArrayList, p1 : HashKey?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained void initAddScope(javax.media.j3d.Group)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initAddScope(p0 : Group) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained void initInfluencingBoundingLeaf(javax.media.j3d.BoundingLeaf)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initInfluencingBoundingLeaf(p0 : BoundingLeaf?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained void initInfluencingBounds(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initInfluencingBounds(p0 : Bounds?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained void initInsertScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initInsertScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained javax.media.j3d.J3dMessage initMessage(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initMessage(p0 : Int) : J3dMessage&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained void initMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained void initScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained void insertScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained void setScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained void updateImmediateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateImmediateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LightRetained void updateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LineArray javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LineArrayRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LineArrayRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LineArrayRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LineAttributes javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LineAttributes void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LineAttributesRetained boolean equivalent(javax.media.j3d.LineAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equivalent(p0 : LineAttributesRetained?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LineAttributesRetained void set(javax.media.j3d.LineAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : LineAttributesRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LineStripArray LineStripArray(int, int, int, int[], int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun LineStripArray(p0 : Int, p1 : Int, p2 : Int, p3 : IntArray?, p4 : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LineStripArray LineStripArray(int, int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun LineStripArray(p0 : Int, p1 : Int, p2 : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LineStripArray javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LineStripArrayRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LineStripArrayRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LineStripArrayRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LinearFog javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LinearFog void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LinearFogRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LinearFogRetained void updateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Link javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Link void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Link javax.media.j3d.SharedGroup getSharedGroup()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSharedGroup() : SharedGroup?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LinkRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LinkRetained void compile(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compile(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LinkRetained void computeCombineBounds(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeCombineBounds(p0 : Bounds) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LinkRetained javax.media.j3d.HashKey[] getNewKeys(java.lang.String, javax.media.j3d.HashKey[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNewKeys(p0 : String?, p1 : Array&lt;out HashKey?&gt;?) : Array&lt;out HashKey?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LinkRetained javax.media.j3d.SharedGroup getSharedGroup()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSharedGroup() : SharedGroup?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LinkRetained void removeNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LinkRetained void searchGeometryAtoms(javax.media.j3d.UnorderList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun searchGeometryAtoms(p0 : UnorderList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LinkRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LinkRetained void setNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LinkRetained void updateCollidable(javax.media.j3d.HashKey[], boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateCollidable(p0 : Array&lt;out HashKey?&gt;?, p1 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.LinkRetained void updatePickable(javax.media.j3d.HashKey[], boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updatePickable(p0 : Array&lt;out HashKey?&gt;?, p1 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Locale Locale(javax.media.j3d.VirtualUniverse)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Locale(p0 : VirtualUniverse)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Locale Locale(javax.media.j3d.VirtualUniverse, javax.media.j3d.HiResCoord)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Locale(p0 : VirtualUniverse, p1 : HiResCoord)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Locale Locale(javax.media.j3d.VirtualUniverse, int[], int[], int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Locale(p0 : VirtualUniverse, p1 : IntArray?, p2 : IntArray?, p3 : IntArray?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Locale void addBranchGraph(javax.media.j3d.BranchGroup)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBranchGraph(p0 : BranchGroup) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Locale void doAddBranchGraph(javax.media.j3d.BranchGroup)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doAddBranchGraph(p0 : BranchGroup) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Locale void doRemoveBranchGraph(javax.media.j3d.BranchGroup, javax.media.j3d.J3dMessage[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doRemoveBranchGraph(p0 : BranchGroup, p1 : Array&lt;out J3dMessage?&gt;?, p2 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Locale void doReplaceBranchGraph(javax.media.j3d.BranchGroup, javax.media.j3d.BranchGroup)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doReplaceBranchGraph(p0 : BranchGroup, p1 : BranchGroup) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Locale void getHiRes(javax.media.j3d.HiResCoord)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getHiRes(p0 : HiResCoord) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Locale javax.media.j3d.SceneGraphPath[] pickAll(javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickAll(p0 : PickShape?) : Array&lt;out SceneGraphPath?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Locale javax.media.j3d.SceneGraphPath[] pickAllSorted(javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickAllSorted(p0 : PickShape?) : Array&lt;out SceneGraphPath?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Locale javax.media.j3d.SceneGraphPath pickAny(javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickAny(p0 : PickShape?) : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Locale javax.media.j3d.SceneGraphPath pickClosest(javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickClosest(p0 : PickShape?) : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Locale void removeBranchGraph(javax.media.j3d.BranchGroup)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBranchGraph(p0 : BranchGroup) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Locale void replaceBranchGraph(javax.media.j3d.BranchGroup, javax.media.j3d.BranchGroup)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceBranchGraph(p0 : BranchGroup, p1 : BranchGroup) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Locale void setHiRes(javax.media.j3d.HiResCoord)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setHiRes(p0 : HiResCoord) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.10 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.11 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.12 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.13 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.14 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.15 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.16 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.19 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.22 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.24 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.25 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.26 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.27 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.28 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.29 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.30 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.31 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.32 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.33 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.34 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.8 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl.9 java.lang.Object run()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun run() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl javax.media.j3d.MasterControlThread access$200(javax.media.j3d.MasterControl)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(p0 : MasterControl) : MasterControlThread?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl javax.media.j3d.MasterControlThread access$202(javax.media.j3d.MasterControl, javax.media.j3d.MasterControlThread)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$202(p0 : MasterControl, p1 : MasterControlThread?) : MasterControlThread?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void addBHNodeToFreelists(javax.media.j3d.BHNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBHNodeToFreelists(p0 : BHNode) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void addFreeImageUpdateInfo(java.util.ArrayList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addFreeImageUpdateInfo(p0 : ArrayList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void addToStateThreads(javax.media.j3d.J3dThreadData)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addToStateThreads(p0 : J3dThreadData) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void assignNewPrimaryView(javax.media.j3d.VirtualUniverse)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun assignNewPrimaryView(p0 : VirtualUniverse) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl javax.media.j3d.UnorderList cloneView()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneView() : UnorderList&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl javax.media.j3d.Renderer createRenderer(java.awt.GraphicsConfiguration)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createRenderer(p0 : GraphicsConfiguration) : Renderer?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void createUpdateThread(javax.media.j3d.J3dStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createUpdateThread(p0 : J3dStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void destroyUniverseThreads(javax.media.j3d.VirtualUniverse)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun destroyUniverseThreads(p0 : VirtualUniverse) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void destroyUpdateThread(javax.media.j3d.J3dStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun destroyUpdateThread(p0 : J3dStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void dumpmsg(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun dumpmsg(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void emptyMessageList(javax.media.j3d.J3dStructure, javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun emptyMessageList(p0 : J3dStructure?, p1 : View?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void evaluatePhysicalEnv(javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun evaluatePhysicalEnv(p0 : View) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void freeContext(javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun freeContext(p0 : View) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl javax.media.j3d.BHNode getBHNode(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBHNode(p0 : Int) : BHNode?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl java.lang.Integer getDisplayListId()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDisplayListId() : Int?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl javax.media.j3d.J3dMessage getMessage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMessage() : J3dMessage?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl javax.media.j3d.Transform3D getTransform3D(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTransform3D(p0 : Transform3D?) : Transform3D?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void processMessage(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processMessage(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void processMessage(javax.media.j3d.J3dMessage[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processMessage(p0 : Array&lt;out J3dMessage?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void registerView(javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun registerView(p0 : View) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void sendMessage(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sendMessage(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void sendRenderMessage(java.awt.GraphicsConfiguration, java.lang.Object, java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sendRenderMessage(p0 : GraphicsConfiguration, p1 : Any?, p2 : Int?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void startView(javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun startView(p0 : View) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void stopView(javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun stopView(p0 : View) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void unregisterView(javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun unregisterView(p0 : View) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void viewActivate(javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun viewActivate(p0 : View) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MasterControl void viewDeactivate(javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun viewDeactivate(p0 : View) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Material javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Material void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Material void getAmbientColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAmbientColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Material void getDiffuseColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDiffuseColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Material void getEmissiveColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEmissiveColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Material void getSpecularColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSpecularColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Material java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MaterialRetained java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MaterialRetained boolean equivalent(javax.media.j3d.MaterialRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equivalent(p0 : MaterialRetained?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MaterialRetained void getAmbientColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAmbientColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MaterialRetained void getDiffuseColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDiffuseColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MaterialRetained void getEmissiveColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEmissiveColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MaterialRetained void getSpecularColor(javax.vecmath.Color3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSpecularColor(p0 : Color3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MaterialRetained void set(javax.media.j3d.MaterialRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : MaterialRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MediaContainer javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MediaContainer void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MediaContainerRetained void setInputStream(java.io.InputStream, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setInputStream(p0 : InputStream?, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MediaContainerRetained void setURLObject(java.net.URL, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setURLObject(p0 : URL?, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MediaContainerRetained void setURLString(java.lang.String, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setURLString(p0 : String?, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MemoryFreeList java.lang.Object getObject()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getObject() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClip ModelClip(javax.vecmath.Vector4d[], boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ModelClip(p0 : Array&lt;out Vector4d?&gt;?, p1 : BooleanArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClip void addScope(javax.media.j3d.Group)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addScope(p0 : Group) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClip javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClip void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClip void getEnables(boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEnables(p0 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClip javax.media.j3d.BoundingLeaf getInfluencingBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClip javax.media.j3d.Bounds getInfluencingBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClip void getPlane(int, javax.vecmath.Vector4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPlane(p0 : Int, p1 : Vector4d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClip void insertScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClip void setEnables(boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setEnables(p0 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClip void setScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void addScope(javax.media.j3d.Group)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addScope(p0 : Group) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void clearMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void getEnables(boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEnables(p0 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained javax.media.j3d.BoundingLeaf getInfluencingBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained javax.media.j3d.Bounds getInfluencingBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void getMirrorObjects(java.util.ArrayList, javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMirrorObjects(p0 : ArrayList, p1 : HashKey?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void getPlane(int, javax.vecmath.Vector4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPlane(p0 : Int, p1 : Vector4d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void initAddScope(javax.media.j3d.Group)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initAddScope(p0 : Group) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void initEnables(boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initEnables(p0 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void initInfluencingBoundingLeaf(javax.media.j3d.BoundingLeaf)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initInfluencingBoundingLeaf(p0 : BoundingLeaf?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void initInfluencingBounds(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initInfluencingBounds(p0 : Bounds?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void initInsertScope(javax.media.j3d.Node, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initInsertScope(p0 : Node, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void initMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void initScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void insertScope(javax.media.j3d.Node, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertScope(p0 : Node, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void printEnables(java.lang.String, boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun printEnables(p0 : String?, p1 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void setEnables(boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setEnables(p0 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void setScope(javax.media.j3d.Group, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setScope(p0 : Group, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void update(javax.media.j3d.Canvas3D, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun update(p0 : Canvas3D, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void updateImmediateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateImmediateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ModelClipRetained void updateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Morph javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Morph void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Morph void duplicateNode(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateNode(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Morph javax.media.j3d.Appearance getAppearance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAppearance() : Appearance?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Morph javax.media.j3d.Bounds getCollisionBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCollisionBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Morph boolean intersect(javax.media.j3d.SceneGraphPath, javax.media.j3d.PickRay, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : SceneGraphPath, p1 : PickRay, p2 : DoubleArray?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Morph boolean intersect(javax.media.j3d.SceneGraphPath, javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : SceneGraphPath, p1 : PickShape) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Morph boolean intersect(javax.media.j3d.SceneGraphPath, javax.media.j3d.PickShape, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : SceneGraphPath, p1 : PickShape, p2 : DoubleArray?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Morph void setWeights(double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setWeights(p0 : DoubleArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained void compile(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compile(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained void computeCombineBounds(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeCombineBounds(p0 : Bounds) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained void doErrorCheck(javax.media.j3d.GeometryArrayRetained, javax.media.j3d.GeometryArrayRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doErrorCheck(p0 : GeometryArrayRetained, p1 : GeometryArrayRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained javax.media.j3d.Appearance getAppearance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAppearance() : Appearance?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained javax.media.j3d.Bounds getBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained javax.media.j3d.Bounds getCollisionBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCollisionBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained javax.media.j3d.Bounds getEffectiveBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEffectiveBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained void getMirrorObjects(java.util.ArrayList, javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMirrorObjects(p0 : ArrayList, p1 : HashKey?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained javax.media.j3d.Shape3DRetained getMirrorShape(javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMirrorShape(p0 : HashKey) : Shape3DRetained?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained void getMirrorShape3D(java.util.ArrayList, javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMirrorShape3D(p0 : ArrayList, p1 : HashKey?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained boolean intersect(javax.media.j3d.SceneGraphPath, javax.media.j3d.PickShape, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : SceneGraphPath, p1 : PickShape, p2 : DoubleArray?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained void searchGeometryAtoms(javax.media.j3d.UnorderList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun searchGeometryAtoms(p0 : UnorderList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained void setWeights(double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setWeights(p0 : DoubleArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained void updateCollidable(javax.media.j3d.HashKey[], boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateCollidable(p0 : Array&lt;out HashKey?&gt;?, p1 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained void updateData(javax.media.j3d.Geometry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateData(p0 : Geometry) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained void updateImmediateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateImmediateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.MorphRetained void updatePickable(javax.media.j3d.HashKey[], boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updatePickable(p0 : Array&lt;out HashKey?&gt;?, p1 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NativeConfigTemplate3D java.awt.GraphicsConfiguration getBestConfiguration(javax.media.j3d.GraphicsConfigTemplate3D, java.awt.GraphicsConfiguration[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBestConfiguration(p0 : GraphicsConfigTemplate3D, p1 : Array&lt;out GraphicsConfiguration?&gt;) : GraphicsConfiguration?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NativeConfigTemplate3D boolean hasDoubleBuffer(java.awt.GraphicsConfiguration)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hasDoubleBuffer(p0 : GraphicsConfiguration) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NativeConfigTemplate3D boolean hasSceneAntialiasingAccum(java.awt.GraphicsConfiguration)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hasSceneAntialiasingAccum(p0 : GraphicsConfiguration) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NativeConfigTemplate3D boolean hasSceneAntialiasingMultiSamples(java.awt.GraphicsConfiguration)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hasSceneAntialiasingMultiSamples(p0 : GraphicsConfiguration) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NativeConfigTemplate3D boolean hasStereo(java.awt.GraphicsConfiguration)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hasStereo(p0 : GraphicsConfiguration) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NativeConfigTemplate3D boolean isGraphicsConfigSupported(javax.media.j3d.GraphicsConfigTemplate3D, java.awt.GraphicsConfiguration)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isGraphicsConfigSupported(p0 : GraphicsConfigTemplate3D, p1 : GraphicsConfiguration) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NativeWSInfo int getCanvasVid(java.awt.GraphicsConfiguration)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCanvasVid(p0 : GraphicsConfiguration) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NnuId int equal(javax.media.j3d.NnuId)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equal(p0 : NnuId) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NnuIdManager javax.media.j3d.NnuId[] delete(javax.media.j3d.NnuId[], javax.media.j3d.NnuId[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delete(p0 : Array&lt;out NnuId?&gt;, p1 : Array&lt;out NnuId?&gt;) : Array&lt;out NnuId?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NnuIdManager int equals(javax.media.j3d.NnuId[], javax.media.j3d.NnuId, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Array&lt;out NnuId?&gt;, p1 : NnuId?, p2 : Int, p3 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NnuIdManager boolean equals(javax.media.j3d.NnuId[], javax.media.j3d.NnuId, int[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Array&lt;out NnuId?&gt;, p1 : NnuId?, p2 : IntArray?, p3 : Int, p4 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NnuIdManager void insertSort(javax.media.j3d.NnuId[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertSort(p0 : Array&lt;out NnuId?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NnuIdManager javax.media.j3d.NnuId[] merge(javax.media.j3d.NnuId[], javax.media.j3d.NnuId[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun merge(p0 : Array&lt;out NnuId?&gt;, p1 : Array&lt;out NnuId?&gt;) : Array&lt;out NnuId?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NnuIdManager void printIds(javax.media.j3d.NnuId[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun printIds(p0 : Array&lt;out NnuId?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NnuIdManager void quicksort(javax.media.j3d.NnuId[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun quicksort(p0 : Array&lt;out NnuId?&gt;, p1 : Int, p2 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NnuIdManager void replace(javax.media.j3d.NnuId, javax.media.j3d.NnuId, javax.media.j3d.NnuId[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(p0 : NnuId?, p1 : NnuId?, p2 : Array&lt;out NnuId?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NnuIdManager void sort(javax.media.j3d.NnuId[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sort(p0 : Array&lt;out NnuId?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Node void checkDuplicateNode(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkDuplicateNode(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Node javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Node javax.media.j3d.Node cloneTree(javax.media.j3d.NodeReferenceTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneTree(p0 : NodeReferenceTable) : Node?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Node javax.media.j3d.Node cloneTree(javax.media.j3d.NodeReferenceTable, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneTree(p0 : NodeReferenceTable, p1 : Boolean) : Node?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Node javax.media.j3d.Node cloneTree(javax.media.j3d.NodeReferenceTable, boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneTree(p0 : NodeReferenceTable, p1 : Boolean, p2 : Boolean) : Node?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Node javax.media.j3d.Node cloneTree(boolean, java.util.Hashtable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneTree(p0 : Boolean, p1 : Hashtable) : Node?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Node void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Node void duplicateNode(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateNode(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Node javax.media.j3d.Bounds getBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Node void getLocalToVworld(javax.media.j3d.SceneGraphPath, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLocalToVworld(p0 : SceneGraphPath, p1 : Transform3D?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Node javax.media.j3d.Node getParent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getParent() : Node?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeComponent void checkDuplicateNodeComponent(javax.media.j3d.NodeComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkDuplicateNodeComponent(p0 : NodeComponent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeComponent javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeComponent void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeComponent void duplicateNodeComponent(javax.media.j3d.NodeComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateNodeComponent(p0 : NodeComponent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeComponent void duplicateNodeComponent(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateNodeComponent(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeComponentRetained void addUser(javax.media.j3d.NodeRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addUser(p0 : NodeRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeComponentRetained java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeComponentRetained void copyMirrorUsers(javax.media.j3d.NodeComponentRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyMirrorUsers(p0 : NodeComponentRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeComponentRetained void removeMirrorUsers(javax.media.j3d.NodeComponentRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeMirrorUsers(p0 : NodeComponentRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeComponentRetained void removeUser(javax.media.j3d.NodeRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeUser(p0 : NodeRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeComponentRetained void set(javax.media.j3d.NodeComponentRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : NodeComponentRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void computeCombineBounds(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeCombineBounds(p0 : Bounds) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void computeLocalToVworld(javax.media.j3d.NodeRetained, javax.media.j3d.NodeRetained, javax.media.j3d.HashKey, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeLocalToVworld(p0 : NodeRetained?, p1 : NodeRetained, p2 : HashKey?, p3 : Transform3D?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void doSetLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doSetLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained int equal(javax.media.j3d.NnuId)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equal(p0 : NnuId) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void findCollidableFlags(boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findCollidableFlags(p0 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void findPickableFlags(boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findPickableFlags(p0 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void findTransformLevels(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findTransformLevels(p0 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained javax.media.j3d.Bounds getBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained javax.media.j3d.Bounds getEffectiveBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEffectiveBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained javax.media.j3d.Bounds getLocalBounds(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLocalBounds(p0 : Bounds) : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void getLocalToVworld(javax.media.j3d.SceneGraphPath, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLocalToVworld(p0 : SceneGraphPath, p1 : Transform3D?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void getLocalToVworld(javax.media.j3d.Transform3D, javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLocalToVworld(p0 : Transform3D?, p1 : HashKey) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void merge(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun merge(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void removeNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void searchGeometryAtoms(javax.media.j3d.UnorderList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun searchGeometryAtoms(p0 : UnorderList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void setAuxData(javax.media.j3d.SetLiveState, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setAuxData(p0 : SetLiveState, p1 : Int, p2 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void setNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void transformBounds(javax.media.j3d.SceneGraphPath, javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transformBounds(p0 : SceneGraphPath, p1 : Bounds) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void updateCollidable(javax.media.j3d.HashKey[], boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateCollidable(p0 : Array&lt;out HashKey?&gt;?, p1 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.NodeRetained void updatePickable(javax.media.j3d.HashKey[], boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updatePickable(p0 : Array&lt;out HashKey?&gt;?, p1 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrderedGroup javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrderedGroup int[] getChildIndexOrder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getChildIndexOrder() : IntArray?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrderedGroupRetained void childCheckSetLive(javax.media.j3d.NodeRetained, int, javax.media.j3d.SetLiveState, javax.media.j3d.NodeRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun childCheckSetLive(p0 : NodeRetained, p1 : Int, p2 : SetLiveState, p3 : NodeRetained?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrderedGroupRetained void childDoSetLive(javax.media.j3d.NodeRetained, int, javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun childDoSetLive(p0 : NodeRetained?, p1 : Int, p2 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrderedGroupRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrderedGroupRetained void compile(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compile(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrderedGroupRetained int[] getChildIndexOrder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getChildIndexOrder() : IntArray?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrderedGroupRetained void printTable(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun printTable(p0 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrderedGroupRetained void removeNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrderedGroupRetained void setAuxData(javax.media.j3d.SetLiveState, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setAuxData(p0 : SetLiveState, p1 : Int, p2 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrderedGroupRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrderedGroupRetained void setNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrderedPath javax.media.j3d.OrderedPath clonePath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clonePath() : OrderedPath&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3D OrientedShape3D(javax.media.j3d.Geometry, javax.media.j3d.Appearance, int, javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun OrientedShape3D(p0 : Geometry?, p1 : Appearance?, p2 : Int, p3 : Vector3f)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3D OrientedShape3D(javax.media.j3d.Geometry, javax.media.j3d.Appearance, int, javax.vecmath.Vector3f, boolean, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun OrientedShape3D(p0 : Geometry?, p1 : Appearance?, p2 : Int, p3 : Vector3f, p4 : Boolean, p5 : Double)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3D javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3D void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3D void duplicateNode(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateNode(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3D void getAlignmentAxis(javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAlignmentAxis(p0 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3D void getRotationPoint(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRotationPoint(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3D void setAlignmentAxis(javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setAlignmentAxis(p0 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3DRenderMethod boolean render(javax.media.j3d.RenderMolecule, javax.media.j3d.Canvas3D, int, javax.media.j3d.RenderAtomListInfo, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun render(p0 : RenderMolecule, p1 : Canvas3D, p2 : Int, p3 : RenderAtomListInfo?, p4 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3DRetained void compile(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compile(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3DRetained void getAlignmentAxis(javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAlignmentAxis(p0 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3DRetained void getRotationPoint(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRotationPoint(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3DRetained void initAlignmentAxis(javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initAlignmentAxis(p0 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3DRetained boolean projectToPlane(javax.vecmath.Vector3d, javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun projectToPlane(p0 : Vector3d, p1 : Vector3d) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3DRetained void searchGeometryAtoms(javax.media.j3d.UnorderList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun searchGeometryAtoms(p0 : UnorderList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3DRetained void setAlignmentAxis(javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setAlignmentAxis(p0 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3DRetained void setRotationPoint(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setRotationPoint(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3DRetained void updateImmediateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateImmediateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.OrientedShape3DRetained void updateOrientedTransform(javax.media.j3d.Canvas3D, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateOrientedTransform(p0 : Canvas3D, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PathInterpolator PathInterpolator(javax.media.j3d.Alpha, javax.media.j3d.TransformGroup, javax.media.j3d.Transform3D, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PathInterpolator(p0 : Alpha?, p1 : TransformGroup?, p2 : Transform3D, p3 : FloatArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PathInterpolator PathInterpolator(javax.media.j3d.Alpha, javax.media.j3d.TransformGroup, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PathInterpolator(p0 : Alpha?, p1 : TransformGroup?, p2 : FloatArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PathInterpolator PathInterpolator(javax.media.j3d.Alpha, float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PathInterpolator(p0 : Alpha?, p1 : FloatArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PathInterpolator void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PathInterpolator void setKnots(float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setKnots(p0 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PhysicalBody void getHeadToHeadTracker(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getHeadToHeadTracker(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PhysicalBody void getLeftEarPosition(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLeftEarPosition(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PhysicalBody void getLeftEyePosition(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLeftEyePosition(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PhysicalBody void getRightEarPosition(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRightEarPosition(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PhysicalBody void getRightEyePosition(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRightEyePosition(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PhysicalBody void setHeadToHeadTracker(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setHeadToHeadTracker(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PhysicalEnvironment void addInputDevice(javax.media.j3d.InputDevice)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addInputDevice(p0 : InputDevice) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PhysicalEnvironment void getCoexistenceToTrackerBase(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoexistenceToTrackerBase(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PhysicalEnvironment void setCoexistenceToTrackerBase(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCoexistenceToTrackerBase(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickBounds boolean intersect(javax.media.j3d.Bounds, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds, p1 : Point4d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickBounds javax.media.j3d.PickShape transform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Transform3D) : PickShape&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickCone void getDirection(javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDirection(p0 : Vector3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickCone void getOrigin(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOrigin(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickCone boolean intersect(javax.media.j3d.Bounds, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds, p1 : Point4d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickConeRay boolean intersect(javax.media.j3d.Bounds, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds, p1 : Point4d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickConeRay javax.media.j3d.PickShape transform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Transform3D) : PickShape&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickConeSegment void getEnd(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEnd(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickConeSegment boolean intersect(javax.media.j3d.Bounds, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds, p1 : Point4d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickConeSegment javax.media.j3d.PickShape transform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Transform3D) : PickShape&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickCylinder void getDirection(javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDirection(p0 : Vector3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickCylinder void getOrigin(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOrigin(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickCylinder boolean intersect(javax.media.j3d.Bounds, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds, p1 : Point4d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickCylinder boolean pointInPolytope(javax.media.j3d.BoundingPolytope, double, double, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pointInPolytope(p0 : BoundingPolytope, p1 : Double, p2 : Double, p3 : Double) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickCylinderRay boolean intersect(javax.media.j3d.Bounds, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds, p1 : Point4d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickCylinderRay javax.media.j3d.PickShape transform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Transform3D) : PickShape&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickCylinderSegment void getEnd(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEnd(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickCylinderSegment boolean intersect(javax.media.j3d.Bounds, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds, p1 : Point4d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickCylinderSegment javax.media.j3d.PickShape transform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Transform3D) : PickShape&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickPoint void get(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickPoint boolean intersect(javax.media.j3d.Bounds, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds, p1 : Point4d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickPoint void set(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickPoint javax.media.j3d.PickShape transform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Transform3D) : PickShape&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickRay void get(javax.vecmath.Point3d, javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Point3d, p1 : Vector3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickRay boolean intersect(javax.media.j3d.Bounds, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds, p1 : Point4d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickRay void set(javax.vecmath.Point3d, javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Point3d, p1 : Vector3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickRay javax.media.j3d.PickShape transform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Transform3D) : PickShape&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickSegment void get(javax.vecmath.Point3d, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Point3d, p1 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickSegment boolean intersect(javax.media.j3d.Bounds, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds, p1 : Point4d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickSegment void set(javax.vecmath.Point3d, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Point3d, p1 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickSegment javax.media.j3d.PickShape transform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Transform3D) : PickShape&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickShape double distance(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun distance(p0 : Point3d) : Double&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickShape boolean intersect(javax.media.j3d.Bounds, javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds, p1 : Point4d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PickShape javax.media.j3d.PickShape transform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Transform3D) : PickShape&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Picking javax.media.j3d.SceneGraphPath getFirstSceneGraphPath(java.util.ArrayList, javax.media.j3d.BranchGroupRetained, javax.media.j3d.GeometryAtom[], javax.media.j3d.Locale)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getFirstSceneGraphPath(p0 : ArrayList?, p1 : BranchGroupRetained?, p2 : Array&lt;out GeometryAtom?&gt;?, p3 : Locale?) : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Picking javax.media.j3d.SceneGraphPath getSceneGraphPath(java.util.ArrayList, javax.media.j3d.BranchGroupRetained, javax.media.j3d.GeometryAtom, javax.media.j3d.Locale)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSceneGraphPath(p0 : ArrayList?, p1 : BranchGroupRetained?, p2 : GeometryAtom?, p3 : Locale?) : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Picking javax.media.j3d.SceneGraphPath[] getSceneGraphPath(java.util.ArrayList, javax.media.j3d.BranchGroupRetained, javax.media.j3d.GeometryAtom[], javax.media.j3d.Locale)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSceneGraphPath(p0 : ArrayList?, p1 : BranchGroupRetained?, p2 : Array&lt;out GeometryAtom?&gt;?, p3 : Locale?) : Array&lt;out SceneGraphPath?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Picking java.util.ArrayList initSceneGraphPath(javax.media.j3d.NodeRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initSceneGraphPath(p0 : NodeRetained?) : ArrayList&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Picking boolean inside(javax.media.j3d.BranchGroupRetained[], javax.media.j3d.BranchGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun inside(p0 : Array&lt;out BranchGroupRetained?&gt;?, p1 : BranchGroupRetained?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Picking javax.media.j3d.Node[] mergePath(java.util.ArrayList, java.util.ArrayList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergePath(p0 : ArrayList, p1 : ArrayList?) : Array&lt;out Node?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Picking javax.media.j3d.SceneGraphPath[] pickAll(javax.media.j3d.BranchGroup, javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickAll(p0 : BranchGroup?, p1 : PickShape?) : Array&lt;out SceneGraphPath?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Picking javax.media.j3d.SceneGraphPath[] pickAll(javax.media.j3d.Locale, javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickAll(p0 : Locale?, p1 : PickShape?) : Array&lt;out SceneGraphPath?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Picking javax.media.j3d.SceneGraphPath[] pickAllSorted(javax.media.j3d.BranchGroup, javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickAllSorted(p0 : BranchGroup?, p1 : PickShape?) : Array&lt;out SceneGraphPath?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Picking javax.media.j3d.SceneGraphPath[] pickAllSorted(javax.media.j3d.Locale, javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickAllSorted(p0 : Locale?, p1 : PickShape?) : Array&lt;out SceneGraphPath?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Picking javax.media.j3d.SceneGraphPath pickAny(javax.media.j3d.BranchGroup, javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickAny(p0 : BranchGroup?, p1 : PickShape?) : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Picking javax.media.j3d.SceneGraphPath pickAny(javax.media.j3d.Locale, javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickAny(p0 : Locale?, p1 : PickShape?) : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Picking javax.media.j3d.SceneGraphPath pickClosest(javax.media.j3d.BranchGroup, javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickClosest(p0 : BranchGroup?, p1 : PickShape?) : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Picking javax.media.j3d.SceneGraphPath pickClosest(javax.media.j3d.Locale, javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pickClosest(p0 : Locale?, p1 : PickShape?) : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Picking java.util.ArrayList retrievePath(javax.media.j3d.NodeRetained, javax.media.j3d.NodeRetained, javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retrievePath(p0 : NodeRetained, p1 : NodeRetained?, p2 : HashKey?) : ArrayList?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Picking javax.media.j3d.GeometryAtom selectClosest(javax.media.j3d.GeometryAtom[], javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun selectClosest(p0 : Array&lt;out GeometryAtom?&gt;, p1 : PickShape) : GeometryAtom?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Picking void sortGeomAtoms(javax.media.j3d.GeometryAtom[], javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sortGeomAtoms(p0 : Array&lt;out GeometryAtom?&gt;, p1 : PickShape?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointArray javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointArrayRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointArrayRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointArrayRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointAttributes javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointAttributes void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointAttributesRetained boolean equivalent(javax.media.j3d.PointAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equivalent(p0 : PointAttributesRetained?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointAttributesRetained void set(javax.media.j3d.PointAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : PointAttributesRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointLight javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointLight void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointLight void getAttenuation(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAttenuation(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointLight void getPosition(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPosition(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointLightRetained java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointLightRetained void doSetLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doSetLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointLightRetained void getAttenuation(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAttenuation(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointLightRetained void getPosition(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPosition(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointLightRetained javax.media.j3d.J3dMessage initMessage(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initMessage(p0 : Int) : J3dMessage&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointLightRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointLightRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointLightRetained void updateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointSound PointSound(javax.media.j3d.MediaContainer, float, int, boolean, boolean, boolean, javax.media.j3d.Bounds, float, javax.vecmath.Point3f, float[], float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PointSound(p0 : MediaContainer?, p1 : Float, p2 : Int, p3 : Boolean, p4 : Boolean, p5 : Boolean, p6 : Bounds?, p7 : Float, p8 : Point3f, p9 : FloatArray?, p10 : FloatArray?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointSound PointSound(javax.media.j3d.MediaContainer, float, int, boolean, boolean, boolean, javax.media.j3d.Bounds, float, javax.vecmath.Point3f, javax.vecmath.Point2f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PointSound(p0 : MediaContainer?, p1 : Float, p2 : Int, p3 : Boolean, p4 : Boolean, p5 : Boolean, p6 : Bounds?, p7 : Float, p8 : Point3f, p9 : Array&lt;out Point2f?&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointSound PointSound(javax.media.j3d.MediaContainer, float, javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PointSound(p0 : MediaContainer?, p1 : Float, p2 : Point3f)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointSound javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointSound void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointSound void duplicateNode(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateNode(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointSound void setPosition(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPosition(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointSoundRetained void getDistanceGain(float[], float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDistanceGain(p0 : FloatArray?, p1 : FloatArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointSoundRetained void getDistanceGain(javax.vecmath.Point2f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDistanceGain(p0 : Array&lt;out Point2f?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointSoundRetained void getXformPosition(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getXformPosition(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointSoundRetained void initMirrorObject(javax.media.j3d.PointSoundRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initMirrorObject(p0 : PointSoundRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointSoundRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointSoundRetained void setDistanceGain(float[], float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setDistanceGain(p0 : FloatArray?, p1 : FloatArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointSoundRetained void setDistanceGain(javax.vecmath.Point2f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setDistanceGain(p0 : Array&lt;out Point2f?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointSoundRetained void setPosition(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPosition(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PointSoundRetained void updateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PolygonAttributes javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PolygonAttributes void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PolygonAttributesRetained boolean equivalent(javax.media.j3d.PolygonAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equivalent(p0 : PolygonAttributesRetained?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PolygonAttributesRetained void set(javax.media.j3d.PolygonAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : PolygonAttributesRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PositionInterpolator PositionInterpolator(javax.media.j3d.Alpha, javax.media.j3d.TransformGroup, javax.media.j3d.Transform3D, float, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PositionInterpolator(p0 : Alpha?, p1 : TransformGroup?, p2 : Transform3D, p3 : Float, p4 : Float)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PositionInterpolator javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PositionInterpolator void computeTransform(float, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeTransform(p0 : Float, p1 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PositionInterpolator void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PositionPathInterpolator PositionPathInterpolator(javax.media.j3d.Alpha, javax.media.j3d.TransformGroup, javax.media.j3d.Transform3D, float[], javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PositionPathInterpolator(p0 : Alpha?, p1 : TransformGroup?, p2 : Transform3D, p3 : FloatArray, p4 : Array&lt;out Point3f?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PositionPathInterpolator javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PositionPathInterpolator void computeTransform(float, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeTransform(p0 : Float, p1 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PositionPathInterpolator void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PositionPathInterpolator void getPosition(int, javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPosition(p0 : Int, p1 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PositionPathInterpolator void setPathArrays(float[], javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPathArrays(p0 : FloatArray, p1 : Array&lt;out Point3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.PositionPathInterpolator void setPathArrays(javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPathArrays(p0 : Array&lt;out Point3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.QuadArray javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.QuadArrayRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.QuadArrayRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.QuadArrayRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster Raster(javax.vecmath.Point3f, int, int, int, int, int, javax.media.j3d.ImageComponent2D, javax.media.j3d.DepthComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Raster(p0 : Point3f, p1 : Int, p2 : Int, p3 : Int, p4 : Int, p5 : Int, p6 : ImageComponent2D?, p7 : DepthComponent?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster Raster(javax.vecmath.Point3f, int, int, java.awt.Point, java.awt.Dimension, java.awt.Point, javax.media.j3d.ImageComponent2D, javax.media.j3d.DepthComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Raster(p0 : Point3f, p1 : Int, p2 : Int, p3 : Point, p4 : Dimension, p5 : Point, p6 : ImageComponent2D?, p7 : DepthComponent?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster Raster(javax.vecmath.Point3f, int, java.awt.Point, java.awt.Dimension, javax.media.j3d.ImageComponent2D, javax.media.j3d.DepthComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Raster(p0 : Point3f, p1 : Int, p2 : Point, p3 : Dimension, p4 : ImageComponent2D?, p5 : DepthComponent?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster void duplicateNodeComponent(javax.media.j3d.NodeComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateNodeComponent(p0 : NodeComponent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster javax.media.j3d.DepthComponent getDepthComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDepthComponent() : DepthComponent?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster void getDstOffset(java.awt.Point)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDstOffset(p0 : Point) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster javax.media.j3d.ImageComponent2D getImage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImage() : ImageComponent2D?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster void getOffset(java.awt.Point)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOffset(p0 : Point) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster void getPosition(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPosition(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster void getSize(java.awt.Dimension)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSize(p0 : Dimension) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster void getSrcOffset(java.awt.Point)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSrcOffset(p0 : Point) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster void setDstOffset(java.awt.Point)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setDstOffset(p0 : Point) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster void setOffset(java.awt.Point)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setOffset(p0 : Point) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster void setPosition(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPosition(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster void setSize(java.awt.Dimension)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setSize(p0 : Dimension) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Raster void setSrcOffset(java.awt.Point)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setSrcOffset(p0 : Point) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RasterRetained void computeObjCoord(javax.media.j3d.Canvas3D, javax.vecmath.Point2d, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeObjCoord(p0 : Canvas3D, p1 : Point2d, p2 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RasterRetained void computeWinCoord(javax.media.j3d.Canvas3D, javax.media.j3d.RenderAtom, javax.vecmath.Point2d, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeWinCoord(p0 : Canvas3D?, p1 : RenderAtom, p2 : Point2d?, p3 : Point3d?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RasterRetained void execute(javax.media.j3d.Canvas3D, javax.media.j3d.RenderAtom, boolean, boolean, float, boolean, int, boolean, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun execute(p0 : Canvas3D, p1 : RenderAtom?, p2 : Boolean, p3 : Boolean, p4 : Float, p5 : Boolean, p6 : Int, p7 : Boolean, p8 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RasterRetained javax.media.j3d.DepthComponent getDepthComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDepthComponent() : DepthComponent?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RasterRetained void getDstOffset(java.awt.Point)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDstOffset(p0 : Point) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RasterRetained javax.media.j3d.ImageComponent2D getImage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImage() : ImageComponent2D?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RasterRetained void getOffsetPos(javax.media.j3d.Canvas3D, javax.media.j3d.RenderAtom, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOffsetPos(p0 : Canvas3D, p1 : RenderAtom, p2 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RasterRetained void getPosition(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPosition(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RasterRetained void getSize(java.awt.Dimension)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSize(p0 : Dimension) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RasterRetained void getSrcOffset(java.awt.Point)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSrcOffset(p0 : Point) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RasterRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RasterRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RasterRetained boolean intersect(javax.media.j3d.Transform3D, javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Transform3D?, p1 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RasterRetained boolean intersect(javax.media.j3d.Transform3D, javax.media.j3d.Transform3D, javax.media.j3d.GeometryRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Transform3D, p1 : Transform3D?, p2 : GeometryRetained) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RasterRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RasterRetained void setPosition(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPosition(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin RenderBin(javax.media.j3d.VirtualUniverse, javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RenderBin(p0 : VirtualUniverse?, p1 : View)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void addDirtyRenderMolecule(javax.media.j3d.RenderMolecule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addDirtyRenderMolecule(p0 : RenderMolecule) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void addDisplayListResourceFreeList(javax.media.j3d.RenderMolecule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addDisplayListResourceFreeList(p0 : RenderMolecule) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void addTransparentObject(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addTransparentObject(p0 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin javax.media.j3d.TransparentRenderingInfo collectDirtyTRInfo(javax.media.j3d.TransparentRenderingInfo, javax.media.j3d.RenderAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun collectDirtyTRInfo(p0 : TransparentRenderingInfo?, p1 : RenderAtom) : TransparentRenderingInfo?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void computeDirtyAcrossTransparentBins(javax.media.j3d.RenderAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeDirtyAcrossTransparentBins(p0 : RenderAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin javax.media.j3d.TransparentRenderingInfo computeDirtyAcrossTransparentBins(javax.media.j3d.TextureBin, javax.media.j3d.TransparentRenderingInfo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeDirtyAcrossTransparentBins(p0 : TextureBin, p1 : TransparentRenderingInfo?) : TransparentRenderingInfo&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void computeViewFrustumBBox(javax.media.j3d.BoundingBox)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeViewFrustumBBox(p0 : BoundingBox) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin javax.media.j3d.TransparentRenderingInfo depthSortAll(javax.media.j3d.TransparentRenderingInfo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun depthSortAll(p0 : TransparentRenderingInfo) : TransparentRenderingInfo&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void dumpBin(javax.media.j3d.LightBin)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun dumpBin(p0 : LightBin?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void dumpRM(javax.media.j3d.RenderMolecule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun dumpRM(p0 : RenderMolecule?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin javax.media.j3d.AttributeBin findAttributeBin(javax.media.j3d.EnvironmentSet, javax.media.j3d.RenderAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findAttributeBin(p0 : EnvironmentSet, p1 : RenderAtom) : AttributeBin&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin javax.media.j3d.EnvironmentSet findEnvironmentSet(javax.media.j3d.RenderAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findEnvironmentSet(p0 : RenderAtom) : EnvironmentSet&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin javax.media.j3d.OrderedCollection findOrderedCollection(javax.media.j3d.GeometryAtom, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findOrderedCollection(p0 : GeometryAtom, p1 : Boolean) : OrderedCollection?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin javax.media.j3d.RenderMolecule findRenderMolecule(javax.media.j3d.TextureBin, javax.media.j3d.RenderAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findRenderMolecule(p0 : TextureBin, p1 : RenderAtom) : RenderMolecule&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin javax.media.j3d.TextureBin findTextureBin(javax.media.j3d.AttributeBin, javax.media.j3d.RenderAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findTextureBin(p0 : AttributeBin, p1 : RenderAtom) : TextureBin&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void freeAllDisplayListResources(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun freeAllDisplayListResources(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin javax.media.j3d.AttributeBin getAttributeBin(javax.media.j3d.AppearanceRetained, javax.media.j3d.RenderingAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAttributeBin(p0 : AppearanceRetained?, p1 : RenderingAttributesRetained?) : AttributeBin&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin javax.media.j3d.EnvironmentSet getEnvironmentSet(javax.media.j3d.RenderAtom, javax.media.j3d.LightRetained[], javax.media.j3d.FogRetained, javax.media.j3d.ModelClipRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEnvironmentSet(p0 : RenderAtom?, p1 : Array&lt;out LightRetained?&gt;?, p2 : FogRetained?, p3 : ModelClipRetained?) : EnvironmentSet&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin javax.media.j3d.LightBin getLightBin(int, javax.media.j3d.BackgroundRetained, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLightBin(p0 : Int, p1 : BackgroundRetained?, p2 : Boolean) : LightBin&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void getNewEnvironment(javax.media.j3d.RenderAtom, javax.media.j3d.LightRetained[], javax.media.j3d.FogRetained, javax.media.j3d.ModelClipRetained, javax.media.j3d.AppearanceRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNewEnvironment(p0 : RenderAtom, p1 : Array&lt;out LightRetained?&gt;?, p2 : FogRetained?, p3 : ModelClipRetained?, p4 : AppearanceRetained?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin javax.media.j3d.RenderMolecule getRenderMolecule(javax.media.j3d.GeometryAtom, javax.media.j3d.PolygonAttributesRetained, javax.media.j3d.LineAttributesRetained, javax.media.j3d.PointAttributesRetained, javax.media.j3d.MaterialRetained, javax.media.j3d.ColoringAttributesRetained, javax.media.j3d.TransparencyAttributesRetained, javax.media.j3d.RenderingAttributesRetained, javax.media.j3d.TextureUnitStateRetained[], javax.media.j3d.Transform3D[], int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRenderMolecule(p0 : GeometryAtom, p1 : PolygonAttributesRetained?, p2 : LineAttributesRetained?, p3 : PointAttributesRetained?, p4 : MaterialRetained?, p5 : ColoringAttributesRetained?, p6 : TransparencyAttributesRetained?, p7 : RenderingAttributesRetained?, p8 : Array&lt;out TextureUnitStateRetained?&gt;?, p9 : Array&lt;out Transform3D?&gt;?, p10 : IntArray?) : RenderMolecule&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin javax.media.j3d.TextureBin getTextureBin(javax.media.j3d.TextureUnitStateRetained[], javax.media.j3d.AppearanceRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureBin(p0 : Array&lt;out TextureUnitStateRetained?&gt;?, p1 : AppearanceRetained?) : TextureBin&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void insertDepthSort(javax.media.j3d.RenderAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertDepthSort(p0 : RenderAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void insertNodes(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertNodes(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin javax.media.j3d.RenderMolecule insertRenderAtom(javax.media.j3d.RenderAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertRenderAtom(p0 : RenderAtom) : RenderMolecule&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin javax.media.j3d.TransparentRenderingInfo mergeDepthSort(javax.media.j3d.TransparentRenderingInfo, javax.media.j3d.TransparentRenderingInfo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeDepthSort(p0 : TransparentRenderingInfo?, p1 : TransparentRenderingInfo?) : TransparentRenderingInfo?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processAppearanceChanged(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processAppearanceChanged(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processAttributeBinNodeComponentChanged(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processAttributeBinNodeComponentChanged(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processBgGeometryAtoms(javax.media.j3d.GeometryAtom[], long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processBgGeometryAtoms(p0 : Array&lt;out GeometryAtom?&gt;, p1 : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processBoundingLeafChanged(java.lang.Object[], long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processBoundingLeafChanged(p0 : Array&lt;out Any?&gt;, p1 : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processDataChanged(java.lang.Object[], java.lang.Object[], long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processDataChanged(p0 : Array&lt;out Any?&gt;, p1 : Array&lt;out Any?&gt;?, p2 : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processFogChanged(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processFogChanged(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processGeometryAtom(javax.media.j3d.GeometryAtom, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processGeometryAtom(p0 : GeometryAtom, p1 : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processGeometryAtomsChanged(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processGeometryAtomsChanged(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processGeometryChanged(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processGeometryChanged(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processModelClipChanged(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processModelClipChanged(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processMorphChanged(java.lang.Object[], long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processMorphChanged(p0 : Array&lt;out Any?&gt;, p1 : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processOrderedGroupInserted(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processOrderedGroupInserted(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processOrderedGroupRemoved(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processOrderedGroupRemoved(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processOrientedShape3DChanged(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processOrientedShape3DChanged(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processPossibleBinChanged(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processPossibleBinChanged(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processRenderAtomTransparentInfo(javax.media.j3d.RenderAtomListInfo, java.util.ArrayList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processRenderAtomTransparentInfo(p0 : RenderAtomListInfo?, p1 : ArrayList?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processRenderMoleculeNodeComponentChanged(java.lang.Object[], int, int, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processRenderMoleculeNodeComponentChanged(p0 : Array&lt;out Any?&gt;, p1 : Int, p2 : Int, p3 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processShapeChanged(java.lang.Object[], long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processShapeChanged(p0 : Array&lt;out Any?&gt;, p1 : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processSwitchChanged(javax.media.j3d.J3dMessage, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processSwitchChanged(p0 : J3dMessage, p1 : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processTexCoordGenerationChanged(javax.media.j3d.NodeComponentRetained, javax.media.j3d.GeometryAtom[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processTexCoordGenerationChanged(p0 : NodeComponentRetained, p1 : Array&lt;out GeometryAtom?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processText3DTransformChanged(java.lang.Object[], java.lang.Object[], long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processText3DTransformChanged(p0 : Array&lt;out Any?&gt;?, p1 : Array&lt;out Any?&gt;, p2 : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processTextureAttributesChanged(javax.media.j3d.NodeComponentRetained, javax.media.j3d.GeometryAtom[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processTextureAttributesChanged(p0 : NodeComponentRetained, p1 : Array&lt;out GeometryAtom?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processTextureChanged(javax.media.j3d.NodeComponentRetained, javax.media.j3d.GeometryAtom[], java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processTextureChanged(p0 : NodeComponentRetained?, p1 : Array&lt;out GeometryAtom?&gt;?, p2 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processTextureUnitStateChanged(javax.media.j3d.NodeComponentRetained, javax.media.j3d.GeometryAtom[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processTextureUnitStateChanged(p0 : NodeComponentRetained?, p1 : Array&lt;out GeometryAtom?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void processViewSpecificGroupChanged(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processViewSpecificGroupChanged(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void reInsertAttributeBin(javax.media.j3d.EnvironmentSet, javax.media.j3d.RenderAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reInsertAttributeBin(p0 : EnvironmentSet, p1 : RenderAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void reInsertRenderAtom(javax.media.j3d.TextureBin, javax.media.j3d.RenderAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reInsertRenderAtom(p0 : TextureBin, p1 : RenderAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void reInsertTextureBin(javax.media.j3d.AttributeBin, javax.media.j3d.RenderAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reInsertTextureBin(p0 : AttributeBin, p1 : RenderAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void removeARenderAtom(javax.media.j3d.RenderAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeARenderAtom(p0 : RenderAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void removeDirtyRenderMolecule(javax.media.j3d.RenderMolecule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeDirtyRenderMolecule(p0 : RenderMolecule) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void removeLightBin(javax.media.j3d.LightBin)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeLightBin(p0 : LightBin) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void removeNodes(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodes(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void removeOrderedBin(javax.media.j3d.OrderedBin)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeOrderedBin(p0 : OrderedBin) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void removeOrderedHeadLightBin(javax.media.j3d.LightBin)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeOrderedHeadLightBin(p0 : LightBin) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void removeRenderMolecule(javax.media.j3d.RenderMolecule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeRenderMolecule(p0 : RenderMolecule) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void renderBackground(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun renderBackground(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void renderOrderedBin(javax.media.j3d.Canvas3D, javax.media.j3d.OrderedBin, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun renderOrderedBin(p0 : Canvas3D?, p1 : OrderedBin, p2 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void renderOrderedBins(javax.media.j3d.Canvas3D, java.util.ArrayList, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun renderOrderedBins(p0 : Canvas3D?, p1 : ArrayList, p2 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void updateCanvasForDirtyFog(java.util.ArrayList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateCanvasForDirtyFog(p0 : ArrayList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void updateCanvasForDirtyLights(java.util.ArrayList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateCanvasForDirtyLights(p0 : ArrayList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void updateCanvasForDirtyModelClip(java.util.ArrayList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateCanvasForDirtyModelClip(p0 : ArrayList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void updateCanvasResource(javax.media.j3d.Canvas3D[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateCanvasResource(p0 : Array&lt;out Canvas3D?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void updateDirtyDisplayLists(javax.media.j3d.Canvas3D, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateDirtyDisplayLists(p0 : Canvas3D, p1 : ArrayList, p2 : ArrayList, p3 : ArrayList, p4 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void updateDlistCanvasResource(javax.media.j3d.Canvas3D[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateDlistCanvasResource(p0 : Array&lt;out Canvas3D?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void updateDlistRendererResource(javax.media.j3d.Renderer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateDlistRendererResource(p0 : Renderer?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void updateRendererResource(javax.media.j3d.Renderer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateRendererResource(p0 : Renderer?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderBin void updateTransparentInfo(javax.media.j3d.RenderAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTransparentInfo(p0 : RenderAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderMethod boolean render(javax.media.j3d.RenderMolecule, javax.media.j3d.Canvas3D, int, javax.media.j3d.RenderAtomListInfo, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun render(p0 : RenderMolecule, p1 : Canvas3D, p2 : Int, p3 : RenderAtomListInfo?, p4 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderMolecule RenderMolecule(javax.media.j3d.GeometryAtom, javax.media.j3d.PolygonAttributesRetained, javax.media.j3d.LineAttributesRetained, javax.media.j3d.PointAttributesRetained, javax.media.j3d.MaterialRetained, javax.media.j3d.ColoringAttributesRetained, javax.media.j3d.TransparencyAttributesRetained, javax.media.j3d.RenderingAttributesRetained, javax.media.j3d.TextureUnitStateRetained[], javax.media.j3d.Transform3D[], int[], javax.media.j3d.RenderBin)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RenderMolecule(p0 : GeometryAtom, p1 : PolygonAttributesRetained?, p2 : LineAttributesRetained?, p3 : PointAttributesRetained?, p4 : MaterialRetained?, p5 : ColoringAttributesRetained?, p6 : TransparencyAttributesRetained?, p7 : RenderingAttributesRetained?, p8 : Array&lt;out TextureUnitStateRetained?&gt;?, p9 : Array&lt;out Transform3D?&gt;?, p10 : IntArray?, p11 : RenderBin?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderMolecule void addRenderAtom(javax.media.j3d.RenderAtom, javax.media.j3d.RenderBin)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addRenderAtom(p0 : RenderAtom, p1 : RenderBin?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderMolecule boolean canBeInDisplayList(javax.media.j3d.GeometryRetained, javax.media.j3d.GeometryAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun canBeInDisplayList(p0 : GeometryRetained, p1 : GeometryAtom) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderMolecule void checkEquivalenceWithLeftNeighbor(javax.media.j3d.RenderMolecule, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkEquivalenceWithLeftNeighbor(p0 : RenderMolecule, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderMolecule boolean equals(javax.media.j3d.RenderAtom, javax.media.j3d.PolygonAttributesRetained, javax.media.j3d.LineAttributesRetained, javax.media.j3d.PointAttributesRetained, javax.media.j3d.MaterialRetained, javax.media.j3d.ColoringAttributesRetained, javax.media.j3d.TransparencyAttributesRetained, javax.media.j3d.Transform3D[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : RenderAtom, p1 : PolygonAttributesRetained?, p2 : LineAttributesRetained?, p3 : PointAttributesRetained?, p4 : MaterialRetained?, p5 : ColoringAttributesRetained?, p6 : TransparencyAttributesRetained?, p7 : Array&lt;out Transform3D?&gt;?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderMolecule int evalRinfoGroupType(javax.media.j3d.RenderAtomListInfo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun evalRinfoGroupType(p0 : RenderAtomListInfo) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderMolecule boolean geoNotAltered(javax.media.j3d.GeometryArrayRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun geoNotAltered(p0 : GeometryArrayRetained) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderMolecule javax.media.j3d.VirtualUniverse getVirtualUniverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getVirtualUniverse() : VirtualUniverse?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderMolecule boolean reloadColor(javax.media.j3d.RenderMolecule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reloadColor(p0 : RenderMolecule) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderMolecule void removeRenderAtom(javax.media.j3d.RenderAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeRenderAtom(p0 : RenderAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderMolecule void reset(javax.media.j3d.GeometryAtom, javax.media.j3d.PolygonAttributesRetained, javax.media.j3d.LineAttributesRetained, javax.media.j3d.PointAttributesRetained, javax.media.j3d.MaterialRetained, javax.media.j3d.ColoringAttributesRetained, javax.media.j3d.TransparencyAttributesRetained, javax.media.j3d.RenderingAttributesRetained, javax.media.j3d.TextureUnitStateRetained[], javax.media.j3d.Transform3D[], int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reset(p0 : GeometryAtom, p1 : PolygonAttributesRetained?, p2 : LineAttributesRetained?, p3 : PointAttributesRetained?, p4 : MaterialRetained?, p5 : ColoringAttributesRetained?, p6 : TransparencyAttributesRetained?, p7 : RenderingAttributesRetained?, p8 : Array&lt;out TextureUnitStateRetained?&gt;?, p9 : Array&lt;out Transform3D?&gt;?, p10 : IntArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderMolecule boolean transparencyEquivalent(javax.media.j3d.RenderMolecule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transparencyEquivalent(p0 : RenderMolecule) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderMolecule void transparentSortRender(javax.media.j3d.Canvas3D, int, javax.media.j3d.TransparentRenderingInfo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transparentSortRender(p0 : Canvas3D, p1 : Int, p2 : TransparentRenderingInfo) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderMolecule void updateAttributes(javax.media.j3d.Canvas3D, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateAttributes(p0 : Canvas3D, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderMolecule void updateTransparencyAttributes(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTransparencyAttributes(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RendererStructure void removeNodes(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodes(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingAttributes javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingAttributes void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingAttributesRetained boolean equivalent(javax.media.j3d.RenderingAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equivalent(p0 : RenderingAttributesRetained?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingAttributesRetained void set(javax.media.j3d.RenderingAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : RenderingAttributesRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingAttributesStructure void removeNodes(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodes(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingAttributesStructure void updateNodeComponent(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateNodeComponent(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingAttributesStructure void updateTextureAttributes(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTextureAttributes(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void addObjArrayToFreeList(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addObjArrayToFreeList(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure double[] backClipDistanceInVworld(javax.media.j3d.BoundingSphere, javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun backClipDistanceInVworld(p0 : BoundingSphere?, p1 : View?) : DoubleArray?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void clearViewSpecificInfo(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearViewSpecificInfo(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure javax.media.j3d.BackgroundRetained getApplicationBackground(javax.media.j3d.BoundingSphere, javax.media.j3d.Locale, javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getApplicationBackground(p0 : BoundingSphere?, p1 : Locale?, p2 : View?) : BackgroundRetained?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure java.lang.Object[] getInfluencingAppearance(javax.media.j3d.RenderAtom, javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingAppearance(p0 : RenderAtom, p1 : View?) : Array&lt;out Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure javax.media.j3d.FogRetained getInfluencingFog(javax.media.j3d.RenderAtom, javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingFog(p0 : RenderAtom, p1 : View?) : FogRetained?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure javax.media.j3d.LightRetained[] getInfluencingLights(javax.media.j3d.RenderAtom, javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingLights(p0 : RenderAtom, p1 : View?) : Array&lt;out LightRetained?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure javax.media.j3d.ModelClipRetained getInfluencingModelClip(javax.media.j3d.RenderAtom, javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInfluencingModelClip(p0 : RenderAtom, p1 : View?) : ModelClipRetained?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void initViewSpecificInfo(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initViewSpecificInfo(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void insertNodes(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertNodes(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure boolean isAltAppScopedToThisView(java.lang.Object, javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAltAppScopedToThisView(p0 : Any, p1 : View?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure boolean isBgScopedToThisView(java.lang.Object, javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isBgScopedToThisView(p0 : Any, p1 : View?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure boolean isClipScopedToThisView(java.lang.Object, javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isClipScopedToThisView(p0 : Any, p1 : View?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure boolean isFogScopedToThisView(java.lang.Object, javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isFogScopedToThisView(p0 : Any, p1 : View?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure boolean isLightScopedToThisView(java.lang.Object, javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isLightScopedToThisView(p0 : Any, p1 : View?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure boolean isMclipScopedToThisView(java.lang.Object, javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isMclipScopedToThisView(p0 : Any, p1 : View?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure int processAltApps(java.util.ArrayList, javax.media.j3d.RenderAtom, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processAltApps(p0 : ArrayList, p1 : RenderAtom, p2 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure int processBgs(java.util.ArrayList, javax.media.j3d.BoundingSphere, int, javax.media.j3d.Locale)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processBgs(p0 : ArrayList, p1 : BoundingSphere?, p2 : Int, p3 : Locale?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure int processClips(java.util.ArrayList, javax.media.j3d.BoundingSphere, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processClips(p0 : ArrayList, p1 : BoundingSphere?, p2 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure int processFogs(java.util.ArrayList, javax.media.j3d.RenderAtom, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processFogs(p0 : ArrayList, p1 : RenderAtom, p2 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure int processLights(java.util.ArrayList, javax.media.j3d.RenderAtom, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processLights(p0 : ArrayList, p1 : RenderAtom, p2 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure int processModelClips(java.util.ArrayList, javax.media.j3d.RenderAtom, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processModelClips(p0 : ArrayList, p1 : RenderAtom, p2 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void processSwitchChanged(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processSwitchChanged(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void removeNodes(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodes(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void updateAltApp(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateAltApp(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void updateBackground(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateBackground(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void updateBoundingLeaf(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateBoundingLeaf(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void updateClip(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateClip(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void updateFog(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateFog(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void updateLight(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateLight(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void updateModelClip(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateModelClip(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void updateMorph(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateMorph(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void updateOrderedGroupInserted(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateOrderedGroupInserted(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void updateOrderedGroupsRemoved(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateOrderedGroupsRemoved(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void updateOrientedShape3D(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateOrientedShape3D(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void updateShape3D(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateShape3D(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RenderingEnvironmentStructure void updateViewSpecificGroupChanged(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateViewSpecificGroupChanged(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotPosPathInterpolator RotPosPathInterpolator(javax.media.j3d.Alpha, javax.media.j3d.TransformGroup, javax.media.j3d.Transform3D, float[], javax.vecmath.Quat4f[], javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RotPosPathInterpolator(p0 : Alpha?, p1 : TransformGroup?, p2 : Transform3D, p3 : FloatArray, p4 : Array&lt;out Quat4f?&gt;, p5 : Array&lt;out Point3f?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotPosPathInterpolator javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotPosPathInterpolator void computeTransform(float, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeTransform(p0 : Float, p1 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotPosPathInterpolator void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotPosPathInterpolator void getPosition(int, javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPosition(p0 : Int, p1 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotPosPathInterpolator void getQuat(int, javax.vecmath.Quat4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getQuat(p0 : Int, p1 : Quat4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotPosPathInterpolator void setPathArrays(float[], javax.vecmath.Quat4f[], javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPathArrays(p0 : FloatArray, p1 : Array&lt;out Quat4f?&gt;, p2 : Array&lt;out Point3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotPosPathInterpolator void setPathArrays(javax.vecmath.Quat4f[], javax.vecmath.Point3f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPathArrays(p0 : Array&lt;out Quat4f?&gt;, p1 : Array&lt;out Point3f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotPosScalePathInterpolator RotPosScalePathInterpolator(javax.media.j3d.Alpha, javax.media.j3d.TransformGroup, javax.media.j3d.Transform3D, float[], javax.vecmath.Quat4f[], javax.vecmath.Point3f[], float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RotPosScalePathInterpolator(p0 : Alpha?, p1 : TransformGroup?, p2 : Transform3D, p3 : FloatArray, p4 : Array&lt;out Quat4f?&gt;, p5 : Array&lt;out Point3f?&gt;, p6 : FloatArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotPosScalePathInterpolator javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotPosScalePathInterpolator void computeTransform(float, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeTransform(p0 : Float, p1 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotPosScalePathInterpolator void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotPosScalePathInterpolator void getPosition(int, javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPosition(p0 : Int, p1 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotPosScalePathInterpolator void getQuat(int, javax.vecmath.Quat4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getQuat(p0 : Int, p1 : Quat4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotPosScalePathInterpolator void setPathArrays(float[], javax.vecmath.Quat4f[], javax.vecmath.Point3f[], float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPathArrays(p0 : FloatArray, p1 : Array&lt;out Quat4f?&gt;, p2 : Array&lt;out Point3f?&gt;, p3 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotPosScalePathInterpolator void setPathArrays(javax.vecmath.Quat4f[], javax.vecmath.Point3f[], float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPathArrays(p0 : Array&lt;out Quat4f?&gt;, p1 : Array&lt;out Point3f?&gt;, p2 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotationInterpolator RotationInterpolator(javax.media.j3d.Alpha, javax.media.j3d.TransformGroup, javax.media.j3d.Transform3D, float, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RotationInterpolator(p0 : Alpha?, p1 : TransformGroup?, p2 : Transform3D, p3 : Float, p4 : Float)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotationInterpolator javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotationInterpolator void computeTransform(float, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeTransform(p0 : Float, p1 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotationInterpolator void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotationPathInterpolator RotationPathInterpolator(javax.media.j3d.Alpha, javax.media.j3d.TransformGroup, javax.media.j3d.Transform3D, float[], javax.vecmath.Quat4f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RotationPathInterpolator(p0 : Alpha?, p1 : TransformGroup?, p2 : Transform3D, p3 : FloatArray, p4 : Array&lt;out Quat4f?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotationPathInterpolator javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotationPathInterpolator void computeTransform(float, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeTransform(p0 : Float, p1 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotationPathInterpolator void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotationPathInterpolator void getQuat(int, javax.vecmath.Quat4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getQuat(p0 : Int, p1 : Quat4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotationPathInterpolator void setPathArrays(float[], javax.vecmath.Quat4f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPathArrays(p0 : FloatArray, p1 : Array&lt;out Quat4f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.RotationPathInterpolator void setPathArrays(javax.vecmath.Quat4f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPathArrays(p0 : Array&lt;out Quat4f?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ScaleInterpolator ScaleInterpolator(javax.media.j3d.Alpha, javax.media.j3d.TransformGroup, javax.media.j3d.Transform3D, float, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ScaleInterpolator(p0 : Alpha?, p1 : TransformGroup?, p2 : Transform3D, p3 : Float, p4 : Float)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ScaleInterpolator javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ScaleInterpolator void computeTransform(float, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeTransform(p0 : Float, p1 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ScaleInterpolator void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphObject void duplicateSceneGraphObject(javax.media.j3d.SceneGraphObject)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateSceneGraphObject(p0 : SceneGraphObject) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphObject javax.media.j3d.NodeComponent getNodeComponent(javax.media.j3d.NodeComponent, boolean, java.util.Hashtable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNodeComponent(p0 : NodeComponent?, p1 : Boolean, p2 : Hashtable?) : NodeComponent?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphObjectRetained java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphObjectRetained void compile(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compile(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphObjectRetained void doSetLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doSetLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphObjectRetained javax.media.j3d.VirtualUniverse getVirtualUniverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getVirtualUniverse() : VirtualUniverse?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphObjectRetained void merge(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun merge(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphObjectRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphObjectRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphPath SceneGraphPath(javax.media.j3d.Locale, javax.media.j3d.Node[], javax.media.j3d.Node)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SceneGraphPath(p0 : Locale?, p1 : Array&lt;out Node?&gt;, p2 : Node?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphPath SceneGraphPath(javax.media.j3d.SceneGraphPath)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SceneGraphPath(p0 : SceneGraphPath)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphPath boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphPath boolean equals(javax.media.j3d.SceneGraphPath)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : SceneGraphPath?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphPath javax.media.j3d.Transform3D getTransform()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTransform() : Transform3D&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphPath boolean isSamePath(javax.media.j3d.SceneGraphPath)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isSamePath(p0 : SceneGraphPath?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphPath void set(javax.media.j3d.SceneGraphPath)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : SceneGraphPath) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphPath void setIntersectPointDis(javax.vecmath.Point4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setIntersectPointDis(p0 : Point4d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphPath void setNodes(javax.media.j3d.Node[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNodes(p0 : Array&lt;out Node?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SceneGraphPath void setTransform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTransform(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Screen3D Screen3D(java.awt.GraphicsConfiguration, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Screen3D(p0 : GraphicsConfiguration, p1 : Boolean)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Screen3D void getHeadTrackerToLeftImagePlate(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getHeadTrackerToLeftImagePlate(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Screen3D void getHeadTrackerToRightImagePlate(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getHeadTrackerToRightImagePlate(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Screen3D java.awt.Dimension getSize()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSize() : Dimension&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Screen3D java.awt.Dimension getSize(java.awt.Dimension)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSize(p0 : Dimension?) : Dimension&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Screen3D void getTrackerBaseToImagePlate(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTrackerBaseToImagePlate(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Screen3D void setHeadTrackerToLeftImagePlate(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setHeadTrackerToLeftImagePlate(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Screen3D void setHeadTrackerToRightImagePlate(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setHeadTrackerToRightImagePlate(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Screen3D void setSize(java.awt.Dimension)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setSize(p0 : Dimension) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Screen3D void setTrackerBaseToImagePlate(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTrackerBaseToImagePlate(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Sensor javax.media.j3d.SensorRead getCurrentSensorRead()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCurrentSensorRead() : SensorRead&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Sensor void getHotspot(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getHotspot(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Sensor void getPredictedRead(javax.media.j3d.Transform3D, long, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPredictedRead(p0 : Transform3D, p1 : Long, p2 : Int, p3 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Sensor void lastRead(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastRead(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Sensor void lastRead(javax.media.j3d.Transform3D, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastRead(p0 : Transform3D, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Sensor void setNextSensorRead(long, javax.media.j3d.Transform3D, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNextSensorRead(p0 : Long, p1 : Transform3D, p2 : IntArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Sensor void setNextSensorRead(javax.media.j3d.SensorRead)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNextSensorRead(p0 : SensorRead) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SensorRead void get(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SensorRead void set(javax.media.j3d.SensorRead)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : SensorRead) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SensorRead void set(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SensorRead void setButtons(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setButtons(p0 : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3D javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3D void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3D void duplicateNode(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateNode(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3D javax.media.j3d.Appearance getAppearance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAppearance() : Appearance?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3D javax.media.j3d.Bounds getBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3D javax.media.j3d.Bounds getCollisionBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCollisionBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3D javax.media.j3d.Geometry getGeometry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getGeometry() : Geometry?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3D javax.media.j3d.Geometry getGeometry(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getGeometry(p0 : Int) : Geometry?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3D boolean intersect(javax.media.j3d.SceneGraphPath, javax.media.j3d.PickRay, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : SceneGraphPath, p1 : PickRay, p2 : DoubleArray?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3D boolean intersect(javax.media.j3d.SceneGraphPath, javax.media.j3d.PickShape)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : SceneGraphPath, p1 : PickShape) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3D boolean intersect(javax.media.j3d.SceneGraphPath, javax.media.j3d.PickShape, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : SceneGraphPath, p1 : PickShape, p2 : DoubleArray?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DCompileRetained Shape3DCompileRetained(javax.media.j3d.Shape3DRetained[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Shape3DCompileRetained(p0 : Array&lt;out Shape3DRetained?&gt;, p1 : Int, p2 : Int)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DCompileRetained javax.media.j3d.Bounds getBounds(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBounds(p0 : Int) : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DCompileRetained boolean intersect(javax.media.j3d.SceneGraphPath, javax.media.j3d.PickShape, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : SceneGraphPath, p1 : PickShape, p2 : DoubleArray?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained void checkEquivalenceClass(javax.media.j3d.Geometry, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkEquivalenceClass(p0 : Geometry?, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained void compile(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compile(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained void computeCombineBounds(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeCombineBounds(p0 : Bounds) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained void doSetLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doSetLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained javax.media.j3d.Appearance getAppearance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAppearance() : Appearance?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained javax.media.j3d.Bounds getBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained javax.media.j3d.Bounds getCollisionBounds(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCollisionBounds(p0 : Int) : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained javax.media.j3d.Bounds getEffectiveBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEffectiveBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained javax.media.j3d.GeometryAtom getGeomAtom(javax.media.j3d.Shape3DRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getGeomAtom(p0 : Shape3DRetained) : GeometryAtom?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained javax.media.j3d.GeometryAtom[] getGeomAtomsArray(java.util.ArrayList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getGeomAtomsArray(p0 : ArrayList) : Array&lt;out GeometryAtom?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained java.util.ArrayList getGeomAtomsList(java.util.ArrayList, java.util.ArrayList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getGeomAtomsList(p0 : ArrayList, p1 : ArrayList?) : ArrayList&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained javax.media.j3d.Geometry getGeometry(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getGeometry(p0 : Int, p1 : Int) : Geometry?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained javax.media.j3d.Bounds getLocalBounds(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLocalBounds(p0 : Bounds) : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained void getMirrorObjects(java.util.ArrayList, javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMirrorObjects(p0 : ArrayList, p1 : HashKey?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained javax.vecmath.Point3d getPoint3d()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPoint3d() : Point3d?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained void initMirrorShape3D(javax.media.j3d.SetLiveState, javax.media.j3d.MorphRetained, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initMirrorShape3D(p0 : SetLiveState, p1 : MorphRetained, p2 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained void initMirrorShape3D(javax.media.j3d.SetLiveState, javax.media.j3d.Shape3DRetained, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initMirrorShape3D(p0 : SetLiveState, p1 : Shape3DRetained, p2 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained void initializeGAtom(javax.media.j3d.Shape3DRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initializeGAtom(p0 : Shape3DRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained boolean intersect(javax.media.j3d.SceneGraphPath, javax.media.j3d.PickShape, double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : SceneGraphPath, p1 : PickShape, p2 : DoubleArray?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained boolean intersectGeometryList(javax.media.j3d.Shape3DRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectGeometryList(p0 : Shape3DRetained) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained boolean isAlphaEditable(javax.media.j3d.GeometryRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAlphaEditable(p0 : GeometryRetained?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained boolean isAlphaFrequentlyEditable(javax.media.j3d.GeometryRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAlphaFrequentlyEditable(p0 : GeometryRetained?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained boolean isEquivalent(javax.media.j3d.Shape3DRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isEquivalent(p0 : Shape3DRetained) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained void merge(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun merge(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained void searchGeometryAtoms(javax.media.j3d.UnorderList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun searchGeometryAtoms(p0 : UnorderList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained void setGeomAtom(javax.media.j3d.Shape3DRetained, javax.media.j3d.GeometryAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setGeomAtom(p0 : Shape3DRetained, p1 : GeometryAtom?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained void setMorphGeometry(javax.media.j3d.Geometry, java.util.ArrayList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setMorphGeometry(p0 : Geometry?, p1 : ArrayList) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained void updateCollidable(javax.media.j3d.HashKey[], boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateCollidable(p0 : Array&lt;out HashKey?&gt;?, p1 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained void updateImmediateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateImmediateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Shape3DRetained void updatePickable(javax.media.j3d.HashKey[], boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updatePickable(p0 : Array&lt;out HashKey?&gt;?, p1 : BooleanArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SharedGroup javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SharedGroup javax.media.j3d.Link[] getLinks()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLinks() : Array&lt;out Link?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SharedGroupRetained void childCheckSetLive(javax.media.j3d.NodeRetained, int, javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun childCheckSetLive(p0 : NodeRetained, p1 : Int, p2 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SharedGroupRetained void childDoSetLive(javax.media.j3d.NodeRetained, int, javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun childDoSetLive(p0 : NodeRetained?, p1 : Int, p2 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SharedGroupRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SharedGroupRetained javax.media.j3d.CachedTargets getCachedTargets(int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCachedTargets(p0 : Int, p1 : Int, p2 : Int) : CachedTargets?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SharedGroupRetained javax.media.j3d.TargetsInterface getClosestTargetsInterface(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getClosestTargetsInterface(p0 : Int) : TargetsInterface&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SharedGroupRetained javax.media.j3d.Link[] getLinks()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLinks() : Array&lt;out Link?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SharedGroupRetained java.util.ArrayList getTargetsData(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTargetsData(p0 : Int, p1 : Int) : ArrayList?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SharedGroupRetained void removeNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SharedGroupRetained void setAuxData(javax.media.j3d.SetLiveState, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setAuxData(p0 : SetLiveState, p1 : Int, p2 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SharedGroupRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SharedGroupRetained void setNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Sound void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Sound javax.media.j3d.BoundingLeaf getSchedulingBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSchedulingBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Sound javax.media.j3d.Bounds getSchedulingBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSchedulingBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundRenderer void activate(javax.media.j3d.SoundRetained, javax.media.j3d.SoundscapeRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun activate(p0 : SoundRetained?, p1 : SoundscapeRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundRenderer java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundRenderer void update(javax.media.j3d.SoundRetained, javax.media.j3d.SoundscapeRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun update(p0 : SoundRetained?, p1 : SoundscapeRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundRetained void changeAtomList(javax.media.j3d.SoundSchedulerAtom, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun changeAtomList(p0 : SoundSchedulerAtom?, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundRetained void getMirrorObjects(java.util.ArrayList, javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMirrorObjects(p0 : ArrayList, p1 : HashKey?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundRetained int getNumberOfChannelsUsed(javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNumberOfChannelsUsed(p0 : View?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundRetained javax.media.j3d.BoundingLeaf getSchedulingBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSchedulingBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundRetained javax.media.j3d.Bounds getSchedulingBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSchedulingBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundRetained void initMirrorObject(javax.media.j3d.SoundRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initMirrorObject(p0 : SoundRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundRetained boolean isPlaying(javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isPlaying(p0 : View?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundRetained boolean isPlayingSilently(javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isPlayingSilently(p0 : View?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundRetained boolean isReady(javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isReady(p0 : View?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundRetained void updateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void addPrioritizedSound(javax.media.j3d.SoundRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addPrioritizedSound(p0 : SoundRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void addSound(javax.media.j3d.SoundRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addSound(p0 : SoundRetained?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void attachSoundData(javax.media.j3d.SoundSchedulerAtom, javax.media.j3d.MediaContainer, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun attachSoundData(p0 : SoundSchedulerAtom, p1 : MediaContainer?, p2 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void changeNodeAttrib(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun changeNodeAttrib(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void changeNodeState(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun changeNodeState(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void clearSoundData(javax.media.j3d.SoundSchedulerAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearSoundData(p0 : SoundSchedulerAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler javax.media.j3d.SoundSchedulerAtom findSoundAtom(javax.media.j3d.SoundRetained, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findSoundAtom(p0 : SoundRetained?, p1 : Int) : SoundSchedulerAtom?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void insertNodes(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertNodes(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void muteSilentSound(javax.media.j3d.SoundSchedulerAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun muteSilentSound(p0 : SoundSchedulerAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void pause(javax.media.j3d.SoundSchedulerAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pause(p0 : SoundSchedulerAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void printAtomState(javax.media.j3d.SoundSchedulerAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun printAtomState(p0 : SoundSchedulerAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void processBoundingLeafChanged(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processBoundingLeafChanged(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void processImmediateNodes(java.lang.Object[], long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processImmediateNodes(p0 : Array&lt;out Any?&gt;, p1 : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void processSoundAtom(javax.media.j3d.SoundSchedulerAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processSoundAtom(p0 : SoundSchedulerAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void processViewSpecificGroupChanged(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processViewSpecificGroupChanged(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void receiveAWTEvent(java.awt.AWTEvent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun receiveAWTEvent(p0 : AWTEvent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void removeNodes(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodes(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void render(boolean, javax.media.j3d.SoundSchedulerAtom, javax.media.j3d.AuralAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun render(p0 : Boolean, p1 : SoundSchedulerAtom, p2 : AuralAttributesRetained?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void reset(javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reset(p0 : View?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void start(javax.media.j3d.SoundSchedulerAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun start(p0 : SoundSchedulerAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void turnOff(javax.media.j3d.SoundSchedulerAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun turnOff(p0 : SoundSchedulerAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void unpause(javax.media.j3d.SoundSchedulerAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun unpause(p0 : SoundSchedulerAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void update(javax.media.j3d.SoundSchedulerAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun update(p0 : SoundSchedulerAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void updateSoundParams(boolean, javax.media.j3d.SoundSchedulerAtom, javax.media.j3d.AuralAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateSoundParams(p0 : Boolean, p1 : SoundSchedulerAtom, p2 : AuralAttributesRetained?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void updateTransformChange(javax.media.j3d.UpdateTargets, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTransformChange(p0 : UpdateTargets, p1 : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void updateTransformedFields(javax.media.j3d.SoundRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTransformedFields(p0 : SoundRetained?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundScheduler void updateXformedParams(boolean, javax.media.j3d.SoundSchedulerAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateXformedParams(p0 : Boolean, p1 : SoundSchedulerAtom) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundStructure void changeNodeAttrib(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun changeNodeAttrib(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundStructure void changeNodeState(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun changeNodeState(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundStructure void insertNodes(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertNodes(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundStructure boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundStructure boolean isSoundScopedToView(java.lang.Object, javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isSoundScopedToView(p0 : Any, p1 : View?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundStructure boolean isSoundscapeScopedToView(java.lang.Object, javax.media.j3d.View)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isSoundscapeScopedToView(p0 : Any, p1 : View?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundStructure void loadSound(javax.media.j3d.SoundRetained, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun loadSound(p0 : SoundRetained, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundStructure void processSwitchChanged(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processSwitchChanged(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundStructure void removeNodes(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodes(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundStructure void updateTransformChange(javax.media.j3d.UpdateTargets, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTransformChange(p0 : UpdateTargets, p1 : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundStructure void updateViewSpecificGroupChanged(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateViewSpecificGroupChanged(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Soundscape javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Soundscape void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Soundscape void duplicateNode(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateNode(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Soundscape javax.media.j3d.BoundingLeaf getApplicationBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getApplicationBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Soundscape javax.media.j3d.Bounds getApplicationBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getApplicationBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Soundscape javax.media.j3d.AuralAttributes getAuralAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAuralAttributes() : AuralAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundscapeRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundscapeRetained javax.media.j3d.BoundingLeaf getApplicationBoundingLeaf()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getApplicationBoundingLeaf() : BoundingLeaf?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundscapeRetained javax.media.j3d.Bounds getApplicationBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getApplicationBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundscapeRetained javax.media.j3d.AuralAttributes getAuralAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAuralAttributes() : AuralAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundscapeRetained void getMirrorObjects(java.util.ArrayList, javax.media.j3d.HashKey)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getMirrorObjects(p0 : ArrayList, p1 : HashKey?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundscapeRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundscapeRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundscapeRetained void update(javax.media.j3d.SoundscapeRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun update(p0 : SoundscapeRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SoundscapeRetained void updateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SpotLight javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SpotLight void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SpotLight void getDirection(javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDirection(p0 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SpotLightRetained java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SpotLightRetained void getDirection(javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDirection(p0 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SpotLightRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SpotLightRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SpotLightRetained void updateMirrorObject(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateMirrorObject(p0 : Array&lt;out Any?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Switch Switch(int, java.util.BitSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Switch(p0 : Int, p1 : BitSet)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Switch javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Switch javax.media.j3d.Node currentChild()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun currentChild() : Node?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Switch void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Switch void setChildMask(java.util.BitSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setChildMask(p0 : BitSet) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SwitchRetained void childDoSetLive(javax.media.j3d.NodeRetained, int, javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun childDoSetLive(p0 : NodeRetained?, p1 : Int, p2 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SwitchRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SwitchRetained void compile(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compile(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SwitchRetained void computeCombineBounds(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeCombineBounds(p0 : Bounds) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SwitchRetained javax.media.j3d.Node currentChild()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun currentChild() : Node?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SwitchRetained javax.media.j3d.CachedTargets getCachedTargets(int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCachedTargets(p0 : Int, p1 : Int, p2 : Int) : CachedTargets?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SwitchRetained java.util.ArrayList getTargetsData(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTargetsData(p0 : Int, p1 : Int) : ArrayList?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SwitchRetained void removeNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SwitchRetained void setAuxData(javax.media.j3d.SetLiveState, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setAuxData(p0 : SetLiveState, p1 : Int, p2 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SwitchRetained void setChildMask(java.util.BitSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setChildMask(p0 : BitSet) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SwitchRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SwitchRetained void setNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SwitchValueInterpolator SwitchValueInterpolator(javax.media.j3d.Alpha, javax.media.j3d.Switch)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SwitchValueInterpolator(p0 : Alpha?, p1 : Switch)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SwitchValueInterpolator javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.SwitchValueInterpolator void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Targets javax.media.j3d.CachedTargets snapShotAdd(javax.media.j3d.CachedTargets)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun snapShotAdd(p0 : CachedTargets?) : CachedTargets&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Targets javax.media.j3d.CachedTargets snapShotInit()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun snapShotInit() : CachedTargets&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Targets javax.media.j3d.CachedTargets snapShotRemove(javax.media.j3d.CachedTargets)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun snapShotRemove(p0 : CachedTargets?) : CachedTargets&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TargetsInterface javax.media.j3d.CachedTargets getCachedTargets(int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCachedTargets(p0 : Int, p1 : Int, p2 : Int) : CachedTargets?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TargetsInterface java.util.ArrayList getTargetsData(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTargetsData(p0 : Int, p1 : Int) : ArrayList?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TexCoordGeneration javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TexCoordGeneration void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TexCoordGeneration void getPlaneQ(javax.vecmath.Vector4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPlaneQ(p0 : Vector4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TexCoordGeneration void getPlaneR(javax.vecmath.Vector4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPlaneR(p0 : Vector4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TexCoordGeneration void getPlaneS(javax.vecmath.Vector4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPlaneS(p0 : Vector4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TexCoordGeneration void getPlaneT(javax.vecmath.Vector4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPlaneT(p0 : Vector4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TexCoordGenerationRetained java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TexCoordGenerationRetained boolean equivalent(javax.media.j3d.TexCoordGenerationRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equivalent(p0 : TexCoordGenerationRetained?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TexCoordGenerationRetained void getPlaneQ(javax.vecmath.Vector4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPlaneQ(p0 : Vector4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TexCoordGenerationRetained void getPlaneR(javax.vecmath.Vector4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPlaneR(p0 : Vector4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TexCoordGenerationRetained void getPlaneS(javax.vecmath.Vector4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPlaneS(p0 : Vector4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TexCoordGenerationRetained void getPlaneT(javax.vecmath.Vector4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPlaneT(p0 : Vector4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TexCoordGenerationRetained void set(javax.media.j3d.TexCoordGenerationRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : TexCoordGenerationRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TexCoordGenerationRetained void updateNative(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateNative(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Text3D javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Text3D void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Text3D void getBoundingBox(javax.media.j3d.BoundingBox)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBoundingBox(p0 : BoundingBox) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Text3D void getPosition(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPosition(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Text3DRenderMethod boolean render(javax.media.j3d.RenderMolecule, javax.media.j3d.Canvas3D, int, javax.media.j3d.RenderAtomListInfo, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun render(p0 : RenderMolecule, p1 : Canvas3D, p2 : Int, p3 : RenderAtomListInfo?, p4 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Text3DRetained void execute(javax.media.j3d.Canvas3D, javax.media.j3d.RenderAtom, boolean, boolean, float, boolean, int, boolean, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun execute(p0 : Canvas3D, p1 : RenderAtom?, p2 : Boolean, p3 : Boolean, p4 : Float, p5 : Boolean, p6 : Int, p7 : Boolean, p8 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Text3DRetained void getBoundingBox(javax.media.j3d.BoundingBox)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBoundingBox(p0 : BoundingBox) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Text3DRetained void getPosition(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPosition(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Text3DRetained java.util.ArrayList getUniqueSource(java.util.ArrayList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getUniqueSource(p0 : ArrayList) : ArrayList&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Text3DRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Text3DRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Text3DRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture2D javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture2D void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture2D void duplicateNodeComponent(javax.media.j3d.NodeComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateNodeComponent(p0 : NodeComponent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture2D javax.media.j3d.ImageComponent2D getDetailImage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDetailImage() : ImageComponent2D?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture2DRetained javax.media.j3d.ImageComponent2D getDetailImage()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getDetailImage() : ImageComponent2D?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture2DRetained void initDetailImage(javax.media.j3d.ImageComponent2D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initDetailImage(p0 : ImageComponent2D?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture2DRetained void initDetailTextureFunc(float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initDetailTextureFunc(p0 : FloatArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture2DRetained void initDetailTextureFunc(float[], float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initDetailTextureFunc(p0 : FloatArray?, p1 : FloatArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture2DRetained void initDetailTextureFunc(javax.vecmath.Point2f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initDetailTextureFunc(p0 : Array&lt;out Point2f?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture2DRetained void updateNative(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateNative(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture2DRetained void updateTextureFields(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTextureFields(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture2DRetained void updateTextureImage(javax.media.j3d.Canvas3D, int, int, int, int, int, int, int, int, byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTextureImage(p0 : Canvas3D, p1 : Int, p2 : Int, p3 : Int, p4 : Int, p5 : Int, p6 : Int, p7 : Int, p8 : Int, p9 : ByteArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture2DRetained void updateTextureSubImage(javax.media.j3d.Canvas3D, int, int, int, int, int, int, int, int, int, int, int, byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTextureSubImage(p0 : Canvas3D, p1 : Int, p2 : Int, p3 : Int, p4 : Int, p5 : Int, p6 : Int, p7 : Int, p8 : Int, p9 : Int, p10 : Int, p11 : Int, p12 : ByteArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture3D javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture3D void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture3D void duplicateNodeComponent(javax.media.j3d.NodeComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateNodeComponent(p0 : NodeComponent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture3DRetained void reloadTextureImage(javax.media.j3d.Canvas3D, int, int, javax.media.j3d.ImageComponentRetained, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reloadTextureImage(p0 : Canvas3D, p1 : Int, p2 : Int, p3 : ImageComponentRetained, p4 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture3DRetained void reloadTextureSubImage(javax.media.j3d.Canvas3D, int, int, javax.media.j3d.ImageComponentUpdateInfo, javax.media.j3d.ImageComponentRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reloadTextureSubImage(p0 : Canvas3D, p1 : Int, p2 : Int, p3 : ImageComponentUpdateInfo, p4 : ImageComponentRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture3DRetained void updateTextureBoundary(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTextureBoundary(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture3DRetained void updateTextureDimensions(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTextureDimensions(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture void getBoundaryColor(javax.vecmath.Color4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBoundaryColor(p0 : Color4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture javax.media.j3d.ImageComponent getImage(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImage(p0 : Int) : ImageComponent?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture javax.media.j3d.ImageComponent[] getImages()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImages() : Array&lt;out ImageComponent?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture void getLodOffset(javax.vecmath.Tuple3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLodOffset(p0 : Tuple3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture void setFilter4Func(float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setFilter4Func(p0 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture void setImage(int, javax.media.j3d.ImageComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setImage(p0 : Int, p1 : ImageComponent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture void setImages(javax.media.j3d.ImageComponent[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setImages(p0 : Array&lt;out ImageComponent?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Texture void setLodOffset(javax.vecmath.Tuple3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLodOffset(p0 : Tuple3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureAttributes TextureAttributes(int, javax.media.j3d.Transform3D, javax.vecmath.Color4f, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TextureAttributes(p0 : Int, p1 : Transform3D, p2 : Color4f?, p3 : Int)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureAttributes javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureAttributes void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureAttributes void getTextureBlendColor(javax.vecmath.Color4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureBlendColor(p0 : Color4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureAttributes void getTextureTransform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureTransform(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureAttributes void setTextureTransform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTextureTransform(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureAttributesRetained java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureAttributesRetained boolean equivalent(javax.media.j3d.TextureAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equivalent(p0 : TextureAttributesRetained?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureAttributesRetained void getTextureBlendColor(javax.vecmath.Color4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureBlendColor(p0 : Color4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureAttributesRetained void getTextureTransform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureTransform(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureAttributesRetained void initCombineMode(javax.media.j3d.TextureAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initCombineMode(p0 : TextureAttributesRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureAttributesRetained void initTextureColorTable(int[][])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initTextureColorTable(p0 : Array&lt;out IntArray?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureAttributesRetained void initTextureTransform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initTextureTransform(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureAttributesRetained void set(javax.media.j3d.TextureAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : TextureAttributesRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureAttributesRetained void setTextureTransform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTextureTransform(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureAttributesRetained void updateNative(javax.media.j3d.Canvas3D, boolean, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateNative(p0 : Canvas3D, p1 : Boolean, p2 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureBin javax.media.j3d.RenderMolecule addAll(java.util.HashMap, java.util.HashMap, javax.media.j3d.RenderMolecule, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(p0 : HashMap?, p1 : HashMap, p2 : RenderMolecule?, p3 : Boolean) : RenderMolecule?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureBin void addRenderMolecule(javax.media.j3d.RenderMolecule, javax.media.j3d.RenderBin)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addRenderMolecule(p0 : RenderMolecule, p1 : RenderBin?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureBin void changeLists(javax.media.j3d.RenderMolecule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun changeLists(p0 : RenderMolecule) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureBin boolean equals(javax.media.j3d.TextureUnitStateRetained[], javax.media.j3d.RenderAtom)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Array&lt;out TextureUnitStateRetained?&gt;?, p1 : RenderAtom) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureBin javax.media.j3d.RenderMolecule insertRenderMolecule(javax.media.j3d.RenderMolecule, javax.media.j3d.RenderMolecule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertRenderMolecule(p0 : RenderMolecule, p1 : RenderMolecule) : RenderMolecule?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureBin void markDlistAsDirty(javax.media.j3d.RenderMolecule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun markDlistAsDirty(p0 : RenderMolecule) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureBin void multiPassRender(javax.media.j3d.Canvas3D, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun multiPassRender(p0 : Canvas3D, p1 : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureBin javax.media.j3d.RenderMolecule removeOneRM(javax.media.j3d.RenderMolecule, java.util.HashMap, javax.media.j3d.RenderMolecule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeOneRM(p0 : RenderMolecule, p1 : HashMap?, p2 : RenderMolecule?) : RenderMolecule?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureBin void removeRenderMolecule(javax.media.j3d.RenderMolecule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeRenderMolecule(p0 : RenderMolecule) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureBin void render(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun render(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureBin void render(javax.media.j3d.Canvas3D, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun render(p0 : Canvas3D, p1 : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureBin void renderList(javax.media.j3d.Canvas3D, int, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun renderList(p0 : Canvas3D?, p1 : Int, p2 : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureBin void renderList(javax.media.j3d.Canvas3D, int, javax.media.j3d.RenderMolecule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun renderList(p0 : Canvas3D?, p1 : Int, p2 : RenderMolecule?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureBin void renderList(javax.media.j3d.Canvas3D, int, javax.media.j3d.TransparentRenderingInfo)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun renderList(p0 : Canvas3D?, p1 : Int, p2 : TransparentRenderingInfo) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureBin void updateAttributes(javax.media.j3d.Canvas3D, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateAttributes(p0 : Canvas3D, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureCubeMap void duplicateNodeComponent(javax.media.j3d.NodeComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateNodeComponent(p0 : NodeComponent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureCubeMap javax.media.j3d.ImageComponent getImage(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImage(p0 : Int, p1 : Int) : ImageComponent?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureCubeMap javax.media.j3d.ImageComponent[] getImages(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImages(p0 : Int) : Array&lt;out ImageComponent?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureCubeMap void setImage(int, int, javax.media.j3d.ImageComponent2D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setImage(p0 : Int, p1 : Int, p2 : ImageComponent2D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureCubeMap void setImage(int, javax.media.j3d.ImageComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setImage(p0 : Int, p1 : ImageComponent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureCubeMap void setImages(int, javax.media.j3d.ImageComponent2D[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setImages(p0 : Int, p1 : Array&lt;out ImageComponent2D?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureCubeMap void setImages(javax.media.j3d.ImageComponent[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setImages(p0 : Array&lt;out ImageComponent?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureCubeMapRetained javax.media.j3d.ImageComponent getImage(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImage(p0 : Int, p1 : Int) : ImageComponent?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureCubeMapRetained javax.media.j3d.ImageComponent[] getImages(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImages(p0 : Int) : Array&lt;out ImageComponent?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureCubeMapRetained void initImage(int, int, javax.media.j3d.ImageComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initImage(p0 : Int, p1 : Int, p2 : ImageComponent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureCubeMapRetained void initImages(int, javax.media.j3d.ImageComponent[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initImages(p0 : Int, p1 : Array&lt;out ImageComponent?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureCubeMapRetained void setImage(int, int, javax.media.j3d.ImageComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setImage(p0 : Int, p1 : Int, p2 : ImageComponent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureCubeMapRetained void setImages(int, javax.media.j3d.ImageComponent[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setImages(p0 : Int, p1 : Array&lt;out ImageComponent?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureCubeMapRetained void updateTextureDimensions(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTextureDimensions(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureCubeMapRetained void updateTextureImage(javax.media.j3d.Canvas3D, int, int, int, int, int, int, int, int, byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTextureImage(p0 : Canvas3D, p1 : Int, p2 : Int, p3 : Int, p4 : Int, p5 : Int, p6 : Int, p7 : Int, p8 : Int, p9 : ByteArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureCubeMapRetained void updateTextureSubImage(javax.media.j3d.Canvas3D, int, int, int, int, int, int, int, int, int, int, int, byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTextureSubImage(p0 : Canvas3D, p1 : Int, p2 : Int, p3 : Int, p4 : Int, p5 : Int, p6 : Int, p7 : Int, p8 : Int, p9 : Int, p10 : Int, p11 : Int, p12 : ByteArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void bindTexture(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun bindTexture(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void checkImageSize(int, javax.media.j3d.ImageComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkImageSize(p0 : Int, p1 : ImageComponent?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void checkSizes(javax.media.j3d.ImageComponentRetained[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkSizes(p0 : Array&lt;out ImageComponentRetained?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained javax.media.j3d.ImageComponentRetained createNextLevelImage(javax.media.j3d.ImageComponentRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createNextLevelImage(p0 : ImageComponentRetained) : ImageComponentRetained&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void getBoundaryColor(javax.vecmath.Color4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBoundaryColor(p0 : Color4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained javax.media.j3d.ImageComponent getImage(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImage(p0 : Int) : ImageComponent?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained javax.media.j3d.ImageComponent[] getImages()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImages() : Array&lt;out ImageComponent?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void getLodOffset(javax.vecmath.Tuple3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLodOffset(p0 : Tuple3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void initFilter4Func(float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initFilter4Func(p0 : FloatArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void initImage(int, javax.media.j3d.ImageComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initImage(p0 : Int, p1 : ImageComponent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void initImages(javax.media.j3d.ImageComponent[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initImages(p0 : Array&lt;out ImageComponent?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void initSharpenTextureFunc(float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initSharpenTextureFunc(p0 : FloatArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void initSharpenTextureFunc(float[], float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initSharpenTextureFunc(p0 : FloatArray?, p1 : FloatArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void initSharpenTextureFunc(javax.vecmath.Point2f[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initSharpenTextureFunc(p0 : Array&lt;out Point2f?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void reloadTexture(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reloadTexture(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void reloadTextureImage(javax.media.j3d.Canvas3D, int, int, javax.media.j3d.ImageComponentRetained, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reloadTextureImage(p0 : Canvas3D, p1 : Int, p2 : Int, p3 : ImageComponentRetained, p4 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void reloadTextureSubImage(javax.media.j3d.Canvas3D, int, int, javax.media.j3d.ImageComponentUpdateInfo, javax.media.j3d.ImageComponentRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reloadTextureSubImage(p0 : Canvas3D, p1 : Int, p2 : Int, p3 : ImageComponentUpdateInfo, p4 : ImageComponentRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void setImage(int, javax.media.j3d.ImageComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setImage(p0 : Int, p1 : ImageComponent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void setImages(javax.media.j3d.ImageComponent[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setImages(p0 : Array&lt;out ImageComponent?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void updateNative(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateNative(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void updateTextureBoundary(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTextureBoundary(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void updateTextureDimensions(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTextureDimensions(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void updateTextureFields(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTextureFields(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void updateTextureImage(javax.media.j3d.Canvas3D, int, int, int, int, int, int, int, int, byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTextureImage(p0 : Canvas3D, p1 : Int, p2 : Int, p3 : Int, p4 : Int, p5 : Int, p6 : Int, p7 : Int, p8 : Int, p9 : ByteArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void updateTextureLOD(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTextureLOD(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureRetained void updateTextureSubImage(javax.media.j3d.Canvas3D, int, int, int, int, int, int, int, int, int, int, int, byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTextureSubImage(p0 : Canvas3D, p1 : Int, p2 : Int, p3 : Int, p4 : Int, p5 : Int, p6 : Int, p7 : Int, p8 : Int, p9 : Int, p10 : Int, p11 : Int, p12 : ByteArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitState javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitState void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitState void duplicateNodeComponent(javax.media.j3d.NodeComponent)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateNodeComponent(p0 : NodeComponent) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitState javax.media.j3d.TexCoordGeneration getTexCoordGeneration()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTexCoordGeneration() : TexCoordGeneration?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitState javax.media.j3d.Texture getTexture()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTexture() : Texture?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitState javax.media.j3d.TextureAttributes getTextureAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureAttributes() : TextureAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitStateRetained java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitStateRetained void copyMirrorUsers(javax.media.j3d.NodeComponentRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyMirrorUsers(p0 : NodeComponentRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitStateRetained boolean equals(javax.media.j3d.TextureUnitStateRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : TextureUnitStateRetained?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitStateRetained boolean equivalent(javax.media.j3d.TextureUnitStateRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equivalent(p0 : TextureUnitStateRetained?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitStateRetained javax.media.j3d.TexCoordGeneration getTexCoordGeneration()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTexCoordGeneration() : TexCoordGeneration?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitStateRetained javax.media.j3d.Texture getTexture()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTexture() : Texture?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitStateRetained javax.media.j3d.TextureAttributes getTextureAttributes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTextureAttributes() : TextureAttributes?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitStateRetained void initTexCoordGeneration(javax.media.j3d.TexCoordGeneration)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initTexCoordGeneration(p0 : TexCoordGeneration?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitStateRetained void initTexture(javax.media.j3d.Texture)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initTexture(p0 : Texture?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitStateRetained void initTextureAttributes(javax.media.j3d.TextureAttributes)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initTextureAttributes(p0 : TextureAttributes?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitStateRetained void removeMirrorUsers(javax.media.j3d.NodeComponentRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeMirrorUsers(p0 : NodeComponentRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitStateRetained void set(javax.media.j3d.TextureUnitStateRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : TextureUnitStateRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TextureUnitStateRetained void updateNative(int, javax.media.j3d.Canvas3D, boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateNative(p0 : Int, p1 : Canvas3D, p2 : Boolean, p3 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TimerThread void add(javax.media.j3d.WakeupOnElapsedTime)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : WakeupOnElapsedTime) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D Transform3D(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Transform3D(p0 : Transform3D)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D Transform3D(javax.vecmath.GMatrix)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Transform3D(p0 : GMatrix)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D Transform3D(javax.vecmath.Matrix3d, javax.vecmath.Vector3d, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Transform3D(p0 : Matrix3d, p1 : Vector3d, p2 : Double)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D Transform3D(javax.vecmath.Matrix3f, javax.vecmath.Vector3d, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Transform3D(p0 : Matrix3f, p1 : Vector3d, p2 : Double)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D Transform3D(javax.vecmath.Matrix3f, javax.vecmath.Vector3f, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Transform3D(p0 : Matrix3f, p1 : Vector3f, p2 : Float)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D Transform3D(javax.vecmath.Matrix4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Transform3D(p0 : Matrix4d)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D Transform3D(javax.vecmath.Matrix4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Transform3D(p0 : Matrix4f)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D Transform3D(javax.vecmath.Quat4d, javax.vecmath.Vector3d, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Transform3D(p0 : Quat4d, p1 : Vector3d, p2 : Double)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D Transform3D(javax.vecmath.Quat4f, javax.vecmath.Vector3d, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Transform3D(p0 : Quat4f, p1 : Vector3d, p2 : Double)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D Transform3D(javax.vecmath.Quat4f, javax.vecmath.Vector3f, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Transform3D(p0 : Quat4f, p1 : Vector3f, p2 : Float)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D Transform3D(double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Transform3D(p0 : DoubleArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D Transform3D(float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Transform3D(p0 : FloatArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D int compute_2X2(double, double, double, double[], double[], double[], double[], double[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compute_2X2(p0 : Double, p1 : Double, p2 : Double, p3 : DoubleArray, p4 : DoubleArray?, p5 : DoubleArray?, p6 : DoubleArray?, p7 : DoubleArray?, p8 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D int compute_qr(double[], double[], double[], double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compute_qr(p0 : DoubleArray, p1 : DoubleArray, p2 : DoubleArray, p3 : DoubleArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D double compute_rot(double, double, double[], double[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compute_rot(p0 : Double, p1 : Double, p2 : DoubleArray, p3 : DoubleArray, p4 : Int, p5 : Int) : Double&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void compute_svd(javax.media.j3d.Transform3D, double[], double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compute_svd(p0 : Transform3D, p1 : DoubleArray?, p2 : DoubleArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D boolean equals(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Transform3D?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void get(javax.vecmath.Matrix3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Matrix3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D double get(javax.vecmath.Matrix3d, javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Matrix3d, p1 : Vector3d) : Double&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void get(javax.vecmath.Matrix3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Matrix3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D double get(javax.vecmath.Matrix3f, javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Matrix3f, p1 : Vector3d) : Double&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D float get(javax.vecmath.Matrix3f, javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Matrix3f, p1 : Vector3f) : Float&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void get(javax.vecmath.Matrix4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Matrix4d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void get(javax.vecmath.Matrix4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Matrix4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void get(javax.vecmath.Quat4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Quat4d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D double get(javax.vecmath.Quat4d, javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Quat4d, p1 : Vector3d) : Double&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void get(javax.vecmath.Quat4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Quat4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D double get(javax.vecmath.Quat4f, javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Quat4f, p1 : Vector3d) : Double&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D float get(javax.vecmath.Quat4f, javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Quat4f, p1 : Vector3f) : Float&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void get(javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Vector3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void get(javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void get(double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : DoubleArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void get(float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void getRotation(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRotation(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void getRotationScale(javax.vecmath.Matrix3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRotationScale(p0 : Matrix3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void getRotationScale(javax.vecmath.Matrix3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRotationScale(p0 : Matrix3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void getScale(javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getScale(p0 : Vector3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void getWithLock(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getWithLock(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void invertAffine(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun invertAffine(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void invertGeneral(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun invertGeneral(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void lookAt(javax.vecmath.Point3d, javax.vecmath.Point3d, javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lookAt(p0 : Point3d, p1 : Point3d, p2 : Vector3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void mat_mul(double[], double[], double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mat_mul(p0 : DoubleArray, p1 : DoubleArray, p2 : DoubleArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D double max3(double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun max3(p0 : DoubleArray) : Double&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void mul(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mul(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void mul(javax.media.j3d.Transform3D, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mul(p0 : Transform3D, p1 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void mulInverse(javax.media.j3d.Transform3D, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mulInverse(p0 : Transform3D, p1 : Transform3D?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void mulTransposeLeft(javax.media.j3d.Transform3D, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mulTransposeLeft(p0 : Transform3D?, p1 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void mulTransposeRight(javax.media.j3d.Transform3D, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mulTransposeRight(p0 : Transform3D, p1 : Transform3D?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void multipleScale(double[], double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun multipleScale(p0 : DoubleArray, p1 : DoubleArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void normalize(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun normalize(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void normalizeCP(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun normalizeCP(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(double, javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Double, p1 : Vector3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(float, javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Float, p1 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.AxisAngle4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : AxisAngle4d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.AxisAngle4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : AxisAngle4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.GMatrix)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : GMatrix) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.Matrix3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Matrix3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.Matrix3d, javax.vecmath.Vector3d, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Matrix3d, p1 : Vector3d, p2 : Double) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.Matrix3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Matrix3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.Matrix3f, javax.vecmath.Vector3d, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Matrix3f, p1 : Vector3d, p2 : Double) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.Matrix3f, javax.vecmath.Vector3f, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Matrix3f, p1 : Vector3f, p2 : Float) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.Matrix4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Matrix4d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.Matrix4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Matrix4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.Quat4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Quat4d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.Quat4d, javax.vecmath.Vector3d, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Quat4d, p1 : Vector3d, p2 : Double) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.Quat4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Quat4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.Quat4f, javax.vecmath.Vector3d, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Quat4f, p1 : Vector3d, p2 : Double) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.Quat4f, javax.vecmath.Vector3f, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Quat4f, p1 : Vector3f, p2 : Float) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Vector3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.Vector3d, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Vector3d, p1 : Double) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(javax.vecmath.Vector3f, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Vector3f, p1 : Float) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : DoubleArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void set(float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : FloatArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void setEuler(javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setEuler(p0 : Vector3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void setRotation(javax.vecmath.AxisAngle4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setRotation(p0 : AxisAngle4d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void setRotation(javax.vecmath.AxisAngle4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setRotation(p0 : AxisAngle4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void setRotation(javax.vecmath.Matrix3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setRotation(p0 : Matrix3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void setRotation(javax.vecmath.Matrix3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setRotation(p0 : Matrix3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void setRotation(javax.vecmath.Quat4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setRotation(p0 : Quat4d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void setRotation(javax.vecmath.Quat4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setRotation(p0 : Quat4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void setRotationScale(javax.vecmath.Matrix3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setRotationScale(p0 : Matrix3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void setRotationScale(javax.vecmath.Matrix3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setRotationScale(p0 : Matrix3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void setScale(javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setScale(p0 : Vector3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void setTranslation(javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTranslation(p0 : Vector3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void setTranslation(javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTranslation(p0 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void setWithLock(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setWithLock(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void svdReorder(double[], double[], double[], double[], double[], double[], double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun svdReorder(p0 : DoubleArray?, p1 : DoubleArray, p2 : DoubleArray, p3 : DoubleArray?, p4 : DoubleArray, p5 : DoubleArray?, p6 : DoubleArray?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void transform(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void transform(javax.vecmath.Point3d, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Point3d, p1 : Point3d?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void transform(javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void transform(javax.vecmath.Point3f, javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Point3f, p1 : Point3f?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void transform(javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Vector3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void transform(javax.vecmath.Vector3d, javax.vecmath.Vector3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Vector3d, p1 : Vector3d?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void transform(javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Vector3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void transform(javax.vecmath.Vector3f, javax.vecmath.Vector3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Vector3f, p1 : Vector3f?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void transform(javax.vecmath.Vector4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Vector4d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void transform(javax.vecmath.Vector4d, javax.vecmath.Vector4d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Vector4d, p1 : Vector4d?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void transform(javax.vecmath.Vector4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Vector4f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void transform(javax.vecmath.Vector4f, javax.vecmath.Vector4f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : Vector4f, p1 : Vector4f?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.Transform3D void transpose_mat(double[], double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transpose_mat(p0 : DoubleArray, p1 : DoubleArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroup TransformGroup(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TransformGroup(p0 : Transform3D)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroup javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroup void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroup void getTransform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTransform(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroup void setTransform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTransform(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroupRetained void addCondition(javax.media.j3d.WakeupOnTransformChange)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addCondition(p0 : WakeupOnTransformChange) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroupRetained void childCheckSetLive(javax.media.j3d.NodeRetained, int, javax.media.j3d.SetLiveState, javax.media.j3d.NodeRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun childCheckSetLive(p0 : NodeRetained, p1 : Int, p2 : SetLiveState, p3 : NodeRetained?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroupRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroupRetained void compile(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compile(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroupRetained void computeCombineBounds(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeCombineBounds(p0 : Bounds) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroupRetained javax.media.j3d.CachedTargets getCachedTargets(int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCachedTargets(p0 : Int, p1 : Int, p2 : Int) : CachedTargets?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroupRetained java.util.ArrayList getTargetsData(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTargetsData(p0 : Int, p1 : Int) : ArrayList?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroupRetained void getTransform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTransform(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroupRetained void merge(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun merge(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroupRetained void mergeTransform(javax.media.j3d.TransformGroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mergeTransform(p0 : TransformGroupRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroupRetained void removeCondition(javax.media.j3d.WakeupOnTransformChange)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeCondition(p0 : WakeupOnTransformChange) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroupRetained void removeNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroupRetained void setAuxData(javax.media.j3d.SetLiveState, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setAuxData(p0 : SetLiveState, p1 : Int, p2 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroupRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroupRetained void setNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroupRetained void setTransform(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTransform(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformGroupRetained void transformBounds(javax.media.j3d.SceneGraphPath, javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transformBounds(p0 : SceneGraphPath, p1 : Bounds) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformInterpolator TransformInterpolator(javax.media.j3d.Alpha, javax.media.j3d.TransformGroup, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TransformInterpolator(p0 : Alpha?, p1 : TransformGroup?, p2 : Transform3D)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformInterpolator void computeTransform(float, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeTransform(p0 : Float, p1 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformInterpolator void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformInterpolator javax.media.j3d.Transform3D getTransformAxis()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTransformAxis() : Transform3D&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformInterpolator void setTransformAxis(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTransformAxis(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformStructure void processBoundsAutoComputeChanged(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processBoundsAutoComputeChanged(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformStructure void processBoundsChanged(java.lang.Object[], javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processBoundsChanged(p0 : Array&lt;out Any?&gt;, p1 : Bounds?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformStructure void processCollisionBoundChanged(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processCollisionBoundChanged(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformStructure void processRegionBoundChanged(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processRegionBoundChanged(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformStructure void processSwitchChanged(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processSwitchChanged(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransformStructure void removeNodes(javax.media.j3d.J3dMessage)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodes(p0 : J3dMessage) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransparencyAttributes javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransparencyAttributes void duplicateAttributes(javax.media.j3d.NodeComponent, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : NodeComponent, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransparencyAttributesRetained boolean equivalent(javax.media.j3d.TransparencyAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equivalent(p0 : TransparencyAttributesRetained?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransparencyAttributesRetained void set(javax.media.j3d.TransparencyAttributesRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : TransparencyAttributesRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransparencyInterpolator javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TransparencyInterpolator void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TriangleArray javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TriangleArrayRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TriangleArrayRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TriangleArrayRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TriangleFanArray TriangleFanArray(int, int, int, int[], int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TriangleFanArray(p0 : Int, p1 : Int, p2 : Int, p3 : IntArray?, p4 : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TriangleFanArray TriangleFanArray(int, int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TriangleFanArray(p0 : Int, p1 : Int, p2 : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TriangleFanArray javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TriangleFanArrayRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TriangleFanArrayRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TriangleFanArrayRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TriangleStripArray TriangleStripArray(int, int, int, int[], int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TriangleStripArray(p0 : Int, p1 : Int, p2 : Int, p3 : IntArray?, p4 : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TriangleStripArray TriangleStripArray(int, int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TriangleStripArray(p0 : Int, p1 : Int, p2 : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TriangleStripArray javax.media.j3d.NodeComponent cloneNodeComponent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNodeComponent() : NodeComponent&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TriangleStripArrayRetained boolean intersect(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Bounds) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TriangleStripArrayRetained boolean intersect(javax.media.j3d.PickShape, double[], javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : PickShape, p1 : DoubleArray?, p2 : Point3d?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.TriangleStripArrayRetained boolean intersect(javax.vecmath.Point3d[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(p0 : Array&lt;out Point3d?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.UnorderList java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.UnorderList void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(p0 : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.UnorderList void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(p0 : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.VertexArrayRenderMethod boolean render(javax.media.j3d.RenderMolecule, javax.media.j3d.Canvas3D, int, javax.media.j3d.RenderAtomListInfo, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun render(p0 : RenderMolecule, p1 : Canvas3D, p2 : Int, p3 : RenderAtomListInfo?, p4 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.VertexArrayRenderMethod void renderGeo(javax.media.j3d.RenderAtomListInfo, javax.media.j3d.RenderMolecule, int, javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun renderGeo(p0 : RenderAtomListInfo, p1 : RenderMolecule, p2 : Int, p3 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View void activate(javax.media.j3d.VirtualUniverse)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun activate(p0 : VirtualUniverse) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View void addCanvas3D(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addCanvas3D(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View void addToCanvasList(javax.media.j3d.Canvas3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addToCanvasList(p0 : Canvas3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View javax.media.j3d.Canvas3D getFirstCanvas()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getFirstCanvas() : Canvas3D?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View long getFrameStartTimes(long[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getFrameStartTimes(p0 : LongArray) : Long&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View void getLeftManualEyeInCoexistence(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLeftManualEyeInCoexistence(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View void getLeftProjection(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLeftProjection(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View void getRightManualEyeInCoexistence(javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRightManualEyeInCoexistence(p0 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View void getRightProjection(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRightProjection(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View void getSensorHotspotInVworld(javax.media.j3d.Sensor, javax.vecmath.Point3d)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSensorHotspotInVworld(p0 : Sensor, p1 : Point3d) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View void getSensorHotspotInVworld(javax.media.j3d.Sensor, javax.vecmath.Point3f)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSensorHotspotInVworld(p0 : Sensor, p1 : Point3f) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View void getSensorToVworld(javax.media.j3d.Sensor, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSensorToVworld(p0 : Sensor, p1 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View void getUserHeadToVworld(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getUserHeadToVworld(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View void getVpcToEc(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getVpcToEc(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View void insertCanvas3D(javax.media.j3d.Canvas3D, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertCanvas3D(p0 : Canvas3D, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View void setCanvas3D(javax.media.j3d.Canvas3D, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCanvas3D(p0 : Canvas3D, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View void setLeftProjection(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLeftProjection(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View void setRightProjection(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setRightProjection(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View void setVpcToEc(javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setVpcToEc(p0 : Transform3D) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.View long[] stopBehaviorScheduler()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun stopBehaviorScheduler() : LongArray&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ViewPlatform javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ViewPlatform void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ViewPlatformRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ViewPlatformRetained void compile(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compile(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ViewPlatformRetained void evaluateInitViewPlatformTransform(javax.media.j3d.NodeRetained, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun evaluateInitViewPlatformTransform(p0 : NodeRetained, p1 : Transform3D?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ViewPlatformRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ViewSpecificGroup javax.media.j3d.Node cloneNode(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cloneNode(p0 : Boolean) : Node&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ViewSpecificGroup void duplicateAttributes(javax.media.j3d.Node, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun duplicateAttributes(p0 : Node, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ViewSpecificGroupRetained void clearLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clearLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ViewSpecificGroupRetained void compile(javax.media.j3d.CompileState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compile(p0 : CompileState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ViewSpecificGroupRetained void removeNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ViewSpecificGroupRetained void setAuxData(javax.media.j3d.SetLiveState, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setAuxData(p0 : SetLiveState, p1 : Int, p2 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ViewSpecificGroupRetained void setLive(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setLive(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.ViewSpecificGroupRetained void setNodeData(javax.media.j3d.SetLiveState)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNodeData(p0 : SetLiveState) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.VirtualUniverse void removeLocale(javax.media.j3d.Locale)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeLocale(p0 : Locale) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupAnd WakeupAnd(javax.media.j3d.WakeupCriterion[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupAnd(p0 : Array&lt;out WakeupCriterion?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupAnd void buildTree(javax.media.j3d.WakeupCondition, int, javax.media.j3d.BehaviorRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildTree(p0 : WakeupCondition?, p1 : Int, p2 : BehaviorRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupAndOfOrs WakeupAndOfOrs(javax.media.j3d.WakeupOr[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupAndOfOrs(p0 : Array&lt;out WakeupOr?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupAndOfOrs void buildTree(javax.media.j3d.WakeupCondition, int, javax.media.j3d.BehaviorRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildTree(p0 : WakeupCondition?, p1 : Int, p2 : BehaviorRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupCondition void buildTree(javax.media.j3d.WakeupCondition, int, javax.media.j3d.BehaviorRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildTree(p0 : WakeupCondition?, p1 : Int, p2 : BehaviorRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupCriteriaEnumerator WakeupCriteriaEnumerator(javax.media.j3d.WakeupCondition, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupCriteriaEnumerator(p0 : WakeupCondition, p1 : Int)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupCriteriaEnumerator void reset(javax.media.j3d.WakeupCondition, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reset(p0 : WakeupCondition, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupCriterion void addBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupCriterion void buildTree(javax.media.j3d.WakeupCondition, int, javax.media.j3d.BehaviorRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildTree(p0 : WakeupCondition?, p1 : Int, p2 : BehaviorRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupCriterion void removeBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupCriterion void resetBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resetBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupIndexedList void add(javax.media.j3d.WakeupCondition)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : WakeupCondition) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupIndexedList java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupIndexedList boolean contains(javax.media.j3d.WakeupCondition)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : WakeupCondition) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupIndexedList int indexOf(javax.media.j3d.WakeupCondition)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(p0 : WakeupCondition) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupIndexedList void init(javax.media.j3d.WakeupCondition, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun init(p0 : WakeupCondition, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupIndexedList void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(p0 : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupIndexedList boolean remove(javax.media.j3d.WakeupCondition)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : WakeupCondition) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupIndexedList java.lang.Object removeLastElement()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeLastElement() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupIndexedList void set(int, javax.media.j3d.WakeupCondition)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Int, p1 : WakeupCondition) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupIndexedList java.lang.Object[] toArray(javax.media.j3d.WakeupCondition)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray(p0 : WakeupCondition) : Array&lt;out Any?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupIndexedList void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(p0 : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnAWTEvent void addBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnAWTEvent java.awt.AWTEvent[] getAWTEvent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAWTEvent() : Array&lt;out AWTEvent?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnAWTEvent void removeBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnAWTEvent void resetBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resetBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnActivation void addBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnActivation void removeBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnActivation void resetBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resetBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnBehaviorPost void addBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnBehaviorPost void removeBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnBehaviorPost void resetBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resetBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionEntry WakeupOnCollisionEntry(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOnCollisionEntry(p0 : Bounds)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionEntry WakeupOnCollisionEntry(javax.media.j3d.SceneGraphPath)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOnCollisionEntry(p0 : SceneGraphPath)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionEntry WakeupOnCollisionEntry(javax.media.j3d.SceneGraphPath, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOnCollisionEntry(p0 : SceneGraphPath, p1 : Int)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionEntry WakeupOnCollisionEntry(javax.media.j3d.SceneGraphPath, int, javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOnCollisionEntry(p0 : SceneGraphPath?, p1 : Int, p2 : Bounds?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionEntry void addBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionEntry javax.media.j3d.Bounds getArmingBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getArmingBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionEntry javax.media.j3d.SceneGraphPath getArmingPath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getArmingPath() : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionEntry int getNodeType(javax.media.j3d.NodeRetained, javax.media.j3d.SceneGraphPath, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNodeType(p0 : NodeRetained, p1 : SceneGraphPath, p2 : String?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionEntry javax.media.j3d.SceneGraphPath getSceneGraphPath(javax.media.j3d.GroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSceneGraphPath(p0 : GroupRetained) : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionEntry javax.media.j3d.SceneGraphPath getSceneGraphPath(javax.media.j3d.NodeRetained, javax.media.j3d.HashKey, javax.media.j3d.Transform3D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSceneGraphPath(p0 : NodeRetained, p1 : HashKey?, p2 : Transform3D?) : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionEntry javax.media.j3d.Bounds getTriggeringBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTriggeringBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionEntry javax.media.j3d.Bounds getTriggeringBounds(javax.media.j3d.GroupRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTriggeringBounds(p0 : GroupRetained) : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionEntry javax.media.j3d.Bounds getTriggeringBounds(javax.media.j3d.Shape3DRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTriggeringBounds(p0 : Shape3DRetained) : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionEntry javax.media.j3d.SceneGraphPath getTriggeringPath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTriggeringPath() : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionEntry void removeBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionEntry void resetBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resetBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionEntry void setTarget(javax.media.j3d.BHLeafInterface)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTarget(p0 : BHLeafInterface) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionExit WakeupOnCollisionExit(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOnCollisionExit(p0 : Bounds)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionExit WakeupOnCollisionExit(javax.media.j3d.SceneGraphPath)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOnCollisionExit(p0 : SceneGraphPath)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionExit WakeupOnCollisionExit(javax.media.j3d.SceneGraphPath, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOnCollisionExit(p0 : SceneGraphPath, p1 : Int)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionExit WakeupOnCollisionExit(javax.media.j3d.SceneGraphPath, int, javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOnCollisionExit(p0 : SceneGraphPath?, p1 : Int, p2 : Bounds?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionExit void addBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionExit javax.media.j3d.Bounds getArmingBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getArmingBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionExit javax.media.j3d.SceneGraphPath getArmingPath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getArmingPath() : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionExit javax.media.j3d.Bounds getTriggeringBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTriggeringBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionExit javax.media.j3d.SceneGraphPath getTriggeringPath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTriggeringPath() : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionExit void removeBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionExit void resetBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resetBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionExit void setTarget(javax.media.j3d.BHLeafInterface)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTarget(p0 : BHLeafInterface) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionMovement WakeupOnCollisionMovement(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOnCollisionMovement(p0 : Bounds)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionMovement WakeupOnCollisionMovement(javax.media.j3d.SceneGraphPath)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOnCollisionMovement(p0 : SceneGraphPath)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionMovement WakeupOnCollisionMovement(javax.media.j3d.SceneGraphPath, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOnCollisionMovement(p0 : SceneGraphPath, p1 : Int)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionMovement WakeupOnCollisionMovement(javax.media.j3d.SceneGraphPath, int, javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOnCollisionMovement(p0 : SceneGraphPath?, p1 : Int, p2 : Bounds?)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionMovement void addBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionMovement javax.media.j3d.Bounds getArmingBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getArmingBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionMovement javax.media.j3d.SceneGraphPath getArmingPath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getArmingPath() : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionMovement javax.media.j3d.Bounds getTriggeringBounds()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTriggeringBounds() : Bounds?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionMovement javax.media.j3d.SceneGraphPath getTriggeringPath()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTriggeringPath() : SceneGraphPath?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionMovement void removeBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionMovement void resetBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resetBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnCollisionMovement void setTarget(javax.media.j3d.BHLeafInterface)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setTarget(p0 : BHLeafInterface) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnDeactivation void addBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnDeactivation void removeBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnDeactivation void resetBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resetBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnElapsedFrames void addBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnElapsedFrames void removeBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnElapsedFrames void resetBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resetBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnElapsedTime void addBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnElapsedTime void removeBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnElapsedTime void resetBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resetBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnElapsedTimeHeap java.lang.Object clone()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clone() : Any&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnElapsedTimeHeap void insert(javax.media.j3d.WakeupOnElapsedTime)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insert(p0 : WakeupOnElapsedTime) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnSensorEntry WakeupOnSensorEntry(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOnSensorEntry(p0 : Bounds)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnSensorEntry void addBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnSensorEntry void removeBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnSensorEntry void resetBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resetBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnSensorExit WakeupOnSensorExit(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOnSensorExit(p0 : Bounds)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnSensorExit void addBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnSensorExit void removeBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnSensorExit void resetBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resetBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnTransformChange WakeupOnTransformChange(javax.media.j3d.TransformGroup)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOnTransformChange(p0 : TransformGroup)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnTransformChange void addBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnTransformChange void removeBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnTransformChange void resetBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resetBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnViewPlatformEntry WakeupOnViewPlatformEntry(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOnViewPlatformEntry(p0 : Bounds)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnViewPlatformEntry void addBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnViewPlatformEntry javax.media.j3d.ViewPlatform getTriggeringViewPlatform()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTriggeringViewPlatform() : ViewPlatform?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnViewPlatformEntry void removeBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnViewPlatformEntry void resetBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resetBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnViewPlatformEntry void updateTransformRegion(javax.media.j3d.BehaviorRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTransformRegion(p0 : BehaviorRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnViewPlatformExit WakeupOnViewPlatformExit(javax.media.j3d.Bounds)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOnViewPlatformExit(p0 : Bounds)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnViewPlatformExit void addBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnViewPlatformExit javax.media.j3d.ViewPlatform getTriggeringViewPlatform()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTriggeringViewPlatform() : ViewPlatform?&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnViewPlatformExit void removeBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnViewPlatformExit void resetBehaviorCondition(javax.media.j3d.BehaviorStructure)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resetBehaviorCondition(p0 : BehaviorStructure) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOnViewPlatformExit void updateTransformRegion(javax.media.j3d.BehaviorRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun updateTransformRegion(p0 : BehaviorRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOr WakeupOr(javax.media.j3d.WakeupCriterion[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOr(p0 : Array&lt;out WakeupCriterion?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOr void buildTree(javax.media.j3d.WakeupCondition, int, javax.media.j3d.BehaviorRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildTree(p0 : WakeupCondition?, p1 : Int, p2 : BehaviorRetained) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOrOfAnds WakeupOrOfAnds(javax.media.j3d.WakeupAnd[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WakeupOrOfAnds(p0 : Array&lt;out WakeupAnd?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='javax.media.j3d.WakeupOrOfAnds void buildTree(javax.media.j3d.WakeupCondition, int, javax.media.j3d.BehaviorRetained)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildTree(p0 : WakeupCondition?, p1 : Int, p2 : BehaviorRetained) : Unit&quot;"/>
        </annotation>
    </item>
</root>
