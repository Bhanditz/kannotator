<root>
    <item name='com.google.common.base.Absent boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Absent com.google.common.base.Optional&lt;java.lang.Object&gt; or(com.google.common.base.Optional&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun or(secondChoice : Optional&lt;*&gt;) : Optional&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Absent java.lang.Object or(com.google.common.base.Supplier&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun or(supplier : Supplier&lt;*&gt;) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Absent java.lang.Object or(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun or(defaultValue : Any) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Absent java.lang.Object orNull()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun orNull() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Absent java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Absent java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Absent com.google.common.base.Optional&lt;V&gt; transform(com.google.common.base.Function&lt;java.lang.Object,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; transform(function : Function&lt;Any?, V&gt;) : Optional&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.AbstractIterator T endOfData()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun endOfData() : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Ascii java.lang.String toLowerCase(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toLowerCase(string : String) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Ascii java.lang.String toUpperCase(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toUpperCase(string : String) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CaseFormat java.lang.String firstCharOnlyToUpper(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun firstCharOnlyToUpper(word : String) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CaseFormat java.lang.String normalizeFirstWord(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun normalizeFirstWord(word : String) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CaseFormat java.lang.String normalizeWord(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun normalizeWord(word : String) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CaseFormat java.lang.String to(com.google.common.base.CaseFormat, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun to(format : CaseFormat, s : String) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.10 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.10 com.google.common.base.CharMatcher precomputed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun precomputed() : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.10 void setBits(com.google.common.base.CharMatcher.LookupTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setBits(table : CharMatcher.LookupTable) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.11 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.12 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.12 com.google.common.base.CharMatcher precomputed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun precomputed() : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.12 void setBits(com.google.common.base.CharMatcher.LookupTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setBits(table : CharMatcher.LookupTable) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.13 boolean apply(java.lang.Character)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(character : Character) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.13 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.14 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.14 int countIn(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun countIn(sequence : CharSequence) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.14 boolean matchesAllOf(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun matchesAllOf(sequence : CharSequence) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.14 boolean matchesNoneOf(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun matchesNoneOf(sequence : CharSequence) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.15 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.15 com.google.common.base.CharMatcher precomputed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun precomputed() : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.16 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.16 com.google.common.base.CharMatcher precomputed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun precomputed() : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.1 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.2 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.2 com.google.common.base.CharMatcher precomputed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun precomputed() : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.3 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.4 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.5 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.6 com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun and(other : CharMatcher) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.6 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.6 java.lang.String collapseFrom(java.lang.CharSequence, char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun collapseFrom(sequence : CharSequence, replacement : Char) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.6 int countIn(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun countIn(sequence : CharSequence) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.6 int indexIn(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexIn(sequence : CharSequence) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.6 int indexIn(java.lang.CharSequence, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexIn(sequence : CharSequence, start : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.6 int lastIndexIn(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexIn(sequence : CharSequence) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.6 boolean matchesAllOf(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun matchesAllOf(sequence : CharSequence) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.6 boolean matchesNoneOf(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun matchesNoneOf(sequence : CharSequence) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.6 com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun or(other : CharMatcher) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.6 com.google.common.base.CharMatcher precomputed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun precomputed() : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.6 java.lang.String removeFrom(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeFrom(sequence : CharSequence) : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.6 java.lang.String replaceFrom(java.lang.CharSequence, char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceFrom(sequence : CharSequence, replacement : Char) : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.6 java.lang.String replaceFrom(java.lang.CharSequence, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceFrom(sequence : CharSequence, replacement : CharSequence) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.6 java.lang.String trimFrom(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun trimFrom(sequence : CharSequence) : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.7 com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun and(other : CharMatcher) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.7 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.7 java.lang.String collapseFrom(java.lang.CharSequence, char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun collapseFrom(sequence : CharSequence, replacement : Char) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.7 int countIn(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun countIn(sequence : CharSequence) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.7 int indexIn(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexIn(sequence : CharSequence) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.7 int indexIn(java.lang.CharSequence, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexIn(sequence : CharSequence, start : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.7 int lastIndexIn(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexIn(sequence : CharSequence) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.7 boolean matchesAllOf(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun matchesAllOf(sequence : CharSequence) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.7 boolean matchesNoneOf(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun matchesNoneOf(sequence : CharSequence) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.7 com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun or(other : CharMatcher) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.7 com.google.common.base.CharMatcher precomputed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun precomputed() : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.7 java.lang.String removeFrom(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeFrom(sequence : CharSequence) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.7 java.lang.String replaceFrom(java.lang.CharSequence, char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceFrom(sequence : CharSequence, replacement : Char) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.7 java.lang.String replaceFrom(java.lang.CharSequence, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceFrom(sequence : CharSequence, replacement : CharSequence) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.7 void setBits(com.google.common.base.CharMatcher.LookupTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setBits(p0 : CharMatcher.LookupTable) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.7 java.lang.String trimFrom(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun trimFrom(sequence : CharSequence) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.8 com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun and(other : CharMatcher) : CharMatcher?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.8 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.8 com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun or(other : CharMatcher) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.8 com.google.common.base.CharMatcher precomputed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun precomputed() : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.8 java.lang.String replaceFrom(java.lang.CharSequence, char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceFrom(sequence : CharSequence, replacement : Char) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.8 void setBits(com.google.common.base.CharMatcher.LookupTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setBits(table : CharMatcher.LookupTable) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.9 com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun and(other : CharMatcher) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.9 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.9 com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun or(other : CharMatcher) : CharMatcher?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.And And(com.google.common.base.CharMatcher, com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun And(a : CharMatcher, b : CharMatcher)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.And And(com.google.common.base.CharMatcher, com.google.common.base.CharMatcher, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun And(a : CharMatcher, b : CharMatcher, description : String?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.And com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun and(other : CharMatcher) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.And boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.And com.google.common.base.CharMatcher withToString(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withToString(description : String?) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.Or Or(com.google.common.base.CharMatcher, com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Or(a : CharMatcher, b : CharMatcher)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.Or Or(com.google.common.base.CharMatcher, com.google.common.base.CharMatcher, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Or(a : CharMatcher, b : CharMatcher, description : String?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.Or boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.Or com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun or(other : CharMatcher) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher.Or com.google.common.base.CharMatcher withToString(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withToString(description : String?) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun and(other : CharMatcher) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher anyOf(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun anyOf(sequence : CharSequence) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher boolean apply(java.lang.Character)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(character : Character) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String collapseFrom(java.lang.CharSequence, char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun collapseFrom(sequence : CharSequence, replacement : Char) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher int countIn(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun countIn(sequence : CharSequence) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher forPredicate(com.google.common.base.Predicate&lt;? super java.lang.Character&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun forPredicate(predicate : Predicate&lt;in Character?&gt;) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher inRange(char, char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun inRange(startInclusive : Char, endInclusive : Char) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher inRange(char, char, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun inRange(startInclusive : Char, endInclusive : Char, description : String?) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher int indexIn(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexIn(sequence : CharSequence) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher int indexIn(java.lang.CharSequence, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexIn(sequence : CharSequence, start : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher is(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun is(match : Char) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher isNot(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isNot(match : Char) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher int lastIndexIn(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexIn(sequence : CharSequence) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher boolean matchesAllOf(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun matchesAllOf(sequence : CharSequence) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher boolean matchesAnyOf(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun matchesAnyOf(sequence : CharSequence) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher boolean matchesNoneOf(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun matchesNoneOf(sequence : CharSequence) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher negate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun negate() : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher noneOf(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun noneOf(sequence : CharSequence) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun or(other : CharMatcher) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher precomputed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun precomputed() : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher precomputedInternal()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun precomputedInternal() : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String removeFrom(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeFrom(sequence : CharSequence) : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String replaceFrom(java.lang.CharSequence, char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceFrom(sequence : CharSequence, replacement : Char) : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String replaceFrom(java.lang.CharSequence, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceFrom(sequence : CharSequence, replacement : CharSequence) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String retainFrom(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainFrom(sequence : CharSequence) : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher void setBits(com.google.common.base.CharMatcher.LookupTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setBits(p0 : CharMatcher.LookupTable) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher char[] slowGetChars()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun slowGetChars() : CharArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String trimAndCollapseFrom(java.lang.CharSequence, char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun trimAndCollapseFrom(sequence : CharSequence, replacement : Char) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String trimFrom(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun trimFrom(sequence : CharSequence) : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String trimLeadingFrom(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun trimLeadingFrom(sequence : CharSequence) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String trimTrailingFrom(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun trimTrailingFrom(sequence : CharSequence) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher withToString(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withToString(p0 : String?) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Defaults void put(java.util.Map&lt;java.lang.Class&lt;?&gt;,java.lang.Object&gt;, java.lang.Class&lt;T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; put(map : MutableMap&lt;Class&lt;*&gt;?, Any?&gt;, type : Class&lt;T&gt;?, value : T?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Enums.ValueOfFunction ValueOfFunction(java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ValueOfFunction(enumClass : Class&lt;T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Enums.ValueOfFunction ValueOfFunction(java.lang.Class, com.google.common.base.Enums.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ValueOfFunction(x0 : Class, x1 : Enums.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Enums.ValueOfFunction java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Enums.ValueOfFunction T apply(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(value : String?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Enums.ValueOfFunction boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Enums java.lang.reflect.Field getField(java.lang.Enum&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getField(enumValue : Enum&lt;*&gt;) : Field?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Enums com.google.common.base.Optional&lt;T&gt; getIfPresent(java.lang.Class&lt;T&gt;, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : Enum&lt;T&gt;?&gt; getIfPresent(enumClass : Class&lt;T&gt;, value : String) : Optional&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Enums com.google.common.base.Function&lt;java.lang.String,T&gt; valueOfFunction(java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : Enum&lt;T&gt;?&gt; valueOfFunction(enumClass : Class&lt;T&gt;) : Function&lt;String?, T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence.Equals boolean doEquivalent(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doEquivalent(a : Any, b : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence.Equals int doHash(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doHash(o : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence.Equals java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence.EquivalentToPredicate EquivalentToPredicate(com.google.common.base.Equivalence&lt;T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun EquivalentToPredicate(p0 : Equivalence&lt;T&gt;, p1 : T?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence.EquivalentToPredicate boolean apply(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : T?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence.EquivalentToPredicate boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence.Identity boolean doEquivalent(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doEquivalent(p0 : Any, p1 : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence.Identity int doHash(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doHash(p0 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence.Identity java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence.Wrapper Wrapper(com.google.common.base.Equivalence&lt;? super T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Wrapper(p0 : Equivalence&lt;in T&gt;, p1 : T?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence.Wrapper Wrapper(com.google.common.base.Equivalence, java.lang.Object, com.google.common.base.Equivalence.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Wrapper(x0 : Equivalence, x1 : Any?, x2 : Equivalence.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence.Wrapper boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence.Wrapper T get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence boolean doEquivalent(T, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doEquivalent(p0 : T, p1 : T) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence int doHash(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doHash(p0 : T) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence com.google.common.base.Equivalence&lt;java.lang.Object&gt; equals()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals() : Equivalence&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence boolean equivalent(T, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equivalent(a : T?, b : T?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence com.google.common.base.Predicate&lt;T&gt; equivalentTo(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equivalentTo(p0 : T?) : Predicate&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence int hash(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hash(t : T?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence com.google.common.base.Equivalence&lt;java.lang.Object&gt; identity()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun identity() : Equivalence&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence com.google.common.base.Equivalence&lt;F&gt; onResultOf(com.google.common.base.Function&lt;F,? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;F&gt; onResultOf(function : Function&lt;F, out T&gt;) : Equivalence&lt;F&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence com.google.common.base.Equivalence&lt;java.lang.Iterable&lt;S&gt;&gt; pairwise()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S : T&gt; pairwise() : Equivalence&lt;Iterable&lt;S&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalence com.google.common.base.Equivalence.Wrapper&lt;S&gt; wrap(S)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S : T&gt; wrap(p0 : S?) : Equivalence.Wrapper&lt;S&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalences com.google.common.base.Equivalence&lt;java.lang.Object&gt; equals()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals() : Equivalence&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Equivalences com.google.common.base.Equivalence&lt;java.lang.Object&gt; identity()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun identity() : Equivalence&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.FinalizablePhantomReference FinalizablePhantomReference(T, com.google.common.base.FinalizableReferenceQueue)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FinalizablePhantomReference(referent : T?, queue : FinalizableReferenceQueue)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.FinalizableReferenceQueue.DecoupledLoader java.net.URL getBaseUrl()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getBaseUrl() : URL&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.FinalizableReferenceQueue.DecoupledLoader java.lang.Class&lt;?&gt; loadFinalizer()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun loadFinalizer() : Class&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.FinalizableReferenceQueue.DecoupledLoader java.net.URLClassLoader newLoader(java.net.URL)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newLoader(base : URL?) : URLClassLoader&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.FinalizableReferenceQueue.FinalizerLoader java.lang.Class&lt;?&gt; loadFinalizer()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun loadFinalizer() : Class&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.FinalizableReferenceQueue.SystemLoader java.lang.Class&lt;?&gt; loadFinalizer()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun loadFinalizer() : Class&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.FinalizableReferenceQueue java.lang.reflect.Method getStartFinalizer(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getStartFinalizer(finalizer : Class&lt;*&gt;) : Method?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.FinalizableReferenceQueue java.lang.Class&lt;?&gt; loadFinalizer(com.google.common.base.FinalizableReferenceQueue.FinalizerLoader...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun loadFinalizer(vararg loaders : FinalizableReferenceQueue.FinalizerLoader) : Class&lt;*&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.FinalizableSoftReference FinalizableSoftReference(T, com.google.common.base.FinalizableReferenceQueue)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FinalizableSoftReference(referent : T?, queue : FinalizableReferenceQueue)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.FinalizableWeakReference FinalizableWeakReference(T, com.google.common.base.FinalizableReferenceQueue)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FinalizableWeakReference(referent : T?, queue : FinalizableReferenceQueue)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Function T apply(F)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : F?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Function boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.FunctionalEquivalence FunctionalEquivalence(com.google.common.base.Function&lt;F,? extends T&gt;, com.google.common.base.Equivalence&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FunctionalEquivalence(function : Function&lt;F, out T&gt;, resultEquivalence : Equivalence&lt;T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.FunctionalEquivalence boolean doEquivalent(F, F)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doEquivalent(p0 : F, p1 : F) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.FunctionalEquivalence int doHash(F)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doHash(p0 : F) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.FunctionalEquivalence boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.ConstantFunction ConstantFunction(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConstantFunction(p0 : E?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.ConstantFunction E apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any?) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.ConstantFunction boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.ForMapWithDefault ForMapWithDefault(java.util.Map&lt;K,? extends V&gt;, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ForMapWithDefault(p0 : Map&lt;K, out V&gt;, p1 : V?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.ForMapWithDefault V apply(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(key : K?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.ForMapWithDefault boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.FunctionComposition FunctionComposition(com.google.common.base.Function&lt;B,C&gt;, com.google.common.base.Function&lt;A,? extends B&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FunctionComposition(g : Function&lt;B, C&gt;, f : Function&lt;A, out B&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.FunctionComposition C apply(A)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(a : A?) : C?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.FunctionComposition boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.FunctionForMapNoDefault FunctionForMapNoDefault(java.util.Map&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FunctionForMapNoDefault(map : Map&lt;K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.FunctionForMapNoDefault V apply(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(key : K?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.FunctionForMapNoDefault boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.IdentityFunction java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.IdentityFunction java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.PredicateFunction PredicateFunction(com.google.common.base.Predicate&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PredicateFunction(predicate : Predicate&lt;T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.PredicateFunction PredicateFunction(com.google.common.base.Predicate, com.google.common.base.Functions.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PredicateFunction(x0 : Predicate, x1 : Functions.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.PredicateFunction java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.PredicateFunction boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.SupplierFunction SupplierFunction(com.google.common.base.Supplier&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SupplierFunction(supplier : Supplier&lt;T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.SupplierFunction SupplierFunction(com.google.common.base.Supplier, com.google.common.base.Functions.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SupplierFunction(x0 : Supplier, x1 : Functions.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.SupplierFunction T apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.SupplierFunction boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.ToStringFunction java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.ToStringFunction java.lang.String apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(o : Any) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions.ToStringFunction java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;A,C&gt; compose(com.google.common.base.Function&lt;B,C&gt;, com.google.common.base.Function&lt;A,? extends B&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;A, B, C&gt; compose(g : Function&lt;B, C&gt;, f : Function&lt;A, out B&gt;) : Function&lt;A, C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;java.lang.Object,E&gt; constant(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; constant(p0 : E?) : Function&lt;Any?, E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;K,V&gt; forMap(java.util.Map&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; forMap(map : Map&lt;K, V&gt;) : Function&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;K,V&gt; forMap(java.util.Map&lt;K,? extends V&gt;, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; forMap(p0 : Map&lt;K, out V&gt;, p1 : V?) : Function&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;T,java.lang.Boolean&gt; forPredicate(com.google.common.base.Predicate&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; forPredicate(predicate : Predicate&lt;T&gt;) : Function&lt;T, Boolean?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;java.lang.Object,T&gt; forSupplier(com.google.common.base.Supplier&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; forSupplier(supplier : Supplier&lt;T&gt;) : Function&lt;Any?, T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;E,E&gt; identity()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; identity() : Function&lt;E, E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;java.lang.Object,java.lang.String&gt; toStringFunction()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStringFunction() : Function&lt;Any?, String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.1 1(com.google.common.base.Joiner, com.google.common.base.Joiner, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Joiner)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.1 java.lang.CharSequence toString(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString(part : Any) : CharSequence?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.1 com.google.common.base.Joiner useForNull(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun useForNull(p0 : String) : Joiner?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.2 2(com.google.common.base.Joiner, com.google.common.base.Joiner)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 2(x0 : Joiner)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.2 A appendTo(A, java.util.Iterator&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;A : Appendable?&gt; appendTo(appendable : A, parts : Iterator&lt;*&gt;) : A&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.2 com.google.common.base.Joiner useForNull(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun useForNull(p0 : String) : Joiner?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.2 com.google.common.base.Joiner.MapJoiner withKeyValueSeparator(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withKeyValueSeparator(p0 : String) : Joiner.MapJoiner?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner MapJoiner(com.google.common.base.Joiner, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MapJoiner(joiner : Joiner?, keyValueSeparator : String)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner MapJoiner(com.google.common.base.Joiner, java.lang.String, com.google.common.base.Joiner.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MapJoiner(x0 : Joiner?, x1 : String, x2 : Joiner.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner A appendTo(A, java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;A : Appendable?&gt; appendTo(appendable : A, entries : Iterable&lt;out Map.Entry&lt;*, *&gt;?&gt;) : A&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner A appendTo(A, I)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;A : Appendable?, I&gt; appendTo(appendable : A, entries : I) : A where I : Any?, I : Iterable&lt;out Map.Entry&lt;*, *&gt;?&gt;?, I : Iterator&lt;out Map.Entry&lt;*, *&gt;?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner A appendTo(A, java.util.Iterator&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;A : Appendable?&gt; appendTo(appendable : A, parts : Iterator&lt;out Map.Entry&lt;*, *&gt;?&gt;) : A&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner A appendTo(A, java.util.Map&lt;?,?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;A : Appendable?&gt; appendTo(appendable : A, map : Map&lt;*, *&gt;) : A&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendTo(builder : StringBuilder, entries : Iterable&lt;out Map.Entry&lt;*, *&gt;?&gt;) : StringBuilder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, I)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;I&gt; appendTo(builder : StringBuilder, entries : I) : StringBuilder where I : Any?, I : Iterable&lt;out Map.Entry&lt;*, *&gt;?&gt;?, I : Iterator&lt;out Map.Entry&lt;*, *&gt;?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.util.Iterator&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendTo(builder : StringBuilder, entries : Iterator&lt;out Map.Entry&lt;*, *&gt;?&gt;) : StringBuilder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.util.Map&lt;?,?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendTo(builder : StringBuilder, map : Map&lt;*, *&gt;) : StringBuilder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.String join(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(entries : Iterable&lt;out Map.Entry&lt;*, *&gt;?&gt;) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.String join(I)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;I&gt; join(entries : I) : String? where I : Any?, I : Iterable&lt;out Map.Entry&lt;*, *&gt;?&gt;?, I : Iterator&lt;out Map.Entry&lt;*, *&gt;?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.String join(java.util.Iterator&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(entries : Iterator&lt;out Map.Entry&lt;*, *&gt;?&gt;) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.String join(java.util.Map&lt;?,?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(map : Map&lt;*, *&gt;) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner com.google.common.base.Joiner.MapJoiner useForNull(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun useForNull(nullText : String) : Joiner.MapJoiner&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner Joiner(com.google.common.base.Joiner)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Joiner(prototype : Joiner)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner Joiner(com.google.common.base.Joiner, com.google.common.base.Joiner.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Joiner(x0 : Joiner, x1 : Joiner.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner Joiner(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Joiner(separator : String)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner java.lang.String access$100(com.google.common.base.Joiner)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : Joiner) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner A appendTo(A, java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;A : Appendable?&gt; appendTo(appendable : A, parts : Iterable&lt;*&gt;) : A&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner A appendTo(A, I)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;A : Appendable?, I&gt; appendTo(appendable : A, parts : I) : A where I : Any?, I : Iterable&lt;*&gt;?, I : Iterator&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner A appendTo(A, java.lang.Object, java.lang.Object, java.lang.Object...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;A : Appendable?&gt; appendTo(p0 : A, p1 : Any?, p2 : Any?, vararg p3 : Any) : A&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner A appendTo(A, java.util.Iterator&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;A : Appendable?&gt; appendTo(appendable : A, parts : Iterator&lt;*&gt;) : A&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner A appendTo(A, java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;A : Appendable?&gt; appendTo(appendable : A, parts : Array&lt;out Any?&gt;?) : A&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendTo(builder : StringBuilder, parts : Iterable&lt;*&gt;) : StringBuilder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, I)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;I&gt; appendTo(builder : StringBuilder, parts : I) : StringBuilder where I : Any?, I : Iterable&lt;*&gt;?, I : Iterator&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Object, java.lang.Object, java.lang.Object...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendTo(p0 : StringBuilder, p1 : Any?, p2 : Any?, vararg p3 : Any) : StringBuilder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.util.Iterator&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendTo(builder : StringBuilder, parts : Iterator&lt;*&gt;) : StringBuilder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun appendTo(builder : StringBuilder, parts : Array&lt;out Any?&gt;?) : StringBuilder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner java.lang.Iterable&lt;java.lang.Object&gt; iterable(java.lang.Object, java.lang.Object, java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterable(first : Any?, second : Any?, rest : Array&lt;out Any?&gt;) : MutableIterable&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner java.lang.String join(java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(parts : Iterable&lt;*&gt;) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner java.lang.String join(I)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;I&gt; join(parts : I) : String? where I : Any?, I : Iterable&lt;*&gt;?, I : Iterator&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner java.lang.String join(java.lang.Object, java.lang.Object, java.lang.Object...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(p0 : Any?, p1 : Any?, vararg p2 : Any) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner java.lang.String join(java.util.Iterator&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(parts : Iterator&lt;*&gt;) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner com.google.common.base.Joiner on(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun on(separator : Char) : Joiner&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner com.google.common.base.Joiner on(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun on(separator : String) : Joiner&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner com.google.common.base.Joiner skipNulls()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun skipNulls() : Joiner&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner java.lang.CharSequence toString(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString(part : Any) : CharSequence?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner com.google.common.base.Joiner useForNull(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun useForNull(nullText : String) : Joiner&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Joiner com.google.common.base.Joiner.MapJoiner withKeyValueSeparator(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withKeyValueSeparator(keyValueSeparator : String) : Joiner.MapJoiner&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.MediumCharMatcher com.google.common.base.CharMatcher from(char[], java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun from(chars : CharArray, description : String?) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.MediumCharMatcher com.google.common.base.CharMatcher precomputed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun precomputed() : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper ToStringHelper(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ToStringHelper(className : String)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper ToStringHelper(java.lang.String, com.google.common.base.Objects.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ToStringHelper(x0 : String, x1 : Objects.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(name : String, value : Char) : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(name : String, value : Double) : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(name : String, value : Float) : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(name : String, value : Int) : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(name : String, value : Long) : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(name : String, value : Any?) : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(name : String, value : Boolean) : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper.ValueHolder addHolder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addHolder() : Objects.ToStringHelper.ValueHolder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper.ValueHolder addHolder(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addHolder(value : Any?) : Objects.ToStringHelper.ValueHolder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper addValue(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addValue(value : Char) : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper addValue(double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addValue(value : Double) : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper addValue(float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addValue(value : Float) : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper addValue(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addValue(value : Int) : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper addValue(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addValue(value : Long) : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper addValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addValue(value : Any?) : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper addValue(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addValue(value : Boolean) : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper java.lang.StringBuilder checkNameAndAppend(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkNameAndAppend(name : String) : StringBuilder?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper omitNullValues()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun omitNullValues() : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects boolean equal(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equal(a : Any?, b : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects T firstNonNull(T, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; firstNonNull(first : T?, second : T?) : T&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects int hashCode(java.lang.Object...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashCode(vararg objects : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects java.lang.String simpleName(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun simpleName(clazz : Class&lt;*&gt;) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects com.google.common.base.Objects.ToStringHelper toStringHelper(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStringHelper(clazz : Class&lt;*&gt;) : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects com.google.common.base.Objects.ToStringHelper toStringHelper(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStringHelper(self : Any) : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects com.google.common.base.Objects.ToStringHelper toStringHelper(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStringHelper(className : String) : Objects.ToStringHelper&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Optional.1 java.util.Iterator&lt;T&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Optional com.google.common.base.Optional&lt;T&gt; absent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; absent() : Optional&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Optional boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Optional com.google.common.base.Optional&lt;T&gt; fromNullable(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; fromNullable(p0 : T?) : Optional&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Optional com.google.common.base.Optional&lt;T&gt; of(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; of(reference : T) : Optional&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Optional com.google.common.base.Optional&lt;T&gt; or(com.google.common.base.Optional&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun or(p0 : Optional&lt;out T&gt;) : Optional&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Optional T or(com.google.common.base.Supplier&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun or(p0 : Supplier&lt;out T&gt;) : T&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Optional T or(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun or(p0 : T) : T&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Optional T orNull()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun orNull() : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Optional java.lang.Iterable&lt;T&gt; presentInstances(java.lang.Iterable&lt;? extends com.google.common.base.Optional&lt;? extends T&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; presentInstances(optionals : Iterable&lt;out Optional&lt;out T&gt;?&gt;) : MutableIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Optional java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Optional com.google.common.base.Optional&lt;V&gt; transform(com.google.common.base.Function&lt;? super T,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; transform(p0 : Function&lt;in T, V&gt;) : Optional&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.PairwiseEquivalence PairwiseEquivalence(com.google.common.base.Equivalence&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PairwiseEquivalence(elementEquivalence : Equivalence&lt;in T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.PairwiseEquivalence boolean doEquivalent(java.lang.Iterable&lt;T&gt;, java.lang.Iterable&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doEquivalent(iterableA : Iterable&lt;T&gt;, iterableB : Iterable&lt;T&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.PairwiseEquivalence boolean doEquivalent(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doEquivalent(x0 : Any, x1 : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.PairwiseEquivalence int doHash(java.lang.Iterable&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doHash(iterable : Iterable&lt;T&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.PairwiseEquivalence int doHash(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun doHash(x0 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.PairwiseEquivalence boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Platform.1 java.lang.Object initialValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initialValue() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Platform.1 char[] initialValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initialValue() : CharArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Platform com.google.common.base.CharMatcher precomputeCharMatcher(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun precomputeCharMatcher(matcher : CharMatcher) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Preconditions void checkArgument(boolean, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkArgument(expression : Boolean, errorMessage : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Preconditions void checkArgument(boolean, java.lang.String, java.lang.Object...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkArgument(expression : Boolean, errorMessageTemplate : String?, vararg errorMessageArgs : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Preconditions int checkElementIndex(int, int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkElementIndex(index : Int, size : Int, desc : String?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Preconditions T checkNotNull(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; checkNotNull(reference : T) : T&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Preconditions T checkNotNull(T, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; checkNotNull(reference : T, errorMessage : Any?) : T&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Preconditions T checkNotNull(T, java.lang.String, java.lang.Object...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; checkNotNull(reference : T, errorMessageTemplate : String?, vararg errorMessageArgs : Any?) : T&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Preconditions int checkPositionIndex(int, int, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkPositionIndex(index : Int, size : Int, desc : String?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Preconditions void checkState(boolean, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkState(expression : Boolean, errorMessage : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Preconditions void checkState(boolean, java.lang.String, java.lang.Object...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkState(expression : Boolean, errorMessageTemplate : String?, vararg errorMessageArgs : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Preconditions java.lang.String format(java.lang.String, java.lang.Object...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun format(template : String?, vararg args : Any) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicate boolean apply(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : T?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicate boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.AndPredicate boolean apply(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : T?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.AndPredicate boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.AssignableFromPredicate AssignableFromPredicate(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AssignableFromPredicate(clazz : Class&lt;*&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.AssignableFromPredicate AssignableFromPredicate(java.lang.Class, com.google.common.base.Predicates.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AssignableFromPredicate(x0 : Class, x1 : Predicates.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.AssignableFromPredicate boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.AssignableFromPredicate boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.CompositionPredicate CompositionPredicate(com.google.common.base.Predicate&lt;B&gt;, com.google.common.base.Function&lt;A,? extends B&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CompositionPredicate(p : Predicate&lt;B&gt;, f : Function&lt;A, out B&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.CompositionPredicate CompositionPredicate(com.google.common.base.Predicate, com.google.common.base.Function, com.google.common.base.Predicates.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CompositionPredicate(x0 : Predicate, x1 : Function, x2 : Predicates.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.CompositionPredicate boolean apply(A)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : A?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.CompositionPredicate boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.ContainsPatternPredicate ContainsPatternPredicate(java.util.regex.Pattern)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ContainsPatternPredicate(pattern : Pattern)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.ContainsPatternPredicate boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.ContainsPatternPredicate boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.InPredicate InPredicate(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun InPredicate(target : Collection&lt;*&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.InPredicate InPredicate(java.util.Collection, com.google.common.base.Predicates.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun InPredicate(x0 : Collection, x1 : Predicates.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.InPredicate boolean apply(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : T?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.InPredicate boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.InstanceOfPredicate InstanceOfPredicate(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun InstanceOfPredicate(clazz : Class&lt;*&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.InstanceOfPredicate InstanceOfPredicate(java.lang.Class, com.google.common.base.Predicates.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun InstanceOfPredicate(x0 : Class, x1 : Predicates.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.InstanceOfPredicate boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.InstanceOfPredicate boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.IsEqualToPredicate boolean apply(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : T?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.IsEqualToPredicate boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.NotPredicate NotPredicate(com.google.common.base.Predicate&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun NotPredicate(predicate : Predicate&lt;T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.NotPredicate boolean apply(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : T?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.NotPredicate boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.ObjectPredicate.1 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.ObjectPredicate.2 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.ObjectPredicate.3 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.ObjectPredicate.4 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.ObjectPredicate com.google.common.base.Predicate&lt;T&gt; withNarrowedType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; withNarrowedType() : Predicate&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.OrPredicate boolean apply(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : T?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates.OrPredicate boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Joiner access$800()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$800() : Joiner&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; alwaysFalse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; alwaysFalse() : Predicate&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; alwaysTrue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; alwaysTrue() : Predicate&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; and(com.google.common.base.Predicate&lt;? super T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; and(first : Predicate&lt;in T&gt;, second : Predicate&lt;in T&gt;) : Predicate&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; and(java.lang.Iterable&lt;? extends com.google.common.base.Predicate&lt;? super T&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; and(components : Iterable&lt;out Predicate&lt;in T&gt;?&gt;) : Predicate&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; and(com.google.common.base.Predicate&lt;? super T&gt;...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; and(vararg components : Predicate&lt;in T&gt;?) : Predicate&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;java.lang.Class&lt;?&gt;&gt; assignableFrom(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun assignableFrom(clazz : Class&lt;*&gt;) : Predicate&lt;Class&lt;*&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;A&gt; compose(com.google.common.base.Predicate&lt;B&gt;, com.google.common.base.Function&lt;A,? extends B&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;A, B&gt; compose(predicate : Predicate&lt;B&gt;, function : Function&lt;A, out B&gt;) : Predicate&lt;A&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;java.lang.CharSequence&gt; contains(java.util.regex.Pattern)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(pattern : Pattern) : Predicate&lt;CharSequence?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;java.lang.CharSequence&gt; containsPattern(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsPattern(pattern : String?) : Predicate&lt;CharSequence?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates java.util.List&lt;T&gt; defensiveCopy(java.lang.Iterable&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; defensiveCopy(iterable : Iterable&lt;T&gt;) : MutableList&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates java.util.List&lt;T&gt; defensiveCopy(T...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; defensiveCopy(vararg array : T?) : MutableList&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; equalTo(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; equalTo(target : T?) : Predicate&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; in(java.util.Collection&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; in(target : Collection&lt;out T&gt;) : Predicate&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;java.lang.Object&gt; instanceOf(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun instanceOf(clazz : Class&lt;*&gt;) : Predicate&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; isNull()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; isNull() : Predicate&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; not(com.google.common.base.Predicate&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; not(predicate : Predicate&lt;T&gt;) : Predicate&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; notNull()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; notNull() : Predicate&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; or(com.google.common.base.Predicate&lt;? super T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; or(first : Predicate&lt;in T&gt;, second : Predicate&lt;in T&gt;) : Predicate&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; or(java.lang.Iterable&lt;? extends com.google.common.base.Predicate&lt;? super T&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; or(components : Iterable&lt;out Predicate&lt;in T&gt;?&gt;) : Predicate&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; or(com.google.common.base.Predicate&lt;? super T&gt;...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; or(vararg components : Predicate&lt;in T&gt;?) : Predicate&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Present boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Present com.google.common.base.Optional&lt;T&gt; or(com.google.common.base.Optional&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun or(secondChoice : Optional&lt;out T&gt;) : Optional&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Present T or(com.google.common.base.Supplier&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun or(supplier : Supplier&lt;out T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Present T or(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun or(defaultValue : T) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Present com.google.common.base.Optional&lt;V&gt; transform(com.google.common.base.Function&lt;? super T,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; transform(function : Function&lt;in T, V&gt;) : Optional&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.SmallCharMatcher char[] buildTable(int, char[], boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildTable(modulus : Int, allChars : CharArray, reprobe : Boolean) : CharArray?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.SmallCharMatcher com.google.common.base.CharMatcher from(char[], java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun from(chars : CharArray, description : String?) : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.SmallCharMatcher com.google.common.base.CharMatcher precomputed()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun precomputed() : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter.1.1 1(com.google.common.base.Splitter.1, com.google.common.base.Splitter, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Splitter, x1 : CharSequence?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter.1 com.google.common.base.Splitter.SplittingIterator iterator(com.google.common.base.Splitter, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator(splitter : Splitter, toSplit : CharSequence?) : Splitter.SplittingIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter.1 java.util.Iterator iterator(com.google.common.base.Splitter, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator(x0 : Splitter, x1 : CharSequence?) : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter.2.1 1(com.google.common.base.Splitter.2, com.google.common.base.Splitter, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Splitter, x1 : CharSequence?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter.2 com.google.common.base.Splitter.SplittingIterator iterator(com.google.common.base.Splitter, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator(splitter : Splitter, toSplit : CharSequence?) : Splitter.SplittingIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter.2 java.util.Iterator iterator(com.google.common.base.Splitter, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator(x0 : Splitter, x1 : CharSequence?) : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter.3.1 1(com.google.common.base.Splitter.3, com.google.common.base.Splitter, java.lang.CharSequence, java.util.regex.Matcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Splitter, x1 : CharSequence?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter.3 com.google.common.base.Splitter.SplittingIterator iterator(com.google.common.base.Splitter, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator(splitter : Splitter, toSplit : CharSequence?) : Splitter.SplittingIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter.3 java.util.Iterator iterator(com.google.common.base.Splitter, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator(x0 : Splitter, x1 : CharSequence?) : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter.4.1 1(com.google.common.base.Splitter.4, com.google.common.base.Splitter, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Splitter, x1 : CharSequence?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter.4 com.google.common.base.Splitter.SplittingIterator iterator(com.google.common.base.Splitter, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator(splitter : Splitter, toSplit : CharSequence?) : Splitter.SplittingIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter.4 java.util.Iterator iterator(com.google.common.base.Splitter, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator(x0 : Splitter, x1 : CharSequence?) : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter.MapSplitter MapSplitter(com.google.common.base.Splitter, com.google.common.base.Splitter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MapSplitter(outerSplitter : Splitter?, entrySplitter : Splitter)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter.MapSplitter MapSplitter(com.google.common.base.Splitter, com.google.common.base.Splitter, com.google.common.base.Splitter.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MapSplitter(x0 : Splitter?, x1 : Splitter, x2 : Splitter.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter.MapSplitter java.util.Map&lt;java.lang.String,java.lang.String&gt; split(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun split(sequence : CharSequence) : MutableMap&lt;String?, String?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter.SplittingIterator SplittingIterator(com.google.common.base.Splitter, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SplittingIterator(splitter : Splitter, toSplit : CharSequence?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter.Strategy java.util.Iterator&lt;java.lang.String&gt; iterator(com.google.common.base.Splitter, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator(p0 : Splitter, p1 : CharSequence?) : MutableIterator&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter java.util.Iterator access$000(com.google.common.base.Splitter, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : Splitter, x1 : CharSequence?) : MutableIterator?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.CharMatcher access$200(com.google.common.base.Splitter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : Splitter) : CharMatcher?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter boolean access$300(com.google.common.base.Splitter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : Splitter) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter int access$400(com.google.common.base.Splitter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : Splitter) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter fixedLength(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fixedLength(length : Int) : Splitter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter limit(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun limit(limit : Int) : Splitter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter omitEmptyStrings()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun omitEmptyStrings() : Splitter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter on(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun on(separator : Char) : Splitter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter on(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun on(separatorMatcher : CharMatcher) : Splitter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter on(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun on(separator : String) : Splitter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter on(java.util.regex.Pattern)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun on(separatorPattern : Pattern) : Splitter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter onPattern(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun onPattern(separatorPattern : String?) : Splitter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter java.lang.Iterable&lt;java.lang.String&gt; split(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun split(sequence : CharSequence) : MutableIterable&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter trimResults()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun trimResults() : Splitter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter trimResults(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun trimResults(trimmer : CharMatcher) : Splitter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter.MapSplitter withKeyValueSeparator(com.google.common.base.Splitter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withKeyValueSeparator(keyValueSplitter : Splitter) : Splitter.MapSplitter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter.MapSplitter withKeyValueSeparator(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withKeyValueSeparator(separator : String) : Splitter.MapSplitter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Stopwatch Stopwatch(com.google.common.base.Ticker)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Stopwatch(ticker : Ticker)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Stopwatch java.lang.String abbreviate(java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun abbreviate(unit : TimeUnit) : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Stopwatch long elapsedTime(java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elapsedTime(desiredUnit : TimeUnit) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Stopwatch com.google.common.base.Stopwatch reset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reset() : Stopwatch&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Stopwatch com.google.common.base.Stopwatch start()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun start() : Stopwatch&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Stopwatch com.google.common.base.Stopwatch stop()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun stop() : Stopwatch&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Strings java.lang.String commonPrefix(java.lang.CharSequence, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun commonPrefix(a : CharSequence, b : CharSequence) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Strings java.lang.String commonSuffix(java.lang.CharSequence, java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun commonSuffix(a : CharSequence, b : CharSequence) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Strings java.lang.String emptyToNull(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun emptyToNull(p0 : String?) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Strings boolean isNullOrEmpty(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isNullOrEmpty(string : String?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Strings java.lang.String nullToEmpty(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun nullToEmpty(p0 : String?) : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Strings java.lang.String padEnd(java.lang.String, int, char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun padEnd(string : String, minLength : Int, padChar : Char) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Strings java.lang.String padStart(java.lang.String, int, char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun padStart(string : String, minLength : Int, padChar : Char) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Strings java.lang.String repeat(java.lang.String, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun repeat(string : String, count : Int) : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Supplier T get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Suppliers.ExpiringMemoizingSupplier ExpiringMemoizingSupplier(com.google.common.base.Supplier&lt;T&gt;, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ExpiringMemoizingSupplier(delegate : Supplier&lt;T&gt;, duration : Long, unit : TimeUnit)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Suppliers.SupplierComposition T get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Suppliers.SupplierFunction java.lang.Object apply(com.google.common.base.Supplier&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(input : Supplier&lt;*&gt;) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Suppliers.SupplierFunction java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Suppliers.SupplierFunction java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Suppliers.SupplierOfInstance SupplierOfInstance(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SupplierOfInstance(p0 : T?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Suppliers.SupplierOfInstance T get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Supplier&lt;T&gt; compose(com.google.common.base.Function&lt;? super F,T&gt;, com.google.common.base.Supplier&lt;F&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;F, T&gt; compose(function : Function&lt;in F, T&gt;, supplier : Supplier&lt;F&gt;) : Supplier&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Supplier&lt;T&gt; memoize(com.google.common.base.Supplier&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; memoize(delegate : Supplier&lt;T&gt;) : Supplier&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Supplier&lt;T&gt; memoizeWithExpiration(com.google.common.base.Supplier&lt;T&gt;, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; memoizeWithExpiration(delegate : Supplier&lt;T&gt;, duration : Long, unit : TimeUnit) : Supplier&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Supplier&lt;T&gt; ofInstance(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; ofInstance(p0 : T?) : Supplier&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Function&lt;com.google.common.base.Supplier&lt;T&gt;,T&gt; supplierFunction()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; supplierFunction() : Function&lt;Supplier&lt;T&gt;?, T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Supplier&lt;T&gt; synchronizedSupplier(com.google.common.base.Supplier&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; synchronizedSupplier(delegate : Supplier&lt;T&gt;) : Supplier&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Throwables java.lang.Throwable getRootCause(java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRootCause(throwable : Throwable) : Throwable&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Throwables java.lang.String getStackTraceAsString(java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getStackTraceAsString(throwable : Throwable) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Throwables void propagateIfInstanceOf(java.lang.Throwable, java.lang.Class&lt;X&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;X : Throwable?&gt; propagateIfInstanceOf(throwable : Throwable?, declaredType : Class&lt;X&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Throwables void propagateIfPossible(java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun propagateIfPossible(p0 : Throwable?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Throwables void propagateIfPossible(java.lang.Throwable, java.lang.Class&lt;X&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;X : Throwable?&gt; propagateIfPossible(p0 : Throwable?, p1 : Class&lt;X&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Throwables void propagateIfPossible(java.lang.Throwable, java.lang.Class&lt;X1&gt;, java.lang.Class&lt;X2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;X1 : Throwable?, X2 : Throwable?&gt; propagateIfPossible(p0 : Throwable?, p1 : Class&lt;X1&gt;?, p2 : Class&lt;X2&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Ticker com.google.common.base.Ticker systemTicker()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun systemTicker() : Ticker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.internal.Finalizer java.lang.reflect.Field getInheritableThreadLocalsField()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInheritableThreadLocalsField() : Field?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.base.internal.Finalizer java.lang.ref.ReferenceQueue&lt;java.lang.Object&gt; startFinalizer(java.lang.Class&lt;?&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun startFinalizer(finalizableReferenceClass : Class&lt;*&gt;, frq : Any?) : ReferenceQueue&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.AbstractCache.SimpleStatsCounter void incrementBy(com.google.common.cache.AbstractCache.StatsCounter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun incrementBy(other : AbstractCache.StatsCounter) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.AbstractCache.SimpleStatsCounter com.google.common.cache.CacheStats snapshot()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun snapshot() : CacheStats&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.AbstractCache.StatsCounter com.google.common.cache.CacheStats snapshot()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun snapshot() : CacheStats&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.AbstractCache V get(K, java.util.concurrent.Callable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K, p1 : Callable&lt;out V&gt;) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.AbstractCache com.google.common.collect.ImmutableMap&lt;K,V&gt; getAllPresent(java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAllPresent(keys : Iterable&lt;*&gt;) : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.AbstractCache void invalidate(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun invalidate(p0 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.AbstractCache void invalidateAll(java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun invalidateAll(keys : Iterable&lt;*&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.AbstractCache void put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K, p1 : V) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.AbstractCache void putAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(m : Map&lt;out K, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.AbstractLoadingCache V apply(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : K?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.AbstractLoadingCache com.google.common.collect.ImmutableMap&lt;K,V&gt; getAll(java.lang.Iterable&lt;? extends K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAll(keys : Iterable&lt;out K&gt;) : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.AbstractLoadingCache V getUnchecked(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getUnchecked(p0 : K) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.AbstractLoadingCache void refresh(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun refresh(p0 : K) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.Cache V get(K, java.util.concurrent.Callable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K, p1 : Callable&lt;out V&gt;) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.Cache com.google.common.collect.ImmutableMap&lt;K,V&gt; getAllPresent(java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAllPresent(p0 : Iterable&lt;*&gt;) : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.Cache V getIfPresent(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getIfPresent(p0 : Any) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.Cache void invalidate(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun invalidate(p0 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.Cache void invalidateAll(java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun invalidateAll(p0 : Iterable&lt;*&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.Cache void put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K, p1 : V) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.Cache void putAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Map&lt;out K, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.Cache com.google.common.cache.CacheStats stats()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun stats() : CacheStats&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder.1 com.google.common.cache.CacheStats snapshot()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun snapshot() : CacheStats&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder.2 com.google.common.cache.AbstractCache.StatsCounter get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : AbstractCache.StatsCounter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder.2 java.lang.Object get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.Cache&lt;K1,V1&gt; build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K1 : K, V1 : V&gt; build() : Cache&lt;K1, V1&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.LoadingCache&lt;K1,V1&gt; build(com.google.common.cache.CacheLoader&lt;? super K1,V1&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K1 : K, V1 : V&gt; build(loader : CacheLoader&lt;in K1, V1&gt;) : LoadingCache&lt;K1, V1&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; concurrencyLevel(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun concurrencyLevel(concurrencyLevel : Int) : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; expireAfterAccess(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun expireAfterAccess(duration : Long, unit : TimeUnit) : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; expireAfterWrite(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun expireAfterWrite(duration : Long, unit : TimeUnit) : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;java.lang.Object,java.lang.Object&gt; from(com.google.common.cache.CacheBuilderSpec)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun from(spec : CacheBuilderSpec) : CacheBuilder&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;java.lang.Object,java.lang.Object&gt; from(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun from(spec : String) : CacheBuilder&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.base.Equivalence&lt;java.lang.Object&gt; getKeyEquivalence()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKeyEquivalence() : Equivalence&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.LocalCache.Strength getKeyStrength()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKeyStrength() : LocalCache.Strength&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.RemovalListener&lt;K1,V1&gt; getRemovalListener()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K1 : K, V1 : V&gt; getRemovalListener() : RemovalListener&lt;K1, V1&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.base.Equivalence&lt;java.lang.Object&gt; getValueEquivalence()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValueEquivalence() : Equivalence&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.LocalCache.Strength getValueStrength()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValueStrength() : LocalCache.Strength&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.Weigher&lt;K1,V1&gt; getWeigher()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K1 : K, V1 : V&gt; getWeigher() : Weigher&lt;K1, V1&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; initialCapacity(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initialCapacity(initialCapacity : Int) : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; keyEquivalence(com.google.common.base.Equivalence&lt;java.lang.Object&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keyEquivalence(equivalence : Equivalence&lt;Any?&gt;) : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; lenientParsing()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lenientParsing() : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; maximumSize(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun maximumSize(size : Long) : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; maximumWeight(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun maximumWeight(weight : Long) : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;java.lang.Object,java.lang.Object&gt; newBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newBuilder() : CacheBuilder&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; recordStats()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun recordStats() : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; refreshAfterWrite(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun refreshAfterWrite(duration : Long, unit : TimeUnit) : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K1,V1&gt; removalListener(com.google.common.cache.RemovalListener&lt;? super K1,? super V1&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K1 : K, V1 : V&gt; removalListener(listener : RemovalListener&lt;in K1, in V1&gt;) : CacheBuilder&lt;K1, V1&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; setKeyStrength(com.google.common.cache.LocalCache.Strength)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setKeyStrength(strength : LocalCache.Strength) : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; setValueStrength(com.google.common.cache.LocalCache.Strength)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValueStrength(strength : LocalCache.Strength) : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; softValues()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun softValues() : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; strongKeys()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun strongKeys() : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; strongValues()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun strongValues() : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; ticker(com.google.common.base.Ticker)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ticker(ticker : Ticker) : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; valueEquivalence(com.google.common.base.Equivalence&lt;java.lang.Object&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueEquivalence(equivalence : Equivalence&lt;Any?&gt;) : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; weakKeys()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun weakKeys() : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K,V&gt; weakValues()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun weakValues() : CacheBuilder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilder com.google.common.cache.CacheBuilder&lt;K1,V1&gt; weigher(com.google.common.cache.Weigher&lt;? super K1,? super V1&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K1 : K, V1 : V&gt; weigher(weigher : Weigher&lt;in K1, in V1&gt;) : CacheBuilder&lt;K1, V1&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec.AccessDurationParser void parseDuration(com.google.common.cache.CacheBuilderSpec, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDuration(spec : CacheBuilderSpec, duration : Long, unit : TimeUnit?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec.ConcurrencyLevelParser void parseInteger(com.google.common.cache.CacheBuilderSpec, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseInteger(spec : CacheBuilderSpec, value : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec.DurationParser void parse(com.google.common.cache.CacheBuilderSpec, java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parse(spec : CacheBuilderSpec, key : String?, value : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec.DurationParser void parseDuration(com.google.common.cache.CacheBuilderSpec, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDuration(p0 : CacheBuilderSpec, p1 : Long, p2 : TimeUnit?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec.InitialCapacityParser void parseInteger(com.google.common.cache.CacheBuilderSpec, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseInteger(spec : CacheBuilderSpec, value : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec.IntegerParser void parse(com.google.common.cache.CacheBuilderSpec, java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parse(p0 : CacheBuilderSpec, p1 : String?, p2 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec.IntegerParser void parseInteger(com.google.common.cache.CacheBuilderSpec, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseInteger(p0 : CacheBuilderSpec, p1 : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec.KeyStrengthParser void parse(com.google.common.cache.CacheBuilderSpec, java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parse(p0 : CacheBuilderSpec, p1 : String?, p2 : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec.LongParser void parse(com.google.common.cache.CacheBuilderSpec, java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parse(p0 : CacheBuilderSpec, p1 : String?, p2 : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec.LongParser void parseLong(com.google.common.cache.CacheBuilderSpec, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseLong(p0 : CacheBuilderSpec, p1 : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec.MaximumSizeParser void parseLong(com.google.common.cache.CacheBuilderSpec, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseLong(spec : CacheBuilderSpec, value : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec.MaximumWeightParser void parseLong(com.google.common.cache.CacheBuilderSpec, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseLong(spec : CacheBuilderSpec, value : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec.RefreshDurationParser void parseDuration(com.google.common.cache.CacheBuilderSpec, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDuration(spec : CacheBuilderSpec, duration : Long, unit : TimeUnit?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec.ValueParser void parse(com.google.common.cache.CacheBuilderSpec, java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parse(p0 : CacheBuilderSpec, p1 : String?, p2 : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec.ValueStrengthParser void parse(com.google.common.cache.CacheBuilderSpec, java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parse(p0 : CacheBuilderSpec, p1 : String?, p2 : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec.WriteDurationParser void parseDuration(com.google.common.cache.CacheBuilderSpec, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseDuration(spec : CacheBuilderSpec, duration : Long, unit : TimeUnit?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec com.google.common.cache.CacheBuilderSpec disableCaching()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun disableCaching() : CacheBuilderSpec&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec java.lang.Long durationInNanos(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun durationInNanos(duration : Long, unit : TimeUnit?) : Long?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec com.google.common.cache.CacheBuilderSpec parse(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parse(cacheBuilderSpecification : String) : CacheBuilderSpec&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheBuilderSpec com.google.common.cache.CacheBuilder&lt;java.lang.Object,java.lang.Object&gt; toCacheBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toCacheBuilder() : CacheBuilder&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheLoader.FunctionToCacheLoader FunctionToCacheLoader(com.google.common.base.Function&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FunctionToCacheLoader(computingFunction : Function&lt;K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheLoader.FunctionToCacheLoader V load(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun load(key : K) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheLoader.SupplierToCacheLoader SupplierToCacheLoader(com.google.common.base.Supplier&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SupplierToCacheLoader(computingSupplier : Supplier&lt;V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheLoader.SupplierToCacheLoader V load(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun load(p0 : Any) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheLoader com.google.common.cache.CacheLoader&lt;K,V&gt; from(com.google.common.base.Function&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; from(function : Function&lt;K, V&gt;) : CacheLoader&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheLoader com.google.common.cache.CacheLoader&lt;java.lang.Object,V&gt; from(com.google.common.base.Supplier&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; from(supplier : Supplier&lt;V&gt;) : CacheLoader&lt;Any?, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheLoader V load(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun load(p0 : K) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheLoader com.google.common.util.concurrent.ListenableFuture&lt;V&gt; reload(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reload(key : K?, oldValue : V?) : ListenableFuture&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheStats boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheStats com.google.common.cache.CacheStats minus(com.google.common.cache.CacheStats)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun minus(other : CacheStats) : CacheStats&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.CacheStats com.google.common.cache.CacheStats plus(com.google.common.cache.CacheStats)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun plus(other : CacheStats) : CacheStats&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingCache.SimpleForwardingCache SimpleForwardingCache(com.google.common.cache.Cache&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SimpleForwardingCache(delegate : Cache&lt;K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingCache.SimpleForwardingCache com.google.common.cache.Cache&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Cache&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingCache.SimpleForwardingCache java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingCache com.google.common.cache.Cache&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Cache&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingCache java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingCache V get(K, java.util.concurrent.Callable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K, p1 : Callable&lt;out V&gt;) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingCache com.google.common.collect.ImmutableMap&lt;K,V&gt; getAllPresent(java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAllPresent(p0 : Iterable&lt;*&gt;) : ImmutableMap&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingCache V getIfPresent(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getIfPresent(p0 : Any) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingCache void invalidate(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun invalidate(p0 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingCache void invalidateAll(java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun invalidateAll(p0 : Iterable&lt;*&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingCache void put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K, p1 : V) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingCache void putAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Map&lt;out K, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingLoadingCache.SimpleForwardingLoadingCache SimpleForwardingLoadingCache(com.google.common.cache.LoadingCache&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SimpleForwardingLoadingCache(delegate : LoadingCache&lt;K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingLoadingCache.SimpleForwardingLoadingCache com.google.common.cache.Cache delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Cache&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingLoadingCache.SimpleForwardingLoadingCache com.google.common.cache.LoadingCache&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : LoadingCache&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingLoadingCache.SimpleForwardingLoadingCache java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingLoadingCache V apply(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : K?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingLoadingCache com.google.common.cache.Cache delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Cache&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingLoadingCache com.google.common.cache.LoadingCache&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : LoadingCache&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingLoadingCache java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingLoadingCache V get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingLoadingCache com.google.common.collect.ImmutableMap&lt;K,V&gt; getAll(java.lang.Iterable&lt;? extends K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAll(p0 : Iterable&lt;out K&gt;) : ImmutableMap&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingLoadingCache V getUnchecked(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getUnchecked(p0 : K) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.ForwardingLoadingCache void refresh(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun refresh(p0 : K) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LoadingCache V apply(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : K?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LoadingCache V get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LoadingCache com.google.common.collect.ImmutableMap&lt;K,V&gt; getAll(java.lang.Iterable&lt;? extends K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAll(p0 : Iterable&lt;out K&gt;) : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LoadingCache V getUnchecked(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getUnchecked(p0 : K) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LoadingCache void refresh(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun refresh(p0 : K) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.1 com.google.common.cache.LocalCache.ValueReference&lt;java.lang.Object,java.lang.Object&gt; copyFor(java.lang.ref.ReferenceQueue&lt;java.lang.Object&gt;, java.lang.Object, com.google.common.cache.LocalCache.ReferenceEntry&lt;java.lang.Object,java.lang.Object&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFor(p0 : ReferenceQueue&lt;Any?&gt;?, p1 : Any?, p2 : LocalCache.ReferenceEntry&lt;Any?, Any?&gt;?) : LocalCache.ValueReference&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.1 java.lang.Object get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.1 com.google.common.cache.LocalCache.ReferenceEntry&lt;java.lang.Object,java.lang.Object&gt; getEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEntry() : LocalCache.ReferenceEntry&lt;Any?, Any?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.1 void notifyNewValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun notifyNewValue(p0 : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.1 java.lang.Object waitForValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun waitForValue() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.2 java.util.Iterator&lt;java.lang.Object&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.2 java.lang.Object peek()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun peek() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.2 java.lang.Object poll()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun poll() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.AccessQueue.2 com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; computeNext(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeNext(previous : LocalCache.ReferenceEntry&lt;K, V&gt;) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.AccessQueue.2 java.lang.Object computeNext(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeNext(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.AccessQueue boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(o : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.AccessQueue java.util.Iterator&lt;com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;LocalCache.ReferenceEntry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.AccessQueue boolean offer(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun offer(entry : LocalCache.ReferenceEntry&lt;K, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.AccessQueue boolean offer(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun offer(x0 : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.AccessQueue com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; peek()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun peek() : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.AccessQueue java.lang.Object peek()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun peek() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.AccessQueue com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; poll()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun poll() : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.AccessQueue java.lang.Object poll()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun poll() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.AccessQueue boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(o : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory.1 com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : LocalCache.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory.2 com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEntry(segment : LocalCache.Segment&lt;K, V&gt;?, original : LocalCache.ReferenceEntry&lt;K, V&gt;, newNext : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory.2 com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : LocalCache.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory.3 com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEntry(segment : LocalCache.Segment&lt;K, V&gt;?, original : LocalCache.ReferenceEntry&lt;K, V&gt;, newNext : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory.3 com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : LocalCache.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory.4 com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEntry(segment : LocalCache.Segment&lt;K, V&gt;?, original : LocalCache.ReferenceEntry&lt;K, V&gt;, newNext : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory.4 com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : LocalCache.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory.5 com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : LocalCache.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory.6 com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEntry(segment : LocalCache.Segment&lt;K, V&gt;?, original : LocalCache.ReferenceEntry&lt;K, V&gt;, newNext : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory.6 com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : LocalCache.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory.7 com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEntry(segment : LocalCache.Segment&lt;K, V&gt;?, original : LocalCache.ReferenceEntry&lt;K, V&gt;, newNext : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory.7 com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : LocalCache.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory.8 com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEntry(segment : LocalCache.Segment&lt;K, V&gt;?, original : LocalCache.ReferenceEntry&lt;K, V&gt;, newNext : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory.8 com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : LocalCache.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory void copyAccessEntry(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyAccessEntry(original : LocalCache.ReferenceEntry&lt;K, V&gt;, newEntry : LocalCache.ReferenceEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEntry(segment : LocalCache.Segment&lt;K, V&gt;?, original : LocalCache.ReferenceEntry&lt;K, V&gt;, newNext : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory void copyWriteEntry(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyWriteEntry(original : LocalCache.ReferenceEntry&lt;K, V&gt;, newEntry : LocalCache.ReferenceEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryFactory com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : LocalCache.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntryIterator EntryIterator(com.google.common.cache.LocalCache)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun EntryIterator()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntrySet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.EntrySet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.HashIterator HashIterator(com.google.common.cache.LocalCache)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun HashIterator()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.HashIterator boolean advanceTo(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun advanceTo(entry : LocalCache.ReferenceEntry&lt;K, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.KeyIterator KeyIterator(com.google.common.cache.LocalCache)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun KeyIterator()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.KeySet java.util.Iterator&lt;K&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LoadingSerializationProxy LoadingSerializationProxy(com.google.common.cache.LocalCache&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun LoadingSerializationProxy(cache : LocalCache&lt;K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LoadingSerializationProxy V apply(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : K?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LoadingSerializationProxy V get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LoadingSerializationProxy com.google.common.collect.ImmutableMap&lt;K,V&gt; getAll(java.lang.Iterable&lt;? extends K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAll(p0 : Iterable&lt;out K&gt;) : ImmutableMap&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LoadingSerializationProxy V getUnchecked(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getUnchecked(p0 : K) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LoadingSerializationProxy void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(in : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LoadingSerializationProxy void refresh(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun refresh(p0 : K) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LoadingValueReference com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt; copyFor(java.lang.ref.ReferenceQueue&lt;V&gt;, V, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFor(p0 : ReferenceQueue&lt;V&gt;?, p1 : V?, p2 : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LoadingValueReference com.google.common.util.concurrent.ListenableFuture&lt;V&gt; fullyFailedFuture(java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fullyFailedFuture(t : Throwable?) : ListenableFuture&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LoadingValueReference V get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LoadingValueReference com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; getEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEntry() : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LoadingValueReference com.google.common.util.concurrent.ListenableFuture&lt;V&gt; loadFuture(K, com.google.common.cache.CacheLoader&lt;? super K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun loadFuture(key : K?, loader : CacheLoader&lt;in K, V&gt;?) : ListenableFuture&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LoadingValueReference void notifyNewValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun notifyNewValue(p0 : V?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LoadingValueReference boolean set(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(newValue : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalLoadingCache LocalLoadingCache(com.google.common.cache.CacheBuilder&lt;? super K,? super V&gt;, com.google.common.cache.CacheLoader&lt;? super K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun LocalLoadingCache(builder : CacheBuilder&lt;in K, in V&gt;, loader : CacheLoader&lt;in K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalLoadingCache V apply(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(key : K?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalLoadingCache V get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalLoadingCache com.google.common.collect.ImmutableMap&lt;K,V&gt; getAll(java.lang.Iterable&lt;? extends K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAll(keys : Iterable&lt;out K&gt;) : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalLoadingCache V getUnchecked(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getUnchecked(key : K) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalLoadingCache void refresh(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun refresh(key : K) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalLoadingCache java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalManualCache.1 V load(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun load(p0 : Any) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalManualCache LocalManualCache(com.google.common.cache.CacheBuilder&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun LocalManualCache(builder : CacheBuilder&lt;in K, in V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalManualCache V get(K, java.util.concurrent.Callable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K, valueLoader : Callable&lt;out V&gt;) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalManualCache com.google.common.collect.ImmutableMap&lt;K,V&gt; getAllPresent(java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAllPresent(keys : Iterable&lt;*&gt;) : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalManualCache V getIfPresent(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getIfPresent(p0 : Any) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalManualCache void invalidate(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun invalidate(key : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalManualCache void invalidateAll(java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun invalidateAll(keys : Iterable&lt;*&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalManualCache void put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(key : K, value : V) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalManualCache void putAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(m : Map&lt;out K, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalManualCache com.google.common.cache.CacheStats stats()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun stats() : CacheStats&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.LocalManualCache java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.ManualSerializationProxy ManualSerializationProxy(com.google.common.cache.LocalCache&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ManualSerializationProxy(cache : LocalCache&lt;K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.ManualSerializationProxy void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(in : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.ManualSerializationProxy com.google.common.cache.CacheBuilder&lt;java.lang.Object,java.lang.Object&gt; recreateCacheBuilder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun recreateCacheBuilder() : CacheBuilder&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.NullEntry java.lang.Object getKey()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKey() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.NullEntry com.google.common.cache.LocalCache.ReferenceEntry&lt;java.lang.Object,java.lang.Object&gt; getNext()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNext() : LocalCache.ReferenceEntry&lt;Any?, Any?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.NullEntry com.google.common.cache.LocalCache.ReferenceEntry&lt;java.lang.Object,java.lang.Object&gt; getNextInAccessQueue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNextInAccessQueue() : LocalCache.ReferenceEntry&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.NullEntry com.google.common.cache.LocalCache.ReferenceEntry&lt;java.lang.Object,java.lang.Object&gt; getNextInWriteQueue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNextInWriteQueue() : LocalCache.ReferenceEntry&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.NullEntry com.google.common.cache.LocalCache.ReferenceEntry&lt;java.lang.Object,java.lang.Object&gt; getPreviousInAccessQueue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPreviousInAccessQueue() : LocalCache.ReferenceEntry&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.NullEntry com.google.common.cache.LocalCache.ReferenceEntry&lt;java.lang.Object,java.lang.Object&gt; getPreviousInWriteQueue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPreviousInWriteQueue() : LocalCache.ReferenceEntry&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.NullEntry com.google.common.cache.LocalCache.ValueReference&lt;java.lang.Object,java.lang.Object&gt; getValueReference()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValueReference() : LocalCache.ValueReference&lt;Any?, Any?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.ReferenceEntry K getKey()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKey() : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.ReferenceEntry com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; getNext()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNext() : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.ReferenceEntry com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; getNextInAccessQueue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNextInAccessQueue() : LocalCache.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.ReferenceEntry com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; getNextInWriteQueue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNextInWriteQueue() : LocalCache.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.ReferenceEntry com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; getPreviousInAccessQueue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPreviousInAccessQueue() : LocalCache.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.ReferenceEntry com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; getPreviousInWriteQueue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPreviousInWriteQueue() : LocalCache.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.ReferenceEntry com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt; getValueReference()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValueReference() : LocalCache.ValueReference&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment Segment(com.google.common.cache.LocalCache&lt;K,V&gt;, int, long, com.google.common.cache.AbstractCache.StatsCounter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Segment(map : LocalCache&lt;K, V&gt;, initialCapacity : Int, maxSegmentWeight : Long, statsCounter : AbstractCache.StatsCounter?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyEntry(original : LocalCache.ReferenceEntry&lt;K, V&gt;, newNext : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment void enqueueNotification(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, com.google.common.cache.RemovalCause)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun enqueueNotification(entry : LocalCache.ReferenceEntry&lt;K, V&gt;, cause : RemovalCause) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment void enqueueNotification(K, int, com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt;, com.google.common.cache.RemovalCause)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun enqueueNotification(key : K?, hash : Int, valueReference : LocalCache.ValueReference&lt;K, V&gt;, cause : RemovalCause) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment V get(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?, p1 : Int) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment V getAndRecordStats(K, int, com.google.common.cache.LocalCache.LoadingValueReference&lt;K,V&gt;, com.google.common.util.concurrent.ListenableFuture&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAndRecordStats(key : K?, hash : Int, loadingValueReference : LocalCache.LoadingValueReference&lt;K, V&gt;, newValue : ListenableFuture&lt;V&gt;) : V&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; getEntry(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEntry(key : Any?, hash : Int) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; getLiveEntry(java.lang.Object, int, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLiveEntry(p0 : Any?, p1 : Int, p2 : Long) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment V getLiveValue(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLiveValue(entry : LocalCache.ReferenceEntry&lt;K, V&gt;, now : Long) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; getNextEvictable()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNextEvictable() : LocalCache.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment void initTable(java.util.concurrent.atomic.AtomicReferenceArray&lt;com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initTable(newTable : AtomicReferenceArray&lt;LocalCache.ReferenceEntry&lt;K, V&gt;?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment com.google.common.cache.LocalCache.LoadingValueReference&lt;K,V&gt; insertLoadingValueReference(K, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun insertLoadingValueReference(key : K?, hash : Int) : LocalCache.LoadingValueReference&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment com.google.common.util.concurrent.ListenableFuture&lt;V&gt; loadAsync(K, int, com.google.common.cache.LocalCache.LoadingValueReference&lt;K,V&gt;, com.google.common.cache.CacheLoader&lt;? super K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun loadAsync(key : K?, hash : Int, loadingValueReference : LocalCache.LoadingValueReference&lt;K, V&gt;, loader : CacheLoader&lt;in K, V&gt;?) : ListenableFuture&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment V loadSync(K, int, com.google.common.cache.LocalCache.LoadingValueReference&lt;K,V&gt;, com.google.common.cache.CacheLoader&lt;? super K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun loadSync(key : K?, hash : Int, loadingValueReference : LocalCache.LoadingValueReference&lt;K, V&gt;, loader : CacheLoader&lt;in K, V&gt;?) : V&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment V lockedGetOrLoad(K, int, com.google.common.cache.CacheLoader&lt;? super K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lockedGetOrLoad(key : K?, hash : Int, loader : CacheLoader&lt;in K, V&gt;?) : V&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; newEntry(K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newEntry(p0 : K?, p1 : Int, p2 : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment java.util.concurrent.atomic.AtomicReferenceArray&lt;com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;&gt; newEntryArray(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newEntryArray(size : Int) : AtomicReferenceArray&lt;LocalCache.ReferenceEntry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment V put(K, int, V, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K?, p1 : Int, p2 : V?, p3 : Boolean) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment V refresh(K, int, com.google.common.cache.CacheLoader&lt;? super K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun refresh(key : K?, hash : Int, loader : CacheLoader&lt;in K, V&gt;?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment V remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Int) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment void removeCollectedEntry(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeCollectedEntry(entry : LocalCache.ReferenceEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; removeEntryFromChain(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeEntryFromChain(first : LocalCache.ReferenceEntry&lt;K, V&gt;?, entry : LocalCache.ReferenceEntry&lt;K, V&gt;) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; removeValueFromChain(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, K, int, com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt;, com.google.common.cache.RemovalCause)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeValueFromChain(first : LocalCache.ReferenceEntry&lt;K, V&gt;?, entry : LocalCache.ReferenceEntry&lt;K, V&gt;?, key : K?, hash : Int, valueReference : LocalCache.ValueReference&lt;K, V&gt;, cause : RemovalCause) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment V replace(K, int, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(p0 : K?, p1 : Int, p2 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment void setValue(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, K, V, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValue(entry : LocalCache.ReferenceEntry&lt;K, V&gt;, key : K?, value : V?, now : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Segment V waitForLoadingValue(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, K, com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun waitForLoadingValue(e : LocalCache.ReferenceEntry&lt;K, V&gt;?, key : K?, valueReference : LocalCache.ValueReference&lt;K, V&gt;) : V&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.SoftValueReference com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt; copyFor(java.lang.ref.ReferenceQueue&lt;V&gt;, V, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFor(queue : ReferenceQueue&lt;V&gt;?, value : V?, entry : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.SoftValueReference void notifyNewValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun notifyNewValue(p0 : V?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Strength.1 com.google.common.base.Equivalence&lt;java.lang.Object&gt; defaultEquivalence()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun defaultEquivalence() : Equivalence&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Strength.1 com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt; referenceValue(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, V, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; referenceValue(segment : LocalCache.Segment&lt;K, V&gt;, entry : LocalCache.ReferenceEntry&lt;K, V&gt;?, value : V?, weight : Int) : LocalCache.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Strength.2 com.google.common.base.Equivalence&lt;java.lang.Object&gt; defaultEquivalence()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun defaultEquivalence() : Equivalence&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Strength.2 com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt; referenceValue(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, V, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; referenceValue(segment : LocalCache.Segment&lt;K, V&gt;, entry : LocalCache.ReferenceEntry&lt;K, V&gt;?, value : V?, weight : Int) : LocalCache.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Strength.3 com.google.common.base.Equivalence&lt;java.lang.Object&gt; defaultEquivalence()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun defaultEquivalence() : Equivalence&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Strength.3 com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt; referenceValue(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, V, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; referenceValue(segment : LocalCache.Segment&lt;K, V&gt;, entry : LocalCache.ReferenceEntry&lt;K, V&gt;?, value : V?, weight : Int) : LocalCache.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Strength com.google.common.base.Equivalence&lt;java.lang.Object&gt; defaultEquivalence()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun defaultEquivalence() : Equivalence&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Strength com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt; referenceValue(com.google.common.cache.LocalCache.Segment&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, V, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; referenceValue(p0 : LocalCache.Segment&lt;K, V&gt;, p1 : LocalCache.ReferenceEntry&lt;K, V&gt;?, p2 : V?, p3 : Int) : LocalCache.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.StrongAccessEntry StrongAccessEntry(K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun StrongAccessEntry(key : K?, hash : Int, next : LocalCache.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.StrongAccessWriteEntry StrongAccessWriteEntry(K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun StrongAccessWriteEntry(key : K?, hash : Int, next : LocalCache.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.StrongEntry StrongEntry(K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun StrongEntry(key : K?, hash : Int, next : LocalCache.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.StrongEntry com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; getNext()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNext() : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.StrongValueReference com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt; copyFor(java.lang.ref.ReferenceQueue&lt;V&gt;, V, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFor(queue : ReferenceQueue&lt;V&gt;?, value : V?, entry : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.StrongValueReference com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; getEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEntry() : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.StrongValueReference void notifyNewValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun notifyNewValue(p0 : V?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.StrongWriteEntry StrongWriteEntry(K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun StrongWriteEntry(key : K?, hash : Int, next : LocalCache.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.ValueIterator ValueIterator(com.google.common.cache.LocalCache)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ValueIterator()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.ValueReference com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt; copyFor(java.lang.ref.ReferenceQueue&lt;V&gt;, V, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFor(p0 : ReferenceQueue&lt;V&gt;?, p1 : V?, p2 : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.ValueReference V get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.ValueReference com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; getEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEntry() : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.ValueReference void notifyNewValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun notifyNewValue(p0 : V?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.ValueReference V waitForValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun waitForValue() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.Values java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WeakAccessEntry WeakAccessEntry(java.lang.ref.ReferenceQueue&lt;K&gt;, K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WeakAccessEntry(queue : ReferenceQueue&lt;K&gt;?, key : K?, hash : Int, next : LocalCache.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WeakAccessWriteEntry WeakAccessWriteEntry(java.lang.ref.ReferenceQueue&lt;K&gt;, K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WeakAccessWriteEntry(queue : ReferenceQueue&lt;K&gt;?, key : K?, hash : Int, next : LocalCache.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WeakEntry WeakEntry(java.lang.ref.ReferenceQueue&lt;K&gt;, K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WeakEntry(queue : ReferenceQueue&lt;K&gt;?, key : K?, hash : Int, next : LocalCache.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WeakEntry com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; getNext()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNext() : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WeakValueReference com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt; copyFor(java.lang.ref.ReferenceQueue&lt;V&gt;, V, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFor(queue : ReferenceQueue&lt;V&gt;?, value : V?, entry : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WeakValueReference void notifyNewValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun notifyNewValue(p0 : V?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WeakWriteEntry WeakWriteEntry(java.lang.ref.ReferenceQueue&lt;K&gt;, K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WeakWriteEntry(queue : ReferenceQueue&lt;K&gt;?, key : K?, hash : Int, next : LocalCache.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WeightedSoftValueReference com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt; copyFor(java.lang.ref.ReferenceQueue&lt;V&gt;, V, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFor(queue : ReferenceQueue&lt;V&gt;?, value : V?, entry : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WeightedWeakValueReference com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt; copyFor(java.lang.ref.ReferenceQueue&lt;V&gt;, V, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFor(queue : ReferenceQueue&lt;V&gt;?, value : V?, entry : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WriteQueue.2 com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; computeNext(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeNext(previous : LocalCache.ReferenceEntry&lt;K, V&gt;) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WriteQueue.2 java.lang.Object computeNext(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeNext(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WriteQueue boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(o : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WriteQueue java.util.Iterator&lt;com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;LocalCache.ReferenceEntry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WriteQueue boolean offer(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun offer(entry : LocalCache.ReferenceEntry&lt;K, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WriteQueue boolean offer(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun offer(x0 : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WriteQueue com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; peek()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun peek() : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WriteQueue java.lang.Object peek()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun peek() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WriteQueue com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; poll()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun poll() : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WriteQueue java.lang.Object poll()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun poll() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WriteQueue boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(o : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache.WriteThroughEntry boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache LocalCache(com.google.common.cache.CacheBuilder&lt;? super K,? super V&gt;, com.google.common.cache.CacheLoader&lt;? super K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun LocalCache(builder : CacheBuilder&lt;in K, in V&gt;, loader : CacheLoader&lt;in K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache void connectAccessOrder(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; connectAccessOrder(previous : LocalCache.ReferenceEntry&lt;K, V&gt;, next : LocalCache.ReferenceEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache void connectWriteOrder(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; connectWriteOrder(previous : LocalCache.ReferenceEntry&lt;K, V&gt;, next : LocalCache.ReferenceEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(key : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(value : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyEntry(original : LocalCache.ReferenceEntry&lt;K, V&gt;, newNext : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache com.google.common.cache.LocalCache.Segment&lt;K,V&gt; createSegment(int, long, com.google.common.cache.AbstractCache.StatsCounter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createSegment(initialCapacity : Int, maxSegmentWeight : Long, statsCounter : AbstractCache.StatsCounter?) : LocalCache.Segment&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache java.util.Queue&lt;E&gt; discardingQueue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; discardingQueue() : Queue&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache V get(K, com.google.common.cache.CacheLoader&lt;? super K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K, loader : CacheLoader&lt;in K, V&gt;?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache com.google.common.collect.ImmutableMap&lt;K,V&gt; getAll(java.lang.Iterable&lt;? extends K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAll(keys : Iterable&lt;out K&gt;) : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache com.google.common.collect.ImmutableMap&lt;K,V&gt; getAllPresent(java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAllPresent(keys : Iterable&lt;*&gt;) : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; getEntry(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEntry(p0 : Any?) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache V getIfPresent(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getIfPresent(key : Any) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; getLiveEntry(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLiveEntry(p0 : Any?) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache V getLiveValue(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLiveValue(entry : LocalCache.ReferenceEntry&lt;K, V&gt;, now : Long) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache V getOrLoad(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOrLoad(key : K) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache void invalidateAll(java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun invalidateAll(keys : Iterable&lt;*&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache boolean isLive(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isLive(entry : LocalCache.ReferenceEntry&lt;K, V&gt;, now : Long) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache java.util.Set&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache java.util.Map&lt;K,V&gt; loadAll(java.util.Set&lt;? extends K&gt;, com.google.common.cache.CacheLoader&lt;? super K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun loadAll(keys : Set&lt;out K&gt;?, loader : CacheLoader&lt;in K, V&gt;) : MutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; newEntry(K, int, com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newEntry(p0 : K?, p1 : Int, p2 : LocalCache.ReferenceEntry&lt;K, V&gt;?) : LocalCache.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache com.google.common.cache.LocalCache.Segment&lt;K,V&gt;[] newSegmentArray(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newSegmentArray(ssize : Int) : Array&lt;out LocalCache.Segment&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt; newValueReference(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;, V, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newValueReference(entry : LocalCache.ReferenceEntry&lt;K, V&gt;, value : V?, weight : Int) : LocalCache.ValueReference&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt; nullEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; nullEntry() : LocalCache.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache void nullifyAccessOrder(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; nullifyAccessOrder(nulled : LocalCache.ReferenceEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache void nullifyWriteOrder(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; nullifyWriteOrder(nulled : LocalCache.ReferenceEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache V put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(key : K, value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache void putAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(m : Map&lt;out K, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache V putIfAbsent(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putIfAbsent(key : K, value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache void reclaimKey(com.google.common.cache.LocalCache.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reclaimKey(entry : LocalCache.ReferenceEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache void reclaimValue(com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reclaimValue(valueReference : LocalCache.ValueReference&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache void refresh(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun refresh(key : K) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache V remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(key : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache boolean remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(key : Any?, value : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache V replace(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(key : K, value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache boolean replace(K, V, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(p0 : K, p1 : V?, p2 : V) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache com.google.common.cache.LocalCache.ValueReference&lt;K,V&gt; unset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unset() : LocalCache.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LocalCache java.util.Collection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LongAdder void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(s : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.LongAdder void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(s : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.RemovalListeners com.google.common.cache.RemovalListener&lt;K,V&gt; asynchronous(com.google.common.cache.RemovalListener&lt;K,V&gt;, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; asynchronous(listener : RemovalListener&lt;K, V&gt;?, executor : Executor?) : RemovalListener&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.RemovalNotification RemovalNotification(K, V, com.google.common.cache.RemovalCause)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RemovalNotification(p0 : K?, p1 : V?, p2 : RemovalCause)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.RemovalNotification boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.RemovalNotification com.google.common.cache.RemovalCause getCause()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCause() : RemovalCause&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.RemovalNotification K getKey()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKey() : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.RemovalNotification V getValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.Striped64.ThreadHashCode com.google.common.cache.Striped64.HashCode initialValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initialValue() : Striped64.HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.Striped64.ThreadHashCode java.lang.Object initialValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initialValue() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.cache.Striped64 void retryUpdate(long, com.google.common.cache.Striped64.HashCode, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retryUpdate(x : Long, hc : Striped64.HashCode, wasUncontended : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.EntrySet.1.1 V setValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValue(p0 : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.EntrySet.1 java.lang.Object next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.EntrySet.1 java.util.Map.Entry&lt;K,V&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.EntrySet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.EntrySet boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.EntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.EntrySet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.EntrySet boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.EntrySet boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.EntrySet T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.Inverse K checkKey(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkKey(key : K?) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.Inverse V checkValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkValue(value : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.Inverse void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.Inverse java.util.Collection values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.Inverse void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.KeySet java.util.Iterator&lt;K&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.KeySet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.KeySet boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.KeySet boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.ValueSet java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.ValueSet java.util.Collection delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.ValueSet java.util.Set&lt;V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.ValueSet java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap.ValueSet T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap AbstractBiMap(java.util.Map&lt;K,V&gt;, java.util.Map&lt;V,K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AbstractBiMap(forward : Map&lt;K, V&gt;, backward : Map&lt;V, K&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap java.util.Map access$200(com.google.common.collect.AbstractBiMap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : AbstractBiMap) : MutableMap?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap java.lang.Object access$300(com.google.common.collect.AbstractBiMap, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : AbstractBiMap, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap void access$600(com.google.common.collect.AbstractBiMap, java.lang.Object, boolean, java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$600(x0 : AbstractBiMap, x1 : Any?, x2 : Boolean, x3 : Any?, x4 : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap void access$700(com.google.common.collect.AbstractBiMap, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$700(x0 : AbstractBiMap, x1 : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap K checkKey(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkKey(key : K?) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap V checkValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkValue(value : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap V forcePut(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun forcePut(key : K?, value : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap V put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(key : K?, value : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap void putAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(map : Map&lt;out K, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap V putInBothMaps(K, V, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putInBothMaps(key : K?, value : V?, force : Boolean) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap V remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(key : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap void setDelegates(java.util.Map&lt;K,V&gt;, java.util.Map&lt;V,K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setDelegates(forward : Map&lt;K, V&gt;, backward : Map&lt;V, K&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap java.util.Collection values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractBiMap java.util.Set&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractIndexedListIterator E get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Int) : E&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractIterator T endOfData()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun endOfData() : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractLinkedIterator AbstractLinkedIterator(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AbstractLinkedIterator(p0 : T?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractListMultimap AbstractListMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AbstractListMultimap(map : Map&lt;K, Collection&lt;V&gt;?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractListMultimap java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : MutableMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractListMultimap java.util.Collection createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractListMultimap java.util.List&lt;V&gt; createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableList&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractListMultimap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractListMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractListMultimap java.util.List&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : MutableList&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractListMultimap boolean put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K?, p1 : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractListMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractListMultimap java.util.List&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableList&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractListMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(x0 : Any?, x1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractListMultimap java.util.List&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : MutableList&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapBasedMultiset.1 com.google.common.collect.Multiset.Entry&lt;E&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Multiset.Entry&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapBasedMultiset.1 java.lang.Object next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapBasedMultiset.MapBasedMultisetIterator MapBasedMultisetIterator(com.google.common.collect.AbstractMapBasedMultiset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MapBasedMultisetIterator()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapBasedMultiset AbstractMapBasedMultiset(java.util.Map&lt;E,com.google.common.collect.Count&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AbstractMapBasedMultiset(backingMap : Map&lt;E, Count?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapBasedMultiset java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultiset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : AbstractMapBasedMultiset) : MutableMap?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapBasedMultiset long access$110(com.google.common.collect.AbstractMapBasedMultiset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$110(x0 : AbstractMapBasedMultiset) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapBasedMultiset long access$122(com.google.common.collect.AbstractMapBasedMultiset, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$122(x0 : AbstractMapBasedMultiset, x1 : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapBasedMultiset int add(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(element : E?, occurrences : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapBasedMultiset int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(element : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapBasedMultiset java.util.Set&lt;E&gt; createElementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createElementSet() : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapBasedMultiset java.util.Iterator&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entryIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entryIterator() : MutableIterator&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapBasedMultiset java.util.Set&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapBasedMultiset int getAndSet(com.google.common.collect.Count, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAndSet(i : Count?, count : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapBasedMultiset java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapBasedMultiset int remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(element : Any?, occurrences : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapBasedMultiset int setCount(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(element : E?, count : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapEntry boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapEntry K getKey()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKey() : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapEntry V getValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMapEntry V setValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValue(p0 : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.3 java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.4 java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.AsMap.AsMapEntries boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.AsMap.AsMapEntries java.util.Iterator&lt;java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.AsMap.AsMapEntries boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.AsMap.AsMapIterator java.lang.Object next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.AsMap.AsMapIterator java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : MutableMap.MutableEntry&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.AsMap java.util.Set&lt;java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.AsMap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.AsMap java.lang.Object get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.AsMap java.util.Collection&lt;V&gt; get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Any?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.AsMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.AsMap java.lang.Object remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.AsMap java.util.Collection&lt;V&gt; remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(key : Any?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.EntryIterator EntryIterator(com.google.common.collect.AbstractMultimap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun EntryIterator()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.EntryIterator java.lang.Object next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.EntryIterator java.util.Map.Entry&lt;K,V&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.KeySet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.KeySet java.util.Iterator&lt;K&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.KeySet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.RandomAccessWrappedList RandomAccessWrappedList(K, java.util.List&lt;V&gt;, com.google.common.collect.AbstractMultimap&lt;K,V&gt;.WrappedCollection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RandomAccessWrappedList(p1 : K?, p2 : List&lt;V&gt;?, p3 : AbstractMultimap&lt;K, V&gt;.WrappedCollection?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.SortedAsMap java.util.SortedMap&lt;K,java.util.Collection&lt;V&gt;&gt; headMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(toKey : K?) : SortedMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.SortedAsMap java.util.Set keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.SortedAsMap java.util.SortedSet&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : SortedSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.SortedAsMap java.util.SortedMap&lt;K,java.util.Collection&lt;V&gt;&gt; subMap(K, K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(fromKey : K?, toKey : K?) : SortedMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.SortedAsMap java.util.SortedMap&lt;K,java.util.Collection&lt;V&gt;&gt; tailMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(fromKey : K?) : SortedMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.SortedKeySet java.util.SortedSet&lt;K&gt; headSet(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(toElement : K?) : SortedSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.SortedKeySet java.util.SortedSet&lt;K&gt; subSet(K, K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(fromElement : K?, toElement : K?) : SortedSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.SortedKeySet java.util.SortedSet&lt;K&gt; tailSet(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(fromElement : K?) : SortedSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedCollection.WrappedIterator WrappedIterator(com.google.common.collect.AbstractMultimap.WrappedCollection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WrappedIterator()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedCollection WrappedCollection(K, java.util.Collection&lt;V&gt;, com.google.common.collect.AbstractMultimap&lt;K,V&gt;.WrappedCollection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WrappedCollection(p1 : K?, p2 : Collection&lt;V&gt;?, p3 : AbstractMultimap&lt;K, V&gt;.WrappedCollection?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedCollection boolean addAll(java.util.Collection&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(collection : Collection&lt;out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedCollection boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedCollection com.google.common.collect.AbstractMultimap&lt;K,V&gt;.WrappedCollection getAncestor()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getAncestor() : AbstractMultimap&lt;K, V&gt;.WrappedCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedCollection K getKey()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKey() : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedCollection java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedCollection boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedCollection boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedList.WrappedListIterator WrappedListIterator(com.google.common.collect.AbstractMultimap.WrappedList)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WrappedListIterator()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedList.WrappedListIterator WrappedListIterator(com.google.common.collect.AbstractMultimap.WrappedList, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WrappedListIterator(index : Int)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedList WrappedList(K, java.util.List&lt;V&gt;, com.google.common.collect.AbstractMultimap&lt;K,V&gt;.WrappedCollection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WrappedList(p1 : K?, p2 : List&lt;V&gt;?, p3 : AbstractMultimap&lt;K, V&gt;.WrappedCollection?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedList boolean addAll(int, java.util.Collection&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(index : Int, c : Collection&lt;out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedList java.util.ListIterator&lt;V&gt; listIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator() : MutableListIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedList java.util.ListIterator&lt;V&gt; listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(index : Int) : MutableListIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedList java.util.List&lt;V&gt; subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(fromIndex : Int, toIndex : Int) : MutableList&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedSet WrappedSet(K, java.util.Set&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WrappedSet(p1 : K?, p2 : Set&lt;V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedSet boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedSortedSet WrappedSortedSet(K, java.util.SortedSet&lt;V&gt;, com.google.common.collect.AbstractMultimap&lt;K,V&gt;.WrappedCollection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WrappedSortedSet(p1 : K?, p2 : SortedSet&lt;V&gt;?, p3 : AbstractMultimap&lt;K, V&gt;.WrappedCollection?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedSortedSet java.util.SortedSet&lt;V&gt; headSet(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(toElement : V?) : SortedSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedSortedSet java.util.SortedSet&lt;V&gt; subSet(V, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(fromElement : V?, toElement : V?) : SortedSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap.WrappedSortedSet java.util.SortedSet&lt;V&gt; tailSet(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(fromElement : V?) : SortedSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap AbstractMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AbstractMultimap(map : Map&lt;K, Collection&lt;V&gt;?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Map access$000(com.google.common.collect.AbstractMultimap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : AbstractMultimap) : MutableMap?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Iterator access$100(com.google.common.collect.AbstractMultimap, java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : AbstractMultimap, x1 : Collection) : MutableIterator?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap int access$208(com.google.common.collect.AbstractMultimap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$208(x0 : AbstractMultimap) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap int access$210(com.google.common.collect.AbstractMultimap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$210(x0 : AbstractMultimap) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap int access$212(com.google.common.collect.AbstractMultimap, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$212(x0 : AbstractMultimap, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap int access$220(com.google.common.collect.AbstractMultimap, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$220(x0 : AbstractMultimap, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.List access$300(com.google.common.collect.AbstractMultimap, java.lang.Object, java.util.List, com.google.common.collect.AbstractMultimap.WrappedCollection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : AbstractMultimap, x1 : Any?, x2 : List?, x3 : AbstractMultimap.WrappedCollection?) : MutableList&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Collection access$400(com.google.common.collect.AbstractMultimap, java.lang.Object, java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : AbstractMultimap, x1 : Any?, x2 : Collection?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap int access$500(com.google.common.collect.AbstractMultimap, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$500(x0 : AbstractMultimap, x1 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : MutableMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap boolean containsEntry(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsEntry(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; createAsMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAsMap() : MutableMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Collection&lt;V&gt; createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Collection&lt;V&gt; createCollection(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection(p0 : K?) : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Collection&lt;java.util.Map.Entry&lt;K,V&gt;&gt; createEntries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntries() : MutableCollection&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; createEntryIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntryIterator() : MutableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Set&lt;K&gt; createKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createKeySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Collection&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableCollection&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Collection&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Collection&lt;V&gt; getOrCreateCollection(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOrCreateCollection(p0 : K?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Iterator&lt;V&gt; iteratorOrListIterator(java.util.Collection&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iteratorOrListIterator(collection : Collection&lt;V&gt;) : MutableIterator&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap com.google.common.collect.Multiset&lt;K&gt; keys()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keys() : Multiset&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap boolean put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K?, p1 : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap boolean putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(multimap : Multimap&lt;out K, out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap boolean putAll(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : K?, p1 : Iterable&lt;out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap boolean remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Collection&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(key : Any?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Collection&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap void setMap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setMap(map : Map&lt;K, Collection&lt;V&gt;?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Collection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.Collection&lt;V&gt; wrapCollection(K, java.util.Collection&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun wrapCollection(key : K?, collection : Collection&lt;V&gt;?) : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultimap java.util.List&lt;V&gt; wrapList(K, java.util.List&lt;V&gt;, com.google.common.collect.AbstractMultimap&lt;K,V&gt;.WrappedCollection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun wrapList(key : K?, list : List&lt;V&gt;?, ancestor : AbstractMultimap&lt;K, V&gt;.WrappedCollection?) : MutableList&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset boolean add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset int add(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(element : E?, occurrences : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset boolean addAll(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elementsToAdd : Collection&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(element : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset java.util.Set&lt;E&gt; createElementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createElementSet() : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset java.util.Set&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : MutableSet&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset java.util.Set&lt;E&gt; elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset java.util.Iterator&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entryIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entryIterator() : MutableIterator&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset java.util.Set&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset int remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(element : Any?, occurrences : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(elementsToRetain : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset int setCount(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : E?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractMultiset boolean setCount(E, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : E?, p1 : Int, p2 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSequentialIterator AbstractSequentialIterator(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AbstractSequentialIterator(firstOrNull : T?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSequentialIterator T computeNext(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeNext(p0 : T) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSetMultimap AbstractSetMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AbstractSetMultimap(map : Map&lt;K, Collection&lt;V&gt;?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSetMultimap java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : MutableMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSetMultimap java.util.Collection createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSetMultimap java.util.Set&lt;V&gt; createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSetMultimap java.util.Collection entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSetMultimap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSetMultimap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSetMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSetMultimap java.util.Set&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : MutableSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSetMultimap boolean put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K?, p1 : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSetMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSetMultimap java.util.Set&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSetMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(x0 : Any?, x1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSetMultimap java.util.Set&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : MutableSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedMultiset.2 java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedMultiset AbstractSortedMultiset(java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AbstractSortedMultiset(comparator : Comparator&lt;in E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedMultiset java.util.Comparator&lt;? super E&gt; comparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun comparator() : Comparator&lt;in E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; createDescendingMultiset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createDescendingMultiset() : SortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedMultiset java.util.Set createElementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createElementSet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedMultiset java.util.SortedSet&lt;E&gt; createElementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createElementSet() : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedMultiset java.util.Iterator&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; descendingEntryIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingEntryIterator() : MutableIterator&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedMultiset java.util.Iterator&lt;E&gt; descendingIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingIterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; descendingMultiset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingMultiset() : SortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedMultiset java.util.Set elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedMultiset java.util.SortedSet&lt;E&gt; elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedMultiset com.google.common.collect.Multiset.Entry&lt;E&gt; firstEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun firstEntry() : Multiset.Entry&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedMultiset com.google.common.collect.Multiset.Entry&lt;E&gt; lastEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastEntry() : Multiset.Entry&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedMultiset com.google.common.collect.Multiset.Entry&lt;E&gt; pollFirstEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pollFirstEntry() : Multiset.Entry&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedMultiset com.google.common.collect.Multiset.Entry&lt;E&gt; pollLastEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pollLastEntry() : Multiset.Entry&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; subMultiset(E, com.google.common.collect.BoundType, E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMultiset(fromElement : E?, fromBoundType : BoundType, toElement : E?, toBoundType : BoundType) : SortedMultiset&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedSetMultimap AbstractSortedSetMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AbstractSortedSetMultimap(map : Map&lt;K, Collection&lt;V&gt;?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedSetMultimap java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : MutableMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedSetMultimap java.util.Collection createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedSetMultimap java.util.Set createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedSetMultimap java.util.SortedSet&lt;V&gt; createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : SortedSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedSetMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedSetMultimap java.util.Set get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedSetMultimap java.util.SortedSet&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : SortedSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedSetMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedSetMultimap java.util.Set removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedSetMultimap java.util.SortedSet&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : SortedSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedSetMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(x0 : Any?, x1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedSetMultimap java.util.Set replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(x0 : Any?, x1 : Iterable) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AbstractSortedSetMultimap java.util.SortedSet&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(key : K?, values : Iterable&lt;out V&gt;) : SortedSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AllEqualOrdering int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(p0 : Any?, p1 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AllEqualOrdering com.google.common.collect.ImmutableList&lt;E&gt; immutableSortedCopy(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; immutableSortedCopy(iterable : Iterable&lt;E&gt;) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AllEqualOrdering java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AllEqualOrdering com.google.common.collect.Ordering&lt;S&gt; reverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S&gt; reverse() : Ordering&lt;S&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AllEqualOrdering java.util.List&lt;E&gt; sortedCopy(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; sortedCopy(iterable : Iterable&lt;E&gt;) : MutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.AllEqualOrdering java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap ArrayListMultimap(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ArrayListMultimap(multimap : Multimap&lt;out K, out V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap java.util.Map asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap boolean containsEntry(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsEntry(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap com.google.common.collect.ArrayListMultimap&lt;K,V&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; create() : ArrayListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap com.google.common.collect.ArrayListMultimap&lt;K,V&gt; create(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; create(expectedKeys : Int, expectedValuesPerKey : Int) : ArrayListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap com.google.common.collect.ArrayListMultimap&lt;K,V&gt; create(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; create(multimap : Multimap&lt;out K, out V&gt;) : ArrayListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap java.util.Collection createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap java.util.List&lt;V&gt; createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableList&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap java.util.List get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableList&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap boolean put(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap boolean putAll(com.google.common.collect.Multimap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Multimap) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap boolean putAll(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Any?, p1 : Iterable) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap boolean remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap java.util.List removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableList?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap java.util.List replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(x0 : Any?, x1 : Iterable) : MutableList?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ArrayMap.1.1.1 V getValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ArrayMap.1.1.1 V setValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValue(value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ArrayMap.1.1 java.lang.Object get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Int) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ArrayMap.1.1 java.util.Map.Entry&lt;K,V&gt; get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(index : Int) : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ArrayMap.1 java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ArrayMap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ArrayMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ArrayMap V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ArrayMap java.lang.String getKeyRole()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKeyRole() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ArrayMap V getValue(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue(p0 : Int) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ArrayMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ArrayMap V put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(key : K, value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ArrayMap V setValue(int, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValue(p0 : Int, p1 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.CellSet.1 com.google.common.collect.Table.Cell&lt;R,C,V&gt; get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(index : Int) : Table.Cell&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.CellSet.1 java.lang.Object get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Int) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.CellSet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.CellSet java.util.Iterator&lt;com.google.common.collect.Table.Cell&lt;R,C,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Table.Cell&lt;R, C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.Column Column(com.google.common.collect.ArrayTable, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Column(columnIndex : Int)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.Column java.lang.String getKeyRole()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKeyRole() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ColumnMap ColumnMap(com.google.common.collect.ArrayTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ColumnMap()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ColumnMap ColumnMap(com.google.common.collect.ArrayTable, com.google.common.collect.ArrayTable.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ColumnMap(x0 : ArrayTable, x1 : ArrayTable.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ColumnMap java.lang.String getKeyRole()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKeyRole() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ColumnMap java.lang.Object getValue(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue(x0 : Int) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ColumnMap java.util.Map&lt;R,V&gt; getValue(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue(index : Int) : MutableMap&lt;R, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.ColumnMap java.lang.Object put(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : Any, p1 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.Row Row(com.google.common.collect.ArrayTable, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Row(rowIndex : Int)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.Row java.lang.String getKeyRole()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKeyRole() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.RowMap RowMap(com.google.common.collect.ArrayTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RowMap()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.RowMap RowMap(com.google.common.collect.ArrayTable, com.google.common.collect.ArrayTable.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RowMap(x0 : ArrayTable, x1 : ArrayTable.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.RowMap java.lang.String getKeyRole()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKeyRole() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.RowMap java.lang.Object getValue(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue(x0 : Int) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.RowMap java.util.Map&lt;C,V&gt; getValue(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue(index : Int) : MutableMap&lt;C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.RowMap java.lang.Object put(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : Any, p1 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.Values.1 1(com.google.common.collect.ArrayTable.Values, java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Iterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.Values.1 V transform(com.google.common.collect.Table.Cell&lt;R,C,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(cell : Table.Cell&lt;R, C, V&gt;) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.Values.1 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable.Values java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable ArrayTable(com.google.common.collect.ArrayTable&lt;R,C,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ArrayTable(table : ArrayTable&lt;R, C, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable ArrayTable(com.google.common.collect.Table&lt;R,C,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ArrayTable(table : Table&lt;R, C, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable ArrayTable(java.lang.Iterable&lt;? extends R&gt;, java.lang.Iterable&lt;? extends C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ArrayTable(rowKeys : Iterable&lt;out R&gt;, columnKeys : Iterable&lt;out C&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable com.google.common.collect.ImmutableList access$100(com.google.common.collect.ArrayTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : ArrayTable) : ImmutableList?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable com.google.common.collect.ImmutableList access$200(com.google.common.collect.ArrayTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : ArrayTable) : ImmutableList?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable java.lang.Object[][] access$300(com.google.common.collect.ArrayTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : ArrayTable) : Array&lt;out Array&lt;out Any?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable com.google.common.collect.ImmutableMap access$400(com.google.common.collect.ArrayTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : ArrayTable) : ImmutableMap?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable com.google.common.collect.ImmutableMap access$500(com.google.common.collect.ArrayTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$500(x0 : ArrayTable) : ImmutableMap?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Set&lt;com.google.common.collect.Table.Cell&lt;R,C,V&gt;&gt; cellSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cellSet() : MutableSet&lt;Table.Cell&lt;R, C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Map&lt;R,V&gt; column(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(columnKey : C) : MutableMap&lt;R, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable com.google.common.collect.ImmutableSet&lt;C&gt; columnKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnKeySet() : ImmutableSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Set columnKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnKeySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Map&lt;C,java.util.Map&lt;R,V&gt;&gt; columnMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnMap() : MutableMap&lt;C, Map&lt;R, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable boolean contains(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable boolean containsColumn(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsColumn(columnKey : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable boolean containsRow(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsRow(rowKey : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable com.google.common.collect.ArrayTable&lt;R,C,V&gt; create(com.google.common.collect.ArrayTable&lt;R,C,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; create(table : ArrayTable&lt;R, C, V&gt;) : ArrayTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable com.google.common.collect.ArrayTable&lt;R,C,V&gt; create(com.google.common.collect.Table&lt;R,C,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; create(table : Table&lt;R, C, V&gt;) : ArrayTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable com.google.common.collect.ArrayTable&lt;R,C,V&gt; create(java.lang.Iterable&lt;? extends R&gt;, java.lang.Iterable&lt;? extends C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; create(rowKeys : Iterable&lt;out R&gt;, columnKeys : Iterable&lt;out C&gt;) : ArrayTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable V erase(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun erase(p0 : Any?, p1 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable V get(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?, p1 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable com.google.common.collect.ImmutableMap&lt;E,java.lang.Integer&gt; index(java.util.List&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; index(list : List&lt;E&gt;) : ImmutableMap&lt;E, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable V put(R, C, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : R?, p1 : C?, p2 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable void putAll(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(table : Table&lt;out R, out C, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable V remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Map&lt;C,V&gt; row(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(rowKey : R?) : MutableMap&lt;C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable com.google.common.collect.ImmutableSet&lt;R&gt; rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : ImmutableSet&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Set rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Map&lt;R,java.util.Map&lt;C,V&gt;&gt; rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : MutableMap&lt;R, Map&lt;C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable V set(int, int, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(rowIndex : Int, columnIndex : Int, value : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Collection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.BiMap V forcePut(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun forcePut(p0 : K?, p1 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.BiMap com.google.common.collect.BiMap&lt;V,K&gt; inverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun inverse() : BiMap&lt;V, K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.BiMap V put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K?, p1 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.BiMap void putAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Map&lt;out K, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.BiMap java.util.Set&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.BoundType com.google.common.collect.BoundType forBoolean(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun forBoolean(inclusive : Boolean) : BoundType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ByFunctionOrdering ByFunctionOrdering(com.google.common.base.Function&lt;F,? extends T&gt;, com.google.common.collect.Ordering&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ByFunctionOrdering(function : Function&lt;F, out T&gt;, ordering : Ordering&lt;T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ByFunctionOrdering int compare(F, F)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(p0 : F?, p1 : F?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ByFunctionOrdering boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ClassToInstanceMap T getInstance(java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; getInstance(p0 : Class&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ClassToInstanceMap T putInstance(java.lang.Class&lt;T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; putInstance(p0 : Class&lt;T&gt;, p1 : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.FilteredCollection.1 boolean apply(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : E?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.FilteredCollection.2 boolean apply(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : E?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.FilteredCollection boolean addAll(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(collection : Collection&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.FilteredCollection boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(collection : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.FilteredCollection com.google.common.collect.Collections2.FilteredCollection&lt;E&gt; createCombined(com.google.common.base.Predicate&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCombined(newPredicate : Predicate&lt;in E&gt;) : Collections2.FilteredCollection&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.FilteredCollection java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.FilteredCollection boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(collection : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.FilteredCollection boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(collection : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.OrderedPermutationCollection OrderedPermutationCollection(java.lang.Iterable&lt;E&gt;, java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun OrderedPermutationCollection(input : Iterable&lt;E&gt;, comparator : Comparator&lt;in E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.OrderedPermutationCollection int calculateSize(java.util.List&lt;E&gt;, java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; calculateSize(sortedInputList : List&lt;E&gt;, comparator : Comparator&lt;in E&gt;?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.OrderedPermutationCollection boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.OrderedPermutationCollection java.util.Iterator&lt;java.util.List&lt;E&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;List&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.OrderedPermutationIterator OrderedPermutationIterator(java.util.List&lt;E&gt;, java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun OrderedPermutationIterator(list : List&lt;E&gt;, comparator : Comparator&lt;in E&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.PermutationCollection boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.PermutationCollection java.util.Iterator&lt;java.util.List&lt;E&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;List&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.PermutationIterator PermutationIterator(java.util.List&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PermutationIterator(list : List&lt;E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.TransformedCollection TransformedCollection(java.util.Collection&lt;F&gt;, com.google.common.base.Function&lt;? super F,? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TransformedCollection(fromCollection : Collection&lt;F&gt;, function : Function&lt;in F, out T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2.TransformedCollection java.util.Iterator&lt;T&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2 boolean access$100(java.util.List, java.util.List)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : List, x1 : List) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2 boolean containsAllImpl(java.util.Collection&lt;?&gt;, java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAllImpl(self : Collection&lt;*&gt;, c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;E&gt; filter(java.util.Collection&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; filter(unfiltered : Collection&lt;E&gt;, predicate : Predicate&lt;in E&gt;) : MutableCollection&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2 boolean isPermutation(java.util.List&lt;?&gt;, java.util.List&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isPermutation(first : List&lt;*&gt;, second : List&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2 java.lang.StringBuilder newStringBuilderForCollection(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newStringBuilderForCollection(size : Int) : StringBuilder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;java.util.List&lt;E&gt;&gt; orderedPermutations(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;in E&gt;?&gt; orderedPermutations(elements : Iterable&lt;E&gt;) : MutableCollection&lt;List&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;java.util.List&lt;E&gt;&gt; orderedPermutations(java.lang.Iterable&lt;E&gt;, java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; orderedPermutations(elements : Iterable&lt;E&gt;, comparator : Comparator&lt;in E&gt;) : MutableCollection&lt;List&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;java.util.List&lt;E&gt;&gt; permutations(java.util.Collection&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; permutations(elements : Collection&lt;E&gt;) : MutableCollection&lt;List&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2 java.lang.String toStringImpl(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStringImpl(collection : Collection&lt;*&gt;) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;T&gt; transform(java.util.Collection&lt;F&gt;, com.google.common.base.Function&lt;? super F,T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;F, T&gt; transform(fromCollection : Collection&lt;F&gt;, function : Function&lt;in F, T&gt;) : MutableCollection&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparatorOrdering ComparatorOrdering(java.util.Comparator&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ComparatorOrdering(comparator : Comparator&lt;T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparatorOrdering int binarySearch(java.util.List&lt;? extends T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun binarySearch(p0 : List&lt;out T&gt;?, p1 : T?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparatorOrdering int compare(T, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(p0 : T?, p1 : T?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparatorOrdering boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparatorOrdering com.google.common.collect.ImmutableList&lt;E&gt; immutableSortedCopy(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; immutableSortedCopy(iterable : Iterable&lt;E&gt;) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparatorOrdering java.util.List&lt;E&gt; sortedCopy(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; sortedCopy(iterable : Iterable&lt;E&gt;) : MutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain.1 com.google.common.collect.ComparisonChain classify(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun classify(result : Int) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain.1 com.google.common.collect.ComparisonChain compare(double, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : Double, right : Double) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain.1 com.google.common.collect.ComparisonChain compare(float, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : Float, right : Float) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain.1 com.google.common.collect.ComparisonChain compare(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : Int, right : Int) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain.1 com.google.common.collect.ComparisonChain compare(long, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : Long, right : Long) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain.1 com.google.common.collect.ComparisonChain compare(java.lang.Comparable, java.lang.Comparable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : Comparable, right : Comparable?) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain.1 com.google.common.collect.ComparisonChain compare(T, T, java.util.Comparator&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; compare(p0 : T?, p1 : T?, p2 : Comparator&lt;T&gt;?) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain.1 com.google.common.collect.ComparisonChain compareFalseFirst(boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compareFalseFirst(left : Boolean, right : Boolean) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain.1 com.google.common.collect.ComparisonChain compareTrueFirst(boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compareTrueFirst(left : Boolean, right : Boolean) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain.InactiveComparisonChain com.google.common.collect.ComparisonChain compare(double, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : Double, right : Double) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain.InactiveComparisonChain com.google.common.collect.ComparisonChain compare(float, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : Float, right : Float) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain.InactiveComparisonChain com.google.common.collect.ComparisonChain compare(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : Int, right : Int) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain.InactiveComparisonChain com.google.common.collect.ComparisonChain compare(long, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : Long, right : Long) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain.InactiveComparisonChain com.google.common.collect.ComparisonChain compare(java.lang.Comparable, java.lang.Comparable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(p0 : Comparable?, p1 : Comparable?) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain.InactiveComparisonChain com.google.common.collect.ComparisonChain compare(T, T, java.util.Comparator&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; compare(p0 : T?, p1 : T?, p2 : Comparator&lt;T&gt;?) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain.InactiveComparisonChain com.google.common.collect.ComparisonChain compareFalseFirst(boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compareFalseFirst(left : Boolean, right : Boolean) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain.InactiveComparisonChain com.google.common.collect.ComparisonChain compareTrueFirst(boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compareTrueFirst(left : Boolean, right : Boolean) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain access$100()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100() : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain access$200()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200() : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain access$300()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300() : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compare(double, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(p0 : Double, p1 : Double) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compare(float, float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(p0 : Float, p1 : Float) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compare(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(p0 : Int, p1 : Int) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compare(long, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(p0 : Long, p1 : Long) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compare(java.lang.Comparable&lt;?&gt;, java.lang.Comparable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(p0 : Comparable&lt;*&gt;, p1 : Comparable&lt;*&gt;?) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compare(T, T, java.util.Comparator&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; compare(p0 : T?, p1 : T?, p2 : Comparator&lt;T&gt;?) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compareFalseFirst(boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compareFalseFirst(p0 : Boolean, p1 : Boolean) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compareTrueFirst(boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compareTrueFirst(p0 : Boolean, p1 : Boolean) : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain start()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun start() : ComparisonChain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.CompoundOrdering CompoundOrdering(java.lang.Iterable&lt;? extends java.util.Comparator&lt;? super T&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CompoundOrdering(comparators : Iterable&lt;out Comparator&lt;in T&gt;?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.CompoundOrdering int compare(T, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(p0 : T?, p1 : T?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.CompoundOrdering boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(object : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputationExceptionReference void clear(com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear(p0 : MapMakerInternalMap.ValueReference&lt;K, V&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputationExceptionReference com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt; copyFor(java.lang.ref.ReferenceQueue&lt;V&gt;, V, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFor(queue : ReferenceQueue&lt;V&gt;?, value : V?, entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputationExceptionReference V get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputationExceptionReference com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; getEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEntry() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputedReference ComputedReference(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ComputedReference(p0 : V?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputedReference void clear(com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear(p0 : MapMakerInternalMap.ValueReference&lt;K, V&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputedReference com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt; copyFor(java.lang.ref.ReferenceQueue&lt;V&gt;, V, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFor(queue : ReferenceQueue&lt;V&gt;?, value : V?, entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputedReference V get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputedReference com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; getEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEntry() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputedReference V waitForValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun waitForValue() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputingMapAdapter ComputingMapAdapter(com.google.common.collect.MapMaker, com.google.common.base.Function&lt;? super K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ComputingMapAdapter(mapMaker : MapMaker, computingFunction : Function&lt;in K, out V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputingMapAdapter V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Any?) : V&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputingSegment ComputingSegment(com.google.common.collect.MapMakerInternalMap&lt;K,V&gt;, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ComputingSegment(map : MapMakerInternalMap&lt;K, V&gt;, initialCapacity : Int, maxSegmentSize : Int)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputingSegment V compute(K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.ComputingConcurrentHashMap.ComputingValueReference&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compute(key : K?, hash : Int, e : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, computingValueReference : ComputingConcurrentHashMap.ComputingValueReference&lt;K, V&gt;) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputingSegment V getOrCompute(K, int, com.google.common.base.Function&lt;? super K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOrCompute(key : K?, hash : Int, computingFunction : Function&lt;in K, out V&gt;?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputingSerializationProxy void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(in : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputingSerializationProxy void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(out : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputingValueReference void clear(com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear(p0 : MapMakerInternalMap.ValueReference&lt;K, V&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputingValueReference V compute(K, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compute(key : K?, hash : Int) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputingValueReference com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt; copyFor(java.lang.ref.ReferenceQueue&lt;V&gt;, V, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFor(p0 : ReferenceQueue&lt;V&gt;?, p1 : V?, p2 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputingValueReference V get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap.ComputingValueReference com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; getEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEntry() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap ComputingConcurrentHashMap(com.google.common.collect.MapMaker, com.google.common.base.Function&lt;? super K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ComputingConcurrentHashMap(builder : MapMaker, computingFunction : Function&lt;in K, out V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt; createSegment(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createSegment(initialCapacity : Int, maxSegmentSize : Int) : MapMakerInternalMap.Segment&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap V getOrCompute(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOrCompute(key : K) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComputingConcurrentHashMap java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset.1 boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset.1 boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset.EntrySet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(object : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset.EntrySet java.util.List&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; snapshot()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun snapshot() : MutableList&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset ConcurrentHashMultiset(java.util.concurrent.ConcurrentMap&lt;E,java.util.concurrent.atomic.AtomicInteger&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConcurrentHashMultiset(countMap : ConcurrentMap&lt;E, AtomicInteger?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset java.util.concurrent.ConcurrentMap access$100(com.google.common.collect.ConcurrentHashMultiset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : ConcurrentHashMultiset) : ConcurrentMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset boolean add(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset int add(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(element : E?, occurrences : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset boolean addAll(java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(x0 : Collection) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset com.google.common.collect.ConcurrentHashMultiset&lt;E&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; create() : ConcurrentHashMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset com.google.common.collect.ConcurrentHashMultiset&lt;E&gt; create(com.google.common.collect.GenericMapMaker&lt;? super E,? super java.lang.Number&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; create(mapMaker : GenericMapMaker&lt;in E, in Number?&gt;) : ConcurrentHashMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset com.google.common.collect.ConcurrentHashMultiset&lt;E&gt; create(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; create(elements : Iterable&lt;out E&gt;) : ConcurrentHashMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset java.util.Set&lt;E&gt; createElementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createElementSet() : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset java.util.Set elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset java.util.Iterator&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entryIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entryIterator() : MutableIterator&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset java.util.Set&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset int remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset boolean removeAll(java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset boolean removeExactly(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeExactly(p0 : Any?, p1 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset boolean retainAll(java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(x0 : Collection) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset java.util.concurrent.atomic.AtomicInteger safeGet(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun safeGet(element : Any?) : AtomicInteger?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset int setCount(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(element : E?, count : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset boolean setCount(E, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(element : E?, expectedOldCount : Int, newCount : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset java.util.List&lt;E&gt; snapshot()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun snapshot() : MutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraint E checkElement(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkElement(p0 : E) : E&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraint java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedCollection ConstrainedCollection(java.util.Collection&lt;E&gt;, com.google.common.collect.Constraint&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConstrainedCollection(delegate : Collection&lt;E&gt;, constraint : Constraint&lt;in E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedCollection boolean add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedCollection boolean addAll(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elements : Collection&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedCollection java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedCollection java.util.Collection&lt;E&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedList ConstrainedList(java.util.List&lt;E&gt;, com.google.common.collect.Constraint&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConstrainedList(delegate : List&lt;E&gt;, constraint : Constraint&lt;in E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedList boolean add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedList boolean addAll(int, java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(index : Int, elements : Collection&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedList boolean addAll(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elements : Collection&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedList java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedList java.util.Collection delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedList java.util.List&lt;E&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedList java.util.ListIterator&lt;E&gt; listIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator() : MutableListIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedList java.util.ListIterator&lt;E&gt; listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(index : Int) : MutableListIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedList java.util.List&lt;E&gt; subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(fromIndex : Int, toIndex : Int) : MutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedListIterator void add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedListIterator void set(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : E?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedMultiset ConstrainedMultiset(com.google.common.collect.Multiset&lt;E&gt;, com.google.common.collect.Constraint&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConstrainedMultiset(delegate : Multiset&lt;E&gt;, constraint : Constraint&lt;in E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedMultiset boolean add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedMultiset int add(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedMultiset boolean addAll(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elements : Collection&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedMultiset int setCount(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : E?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedMultiset boolean setCount(E, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : E?, p1 : Int, p2 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedRandomAccessList ConstrainedRandomAccessList(java.util.List&lt;E&gt;, com.google.common.collect.Constraint&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConstrainedRandomAccessList(delegate : List&lt;E&gt;, constraint : Constraint&lt;in E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedSet ConstrainedSet(java.util.Set&lt;E&gt;, com.google.common.collect.Constraint&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConstrainedSet(delegate : Set&lt;E&gt;, constraint : Constraint&lt;in E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedSet boolean add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedSet boolean addAll(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elements : Collection&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedSet java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedSet java.util.Collection delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedSet java.util.Set&lt;E&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedSortedSet ConstrainedSortedSet(java.util.SortedSet&lt;E&gt;, com.google.common.collect.Constraint&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConstrainedSortedSet(delegate : SortedSet&lt;E&gt;, constraint : Constraint&lt;in E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedSortedSet boolean add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedSortedSet boolean addAll(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elements : Collection&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedSortedSet java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedSortedSet java.util.Collection delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedSortedSet java.util.Set delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedSortedSet java.util.SortedSet&lt;E&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedSortedSet java.util.SortedSet&lt;E&gt; headSet(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(toElement : E) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedSortedSet java.util.SortedSet&lt;E&gt; subSet(E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(fromElement : E, toElement : E) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.ConstrainedSortedSet java.util.SortedSet&lt;E&gt; tailSet(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(fromElement : E) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.NotNullConstraint java.lang.Object checkElement(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkElement(element : Any) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints.NotNullConstraint java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints java.util.Collection access$000(java.util.Collection, com.google.common.collect.Constraint)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : Collection, x1 : Constraint?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints java.util.ListIterator access$100(java.util.ListIterator, com.google.common.collect.Constraint)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : ListIterator?, x1 : Constraint?) : MutableListIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints java.util.Collection&lt;E&gt; checkElements(java.util.Collection&lt;E&gt;, com.google.common.collect.Constraint&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; checkElements(elements : Collection&lt;E&gt;, constraint : Constraint&lt;in E&gt;?) : MutableCollection&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints java.util.Collection&lt;E&gt; constrainedCollection(java.util.Collection&lt;E&gt;, com.google.common.collect.Constraint&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; constrainedCollection(collection : Collection&lt;E&gt;, constraint : Constraint&lt;in E&gt;) : MutableCollection&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints java.util.List&lt;E&gt; constrainedList(java.util.List&lt;E&gt;, com.google.common.collect.Constraint&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; constrainedList(list : List&lt;E&gt;, constraint : Constraint&lt;in E&gt;) : MutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints java.util.ListIterator&lt;E&gt; constrainedListIterator(java.util.ListIterator&lt;E&gt;, com.google.common.collect.Constraint&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; constrainedListIterator(listIterator : ListIterator&lt;E&gt;?, constraint : Constraint&lt;in E&gt;?) : MutableListIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints com.google.common.collect.Multiset&lt;E&gt; constrainedMultiset(com.google.common.collect.Multiset&lt;E&gt;, com.google.common.collect.Constraint&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; constrainedMultiset(multiset : Multiset&lt;E&gt;, constraint : Constraint&lt;in E&gt;) : Multiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints java.util.Set&lt;E&gt; constrainedSet(java.util.Set&lt;E&gt;, com.google.common.collect.Constraint&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; constrainedSet(set : Set&lt;E&gt;, constraint : Constraint&lt;in E&gt;) : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints java.util.SortedSet&lt;E&gt; constrainedSortedSet(java.util.SortedSet&lt;E&gt;, com.google.common.collect.Constraint&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; constrainedSortedSet(sortedSet : SortedSet&lt;E&gt;, constraint : Constraint&lt;in E&gt;) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints java.util.Collection&lt;E&gt; constrainedTypePreservingCollection(java.util.Collection&lt;E&gt;, com.google.common.collect.Constraint&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; constrainedTypePreservingCollection(collection : Collection&lt;E&gt;, constraint : Constraint&lt;E&gt;) : MutableCollection&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Constraints com.google.common.collect.Constraint&lt;E&gt; notNull()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; notNull() : Constraint&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; create(com.google.common.collect.Range&lt;C&gt;, com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable?&gt; create(range : Range&lt;C&gt;, domain : DiscreteDomain&lt;C&gt;) : ContiguousSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; headSet(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(toElement : C) : ContiguousSet&lt;C&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; headSet(C, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(toElement : C, inclusive : Boolean) : ContiguousSet&lt;C&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(x0 : Any) : ImmutableSortedSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet java.util.SortedSet headSet(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(x0 : Any) : SortedSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(x0 : Any, x1 : Boolean) : ImmutableSortedSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet java.util.NavigableSet headSet(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(x0 : Any, x1 : Boolean) : NavigableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; headSetImpl(C, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSetImpl(p0 : C, p1 : Boolean) : ContiguousSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSetImpl(p0 : Any, p1 : Boolean) : ImmutableSortedSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; intersection(com.google.common.collect.ContiguousSet&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersection(p0 : ContiguousSet&lt;C&gt;) : ContiguousSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.Range&lt;C&gt; range()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun range() : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.Range&lt;C&gt; range(com.google.common.collect.BoundType, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun range(p0 : BoundType?, p1 : BoundType?) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; subSet(C, C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(fromElement : C, toElement : C) : ContiguousSet&lt;C&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; subSet(C, boolean, C, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(fromElement : C, fromInclusive : Boolean, toElement : C, toInclusive : Boolean) : ContiguousSet&lt;C&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(x0 : Any, x1 : Any) : ImmutableSortedSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet java.util.SortedSet subSet(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(x0 : Any, x1 : Any) : SortedSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object, boolean, java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(x0 : Any, x1 : Boolean, x2 : Any, x3 : Boolean) : ImmutableSortedSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet java.util.NavigableSet subSet(java.lang.Object, boolean, java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(x0 : Any, x1 : Boolean, x2 : Any, x3 : Boolean) : NavigableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; subSetImpl(C, boolean, C, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSetImpl(p0 : C, p1 : Boolean, p2 : C?, p3 : Boolean) : ContiguousSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object, boolean, java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSetImpl(p0 : Any, p1 : Boolean, p2 : Any, p3 : Boolean) : ImmutableSortedSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; tailSet(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(fromElement : C) : ContiguousSet&lt;C&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; tailSet(C, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(fromElement : C, inclusive : Boolean) : ContiguousSet&lt;C&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(x0 : Any) : ImmutableSortedSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet java.util.SortedSet tailSet(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(x0 : Any) : SortedSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(x0 : Any, x1 : Boolean) : ImmutableSortedSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet java.util.NavigableSet tailSet(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(x0 : Any, x1 : Boolean) : NavigableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; tailSetImpl(C, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSetImpl(p0 : C, p1 : Boolean) : ContiguousSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSetImpl(p0 : Any, p1 : Boolean) : ImmutableSortedSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Count boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveAll com.google.common.collect.Cut.AboveAll access$100()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100() : Cut.AboveAll&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveAll void describeAsLowerBound(java.lang.StringBuilder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun describeAsLowerBound(p0 : StringBuilder) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveAll void describeAsUpperBound(java.lang.StringBuilder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun describeAsUpperBound(sb : StringBuilder) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveAll java.lang.Comparable&lt;?&gt; greatestValueBelow(com.google.common.collect.DiscreteDomain&lt;java.lang.Comparable&lt;?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun greatestValueBelow(domain : DiscreteDomain&lt;Comparable&lt;*&gt;?&gt;) : Comparable&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveAll java.lang.Comparable&lt;?&gt; leastValueAbove(com.google.common.collect.DiscreteDomain&lt;java.lang.Comparable&lt;?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun leastValueAbove(p0 : DiscreteDomain&lt;Comparable&lt;*&gt;?&gt;) : Comparable&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveAll java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveAll com.google.common.collect.Cut&lt;java.lang.Comparable&lt;?&gt;&gt; withLowerBoundType(com.google.common.collect.BoundType, com.google.common.collect.DiscreteDomain&lt;java.lang.Comparable&lt;?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withLowerBoundType(p0 : BoundType, p1 : DiscreteDomain&lt;Comparable&lt;*&gt;?&gt;?) : Cut&lt;Comparable&lt;*&gt;?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveAll com.google.common.collect.Cut&lt;java.lang.Comparable&lt;?&gt;&gt; withUpperBoundType(com.google.common.collect.BoundType, com.google.common.collect.DiscreteDomain&lt;java.lang.Comparable&lt;?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withUpperBoundType(p0 : BoundType, p1 : DiscreteDomain&lt;Comparable&lt;*&gt;?&gt;?) : Cut&lt;Comparable&lt;*&gt;?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveValue AboveValue(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AboveValue(endpoint : C)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveValue com.google.common.collect.Cut&lt;C&gt; canonical(com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun canonical(domain : DiscreteDomain&lt;C&gt;) : Cut&lt;C&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveValue void describeAsLowerBound(java.lang.StringBuilder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun describeAsLowerBound(sb : StringBuilder) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveValue void describeAsUpperBound(java.lang.StringBuilder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun describeAsUpperBound(sb : StringBuilder) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveValue C greatestValueBelow(com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun greatestValueBelow(p0 : DiscreteDomain&lt;C&gt;) : C?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveValue C leastValueAbove(com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun leastValueAbove(domain : DiscreteDomain&lt;C&gt;) : C?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveValue com.google.common.collect.BoundType typeAsLowerBound()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun typeAsLowerBound() : BoundType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveValue com.google.common.collect.BoundType typeAsUpperBound()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun typeAsUpperBound() : BoundType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveValue com.google.common.collect.Cut&lt;C&gt; withLowerBoundType(com.google.common.collect.BoundType, com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withLowerBoundType(boundType : BoundType, domain : DiscreteDomain&lt;C&gt;?) : Cut&lt;C&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.AboveValue com.google.common.collect.Cut&lt;C&gt; withUpperBoundType(com.google.common.collect.BoundType, com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withUpperBoundType(boundType : BoundType, domain : DiscreteDomain&lt;C&gt;?) : Cut&lt;C&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowAll com.google.common.collect.Cut.BelowAll access$000()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000() : Cut.BelowAll&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowAll com.google.common.collect.Cut&lt;java.lang.Comparable&lt;?&gt;&gt; canonical(com.google.common.collect.DiscreteDomain&lt;java.lang.Comparable&lt;?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun canonical(domain : DiscreteDomain&lt;Comparable&lt;*&gt;?&gt;) : Cut&lt;Comparable&lt;*&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowAll void describeAsLowerBound(java.lang.StringBuilder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun describeAsLowerBound(sb : StringBuilder) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowAll void describeAsUpperBound(java.lang.StringBuilder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun describeAsUpperBound(p0 : StringBuilder) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowAll java.lang.Comparable&lt;?&gt; greatestValueBelow(com.google.common.collect.DiscreteDomain&lt;java.lang.Comparable&lt;?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun greatestValueBelow(p0 : DiscreteDomain&lt;Comparable&lt;*&gt;?&gt;) : Comparable&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowAll java.lang.Comparable&lt;?&gt; leastValueAbove(com.google.common.collect.DiscreteDomain&lt;java.lang.Comparable&lt;?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun leastValueAbove(domain : DiscreteDomain&lt;Comparable&lt;*&gt;?&gt;) : Comparable&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowAll java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowAll com.google.common.collect.Cut&lt;java.lang.Comparable&lt;?&gt;&gt; withLowerBoundType(com.google.common.collect.BoundType, com.google.common.collect.DiscreteDomain&lt;java.lang.Comparable&lt;?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withLowerBoundType(p0 : BoundType, p1 : DiscreteDomain&lt;Comparable&lt;*&gt;?&gt;?) : Cut&lt;Comparable&lt;*&gt;?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowAll com.google.common.collect.Cut&lt;java.lang.Comparable&lt;?&gt;&gt; withUpperBoundType(com.google.common.collect.BoundType, com.google.common.collect.DiscreteDomain&lt;java.lang.Comparable&lt;?&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withUpperBoundType(p0 : BoundType, p1 : DiscreteDomain&lt;Comparable&lt;*&gt;?&gt;?) : Cut&lt;Comparable&lt;*&gt;?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowValue BelowValue(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BelowValue(endpoint : C)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowValue void describeAsLowerBound(java.lang.StringBuilder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun describeAsLowerBound(sb : StringBuilder) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowValue void describeAsUpperBound(java.lang.StringBuilder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun describeAsUpperBound(sb : StringBuilder) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowValue C greatestValueBelow(com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun greatestValueBelow(domain : DiscreteDomain&lt;C&gt;) : C?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowValue C leastValueAbove(com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun leastValueAbove(p0 : DiscreteDomain&lt;C&gt;) : C?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowValue com.google.common.collect.BoundType typeAsLowerBound()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun typeAsLowerBound() : BoundType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowValue com.google.common.collect.BoundType typeAsUpperBound()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun typeAsUpperBound() : BoundType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowValue com.google.common.collect.Cut&lt;C&gt; withLowerBoundType(com.google.common.collect.BoundType, com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withLowerBoundType(boundType : BoundType, domain : DiscreteDomain&lt;C&gt;?) : Cut&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut.BelowValue com.google.common.collect.Cut&lt;C&gt; withUpperBoundType(com.google.common.collect.BoundType, com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withUpperBoundType(boundType : BoundType, domain : DiscreteDomain&lt;C&gt;?) : Cut&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut Cut(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Cut(endpoint : C?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut com.google.common.collect.Cut&lt;C&gt; aboveAll()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable?&gt; aboveAll() : Cut&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut com.google.common.collect.Cut&lt;C&gt; aboveValue(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable?&gt; aboveValue(endpoint : C) : Cut&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut com.google.common.collect.Cut&lt;C&gt; belowAll()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable?&gt; belowAll() : Cut&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut com.google.common.collect.Cut&lt;C&gt; belowValue(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable?&gt; belowValue(endpoint : C) : Cut&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut com.google.common.collect.Cut&lt;C&gt; canonical(com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun canonical(domain : DiscreteDomain&lt;C&gt;) : Cut&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut void describeAsLowerBound(java.lang.StringBuilder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun describeAsLowerBound(p0 : StringBuilder) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut void describeAsUpperBound(java.lang.StringBuilder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun describeAsUpperBound(p0 : StringBuilder) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut C endpoint()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun endpoint() : C?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut C greatestValueBelow(com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun greatestValueBelow(p0 : DiscreteDomain&lt;C&gt;) : C?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut C leastValueAbove(com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun leastValueAbove(p0 : DiscreteDomain&lt;C&gt;) : C?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut com.google.common.collect.BoundType typeAsLowerBound()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun typeAsLowerBound() : BoundType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut com.google.common.collect.BoundType typeAsUpperBound()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun typeAsUpperBound() : BoundType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut com.google.common.collect.Cut&lt;C&gt; withLowerBoundType(com.google.common.collect.BoundType, com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withLowerBoundType(p0 : BoundType, p1 : DiscreteDomain&lt;C&gt;?) : Cut&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Cut com.google.common.collect.Cut&lt;C&gt; withUpperBoundType(com.google.common.collect.BoundType, com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withUpperBoundType(p0 : BoundType, p1 : DiscreteDomain&lt;C&gt;?) : Cut&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DescendingImmutableSortedMultiset.1 com.google.common.collect.ImmutableList&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; createAsList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAsList() : ImmutableList&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DescendingImmutableSortedMultiset.1 com.google.common.collect.UnmodifiableIterator&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DescendingImmutableSortedMultiset.1 java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DescendingImmutableSortedMultiset int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DescendingImmutableSortedMultiset com.google.common.collect.ImmutableSet&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : ImmutableSet&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DescendingImmutableSortedMultiset com.google.common.collect.ImmutableSortedSet&lt;E&gt; elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DescendingImmutableSortedMultiset java.util.Set elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DescendingImmutableSortedMultiset java.util.SortedSet elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : SortedSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DescendingImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMultiset(upperBound : E, boundType : BoundType) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DescendingImmutableSortedMultiset com.google.common.collect.SortedMultiset headMultiset(java.lang.Object, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMultiset(x0 : Any?, x1 : BoundType) : SortedMultiset&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DescendingImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMultiset(lowerBound : E, boundType : BoundType) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DescendingImmutableSortedMultiset com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMultiset(x0 : Any?, x1 : BoundType) : SortedMultiset&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomain long distance(C, C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun distance(p0 : C, p1 : C) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomain C next(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next(p0 : C) : C?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomain C previous(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun previous(p0 : C) : C?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.BigIntegerDomain com.google.common.collect.DiscreteDomains.BigIntegerDomain access$200()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200() : DiscreteDomains.BigIntegerDomain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.BigIntegerDomain long distance(java.lang.Comparable, java.lang.Comparable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun distance(x0 : Comparable, x1 : Comparable) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.BigIntegerDomain long distance(java.math.BigInteger, java.math.BigInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun distance(start : BigInteger, end : BigInteger?) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.BigIntegerDomain java.lang.Comparable next(java.lang.Comparable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next(x0 : Comparable) : Comparable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.BigIntegerDomain java.math.BigInteger next(java.math.BigInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next(value : BigInteger) : BigInteger?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.BigIntegerDomain java.lang.Comparable previous(java.lang.Comparable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun previous(x0 : Comparable) : Comparable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.BigIntegerDomain java.math.BigInteger previous(java.math.BigInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun previous(value : BigInteger) : BigInteger?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.BigIntegerDomain java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.IntegerDomain com.google.common.collect.DiscreteDomains.IntegerDomain access$000()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000() : DiscreteDomains.IntegerDomain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.IntegerDomain long distance(java.lang.Comparable, java.lang.Comparable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun distance(x0 : Comparable, x1 : Comparable) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.IntegerDomain long distance(java.lang.Integer, java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun distance(start : Int, end : Int) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.IntegerDomain java.lang.Comparable next(java.lang.Comparable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next(x0 : Comparable) : Comparable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.IntegerDomain java.lang.Integer next(java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next(value : Int) : Int?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.IntegerDomain java.lang.Comparable previous(java.lang.Comparable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun previous(x0 : Comparable) : Comparable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.IntegerDomain java.lang.Integer previous(java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun previous(value : Int) : Int?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.IntegerDomain java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.LongDomain com.google.common.collect.DiscreteDomains.LongDomain access$100()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100() : DiscreteDomains.LongDomain&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.LongDomain long distance(java.lang.Comparable, java.lang.Comparable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun distance(x0 : Comparable, x1 : Comparable) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.LongDomain long distance(java.lang.Long, java.lang.Long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun distance(start : Long, end : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.LongDomain java.lang.Comparable next(java.lang.Comparable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next(x0 : Comparable) : Comparable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.LongDomain java.lang.Long next(java.lang.Long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next(value : Long) : Long?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.LongDomain java.lang.Comparable previous(java.lang.Comparable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun previous(x0 : Comparable) : Comparable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.LongDomain java.lang.Long previous(java.lang.Long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun previous(value : Long) : Long?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains.LongDomain java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains com.google.common.collect.DiscreteDomain&lt;java.math.BigInteger&gt; bigIntegers()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun bigIntegers() : DiscreteDomain&lt;BigInteger?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains com.google.common.collect.DiscreteDomain&lt;java.lang.Integer&gt; integers()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun integers() : DiscreteDomain&lt;Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.DiscreteDomains com.google.common.collect.DiscreteDomain&lt;java.lang.Long&gt; longs()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun longs() : DiscreteDomain&lt;Long?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyContiguousSet.SerializedForm java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyContiguousSet com.google.common.collect.ImmutableList&lt;C&gt; asList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asList() : ImmutableList&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyContiguousSet com.google.common.collect.ImmutableSortedSet&lt;C&gt; createDescendingSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createDescendingSet() : ImmutableSortedSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyContiguousSet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; headSetImpl(C, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSetImpl(toElement : C, inclusive : Boolean) : ContiguousSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyContiguousSet com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSetImpl(x0 : Any, x1 : Boolean) : ImmutableSortedSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyContiguousSet int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; intersection(com.google.common.collect.ContiguousSet&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersection(other : ContiguousSet&lt;C&gt;) : ContiguousSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyContiguousSet com.google.common.collect.UnmodifiableIterator&lt;C&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyContiguousSet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; subSetImpl(C, boolean, C, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSetImpl(fromElement : C, fromInclusive : Boolean, toElement : C?, toInclusive : Boolean) : ContiguousSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyContiguousSet com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object, boolean, java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSetImpl(x0 : Any, x1 : Boolean, x2 : Any, x3 : Boolean) : ImmutableSortedSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; tailSetImpl(C, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSetImpl(fromElement : C, fromInclusive : Boolean) : ContiguousSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyContiguousSet com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSetImpl(x0 : Any, x1 : Boolean) : ImmutableSortedSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyContiguousSet java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyContiguousSet java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableBiMap com.google.common.collect.ImmutableMap&lt;java.lang.Object,java.lang.Object&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : ImmutableMap&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableBiMap com.google.common.collect.BiMap inverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun inverse() : BiMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;java.lang.Object,java.lang.Object&gt; inverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun inverse() : ImmutableBiMap&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableBiMap java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(targets : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList com.google.common.collect.UnmodifiableIterator&lt;java.lang.Object&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList int lastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList com.google.common.collect.UnmodifiableListIterator&lt;java.lang.Object&gt; listIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator() : UnmodifiableListIterator&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList java.util.ListIterator listIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator() : MutableListIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList com.google.common.collect.UnmodifiableListIterator&lt;java.lang.Object&gt; listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(start : Int) : UnmodifiableListIterator&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList java.util.ListIterator listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(x0 : Int) : MutableListIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList com.google.common.collect.ImmutableList&lt;java.lang.Object&gt; reverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reverse() : ImmutableList&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList com.google.common.collect.ImmutableList&lt;java.lang.Object&gt; subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(fromIndex : Int, toIndex : Int) : ImmutableList&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList java.util.List subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(x0 : Int, x1 : Int) : MutableList&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList java.lang.Object[] toArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray() : Array&lt;out Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(a : Array&lt;out T&gt;) : Array&lt;out T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableList java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableListMultimap java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMap com.google.common.collect.ImmutableSet&lt;java.util.Map.Entry&lt;java.lang.Object,java.lang.Object&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : ImmutableSet&lt;Map.Entry&lt;Any?, Any?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMap java.util.Set entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMap java.lang.Object get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMap com.google.common.collect.ImmutableSet&lt;java.lang.Object&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : ImmutableSet&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMap java.util.Set keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMap java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMap java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMap com.google.common.collect.ImmutableCollection&lt;java.lang.Object&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : ImmutableCollection&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMap java.util.Collection values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMultiset com.google.common.collect.ImmutableList&lt;java.lang.Object&gt; asList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asList() : ImmutableList&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMultiset boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMultiset boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(targets : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMultiset int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMultiset com.google.common.collect.ImmutableSet&lt;java.lang.Object&gt; elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : ImmutableSet&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMultiset java.util.Set elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMultiset com.google.common.collect.ImmutableSet&lt;com.google.common.collect.Multiset.Entry&lt;java.lang.Object&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : ImmutableSet&lt;Multiset.Entry&lt;Any?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMultiset java.util.Set entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMultiset boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMultiset com.google.common.collect.UnmodifiableIterator&lt;java.lang.Object&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMultiset java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMultiset java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMultiset java.lang.Object[] toArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray() : Array&lt;out Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableMultiset T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSet com.google.common.collect.ImmutableList&lt;java.lang.Object&gt; asList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asList() : ImmutableList&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSet boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(targets : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSet com.google.common.collect.UnmodifiableIterator&lt;java.lang.Object&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSet java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSet java.lang.Object[] toArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray() : Array&lt;out Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSet T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSet java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSetMultimap java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; createDescendingMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createDescendingMap() : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMap com.google.common.collect.ImmutableSet&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : ImmutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMap java.util.Set entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMap V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; headMap(K, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(toKey : K, inclusive : Boolean) : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMap java.util.NavigableMap headMap(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(x0 : Any, x1 : Boolean) : NavigableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMap com.google.common.collect.ImmutableSet keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : ImmutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMap com.google.common.collect.ImmutableSortedSet&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : ImmutableSortedSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMap java.util.Set keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; tailMap(K, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(fromKey : K, inclusive : Boolean) : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMap java.util.NavigableMap tailMap(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(x0 : Any, x1 : Boolean) : NavigableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMap java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMap com.google.common.collect.ImmutableCollection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : ImmutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMap java.util.Collection values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset com.google.common.collect.ImmutableList&lt;E&gt; asList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asList() : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(targets : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset com.google.common.collect.ImmutableSortedSet&lt;E&gt; elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset java.util.Set elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset java.util.SortedSet elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : SortedSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset com.google.common.collect.ImmutableSet&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : ImmutableSet&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset java.util.Set entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset com.google.common.collect.Multiset.Entry&lt;E&gt; firstEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun firstEntry() : Multiset.Entry&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMultiset(upperBound : E, boundType : BoundType) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset com.google.common.collect.SortedMultiset headMultiset(java.lang.Object, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMultiset(x0 : Any?, x1 : BoundType) : SortedMultiset&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset com.google.common.collect.Multiset.Entry&lt;E&gt; lastEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastEntry() : Multiset.Entry&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMultiset(lowerBound : E, boundType : BoundType) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMultiset(x0 : Any?, x1 : BoundType) : SortedMultiset&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset java.lang.Object[] toArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray() : Array&lt;out Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedMultiset java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedSet com.google.common.collect.ImmutableList&lt;E&gt; asList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asList() : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedSet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedSet boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(targets : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; createDescendingSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createDescendingSet() : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedSet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; headSetImpl(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSetImpl(toElement : E, inclusive : Boolean) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedSet int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedSet com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedSet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; subSetImpl(E, boolean, E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSetImpl(fromElement : E, fromInclusive : Boolean, toElement : E, toInclusive : Boolean) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; tailSetImpl(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSetImpl(fromElement : E, inclusive : Boolean) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedSet java.lang.Object[] toArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray() : Array&lt;out Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedSet T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableSortedSet java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable com.google.common.collect.ImmutableSet&lt;com.google.common.collect.Table.Cell&lt;java.lang.Object,java.lang.Object,java.lang.Object&gt;&gt; cellSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cellSet() : ImmutableSet&lt;Table.Cell&lt;Any?, Any?, Any?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable java.util.Set cellSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cellSet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable com.google.common.collect.ImmutableMap&lt;java.lang.Object,java.lang.Object&gt; column(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(columnKey : Any) : ImmutableMap&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable java.util.Map column(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(x0 : Any) : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable com.google.common.collect.ImmutableSet&lt;java.lang.Object&gt; columnKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnKeySet() : ImmutableSet&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable java.util.Set columnKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnKeySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable com.google.common.collect.ImmutableMap&lt;java.lang.Object,java.util.Map&lt;java.lang.Object,java.lang.Object&gt;&gt; columnMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnMap() : ImmutableMap&lt;Any?, Map&lt;Any?, Any?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable java.util.Map columnMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable boolean contains(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable boolean containsColumn(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsColumn(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable boolean containsRow(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsRow(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable java.lang.Object get(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?, p1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable com.google.common.collect.ImmutableMap&lt;java.lang.Object,java.lang.Object&gt; row(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(rowKey : Any) : ImmutableMap&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable java.util.Map row(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(x0 : Any?) : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable com.google.common.collect.ImmutableSet&lt;java.lang.Object&gt; rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : ImmutableSet&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable java.util.Set rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable com.google.common.collect.ImmutableMap&lt;java.lang.Object,java.util.Map&lt;java.lang.Object,java.lang.Object&gt;&gt; rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : ImmutableMap&lt;Any?, Map&lt;Any?, Any?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable java.util.Map rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable com.google.common.collect.ImmutableCollection&lt;java.lang.Object&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : ImmutableCollection&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EmptyImmutableTable java.util.Collection values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumBiMap K checkKey(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkKey(key : K) : K&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumBiMap java.lang.Object checkKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkKey(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumBiMap V checkValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkValue(value : V) : V&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumBiMap java.lang.Object checkValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkValue(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumBiMap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumBiMap com.google.common.collect.EnumBiMap&lt;K,V&gt; create(java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Enum&lt;K&gt;?, V : Enum&lt;V&gt;?&gt; create(keyType : Class&lt;K&gt;?, valueType : Class&lt;V&gt;?) : EnumBiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumBiMap com.google.common.collect.EnumBiMap&lt;K,V&gt; create(java.util.Map&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Enum&lt;K&gt;?, V : Enum&lt;V&gt;?&gt; create(map : Map&lt;K, V&gt;) : EnumBiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumBiMap java.util.Set entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumBiMap java.lang.Class&lt;K&gt; inferKeyType(java.util.Map&lt;K,?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Enum&lt;K&gt;?&gt; inferKeyType(map : Map&lt;K, *&gt;) : Class&lt;K&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumBiMap java.lang.Class&lt;V&gt; inferValueType(java.util.Map&lt;?,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V : Enum&lt;V&gt;?&gt; inferValueType(map : Map&lt;*, V&gt;) : Class&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumBiMap java.util.Set keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumBiMap void putAll(java.util.Map)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(x0 : Map) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumBiMap void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumBiMap java.util.Set values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumBiMap void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap EnumHashBiMap(java.lang.Class&lt;K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun EnumHashBiMap(keyType : Class&lt;K&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap K checkKey(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkKey(key : K) : K&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap java.lang.Object checkKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkKey(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap com.google.common.collect.EnumHashBiMap&lt;K,V&gt; create(java.lang.Class&lt;K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Enum&lt;K&gt;?, V&gt; create(keyType : Class&lt;K&gt;) : EnumHashBiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap com.google.common.collect.EnumHashBiMap&lt;K,V&gt; create(java.util.Map&lt;K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Enum&lt;K&gt;?, V&gt; create(map : Map&lt;K, out V&gt;) : EnumHashBiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap java.util.Set entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap V forcePut(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun forcePut(p0 : K?, p1 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap java.lang.Object forcePut(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun forcePut(x0 : Any?, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap java.util.Set keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap V put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K?, p1 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap java.lang.Object put(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(x0 : Any?, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap void putAll(java.util.Map)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(x0 : Map) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap java.lang.Object remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap java.util.Set values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumMultiset boolean addAll(java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(p0 : Collection) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumMultiset boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumMultiset int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumMultiset com.google.common.collect.EnumMultiset&lt;E&gt; create(java.lang.Class&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Enum&lt;E&gt;?&gt; create(type : Class&lt;E&gt;?) : EnumMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumMultiset com.google.common.collect.EnumMultiset&lt;E&gt; create(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Enum&lt;E&gt;?&gt; create(elements : Iterable&lt;E&gt;) : EnumMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumMultiset java.util.Set entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumMultiset boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumMultiset java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumMultiset void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumMultiset boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumMultiset int remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumMultiset boolean removeAll(java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumMultiset boolean retainAll(java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumMultiset void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ExplicitOrdering ExplicitOrdering(java.util.List&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ExplicitOrdering(valuesInOrder : List&lt;T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ExplicitOrdering com.google.common.collect.ImmutableMap&lt;T,java.lang.Integer&gt; buildRankMap(java.util.List&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; buildRankMap(valuesInOrder : List&lt;T&gt;) : ImmutableMap&lt;T, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ExplicitOrdering int compare(T, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(p0 : T?, p1 : T?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ExplicitOrdering boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable.1 1(java.lang.Iterable, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Iterable)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable.FromIterableFunction com.google.common.collect.FluentIterable&lt;E&gt; apply(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(fromObject : Iterable&lt;E&gt;) : FluentIterable&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable.FromIterableFunction java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable FluentIterable(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FluentIterable(iterable : Iterable&lt;E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable boolean allMatch(com.google.common.base.Predicate&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun allMatch(predicate : Predicate&lt;in E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable boolean anyMatch(com.google.common.base.Predicate&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun anyMatch(predicate : Predicate&lt;in E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; cycle()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cycle() : FluentIterable&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; filter(com.google.common.base.Predicate&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun filter(predicate : Predicate&lt;in E&gt;) : FluentIterable&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;T&gt; filter(java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; filter(type : Class&lt;T&gt;) : FluentIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.base.Optional&lt;E&gt; first()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun first() : Optional&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.base.Optional&lt;E&gt; firstMatch(com.google.common.base.Predicate&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun firstMatch(predicate : Predicate&lt;in E&gt;) : Optional&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; from(com.google.common.collect.FluentIterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; from(iterable : FluentIterable&lt;E&gt;) : FluentIterable&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; from(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; from(iterable : Iterable&lt;E&gt;) : FluentIterable&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.base.Optional&lt;E&gt; last()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun last() : Optional&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; limit(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun limit(size : Int) : FluentIterable&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; skip(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun skip(numberToSkip : Int) : FluentIterable&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.ImmutableList&lt;E&gt; toImmutableList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toImmutableList() : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.ImmutableSortedSet&lt;E&gt; toImmutableSortedSet(java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toImmutableSortedSet(comparator : Comparator&lt;in E&gt;) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.ImmutableList&lt;E&gt; toSortedImmutableList(java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toSortedImmutableList(comparator : Comparator&lt;in E&gt;) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;T&gt; transform(com.google.common.base.Function&lt;? super E,T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; transform(function : Function&lt;in E, T&gt;) : FluentIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;T&gt; transformAndConcat(com.google.common.base.Function&lt;? super E,? extends java.lang.Iterable&lt;T&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; transformAndConcat(function : Function&lt;in E, out Iterable&lt;T&gt;?&gt;) : FluentIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean addAll(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(p0 : Collection&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection java.util.Collection&lt;E&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean standardAddAll(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardAddAll(collection : Collection&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean standardContains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardContains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean standardContainsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardContainsAll(collection : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean standardRemove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardRemove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean standardRemoveAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardRemoveAll(collection : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean standardRetainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardRetainAll(collection : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection T[] standardToArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; standardToArray(array : Array&lt;out T&gt;) : Array&lt;out T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingIterator T next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : T&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingList boolean addAll(int, java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(p0 : Int, p1 : Collection&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingList java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingList java.util.Collection delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingList java.util.List&lt;E&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingList boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingList java.util.ListIterator&lt;E&gt; listIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator() : MutableListIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingList java.util.ListIterator&lt;E&gt; listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(p0 : Int) : MutableListIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingList boolean standardAddAll(int, java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardAddAll(index : Int, elements : Iterable&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingList boolean standardEquals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardEquals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingList int standardIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardIndexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingList int standardLastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardLastIndexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingList java.util.List&lt;E&gt; subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(p0 : Int, p1 : Int) : MutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingListIterator void add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingListIterator void set(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : E?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingListMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingListMultimap java.util.List&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : MutableList&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingListMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingListMultimap java.util.List&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableList&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingListMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingListMultimap java.util.List&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : MutableList&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap java.util.Map&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap V put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K, p1 : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap void putAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Map&lt;out K, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap V remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap boolean standardContainsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardContainsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap boolean standardContainsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardContainsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap boolean standardEquals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardEquals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap void standardPutAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardPutAll(map : Map&lt;out K, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap V standardRemove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardRemove(p0 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap java.util.Collection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMapEntry boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMapEntry V getValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue() : V&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMapEntry V setValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValue(p0 : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMapEntry boolean standardEquals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardEquals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : MutableMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap boolean containsEntry(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsEntry(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap com.google.common.collect.Multimap&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Multimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap java.util.Collection&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableCollection&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap java.util.Collection&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap com.google.common.collect.Multiset&lt;K&gt; keys()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keys() : Multiset&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap boolean put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K?, p1 : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap boolean putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Multimap&lt;out K, out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap boolean putAll(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : K?, p1 : Iterable&lt;out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap boolean remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap java.util.Collection&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap java.util.Collection&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset int add(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset java.util.Set&lt;E&gt; elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset java.util.Set&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset int remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset int setCount(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : E?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset boolean setCount(E, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : E?, p1 : Int, p2 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset boolean standardAddAll(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardAddAll(elementsToAdd : Collection&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset boolean standardContains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardContains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset int standardCount(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardCount(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset boolean standardEquals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardEquals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset java.util.Iterator&lt;E&gt; standardIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardIterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset boolean standardRemove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardRemove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset boolean standardRemoveAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardRemoveAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset boolean standardRetainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardRetainAll(elementsToRetain : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableMap.StandardDescendingMap java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entryIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entryIterator() : MutableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableMap T poll(java.util.Iterator&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; poll(iterator : MutableIterator&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableMap K standardCeilingKey(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardCeilingKey(key : K?) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableMap java.util.Map.Entry&lt;K,V&gt; standardFirstEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardFirstEntry() : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableMap K standardFloorKey(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardFloorKey(key : K?) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableMap K standardHigherKey(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardHigherKey(key : K?) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableMap java.util.Map.Entry&lt;K,V&gt; standardLastEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardLastEntry() : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableMap K standardLowerKey(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardLowerKey(key : K?) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableMap java.util.Map.Entry&lt;K,V&gt; standardPollFirstEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardPollFirstEntry() : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableMap java.util.Map.Entry&lt;K,V&gt; standardPollLastEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardPollLastEntry() : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet java.util.NavigableSet&lt;E&gt; headSet(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(p0 : E, p1 : Boolean) : NavigableSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet E poll(java.util.Iterator&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun poll(iterator : MutableIterator&lt;E&gt;) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet E standardCeiling(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardCeiling(e : E?) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet E standardFloor(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardFloor(e : E?) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet E standardHigher(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardHigher(e : E?) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet E standardLower(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardLower(e : E?) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet E standardPollFirst()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardPollFirst() : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet E standardPollLast()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardPollLast() : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet java.util.NavigableSet&lt;E&gt; subSet(E, boolean, E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(p0 : E, p1 : Boolean, p2 : E, p3 : Boolean) : NavigableSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet java.util.NavigableSet&lt;E&gt; tailSet(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(p0 : E, p1 : Boolean) : NavigableSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingObject java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingQueue E standardPeek()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardPeek() : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingQueue E standardPoll()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardPoll() : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSet java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSet java.util.Collection delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSet java.util.Set&lt;E&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSet boolean standardEquals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardEquals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSet boolean standardRemoveAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardRemoveAll(collection : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSetMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSetMultimap java.util.Set&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : MutableSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSetMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSetMultimap java.util.Set&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSetMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSetMultimap java.util.Set&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : MutableSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedMap java.util.SortedMap&lt;K,V&gt; headMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(p0 : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedMap boolean standardContainsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardContainsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedMap V standardRemove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardRemove(p0 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedMap java.util.SortedMap&lt;K,V&gt; subMap(K, K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(p0 : K?, p1 : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedMap java.util.SortedMap&lt;K,V&gt; tailMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(p0 : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.Comparator&lt;? super E&gt; comparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun comparator() : Comparator&lt;in E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.Collection delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.Set delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.SortedSet&lt;E&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.SortedSet&lt;E&gt; headSet(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(p0 : E) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet boolean standardContains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardContains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet boolean standardRemove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun standardRemove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.SortedSet&lt;E&gt; subSet(E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(p0 : E, p1 : E) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.SortedSet&lt;E&gt; tailSet(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(p0 : E) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSetMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSetMultimap java.util.Set get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSetMultimap java.util.SortedSet&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : SortedSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSetMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSetMultimap java.util.Set removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSetMultimap java.util.SortedSet&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : SortedSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSetMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSetMultimap java.util.Set replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSetMultimap java.util.SortedSet&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : SortedSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingTable java.util.Map&lt;R,V&gt; column(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(p0 : C) : MutableMap&lt;R, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingTable boolean contains(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingTable boolean containsColumn(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsColumn(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingTable boolean containsRow(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsRow(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingTable boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingTable com.google.common.collect.Table&lt;R,C,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Table&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingTable java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingTable boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingTable V get(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?, p1 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingTable V put(R, C, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : R?, p1 : C?, p2 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingTable void putAll(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Table&lt;out R, out C, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingTable V remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingTable java.util.Map&lt;C,V&gt; row(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(p0 : R?) : MutableMap&lt;C, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GeneralRange GeneralRange(java.util.Comparator&lt;? super T&gt;, boolean, T, com.google.common.collect.BoundType, boolean, T, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun GeneralRange(comparator : Comparator&lt;in T&gt;, hasLowerBound : Boolean, lowerEndpoint : T?, lowerBoundType : BoundType, hasUpperBound : Boolean, upperEndpoint : T?, upperBoundType : BoundType)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GeneralRange com.google.common.collect.GeneralRange&lt;T&gt; all(java.util.Comparator&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; all(comparator : Comparator&lt;in T&gt;) : GeneralRange&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GeneralRange java.util.Comparator&lt;? super T&gt; comparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun comparator() : Comparator&lt;in T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GeneralRange boolean contains(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(t : T?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GeneralRange com.google.common.collect.GeneralRange&lt;T&gt; downTo(java.util.Comparator&lt;? super T&gt;, T, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; downTo(comparator : Comparator&lt;in T&gt;, endpoint : T?, boundType : BoundType) : GeneralRange&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GeneralRange boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GeneralRange com.google.common.collect.GeneralRange&lt;T&gt; from(com.google.common.collect.Range&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : Comparable?&gt; from(range : Range&lt;T&gt;) : GeneralRange&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GeneralRange com.google.common.collect.BoundType getLowerBoundType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLowerBoundType() : BoundType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GeneralRange T getLowerEndpoint()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLowerEndpoint() : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GeneralRange com.google.common.collect.BoundType getUpperBoundType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getUpperBoundType() : BoundType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GeneralRange T getUpperEndpoint()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getUpperEndpoint() : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GeneralRange com.google.common.collect.GeneralRange&lt;T&gt; intersect(com.google.common.collect.GeneralRange&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersect(other : GeneralRange&lt;T&gt;) : GeneralRange&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GeneralRange com.google.common.collect.GeneralRange&lt;T&gt; range(java.util.Comparator&lt;? super T&gt;, T, com.google.common.collect.BoundType, T, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; range(p0 : Comparator&lt;in T&gt;, p1 : T?, p2 : BoundType, p3 : T?, p4 : BoundType) : GeneralRange&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GeneralRange com.google.common.collect.GeneralRange&lt;T&gt; reverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reverse() : GeneralRange&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GeneralRange boolean tooHigh(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tooHigh(t : T?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GeneralRange boolean tooLow(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tooLow(t : T?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GeneralRange com.google.common.collect.GeneralRange&lt;T&gt; upTo(java.util.Comparator&lt;? super T&gt;, T, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; upTo(comparator : Comparator&lt;in T&gt;, endpoint : T?, boundType : BoundType) : GeneralRange&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GenericMapMaker com.google.common.collect.GenericMapMaker&lt;K0,V0&gt; concurrencyLevel(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun concurrencyLevel(p0 : Int) : GenericMapMaker&lt;K0, V0&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GenericMapMaker com.google.common.collect.GenericMapMaker&lt;K0,V0&gt; expireAfterAccess(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun expireAfterAccess(p0 : Long, p1 : TimeUnit) : GenericMapMaker&lt;K0, V0&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GenericMapMaker com.google.common.collect.GenericMapMaker&lt;K0,V0&gt; expireAfterWrite(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun expireAfterWrite(p0 : Long, p1 : TimeUnit) : GenericMapMaker&lt;K0, V0&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GenericMapMaker com.google.common.collect.MapMaker.RemovalListener&lt;K,V&gt; getRemovalListener()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : K0, V : V0&gt; getRemovalListener() : MapMaker.RemovalListener&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GenericMapMaker com.google.common.collect.GenericMapMaker&lt;K0,V0&gt; initialCapacity(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initialCapacity(p0 : Int) : GenericMapMaker&lt;K0, V0&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GenericMapMaker com.google.common.collect.GenericMapMaker&lt;K0,V0&gt; keyEquivalence(com.google.common.base.Equivalence&lt;java.lang.Object&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keyEquivalence(p0 : Equivalence&lt;Any?&gt;) : GenericMapMaker&lt;K0, V0&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GenericMapMaker java.util.concurrent.ConcurrentMap&lt;K,V&gt; makeComputingMap(com.google.common.base.Function&lt;? super K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : K0, V : V0&gt; makeComputingMap(p0 : Function&lt;in K, out V&gt;) : ConcurrentMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GenericMapMaker com.google.common.collect.MapMakerInternalMap&lt;K,V&gt; makeCustomMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; makeCustomMap() : MapMakerInternalMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GenericMapMaker java.util.concurrent.ConcurrentMap&lt;K,V&gt; makeMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : K0, V : V0&gt; makeMap() : ConcurrentMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GenericMapMaker com.google.common.collect.GenericMapMaker&lt;K0,V0&gt; maximumSize(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun maximumSize(p0 : Int) : GenericMapMaker&lt;K0, V0&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GenericMapMaker com.google.common.collect.GenericMapMaker&lt;K0,V0&gt; softKeys()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun softKeys() : GenericMapMaker&lt;K0, V0&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GenericMapMaker com.google.common.collect.GenericMapMaker&lt;K0,V0&gt; softValues()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun softValues() : GenericMapMaker&lt;K0, V0&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GenericMapMaker com.google.common.collect.GenericMapMaker&lt;K0,V0&gt; weakKeys()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun weakKeys() : GenericMapMaker&lt;K0, V0&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.GenericMapMaker com.google.common.collect.GenericMapMaker&lt;K0,V0&gt; weakValues()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun weakValues() : GenericMapMaker&lt;K0, V0&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable.Factory java.lang.Object get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable.Factory java.util.Map&lt;C,V&gt; get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : MutableMap&lt;C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.util.Set cellSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cellSet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.util.Map column(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(x0 : Any) : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.util.Set columnKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnKeySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.util.Map columnMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable boolean contains(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable boolean containsColumn(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsColumn(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable boolean containsRow(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsRow(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable com.google.common.collect.HashBasedTable&lt;R,C,V&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; create() : HashBasedTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable com.google.common.collect.HashBasedTable&lt;R,C,V&gt; create(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; create(expectedRows : Int, expectedCellsPerRow : Int) : HashBasedTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable com.google.common.collect.HashBasedTable&lt;R,C,V&gt; create(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; create(table : Table&lt;out R, out C, out V&gt;) : HashBasedTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable V get(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?, p1 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.lang.Object put(java.lang.Object, java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(x0 : Any?, x1 : Any?, x2 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable void putAll(com.google.common.collect.Table)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(x0 : Table) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable V remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.util.Map row(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(x0 : Any?) : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.util.Set rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.util.Map rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.util.Collection values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBiMap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBiMap com.google.common.collect.HashBiMap&lt;K,V&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; create() : HashBiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBiMap com.google.common.collect.HashBiMap&lt;K,V&gt; create(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; create(expectedSize : Int) : HashBiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBiMap com.google.common.collect.HashBiMap&lt;K,V&gt; create(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; create(map : Map&lt;out K, out V&gt;) : HashBiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBiMap java.util.Set entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBiMap V forcePut(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun forcePut(p0 : K?, p1 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBiMap java.util.Set keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBiMap V put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K?, p1 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBiMap void putAll(java.util.Map)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(x0 : Map) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBiMap void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBiMap java.lang.Object remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBiMap java.util.Set values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBiMap void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap HashMultimap(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun HashMultimap(multimap : Multimap&lt;out K, out V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap java.util.Map asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap boolean containsEntry(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsEntry(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap com.google.common.collect.HashMultimap&lt;K,V&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; create() : HashMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap com.google.common.collect.HashMultimap&lt;K,V&gt; create(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; create(expectedKeys : Int, expectedValuesPerKey : Int) : HashMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap com.google.common.collect.HashMultimap&lt;K,V&gt; create(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; create(multimap : Multimap&lt;out K, out V&gt;) : HashMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap java.util.Collection createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap java.util.Set&lt;V&gt; createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap java.util.Set entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap java.util.Set get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap boolean put(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap boolean putAll(com.google.common.collect.Multimap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Multimap) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap boolean putAll(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Any?, p1 : Iterable) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap boolean remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap java.util.Set removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap java.util.Set replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(x0 : Any?, x1 : Iterable) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset boolean add(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset int add(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset boolean addAll(java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(p0 : Collection) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset com.google.common.collect.HashMultiset&lt;E&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; create() : HashMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset com.google.common.collect.HashMultiset&lt;E&gt; create(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; create(distinctElements : Int) : HashMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset com.google.common.collect.HashMultiset&lt;E&gt; create(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; create(elements : Iterable&lt;out E&gt;) : HashMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset java.util.Set entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset int remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset boolean removeAll(java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset boolean retainAll(java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset int setCount(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset boolean setCount(java.lang.Object, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : Any?, p1 : Int, p2 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableAsList.SerializedForm java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableAsList boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableAsList java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableBiMap&lt;K,V&gt; build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableBiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableMap build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableBiMap.Builder&lt;K,V&gt; put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(key : K, value : V) : ImmutableBiMap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableMap.Builder put(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(x0 : Any, x1 : Any) : ImmutableMap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableBiMap.Builder&lt;K,V&gt; putAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(map : Map&lt;out K, out V&gt;) : ImmutableBiMap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableMap.Builder putAll(java.util.Map)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(x0 : Map) : ImmutableMap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.SerializedForm SerializedForm(com.google.common.collect.ImmutableBiMap&lt;?,?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SerializedForm(bimap : ImmutableBiMap&lt;*, *&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap.Builder&lt;K,V&gt; builder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; builder() : ImmutableBiMap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; copyOf(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyOf(map : Map&lt;out K, out V&gt;) : ImmutableBiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableMap&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap V forcePut(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun forcePut(p0 : K?, p1 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.BiMap inverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun inverse() : BiMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;V,K&gt; inverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun inverse() : ImmutableBiMap&lt;V, K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableSet&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : ImmutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap java.util.Set keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; of()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of() : ImmutableBiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; of(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V) : ImmutableBiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; of(K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V) : ImmutableBiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; of(K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V) : ImmutableBiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V, k4 : K, v4 : V) : ImmutableBiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V, k4 : K, v4 : V, k5 : K, v5 : V) : ImmutableBiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableCollection values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : ImmutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableSet&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : ImmutableSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap java.util.Collection values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap java.util.Set values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap.Builder com.google.common.collect.ImmutableClassToInstanceMap&lt;B&gt; build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableClassToInstanceMap&lt;B&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap.Builder T cast(java.lang.Class&lt;T&gt;, B)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;B, T : B&gt; cast(type : Class&lt;T&gt;, value : B?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap.Builder com.google.common.collect.ImmutableClassToInstanceMap.Builder&lt;B&gt; put(java.lang.Class&lt;T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; put(key : Class&lt;T&gt;, value : T) : ImmutableClassToInstanceMap.Builder&lt;B&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap.Builder com.google.common.collect.ImmutableClassToInstanceMap.Builder&lt;B&gt; putAll(java.util.Map&lt;? extends java.lang.Class&lt;? extends T&gt;,? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; putAll(map : Map&lt;out Class&lt;out T&gt;?, out T&gt;) : ImmutableClassToInstanceMap.Builder&lt;B&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap com.google.common.collect.ImmutableClassToInstanceMap.Builder&lt;B&gt; builder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;B&gt; builder() : ImmutableClassToInstanceMap.Builder&lt;B&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap com.google.common.collect.ImmutableClassToInstanceMap&lt;B&gt; copyOf(java.util.Map&lt;? extends java.lang.Class&lt;? extends S&gt;,? extends S&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;B, S : B&gt; copyOf(map : Map&lt;out Class&lt;out S&gt;?, out S&gt;) : ImmutableClassToInstanceMap&lt;B&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap T getInstance(java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; getInstance(p0 : Class&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap T putInstance(java.lang.Class&lt;T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; putInstance(p0 : Class&lt;T&gt;, p1 : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.ArrayImmutableCollection com.google.common.collect.ImmutableList&lt;E&gt; createAsList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAsList() : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.ArrayImmutableCollection com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.ArrayImmutableCollection java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.Builder com.google.common.collect.ImmutableCollection.Builder&lt;E&gt; add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E) : ImmutableCollection.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.Builder com.google.common.collect.ImmutableCollection.Builder&lt;E&gt; add(E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(vararg elements : E) : ImmutableCollection.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.Builder com.google.common.collect.ImmutableCollection.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elements : Iterable&lt;out E&gt;) : ImmutableCollection.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.Builder com.google.common.collect.ImmutableCollection.Builder&lt;E&gt; addAll(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elements : Iterator&lt;out E&gt;) : ImmutableCollection.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.Builder com.google.common.collect.ImmutableCollection&lt;E&gt; build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableCollection&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.EmptyImmutableCollection boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.EmptyImmutableCollection com.google.common.collect.ImmutableList&lt;java.lang.Object&gt; createAsList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAsList() : ImmutableList&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.EmptyImmutableCollection com.google.common.collect.UnmodifiableIterator&lt;java.lang.Object&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.EmptyImmutableCollection java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.EmptyImmutableCollection java.lang.Object[] toArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray() : Array&lt;out Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.EmptyImmutableCollection T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(array : Array&lt;out T&gt;) : Array&lt;out T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.SerializedForm java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection com.google.common.collect.ImmutableList&lt;E&gt; asList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asList() : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(object : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(targets : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection com.google.common.collect.ImmutableList&lt;E&gt; createAsList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAsList() : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection java.lang.Object[] toArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray() : Array&lt;out Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(other : Array&lt;out T&gt;) : Array&lt;out T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableEntry ImmutableEntry(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ImmutableEntry(key : K?, value : V?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableEntry K getKey()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKey() : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableEntry V getValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableEntry V setValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValue(p0 : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableEnumSet.EnumSerializedForm java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableEnumSet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableEnumSet boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableEnumSet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableEnumSet com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableEnumSet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableEnumSet T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableEnumSet java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(x0 : Any) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableList.Builder&lt;E&gt; add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(element : E) : ImmutableList.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(x0 : Array&lt;out Any?&gt;) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableList.Builder&lt;E&gt; add(E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(vararg elements : E) : ImmutableList.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(x0 : Iterable) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableList.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elements : Iterable&lt;out E&gt;) : ImmutableList.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(x0 : Iterator) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableList.Builder&lt;E&gt; addAll(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elements : Iterator&lt;out E&gt;) : ImmutableList.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableCollection build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableList&lt;E&gt; build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableList.Builder&lt;E&gt; expandFor(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun expandFor(count : Int) : ImmutableList.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.ReverseImmutableList ReverseImmutableList(com.google.common.collect.ImmutableList&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ReverseImmutableList(backingList : ImmutableList&lt;E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.ReverseImmutableList int access$000(com.google.common.collect.ImmutableList.ReverseImmutableList, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : ImmutableList.ReverseImmutableList, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.ReverseImmutableList boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.ReverseImmutableList boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.ReverseImmutableList int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.ReverseImmutableList java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.ReverseImmutableList int lastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.ReverseImmutableList java.util.ListIterator listIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator() : MutableListIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.ReverseImmutableList com.google.common.collect.UnmodifiableListIterator&lt;E&gt; listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(index : Int) : UnmodifiableListIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.ReverseImmutableList java.util.ListIterator listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(x0 : Int) : MutableListIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.ReverseImmutableList com.google.common.collect.ImmutableList&lt;E&gt; reverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reverse() : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.ReverseImmutableList com.google.common.collect.ImmutableList&lt;E&gt; subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(fromIndex : Int, toIndex : Int) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.ReverseImmutableList java.util.List subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(x0 : Int, x1 : Int) : MutableList&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.SerializedForm java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.SubList java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.SubList java.util.ListIterator listIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator() : MutableListIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.SubList java.util.ListIterator listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(x0 : Int) : MutableListIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.SubList com.google.common.collect.ImmutableList&lt;E&gt; subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(fromIndex : Int, toIndex : Int) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.SubList java.util.List subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(x0 : Int, x1 : Int) : MutableList&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; asImmutableList(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; asImmutableList(elements : Array&lt;out Any?&gt;) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; asList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asList() : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList.Builder&lt;E&gt; builder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; builder() : ImmutableList.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; construct(java.lang.Object...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; construct(vararg elements : Any) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(object : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; copyFromCollection(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyFromCollection(collection : Collection&lt;out E&gt;) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; copyOf(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(elements : Iterable&lt;out E&gt;) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; copyOf(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(elements : Collection&lt;out E&gt;) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; copyOf(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(elements : Iterator&lt;out E&gt;) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; copyOf(E[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(elements : Array&lt;out E&gt;) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(object : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList int lastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(object : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.UnmodifiableListIterator&lt;E&gt; listIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator() : UnmodifiableListIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList java.util.ListIterator listIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator() : MutableListIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.UnmodifiableListIterator&lt;E&gt; listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(index : Int) : UnmodifiableListIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList java.util.ListIterator listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(x0 : Int) : MutableListIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of() : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(element : E) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(e1 : E?, e2 : E?) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(e1 : E?, e2 : E?, e3 : E?) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?, e5 : E?) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?, e5 : E?, e6 : E?) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E, E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?, e5 : E?, e6 : E?, e7 : E?) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E, E, E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?, e5 : E?, e6 : E?, e7 : E?, e8 : E?) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E, E, E, E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?, e5 : E?, e6 : E?, e7 : E?, e8 : E?, e9 : E?) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E, E, E, E, E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?, e5 : E?, e6 : E?, e7 : E?, e8 : E?, e9 : E?, e10 : E?) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E, E, E, E, E, E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?, e5 : E?, e6 : E?, e7 : E?, e8 : E?, e9 : E?, e10 : E?, e11 : E?) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E, E, E, E, E, E, E, E, E, E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?, e5 : E?, e6 : E?, e7 : E?, e8 : E?, e9 : E?, e10 : E?, e11 : E?, e12 : E?, vararg others : E) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; reverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reverse() : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(fromIndex : Int, toIndex : Int) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList java.util.List subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(x0 : Int, x1 : Int) : MutableList&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; subListUnchecked(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subListUnchecked(fromIndex : Int, toIndex : Int) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableMultimap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; orderKeysBy(java.util.Comparator&lt;? super K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun orderKeysBy(keyComparator : Comparator&lt;in K&gt;) : ImmutableListMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder orderKeysBy(java.util.Comparator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun orderKeysBy(x0 : Comparator) : ImmutableMultimap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; orderValuesBy(java.util.Comparator&lt;? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun orderValuesBy(valueComparator : Comparator&lt;in V&gt;) : ImmutableListMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder orderValuesBy(java.util.Comparator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun orderValuesBy(x0 : Comparator) : ImmutableMultimap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(key : K, value : V) : ImmutableListMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder put(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(x0 : Any, x1 : Any) : ImmutableMultimap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; put(java.util.Map.Entry&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(entry : Map.Entry&lt;out K, out V&gt;) : ImmutableListMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder put(java.util.Map.Entry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(x0 : Map.Entry) : ImmutableMultimap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(multimap : Multimap&lt;out K, out V&gt;) : ImmutableListMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(com.google.common.collect.Multimap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(x0 : Multimap) : ImmutableMultimap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; putAll(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(key : K, values : Iterable&lt;out V&gt;) : ImmutableListMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(x0 : Any, x1 : Iterable) : ImmutableMultimap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; putAll(K, V...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(key : K, vararg values : V?) : ImmutableListMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Object, java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(x0 : Any, x1 : Array&lt;out Any?&gt;?) : ImmutableMultimap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; builder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; builder() : ImmutableListMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; copyOf(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyOf(multimap : Multimap&lt;out K, out V&gt;) : ImmutableListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableCollection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any) : ImmutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableList&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : ImmutableList&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap java.util.List get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableList&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;V,K&gt; inverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun inverse() : ImmutableListMultimap&lt;V, K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableMultimap inverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun inverse() : ImmutableMultimap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;V,K&gt; invert()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun invert() : ImmutableListMultimap&lt;V, K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of() : ImmutableListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V) : ImmutableListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V) : ImmutableListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V) : ImmutableListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V, k4 : K, v4 : V) : ImmutableListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V, k4 : K, v4 : V, k5 : K, v5 : V) : ImmutableListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableCollection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : ImmutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap java.util.List removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableList?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : ImmutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap java.util.List replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableList?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap.Builder com.google.common.collect.ImmutableMap&lt;K,V&gt; build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap.Builder com.google.common.collect.ImmutableMap&lt;K,V&gt; fromEntryList(java.util.List&lt;java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; fromEntryList(entries : List&lt;Map.Entry&lt;K, V&gt;?&gt;) : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap.Builder com.google.common.collect.ImmutableMap.Builder&lt;K,V&gt; put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(key : K, value : V) : ImmutableMap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap.Builder com.google.common.collect.ImmutableMap.Builder&lt;K,V&gt; put(java.util.Map.Entry&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(entry : Map.Entry&lt;out K, out V&gt;) : ImmutableMap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap.Builder com.google.common.collect.ImmutableMap.Builder&lt;K,V&gt; putAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(map : Map&lt;out K, out V&gt;) : ImmutableMap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap.SerializedForm SerializedForm(com.google.common.collect.ImmutableMap&lt;?,?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SerializedForm(map : ImmutableMap&lt;*, *&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap.SerializedForm java.lang.Object createMap(com.google.common.collect.ImmutableMap.Builder&lt;java.lang.Object,java.lang.Object&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createMap(builder : ImmutableMap.Builder&lt;Any?, Any?&gt;) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap.SerializedForm java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap.Builder&lt;K,V&gt; builder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; builder() : ImmutableMap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(key : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; copyOf(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyOf(map : Map&lt;out K, out V&gt;) : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableSet&lt;java.util.Map.Entry&lt;K,V&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : ImmutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableSet&lt;K&gt; createKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createKeySet() : ImmutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableCollection&lt;V&gt; createValues()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createValues() : ImmutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap java.util.Map.Entry&lt;K,V&gt; entryOf(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; entryOf(key : K, value : V) : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableSet&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : ImmutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap java.util.Set entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(object : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableSet&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : ImmutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap java.util.Set keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of() : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V) : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V) : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V) : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V, k4 : K, v4 : V) : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V, k4 : K, v4 : V, k5 : K, v5 : V) : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableCollection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : ImmutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap java.util.Collection values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMapEntrySet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMapEntrySet java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMapKeySet.KeySetSerializedForm java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMapKeySet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMapKeySet com.google.common.collect.ImmutableList&lt;K&gt; createAsList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAsList() : ImmutableList&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMapKeySet java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMapKeySet K transform(java.util.Map.Entry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(entry : Map.Entry&lt;K, V&gt;) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMapKeySet java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMapValues.SerializedForm java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMapValues boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMapValues com.google.common.collect.ImmutableList&lt;V&gt; createAsList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAsList() : ImmutableList&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMapValues com.google.common.collect.UnmodifiableIterator&lt;V&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMapValues java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMapValues java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder.1 K apply(java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(entry : Map.Entry&lt;K, Collection&lt;V&gt;?&gt;) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap&lt;K,V&gt; build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; orderKeysBy(java.util.Comparator&lt;? super K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun orderKeysBy(keyComparator : Comparator&lt;in K&gt;) : ImmutableMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; orderValuesBy(java.util.Comparator&lt;? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun orderValuesBy(valueComparator : Comparator&lt;in V&gt;) : ImmutableMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(key : K, value : V) : ImmutableMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; put(java.util.Map.Entry&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(entry : Map.Entry&lt;out K, out V&gt;) : ImmutableMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(multimap : Multimap&lt;out K, out V&gt;) : ImmutableMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; putAll(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(key : K, values : Iterable&lt;out V&gt;) : ImmutableMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; putAll(K, V...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(key : K, vararg values : V?) : ImmutableMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.BuilderMultimap java.util.Collection&lt;V&gt; createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.EntryCollection.1 java.lang.Object next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.EntryCollection.1 java.util.Map.Entry&lt;K,V&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.EntryCollection boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(object : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.EntryCollection com.google.common.collect.UnmodifiableIterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.EntryCollection java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Keys.KeysEntrySet.1 com.google.common.collect.Multiset.Entry&lt;K&gt; get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(index : Int) : Multiset.Entry&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Keys.KeysEntrySet.1 java.lang.Object get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Int) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Keys.KeysEntrySet com.google.common.collect.ImmutableList&lt;com.google.common.collect.Multiset.Entry&lt;K&gt;&gt; createAsList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAsList() : ImmutableList&lt;Multiset.Entry&lt;K&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Keys.KeysEntrySet com.google.common.collect.UnmodifiableIterator&lt;com.google.common.collect.Multiset.Entry&lt;K&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;Multiset.Entry&lt;K&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Keys.KeysEntrySet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Keys boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Keys int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Keys com.google.common.collect.ImmutableSet&lt;com.google.common.collect.Multiset.Entry&lt;K&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : ImmutableSet&lt;Multiset.Entry&lt;K&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Keys java.util.Set&lt;K&gt; elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Values com.google.common.collect.UnmodifiableIterator&lt;V&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Values java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; builder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; builder() : ImmutableMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap boolean containsEntry(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsEntry(key : Any?, value : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(key : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; copyOf(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyOf(multimap : Multimap&lt;out K, out V&gt;) : ImmutableMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultiset&lt;K&gt; createKeys()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createKeys() : ImmutableMultiset&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableCollection&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : ImmutableCollection&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap java.util.Collection entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableCollection&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K) : ImmutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;V,K&gt; inverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun inverse() : ImmutableMultimap&lt;V, K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableSet&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : ImmutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap java.util.Set keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultiset&lt;K&gt; keys()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keys() : ImmutableMultiset&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.Multiset keys()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keys() : Multiset&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of() : ImmutableMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V) : ImmutableMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V) : ImmutableMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V) : ImmutableMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V, k4 : K, v4 : V) : ImmutableMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V, k4 : K, v4 : V, k5 : K, v5 : V) : ImmutableMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap boolean put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K?, p1 : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap boolean putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Multimap&lt;out K, out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap boolean putAll(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : K?, p1 : Iterable&lt;out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap boolean remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableCollection&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : ImmutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableCollection&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : ImmutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableCollection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : ImmutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap java.util.Collection values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(x0 : Any) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(element : E) : ImmutableMultiset.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(x0 : Array&lt;out Any?&gt;) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; add(E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(vararg elements : E) : ImmutableMultiset.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(x0 : Iterable) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elements : Iterable&lt;out E&gt;) : ImmutableMultiset.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(x0 : Iterator) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; addAll(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elements : Iterator&lt;out E&gt;) : ImmutableMultiset.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; addCopies(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addCopies(element : E, occurrences : Int) : ImmutableMultiset.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableCollection build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset&lt;E&gt; build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; setCount(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(element : E, count : Int) : ImmutableMultiset.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.EntrySet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.EntrySet T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(other : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.EntrySet java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.SerializedForm SerializedForm(com.google.common.collect.Multiset&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SerializedForm(multiset : Multiset&lt;*&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.SerializedForm java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset int add(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; builder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; builder() : ImmutableMultiset.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; copyFromEntries(java.util.Collection&lt;? extends com.google.common.collect.Multiset.Entry&lt;? extends E&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyFromEntries(entries : Collection&lt;out Multiset.Entry&lt;out E&gt;?&gt;) : ImmutableMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; copyOf(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(elements : Iterable&lt;out E&gt;) : ImmutableMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; copyOf(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(elements : Iterator&lt;out E&gt;) : ImmutableMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; copyOf(E[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(elements : Array&lt;out E&gt;?) : ImmutableMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; copyOfInternal(com.google.common.collect.Multiset&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOfInternal(multiset : Multiset&lt;out E&gt;) : ImmutableMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; copyOfInternal(E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOfInternal(vararg elements : E?) : ImmutableMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableSet&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : ImmutableSet&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableSet&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : ImmutableSet&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset java.util.Set entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of() : ImmutableMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(element : E?) : ImmutableMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(e1 : E?, e2 : E?) : ImmutableMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(e1 : E?, e2 : E?, e3 : E?) : ImmutableMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E, E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?) : ImmutableMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E, E, E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?, e5 : E?) : ImmutableMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E, E, E, E, E, E, E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?, e5 : E?, e6 : E?, vararg others : E) : ImmutableMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset int remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset int setCount(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : E?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset boolean setCount(E, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : E?, p1 : Int, p2 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.ArrayImmutableSet boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.ArrayImmutableSet com.google.common.collect.ImmutableList&lt;E&gt; createAsList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAsList() : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.ArrayImmutableSet com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.ArrayImmutableSet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.ArrayImmutableSet T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(x0 : Any) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableSet.Builder&lt;E&gt; add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(element : E) : ImmutableSet.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(x0 : Array&lt;out Any?&gt;) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableSet.Builder&lt;E&gt; add(E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(vararg elements : E) : ImmutableSet.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(x0 : Iterable) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableSet.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elements : Iterable&lt;out E&gt;) : ImmutableSet.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(x0 : Iterator) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableSet.Builder&lt;E&gt; addAll(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elements : Iterator&lt;out E&gt;) : ImmutableSet.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableCollection build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableSet&lt;E&gt; build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableSet.Builder&lt;E&gt; expandFor(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun expandFor(count : Int) : ImmutableSet.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet.Builder&lt;E&gt; builder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; builder() : ImmutableSet.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet&lt;E&gt; copyFromCollection(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyFromCollection(collection : Collection&lt;out E&gt;) : ImmutableSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet&lt;E&gt; copyOf(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(elements : Iterable&lt;out E&gt;) : ImmutableSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet&lt;E&gt; copyOf(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(elements : Collection&lt;out E&gt;) : ImmutableSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet&lt;E&gt; copyOf(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(elements : Iterator&lt;out E&gt;) : ImmutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet&lt;E&gt; copyOf(E[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(elements : Array&lt;out E&gt;) : ImmutableSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet&lt;E&gt; of()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of() : ImmutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet&lt;E&gt; of(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(element : E) : ImmutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet&lt;E&gt; of(E, E, E, E, E, E, E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?, e5 : E?, e6 : E?, vararg others : E) : ImmutableSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder.1 K apply(java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(entry : Map.Entry&lt;K, Collection&lt;V&gt;?&gt;) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableMultimap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableSetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder orderKeysBy(java.util.Comparator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun orderKeysBy(x0 : Comparator) : ImmutableMultimap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; orderKeysBy(java.util.Comparator&lt;? super K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun orderKeysBy(keyComparator : Comparator&lt;in K&gt;) : ImmutableSetMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder orderValuesBy(java.util.Comparator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun orderValuesBy(x0 : Comparator) : ImmutableMultimap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; orderValuesBy(java.util.Comparator&lt;? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun orderValuesBy(valueComparator : Comparator&lt;in V&gt;) : ImmutableSetMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder put(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(x0 : Any, x1 : Any) : ImmutableMultimap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(key : K, value : V) : ImmutableSetMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder put(java.util.Map.Entry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(x0 : Map.Entry) : ImmutableMultimap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; put(java.util.Map.Entry&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(entry : Map.Entry&lt;out K, out V&gt;) : ImmutableSetMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(com.google.common.collect.Multimap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(x0 : Multimap) : ImmutableMultimap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(multimap : Multimap&lt;out K, out V&gt;) : ImmutableSetMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(x0 : Any, x1 : Iterable) : ImmutableMultimap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; putAll(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(key : K, values : Iterable&lt;out V&gt;) : ImmutableSetMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Object, java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(x0 : Any, x1 : Array&lt;out Any?&gt;?) : ImmutableMultimap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; putAll(K, V...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(key : K, vararg values : V?) : ImmutableSetMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.BuilderMultimap java.util.Collection&lt;V&gt; createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.SortedKeyBuilderMultimap java.util.Collection&lt;V&gt; createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap ImmutableSetMultimap(com.google.common.collect.ImmutableMap&lt;K,com.google.common.collect.ImmutableSet&lt;V&gt;&gt;, int, java.util.Comparator&lt;? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ImmutableSetMultimap(map : ImmutableMap&lt;K, ImmutableSet&lt;V&gt;?&gt;?, size : Int, valueComparator : Comparator&lt;in V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap access$000(com.google.common.collect.Multimap, java.util.Comparator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : Multimap, x1 : Comparator?) : ImmutableSetMultimap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; builder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; builder() : ImmutableSetMultimap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; copyOf(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyOf(multimap : Multimap&lt;out K, out V&gt;) : ImmutableSetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; copyOf(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;, java.util.Comparator&lt;? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyOf(multimap : Multimap&lt;out K, out V&gt;, valueComparator : Comparator&lt;in V&gt;?) : ImmutableSetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableCollection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any) : ImmutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSet&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : ImmutableSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap java.util.Set get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableMultimap inverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun inverse() : ImmutableMultimap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;V,K&gt; inverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun inverse() : ImmutableSetMultimap&lt;V, K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;V,K&gt; invert()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun invert() : ImmutableSetMultimap&lt;V, K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of() : ImmutableSetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V) : ImmutableSetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V) : ImmutableSetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V) : ImmutableSetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V, k4 : K, v4 : V) : ImmutableSetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V, k4 : K, v4 : V, k5 : K, v5 : V) : ImmutableSetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableCollection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : ImmutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap java.util.Set removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : ImmutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap java.util.Set replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedAsList boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedAsList int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedAsList int lastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.1 int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.1 int compare(java.util.Map.Entry&lt;K,V&gt;, java.util.Map.Entry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(entry1 : Map.Entry&lt;K, V&gt;, entry2 : Map.Entry&lt;K, V&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder Builder(java.util.Comparator&lt;? super K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Builder(comparator : Comparator&lt;in K&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableMap build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableMap.Builder put(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(x0 : Any, x1 : Any) : ImmutableMap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(key : K, value : V) : ImmutableSortedMap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableMap.Builder put(java.util.Map.Entry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(x0 : Map.Entry) : ImmutableMap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; put(java.util.Map.Entry&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(entry : Map.Entry&lt;out K, out V&gt;) : ImmutableSortedMap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableMap.Builder putAll(java.util.Map)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(x0 : Map) : ImmutableMap.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; putAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(map : Map&lt;out K, out V&gt;) : ImmutableSortedMap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.SerializedForm SerializedForm(com.google.common.collect.ImmutableSortedMap&lt;?,?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SerializedForm(sortedMap : ImmutableSortedMap&lt;*, *&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap void access$100(java.util.List, java.util.Comparator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : List, x1 : Comparator?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.Map.Entry&lt;K,V&gt; ceilingEntry(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ceilingEntry(key : K?) : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap K ceilingKey(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ceilingKey(key : K?) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; copyOf(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyOf(map : Map&lt;out K, out V&gt;) : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; copyOf(java.util.Map&lt;? extends K,? extends V&gt;, java.util.Comparator&lt;? super K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyOf(map : Map&lt;out K, out V&gt;, comparator : Comparator&lt;in K&gt;) : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; copyOfInternal(java.util.Map&lt;? extends K,? extends V&gt;, java.util.Comparator&lt;? super K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyOfInternal(map : Map&lt;out K, out V&gt;, comparator : Comparator&lt;in K&gt;?) : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; copyOfSorted(java.util.SortedMap&lt;K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyOfSorted(map : SortedMap&lt;K, out V&gt;) : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; createDescendingMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createDescendingMap() : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedSet&lt;K&gt; descendingKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingKeySet() : ImmutableSortedSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.NavigableSet descendingKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingKeySet() : NavigableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; emptyMap(java.util.Comparator&lt;? super K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; emptyMap(comparator : Comparator&lt;in K&gt;?) : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSet&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : ImmutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.Set entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.Map.Entry&lt;K,V&gt; firstEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun firstEntry() : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.Map.Entry&lt;K,V&gt; floorEntry(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun floorEntry(key : K?) : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap K floorKey(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun floorKey(key : K?) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; from(com.google.common.collect.ImmutableSortedSet&lt;K&gt;, com.google.common.collect.ImmutableList&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; from(keySet : ImmutableSortedSet&lt;K&gt;, valueList : ImmutableList&lt;V&gt;?) : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; fromSortedEntries(java.util.Comparator&lt;? super K&gt;, java.util.Collection&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; fromSortedEntries(comparator : Comparator&lt;in K&gt;?, entries : Collection&lt;out Map.Entry&lt;out K, out V&gt;?&gt;) : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; headMap(K, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(p0 : K, p1 : Boolean) : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.NavigableMap headMap(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(p0 : Any, p1 : Boolean) : NavigableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.Map.Entry&lt;K,V&gt; higherEntry(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun higherEntry(key : K?) : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap K higherKey(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun higherKey(key : K?) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSet keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : ImmutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedSet&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : ImmutableSortedSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.Set keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.Map.Entry&lt;K,V&gt; lastEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastEntry() : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.Map.Entry&lt;K,V&gt; lowerEntry(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lowerEntry(key : K?) : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap K lowerKey(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lowerKey(key : K?) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; naturalOrder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Comparable&lt;K&gt;?, V&gt; naturalOrder() : ImmutableSortedMap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; of()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; of() : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; of(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Comparable&lt;in K&gt;?, V&gt; of(k1 : K, v1 : V) : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; of(K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Comparable&lt;in K&gt;?, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V) : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; of(K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Comparable&lt;in K&gt;?, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V) : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Comparable&lt;in K&gt;?, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V, k4 : K, v4 : V) : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Comparable&lt;in K&gt;?, V&gt; of(k1 : K, v1 : V, k2 : K, v2 : V, k3 : K, v3 : V, k4 : K, v4 : V, k5 : K, v5 : V) : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; orderedBy(java.util.Comparator&lt;K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; orderedBy(comparator : Comparator&lt;K&gt;) : ImmutableSortedMap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; reverseOrder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Comparable&lt;K&gt;?, V&gt; reverseOrder() : ImmutableSortedMap.Builder&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; subMap(K, K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(fromKey : K, toKey : K) : ImmutableSortedMap&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.SortedMap subMap(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(x0 : Any, x1 : Any) : SortedMap?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; subMap(K, boolean, K, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(fromKey : K, fromInclusive : Boolean, toKey : K, toInclusive : Boolean) : ImmutableSortedMap&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.NavigableMap subMap(java.lang.Object, boolean, java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(x0 : Any, x1 : Boolean, x2 : Any, x3 : Boolean) : NavigableMap?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; tailMap(K, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(p0 : K, p1 : Boolean) : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.NavigableMap tailMap(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(p0 : Any, p1 : Boolean) : NavigableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap void validateEntries(java.util.List&lt;java.util.Map.Entry&lt;K,V&gt;&gt;, java.util.Comparator&lt;? super K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; validateEntries(entries : List&lt;Map.Entry&lt;K, V&gt;?&gt;, comparator : Comparator&lt;in K&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableCollection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : ImmutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.Collection values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder Builder(java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Builder(comparator : Comparator&lt;in E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(x0 : Any) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder add(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(x0 : Any) : ImmutableMultiset.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(element : E) : ImmutableSortedMultiset.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(x0 : Array&lt;out Any?&gt;) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder add(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(x0 : Array&lt;out Any?&gt;) : ImmutableMultiset.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; add(E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(vararg elements : E) : ImmutableSortedMultiset.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(x0 : Iterable) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder addAll(java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(x0 : Iterable) : ImmutableMultiset.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elements : Iterable&lt;out E&gt;) : ImmutableSortedMultiset.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(x0 : Iterator) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder addAll(java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(x0 : Iterator) : ImmutableMultiset.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; addAll(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elements : Iterator&lt;out E&gt;) : ImmutableSortedMultiset.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder addCopies(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addCopies(x0 : Any, x1 : Int) : ImmutableMultiset.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; addCopies(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addCopies(element : E, occurrences : Int) : ImmutableSortedMultiset.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableCollection build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableMultiset&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder setCount(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(x0 : Any, x1 : Int) : ImmutableMultiset.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; setCount(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(element : E, count : Int) : ImmutableSortedMultiset.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.SerializedForm SerializedForm(com.google.common.collect.SortedMultiset&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SerializedForm(multiset : SortedMultiset&lt;*&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.SerializedForm java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOf(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(elements : Iterable&lt;out E&gt;) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(comparator : Comparator&lt;in E&gt;, elements : Iterable&lt;out E&gt;) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(comparator : Comparator&lt;in E&gt;, elements : Iterator&lt;out E&gt;) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOf(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(elements : Iterator&lt;out E&gt;) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOf(E[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;in E&gt;?&gt; copyOf(elements : Array&lt;out E&gt;?) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOfSorted(com.google.common.collect.SortedMultiset&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOfSorted(sortedMultiset : SortedMultiset&lt;E&gt;) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOfSortedEntries(java.util.Comparator&lt;? super E&gt;, java.util.Collection&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOfSortedEntries(comparator : Comparator&lt;in E&gt;?, entries : Collection&lt;Multiset.Entry&lt;E&gt;?&gt;) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; descendingMultiset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingMultiset() : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.SortedMultiset descendingMultiset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingMultiset() : SortedMultiset&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedSet&lt;E&gt; elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset java.util.Set elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset java.util.SortedSet elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : SortedSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; emptyMultiset(java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; emptyMultiset(comparator : Comparator&lt;in E&gt;?) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMultiset(p0 : E, p1 : BoundType) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.SortedMultiset headMultiset(java.lang.Object, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMultiset(p0 : Any?, p1 : BoundType) : SortedMultiset&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; naturalOrder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;E&gt;?&gt; naturalOrder() : ImmutableSortedMultiset.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; of()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of() : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; of(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;in E&gt;?&gt; of(element : E) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; of(E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;in E&gt;?&gt; of(e1 : E?, e2 : E?) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; of(E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;in E&gt;?&gt; of(e1 : E?, e2 : E?, e3 : E?) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; of(E, E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;in E&gt;?&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; of(E, E, E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;in E&gt;?&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?, e5 : E?) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; of(E, E, E, E, E, E, E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;in E&gt;?&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?, e5 : E?, e6 : E?, vararg remaining : E) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; orderedBy(java.util.Comparator&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; orderedBy(comparator : Comparator&lt;E&gt;) : ImmutableSortedMultiset.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; reverseOrder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;E&gt;?&gt; reverseOrder() : ImmutableSortedMultiset.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.SortedMultiset subMultiset(java.lang.Object, com.google.common.collect.BoundType, java.lang.Object, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMultiset(p0 : Any?, p1 : BoundType, p2 : Any?, p3 : BoundType) : SortedMultiset?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMultiset(p0 : E, p1 : BoundType) : ImmutableSortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMultiset(p0 : Any?, p1 : BoundType) : SortedMultiset&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder Builder(java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Builder(comparator : Comparator&lt;in E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(x0 : Any) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSet.Builder add(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(x0 : Any) : ImmutableSet.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(element : E) : ImmutableSortedSet.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(x0 : Array&lt;out Any?&gt;) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSet.Builder add(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(x0 : Array&lt;out Any?&gt;) : ImmutableSet.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; add(E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(vararg elements : E) : ImmutableSortedSet.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(x0 : Iterable) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSet.Builder addAll(java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(x0 : Iterable) : ImmutableSet.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elements : Iterable&lt;out E&gt;) : ImmutableSortedSet.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(x0 : Iterator) : ImmutableCollection.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSet.Builder addAll(java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(x0 : Iterator) : ImmutableSet.Builder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; addAll(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(elements : Iterator&lt;out E&gt;) : ImmutableSortedSet.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableCollection build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSet build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSortedSet&lt;E&gt; build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.SerializedForm java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet E ceiling(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ceiling(e : E) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; construct(java.util.Comparator&lt;? super E&gt;, int, E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; construct(comparator : Comparator&lt;in E&gt;?, n : Int, vararg contents : E?) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(elements : Iterable&lt;out E&gt;) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(elements : Collection&lt;out E&gt;) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(comparator : Comparator&lt;in E&gt;, elements : Iterable&lt;out E&gt;) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(comparator : Comparator&lt;in E&gt;, elements : Collection&lt;out E&gt;) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(comparator : Comparator&lt;in E&gt;, elements : Iterator&lt;out E&gt;) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOf(elements : Iterator&lt;out E&gt;) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(E[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;in E&gt;?&gt; copyOf(elements : Array&lt;out E&gt;?) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOfSorted(java.util.SortedSet&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyOfSorted(sortedSet : SortedSet&lt;E&gt;) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; createDescendingSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createDescendingSet() : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; descendingSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingSet() : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.NavigableSet descendingSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingSet() : NavigableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; emptySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; emptySet() : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; emptySet(java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; emptySet(comparator : Comparator&lt;in E&gt;?) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet E floor(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun floor(e : E) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; headSet(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(toElement : E) : ImmutableSortedSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.SortedSet headSet(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(x0 : Any) : SortedSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; headSet(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(toElement : E, inclusive : Boolean) : ImmutableSortedSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.NavigableSet headSet(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(x0 : Any, x1 : Boolean) : NavigableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; headSetImpl(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSetImpl(p0 : E, p1 : Boolean) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet E higher(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun higher(e : E) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet E lower(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lower(e : E) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; naturalOrder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;E&gt;?&gt; naturalOrder() : ImmutableSortedSet.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; of()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; of() : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; of(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;in E&gt;?&gt; of(element : E) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; of(E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;in E&gt;?&gt; of(e1 : E?, e2 : E?) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; of(E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;in E&gt;?&gt; of(e1 : E?, e2 : E?, e3 : E?) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; of(E, E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;in E&gt;?&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; of(E, E, E, E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;in E&gt;?&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?, e5 : E?) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; of(E, E, E, E, E, E, E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;in E&gt;?&gt; of(e1 : E?, e2 : E?, e3 : E?, e4 : E?, e5 : E?, e6 : E?, vararg remaining : E) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; orderedBy(java.util.Comparator&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; orderedBy(comparator : Comparator&lt;E&gt;) : ImmutableSortedSet.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; reverseOrder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;E&gt;?&gt; reverseOrder() : ImmutableSortedSet.Builder&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; subSet(E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(fromElement : E, toElement : E) : ImmutableSortedSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.SortedSet subSet(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(x0 : Any, x1 : Any) : SortedSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; subSet(E, boolean, E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(fromElement : E, fromInclusive : Boolean, toElement : E, toInclusive : Boolean) : ImmutableSortedSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.NavigableSet subSet(java.lang.Object, boolean, java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(x0 : Any, x1 : Boolean, x2 : Any, x3 : Boolean) : NavigableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; subSetImpl(E, boolean, E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSetImpl(p0 : E, p1 : Boolean, p2 : E, p3 : Boolean) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; tailSet(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(fromElement : E) : ImmutableSortedSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.SortedSet tailSet(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(x0 : Any) : SortedSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; tailSet(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(fromElement : E, inclusive : Boolean) : ImmutableSortedSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.NavigableSet tailSet(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(x0 : Any, x1 : Boolean) : NavigableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; tailSetImpl(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSetImpl(p0 : E, p1 : Boolean) : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet int unsafeCompare(java.util.Comparator&lt;?&gt;, java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun unsafeCompare(comparator : Comparator&lt;*&gt;, a : Any?, b : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable&lt;R,C,V&gt; build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; orderColumnsBy(java.util.Comparator&lt;? super C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun orderColumnsBy(columnComparator : Comparator&lt;in C&gt;) : ImmutableTable.Builder&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; orderRowsBy(java.util.Comparator&lt;? super R&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun orderRowsBy(rowComparator : Comparator&lt;in R&gt;) : ImmutableTable.Builder&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; put(com.google.common.collect.Table.Cell&lt;? extends R,? extends C,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(cell : Table.Cell&lt;out R, out C, out V&gt;) : ImmutableTable.Builder&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; put(R, C, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(rowKey : R, columnKey : C, value : V) : ImmutableTable.Builder&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; putAll(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(table : Table&lt;out R, out C, out V&gt;) : ImmutableTable.Builder&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; builder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; builder() : ImmutableTable.Builder&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.Table.Cell&lt;R,C,V&gt; cellOf(R, C, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; cellOf(rowKey : R, columnKey : C, value : V) : Table.Cell&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableSet&lt;com.google.common.collect.Table.Cell&lt;R,C,V&gt;&gt; cellSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cellSet() : ImmutableSet&lt;Table.Cell&lt;R, C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.util.Set cellSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cellSet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableMap&lt;R,V&gt; column(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(p0 : C) : ImmutableMap&lt;R, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.util.Map column(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(p0 : Any) : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableSet&lt;C&gt; columnKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnKeySet() : ImmutableSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.util.Set columnKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnKeySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableMap&lt;C,java.util.Map&lt;R,V&gt;&gt; columnMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnMap() : ImmutableMap&lt;C, Map&lt;R, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.util.Map columnMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableTable&lt;R,C,V&gt; copyOf(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; copyOf(table : Table&lt;out R, out C, out V&gt;) : ImmutableTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableTable&lt;R,C,V&gt; of()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; of() : ImmutableTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableTable&lt;R,C,V&gt; of(R, C, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; of(rowKey : R, columnKey : C, value : V) : ImmutableTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable V put(R, C, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : R?, p1 : C?, p2 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable void putAll(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Table&lt;out R, out C, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable V remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableMap&lt;C,V&gt; row(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(p0 : R) : ImmutableMap&lt;C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.util.Map row(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(p0 : Any?) : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableSet&lt;R&gt; rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : ImmutableSet&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.util.Set rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableMap&lt;R,java.util.Map&lt;C,V&gt;&gt; rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : ImmutableMap&lt;R, Map&lt;C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.util.Map rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Interner E intern(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intern(p0 : E) : E&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Interners.1 E intern(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intern(sample : E) : E&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Interners.InternerFunction E apply(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : E?) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Interners.InternerFunction boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(other : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Interners.WeakInterner E intern(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intern(sample : E) : E&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Interners com.google.common.base.Function&lt;E,E&gt; asFunction(com.google.common.collect.Interner&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; asFunction(interner : Interner&lt;E&gt;) : Function&lt;E, E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Interners com.google.common.collect.Interner&lt;E&gt; newStrongInterner()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newStrongInterner() : Interner&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Interners com.google.common.collect.Interner&lt;E&gt; newWeakInterner()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newWeakInterner() : Interner&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables.10 java.util.Iterator&lt;T&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables.11 java.util.Iterator&lt;T&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables.12 java.util.Iterator&lt;T&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables.13 java.util.Iterator&lt;T&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables.14 java.util.Iterator&lt;T&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables.15 java.util.Iterator&lt;? extends T&gt; apply(java.lang.Iterable&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(iterable : Iterable&lt;out T&gt;) : MutableIterator&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables.15 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables.1 java.util.Iterator&lt;T&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables.2 java.util.Iterator&lt;T&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables.4 java.util.Iterator&lt;java.util.List&lt;T&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;List&lt;T&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables.5 java.util.Iterator&lt;java.util.List&lt;T&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;List&lt;T&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables.6 java.util.Iterator&lt;T&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables.7 java.util.Iterator&lt;T&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables.8 java.util.Iterator&lt;T&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables.UnmodifiableIterable java.util.Iterator&lt;T&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables com.google.common.collect.UnmodifiableIterator access$100(java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : Iterable) : UnmodifiableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables com.google.common.base.Function access$300()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300() : Function&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables boolean addAll(java.util.Collection&lt;T&gt;, java.lang.Iterable&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; addAll(addTo : MutableCollection&lt;T&gt;, elementsToAdd : Iterable&lt;out T&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables boolean all(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; all(iterable : Iterable&lt;T&gt;, predicate : Predicate&lt;in T&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables boolean any(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; any(iterable : Iterable&lt;T&gt;, predicate : Predicate&lt;in T&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; concat(java.lang.Iterable&lt;? extends java.lang.Iterable&lt;? extends T&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; concat(inputs : Iterable&lt;out Iterable&lt;out T&gt;?&gt;) : MutableIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; concat(java.lang.Iterable&lt;? extends T&gt;, java.lang.Iterable&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; concat(a : Iterable&lt;out T&gt;, b : Iterable&lt;out T&gt;) : MutableIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; concat(java.lang.Iterable&lt;? extends T&gt;, java.lang.Iterable&lt;? extends T&gt;, java.lang.Iterable&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; concat(a : Iterable&lt;out T&gt;, b : Iterable&lt;out T&gt;, c : Iterable&lt;out T&gt;) : MutableIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; concat(java.lang.Iterable&lt;? extends T&gt;, java.lang.Iterable&lt;? extends T&gt;, java.lang.Iterable&lt;? extends T&gt;, java.lang.Iterable&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; concat(a : Iterable&lt;out T&gt;, b : Iterable&lt;out T&gt;, c : Iterable&lt;out T&gt;, d : Iterable&lt;out T&gt;) : MutableIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; concat(java.lang.Iterable&lt;? extends T&gt;...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; concat(vararg inputs : Iterable&lt;out T&gt;) : MutableIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; consumingIterable(java.lang.Iterable&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; consumingIterable(iterable : Iterable&lt;T&gt;) : MutableIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables boolean contains(java.lang.Iterable&lt;?&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Iterable&lt;*&gt;, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; cycle(java.lang.Iterable&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; cycle(iterable : Iterable&lt;T&gt;) : MutableIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; cycle(T...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; cycle(vararg elements : T) : MutableIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables boolean elementsEqual(java.lang.Iterable&lt;?&gt;, java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementsEqual(iterable1 : Iterable&lt;*&gt;, iterable2 : Iterable&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; filter(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; filter(unfiltered : Iterable&lt;T&gt;, predicate : Predicate&lt;in T&gt;) : MutableIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; filter(java.lang.Iterable&lt;?&gt;, java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; filter(unfiltered : Iterable&lt;*&gt;, type : Class&lt;T&gt;) : MutableIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables T find(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; find(iterable : Iterable&lt;T&gt;, predicate : Predicate&lt;in T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables T find(java.lang.Iterable&lt;? extends T&gt;, com.google.common.base.Predicate&lt;? super T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; find(p0 : Iterable&lt;out T&gt;, p1 : Predicate&lt;in T&gt;, p2 : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables int frequency(java.lang.Iterable&lt;?&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun frequency(p0 : Iterable&lt;*&gt;, p1 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables T get(java.lang.Iterable&lt;T&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; get(iterable : Iterable&lt;T&gt;, position : Int) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables T get(java.lang.Iterable&lt;? extends T&gt;, int, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; get(p0 : Iterable&lt;out T&gt;, p1 : Int, p2 : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables T getFirst(java.lang.Iterable&lt;? extends T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; getFirst(iterable : Iterable&lt;out T&gt;, defaultValue : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables T getLast(java.lang.Iterable&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; getLast(iterable : Iterable&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables T getLast(java.lang.Iterable&lt;? extends T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; getLast(p0 : Iterable&lt;out T&gt;, p1 : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables T getLastInNonemptyList(java.util.List&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; getLastInNonemptyList(list : List&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables T getOnlyElement(java.lang.Iterable&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; getOnlyElement(iterable : Iterable&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables T getOnlyElement(java.lang.Iterable&lt;? extends T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; getOnlyElement(p0 : Iterable&lt;out T&gt;, p1 : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables int indexOf(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; indexOf(iterable : Iterable&lt;T&gt;, predicate : Predicate&lt;in T&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables boolean isEmpty(java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isEmpty(iterable : Iterable&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables com.google.common.collect.UnmodifiableIterator&lt;java.util.Iterator&lt;? extends T&gt;&gt; iterators(java.lang.Iterable&lt;? extends java.lang.Iterable&lt;? extends T&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; iterators(iterables : Iterable&lt;out Iterable&lt;out T&gt;?&gt;) : UnmodifiableIterator&lt;Iterator&lt;out T&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; limit(java.lang.Iterable&lt;T&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; limit(iterable : Iterable&lt;T&gt;, limitSize : Int) : MutableIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; mergeSorted(java.lang.Iterable&lt;? extends java.lang.Iterable&lt;? extends T&gt;&gt;, java.util.Comparator&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; mergeSorted(iterables : Iterable&lt;out Iterable&lt;out T&gt;?&gt;, comparator : Comparator&lt;in T&gt;) : MutableIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;java.util.List&lt;T&gt;&gt; paddedPartition(java.lang.Iterable&lt;T&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; paddedPartition(iterable : Iterable&lt;T&gt;, size : Int) : MutableIterable&lt;List&lt;T&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;java.util.List&lt;T&gt;&gt; partition(java.lang.Iterable&lt;T&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; partition(iterable : Iterable&lt;T&gt;, size : Int) : MutableIterable&lt;List&lt;T&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables boolean removeAll(java.lang.Iterable&lt;?&gt;, java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(removeFrom : MutableIterable&lt;*&gt;, elementsToRemove : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables boolean removeIf(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; removeIf(removeFrom : MutableIterable&lt;T&gt;, predicate : Predicate&lt;in T&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables boolean removeIfFromRandomAccessList(java.util.List&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; removeIfFromRandomAccessList(list : MutableList&lt;T&gt;, predicate : Predicate&lt;in T&gt;?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables boolean retainAll(java.lang.Iterable&lt;?&gt;, java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(removeFrom : MutableIterable&lt;*&gt;, elementsToRetain : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables int size(java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun size(iterable : Iterable&lt;*&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; skip(java.lang.Iterable&lt;T&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; skip(iterable : Iterable&lt;T&gt;, numberToSkip : Int) : MutableIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables void slowRemoveIfForRemainingElements(java.util.List&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; slowRemoveIfForRemainingElements(list : MutableList&lt;T&gt;, predicate : Predicate&lt;in T&gt;?, to : Int, from : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Object[] toArray(java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray(iterable : Iterable&lt;*&gt;) : Array&lt;out Any?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables T[] toArray(java.lang.Iterable&lt;? extends T&gt;, java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(iterable : Iterable&lt;out T&gt;, type : Class&lt;T&gt;?) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.util.Collection&lt;E&gt; toCollection(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; toCollection(iterable : Iterable&lt;E&gt;) : MutableCollection&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables com.google.common.base.Function&lt;java.lang.Iterable&lt;? extends T&gt;,java.util.Iterator&lt;? extends T&gt;&gt; toIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toIterator() : Function&lt;Iterable&lt;out T&gt;?, Iterator&lt;out T&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.String toString(java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString(iterable : Iterable&lt;*&gt;) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; transform(java.lang.Iterable&lt;F&gt;, com.google.common.base.Function&lt;? super F,? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;F, T&gt; transform(fromIterable : Iterable&lt;F&gt;, function : Function&lt;in F, out T&gt;) : MutableIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables com.google.common.base.Optional&lt;T&gt; tryFind(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; tryFind(iterable : Iterable&lt;T&gt;, predicate : Predicate&lt;in T&gt;) : Optional&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;E&gt; unmodifiableIterable(com.google.common.collect.ImmutableCollection&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; unmodifiableIterable(iterable : ImmutableCollection&lt;E&gt;) : MutableIterable&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; unmodifiableIterable(java.lang.Iterable&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; unmodifiableIterable(iterable : Iterable&lt;T&gt;) : MutableIterable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators.9 9(java.util.Iterator, com.google.common.base.Function)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 9(x0 : Iterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators.9 T transform(F)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(from : F) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators.MergingIterator.1 int compare(com.google.common.collect.PeekingIterator&lt;T&gt;, com.google.common.collect.PeekingIterator&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(o1 : PeekingIterator&lt;T&gt;, o2 : PeekingIterator&lt;T&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators.MergingIterator.1 int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators.MergingIterator MergingIterator(java.lang.Iterable&lt;? extends java.util.Iterator&lt;? extends T&gt;&gt;, java.util.Comparator&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MergingIterator(iterators : Iterable&lt;out Iterator&lt;out T&gt;?&gt;, itemComparator : Comparator&lt;in T&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators.PeekingImpl PeekingImpl(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PeekingImpl(iterator : Iterator&lt;out E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators boolean addAll(java.util.Collection&lt;T&gt;, java.util.Iterator&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; addAll(addTo : MutableCollection&lt;T&gt;, iterator : Iterator&lt;out T&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators int advance(java.util.Iterator&lt;?&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun advance(iterator : Iterator&lt;*&gt;, numberToAdvance : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators boolean all(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; all(iterator : Iterator&lt;T&gt;, predicate : Predicate&lt;in T&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators boolean any(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; any(iterator : Iterator&lt;T&gt;, predicate : Predicate&lt;in T&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Enumeration&lt;T&gt; asEnumeration(java.util.Iterator&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; asEnumeration(iterator : Iterator&lt;T&gt;) : Enumeration&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators void clear(java.util.Iterator&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear(iterator : MutableIterator&lt;*&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends java.util.Iterator&lt;? extends T&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; concat(inputs : Iterator&lt;out Iterator&lt;out T&gt;?&gt;) : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; concat(a : Iterator&lt;out T&gt;, b : Iterator&lt;out T&gt;) : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; concat(a : Iterator&lt;out T&gt;, b : Iterator&lt;out T&gt;, c : Iterator&lt;out T&gt;) : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; concat(a : Iterator&lt;out T&gt;, b : Iterator&lt;out T&gt;, c : Iterator&lt;out T&gt;, d : Iterator&lt;out T&gt;) : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; concat(vararg inputs : Iterator&lt;out T&gt;) : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; consumingIterator(java.util.Iterator&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; consumingIterator(iterator : Iterator&lt;T&gt;) : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators boolean contains(java.util.Iterator&lt;?&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(iterator : Iterator&lt;*&gt;, element : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; cycle(java.lang.Iterable&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; cycle(iterable : Iterable&lt;T&gt;) : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; cycle(T...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; cycle(vararg elements : T) : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators boolean elementsEqual(java.util.Iterator&lt;?&gt;, java.util.Iterator&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementsEqual(iterator1 : Iterator&lt;*&gt;, iterator2 : Iterator&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; emptyIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; emptyIterator() : UnmodifiableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableListIterator&lt;T&gt; emptyListIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; emptyListIterator() : UnmodifiableListIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; emptyModifiableIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; emptyModifiableIterator() : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; filter(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; filter(unfiltered : Iterator&lt;T&gt;, predicate : Predicate&lt;in T&gt;) : UnmodifiableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; filter(java.util.Iterator&lt;?&gt;, java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; filter(unfiltered : Iterator&lt;*&gt;, type : Class&lt;T&gt;) : UnmodifiableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators T find(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; find(iterator : Iterator&lt;T&gt;, predicate : Predicate&lt;in T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators T find(java.util.Iterator&lt;? extends T&gt;, com.google.common.base.Predicate&lt;? super T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; find(iterator : Iterator&lt;out T&gt;, predicate : Predicate&lt;in T&gt;, defaultValue : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; forArray(T...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; forArray(vararg array : T) : UnmodifiableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableListIterator&lt;T&gt; forArray(T[], int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; forArray(array : Array&lt;out T&gt;, offset : Int, length : Int, index : Int) : UnmodifiableListIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; forEnumeration(java.util.Enumeration&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; forEnumeration(enumeration : Enumeration&lt;T&gt;) : UnmodifiableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators int frequency(java.util.Iterator&lt;?&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun frequency(iterator : Iterator&lt;*&gt;, element : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators T get(java.util.Iterator&lt;T&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; get(iterator : Iterator&lt;T&gt;, position : Int) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators T get(java.util.Iterator&lt;? extends T&gt;, int, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; get(p0 : Iterator&lt;out T&gt;?, p1 : Int, p2 : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators T getLast(java.util.Iterator&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; getLast(iterator : Iterator&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators T getLast(java.util.Iterator&lt;? extends T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; getLast(iterator : Iterator&lt;out T&gt;, defaultValue : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators T getNext(java.util.Iterator&lt;? extends T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; getNext(iterator : Iterator&lt;out T&gt;, defaultValue : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators T getOnlyElement(java.util.Iterator&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; getOnlyElement(iterator : Iterator&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators T getOnlyElement(java.util.Iterator&lt;? extends T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; getOnlyElement(iterator : Iterator&lt;out T&gt;, defaultValue : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators int indexOf(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; indexOf(iterator : Iterator&lt;T&gt;, predicate : Predicate&lt;in T&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; limit(java.util.Iterator&lt;T&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; limit(iterator : Iterator&lt;T&gt;, limitSize : Int) : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; mergeSorted(java.lang.Iterable&lt;? extends java.util.Iterator&lt;? extends T&gt;&gt;, java.util.Comparator&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; mergeSorted(iterators : Iterable&lt;out Iterator&lt;out T&gt;?&gt;, comparator : Comparator&lt;in T&gt;) : UnmodifiableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;java.util.List&lt;T&gt;&gt; paddedPartition(java.util.Iterator&lt;T&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; paddedPartition(iterator : Iterator&lt;T&gt;, size : Int) : UnmodifiableIterator&lt;List&lt;T&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;java.util.List&lt;T&gt;&gt; partition(java.util.Iterator&lt;T&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; partition(iterator : Iterator&lt;T&gt;, size : Int) : UnmodifiableIterator&lt;List&lt;T&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;java.util.List&lt;T&gt;&gt; partitionImpl(java.util.Iterator&lt;T&gt;, int, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; partitionImpl(iterator : Iterator&lt;T&gt;, size : Int, pad : Boolean) : UnmodifiableIterator&lt;List&lt;T&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.PeekingIterator&lt;T&gt; peekingIterator(com.google.common.collect.PeekingIterator&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; peekingIterator(iterator : PeekingIterator&lt;T&gt;) : PeekingIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.PeekingIterator&lt;T&gt; peekingIterator(java.util.Iterator&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; peekingIterator(iterator : Iterator&lt;out T&gt;) : PeekingIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators boolean removeAll(java.util.Iterator&lt;?&gt;, java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(removeFrom : MutableIterator&lt;*&gt;, elementsToRemove : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators boolean removeIf(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; removeIf(removeFrom : MutableIterator&lt;T&gt;, predicate : Predicate&lt;in T&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators boolean retainAll(java.util.Iterator&lt;?&gt;, java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(removeFrom : MutableIterator&lt;*&gt;, elementsToRetain : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; singletonIterator(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; singletonIterator(p0 : T?) : UnmodifiableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators int size(java.util.Iterator&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun size(iterator : Iterator&lt;*&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators int skip(java.util.Iterator&lt;?&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun skip(iterator : Iterator&lt;*&gt;, numberToSkip : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators T[] toArray(java.util.Iterator&lt;? extends T&gt;, java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(iterator : Iterator&lt;out T&gt;, type : Class&lt;T&gt;?) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.lang.String toString(java.util.Iterator&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString(iterator : Iterator&lt;*&gt;) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; transform(java.util.Iterator&lt;F&gt;, com.google.common.base.Function&lt;? super F,? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;F, T&gt; transform(fromIterator : Iterator&lt;F&gt;, function : Function&lt;in F, out T&gt;) : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.base.Optional&lt;T&gt; tryFind(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; tryFind(iterator : Iterator&lt;T&gt;, predicate : Predicate&lt;in T&gt;) : Optional&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; unmodifiableIterator(com.google.common.collect.UnmodifiableIterator&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; unmodifiableIterator(iterator : UnmodifiableIterator&lt;T&gt;) : UnmodifiableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; unmodifiableIterator(java.util.Iterator&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; unmodifiableIterator(iterator : Iterator&lt;T&gt;) : UnmodifiableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableListIterator&lt;T&gt; unmodifiableListIterator(java.util.ListIterator&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; unmodifiableListIterator(iterator : ListIterator&lt;T&gt;) : UnmodifiableListIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LexicographicalOrdering int compare(java.lang.Iterable&lt;T&gt;, java.lang.Iterable&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(leftIterable : Iterable&lt;T&gt;, rightIterable : Iterable&lt;T&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LexicographicalOrdering int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any?, x1 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LexicographicalOrdering boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap.ValueEntry ValueEntry(K, V, int, com.google.common.collect.LinkedHashMultimap.ValueEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ValueEntry(p0 : K?, p1 : V?, p2 : Int, p3 : LinkedHashMultimap.ValueEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap.ValueEntry K getKey()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKey() : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap.ValueEntry V getValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap.ValueSet.1 V next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap.ValueSet com.google.common.collect.LinkedHashMultimap.ValueSetLink access$000(com.google.common.collect.LinkedHashMultimap.ValueSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : LinkedHashMultimap.ValueSet) : LinkedHashMultimap.ValueSetLink?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap.ValueSet int access$100(com.google.common.collect.LinkedHashMultimap.ValueSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : LinkedHashMultimap.ValueSet) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap.ValueSet int access$104(com.google.common.collect.LinkedHashMultimap.ValueSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$104(x0 : LinkedHashMultimap.ValueSet) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap.ValueSet com.google.common.collect.LinkedHashMultimap.ValueEntry[] access$200(com.google.common.collect.LinkedHashMultimap.ValueSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : LinkedHashMultimap.ValueSet) : Array&lt;out LinkedHashMultimap.ValueEntry?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap.ValueSet int access$510(com.google.common.collect.LinkedHashMultimap.ValueSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$510(x0 : LinkedHashMultimap.ValueSet) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap.ValueSet boolean add(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap.ValueSet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap.ValueSet java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap.ValueSet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap void access$300(com.google.common.collect.LinkedHashMultimap.ValueSetLink)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : LinkedHashMultimap.ValueSetLink) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap void access$400(com.google.common.collect.LinkedHashMultimap.ValueEntry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : LinkedHashMultimap.ValueEntry) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap void access$600(com.google.common.collect.LinkedHashMultimap.ValueSetLink, com.google.common.collect.LinkedHashMultimap.ValueSetLink)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$600(x0 : LinkedHashMultimap.ValueSetLink, x1 : LinkedHashMultimap.ValueSetLink) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap com.google.common.collect.LinkedHashMultimap.ValueEntry access$700(com.google.common.collect.LinkedHashMultimap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$700(x0 : LinkedHashMultimap) : LinkedHashMultimap.ValueEntry?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap void access$800(com.google.common.collect.LinkedHashMultimap.ValueEntry, com.google.common.collect.LinkedHashMultimap.ValueEntry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$800(x0 : LinkedHashMultimap.ValueEntry, x1 : LinkedHashMultimap.ValueEntry) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap java.util.Map asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap boolean containsEntry(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsEntry(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap com.google.common.collect.LinkedHashMultimap&lt;K,V&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; create() : LinkedHashMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap com.google.common.collect.LinkedHashMultimap&lt;K,V&gt; create(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; create(expectedKeys : Int, expectedValuesPerKey : Int) : LinkedHashMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap com.google.common.collect.LinkedHashMultimap&lt;K,V&gt; create(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; create(multimap : Multimap&lt;out K, out V&gt;) : LinkedHashMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap java.util.Collection createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap java.util.Set&lt;V&gt; createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap java.util.Collection&lt;V&gt; createCollection(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection(key : K?) : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; createEntryIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntryIterator() : MutableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap void deleteFromMultimap(com.google.common.collect.LinkedHashMultimap.ValueEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; deleteFromMultimap(entry : LinkedHashMultimap.ValueEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap void deleteFromValueSet(com.google.common.collect.LinkedHashMultimap.ValueSetLink&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; deleteFromValueSet(entry : LinkedHashMultimap.ValueSetLink&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap java.util.Collection entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap java.util.Set get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap boolean put(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap boolean putAll(com.google.common.collect.Multimap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Multimap) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap boolean putAll(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Any?, p1 : Iterable) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap boolean remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap java.util.Set removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(x0 : Any?, x1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap java.util.Set&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(key : K?, values : Iterable&lt;out V&gt;) : MutableSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap void succeedsInMultimap(com.google.common.collect.LinkedHashMultimap.ValueEntry&lt;K,V&gt;, com.google.common.collect.LinkedHashMultimap.ValueEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; succeedsInMultimap(pred : LinkedHashMultimap.ValueEntry&lt;K, V&gt;, succ : LinkedHashMultimap.ValueEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap void succeedsInValueSet(com.google.common.collect.LinkedHashMultimap.ValueSetLink&lt;K,V&gt;, com.google.common.collect.LinkedHashMultimap.ValueSetLink&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; succeedsInValueSet(pred : LinkedHashMultimap.ValueSetLink&lt;K, V&gt;, succ : LinkedHashMultimap.ValueSetLink&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset boolean add(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset int add(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset boolean addAll(java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(p0 : Collection) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset com.google.common.collect.LinkedHashMultiset&lt;E&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; create() : LinkedHashMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset com.google.common.collect.LinkedHashMultiset&lt;E&gt; create(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; create(distinctElements : Int) : LinkedHashMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset com.google.common.collect.LinkedHashMultiset&lt;E&gt; create(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; create(elements : Iterable&lt;out E&gt;) : LinkedHashMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset java.util.Set entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset int remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset boolean removeAll(java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset boolean retainAll(java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset int setCount(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset boolean setCount(java.lang.Object, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : Any?, p1 : Int, p2 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.1 java.util.ListIterator&lt;V&gt; listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(index : Int) : MutableListIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.1 boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.1 boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.2 java.util.Iterator&lt;K&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.3.1 1(com.google.common.collect.LinkedListMultimap.3, java.util.ListIterator, com.google.common.collect.LinkedListMultimap.NodeIterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : ListIterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.3.1 void set(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : V?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.3.1 V transform(com.google.common.collect.LinkedListMultimap.Node&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(node : LinkedListMultimap.Node&lt;K, V&gt;) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.3.1 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.3 java.util.ListIterator&lt;V&gt; listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(index : Int) : MutableListIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.4 K getKey()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKey() : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.4 V setValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValue(p0 : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.5.1 1(com.google.common.collect.LinkedListMultimap.5, java.util.ListIterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : ListIterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.5.1 java.util.Map.Entry&lt;K,V&gt; transform(com.google.common.collect.LinkedListMultimap.Node&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(node : LinkedListMultimap.Node&lt;K, V&gt;?) : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.5.1 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.5 java.util.ListIterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(index : Int) : MutableListIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.6.1.1 java.lang.Object getValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.6.1.1 java.util.Collection&lt;V&gt; getValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.6.1 1(com.google.common.collect.LinkedListMultimap.6, java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Iterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.6.1 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.6.1 java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt; transform(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(key : K?) : MutableMap.MutableEntry&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.6 java.util.Iterator&lt;java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;&gt; entryIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entryIterator() : MutableIterator&lt;Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.DistinctKeyIterator K next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.MultisetView.1 1(com.google.common.collect.LinkedListMultimap.MultisetView, java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Iterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.MultisetView.1 com.google.common.collect.Multiset.Entry&lt;K&gt; transform(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(key : K?) : Multiset.Entry&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.MultisetView.1 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.MultisetView.2 2(com.google.common.collect.LinkedListMultimap.MultisetView, java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 2(x0 : Iterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.MultisetView.2 K transform(com.google.common.collect.LinkedListMultimap.Node&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(node : LinkedListMultimap.Node&lt;K, V&gt;) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.MultisetView.2 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.MultisetView int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.MultisetView java.util.Set&lt;K&gt; elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.MultisetView java.util.Iterator&lt;com.google.common.collect.Multiset.Entry&lt;K&gt;&gt; entryIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entryIterator() : MutableIterator&lt;Multiset.Entry&lt;K&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.MultisetView boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.MultisetView java.util.Iterator&lt;K&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.MultisetView int remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.Node Node(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Node(p0 : K?, p1 : V?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.NodeIterator NodeIterator(com.google.common.collect.LinkedListMultimap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun NodeIterator()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.NodeIterator NodeIterator(com.google.common.collect.LinkedListMultimap, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun NodeIterator(index : Int)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.ValueForKeyIterator ValueForKeyIterator(com.google.common.collect.LinkedListMultimap, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ValueForKeyIterator(p0 : LinkedListMultimap, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap.ValueForKeyIterator ValueForKeyIterator(com.google.common.collect.LinkedListMultimap, java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ValueForKeyIterator(p0 : LinkedListMultimap, p1 : Any?, p2 : Int)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap LinkedListMultimap(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun LinkedListMultimap(multimap : Multimap&lt;out K, out V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap com.google.common.collect.LinkedListMultimap.Node access$000(com.google.common.collect.LinkedListMultimap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : LinkedListMultimap) : LinkedListMultimap.Node?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap com.google.common.collect.LinkedListMultimap.Node access$100(com.google.common.collect.LinkedListMultimap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : LinkedListMultimap) : LinkedListMultimap.Node?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.Map.Entry access$1100(com.google.common.collect.LinkedListMultimap.Node)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1100(x0 : LinkedListMultimap.Node?) : MutableMap.MutableEntry&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap void access$200(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap void access$300(com.google.common.collect.LinkedListMultimap, com.google.common.collect.LinkedListMultimap.Node)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : LinkedListMultimap, x1 : LinkedListMultimap.Node) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap void access$400(com.google.common.collect.LinkedListMultimap, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : LinkedListMultimap, x1 : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.Map access$500(com.google.common.collect.LinkedListMultimap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$500(x0 : LinkedListMultimap) : MutableMap?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap com.google.common.collect.Multiset access$600(com.google.common.collect.LinkedListMultimap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$600(x0 : LinkedListMultimap) : Multiset?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.Map access$700(com.google.common.collect.LinkedListMultimap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$700(x0 : LinkedListMultimap) : MutableMap?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap com.google.common.collect.LinkedListMultimap.Node access$800(com.google.common.collect.LinkedListMultimap, java.lang.Object, java.lang.Object, com.google.common.collect.LinkedListMultimap.Node)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$800(x0 : LinkedListMultimap, x1 : Any?, x2 : Any?, x3 : LinkedListMultimap.Node?) : LinkedListMultimap.Node&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap com.google.common.collect.LinkedListMultimap.Node&lt;K,V&gt; addNode(K, V, com.google.common.collect.LinkedListMultimap.Node&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addNode(p0 : K?, p1 : V?, p2 : LinkedListMultimap.Node&lt;K, V&gt;?) : LinkedListMultimap.Node&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : MutableMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap void checkElement(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkElement(p0 : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap boolean containsEntry(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsEntry(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(key : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap com.google.common.collect.LinkedListMultimap&lt;K,V&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; create() : LinkedListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap com.google.common.collect.LinkedListMultimap&lt;K,V&gt; create(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; create(expectedKeys : Int) : LinkedListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap com.google.common.collect.LinkedListMultimap&lt;K,V&gt; create(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; create(multimap : Multimap&lt;out K, out V&gt;) : LinkedListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.Map.Entry&lt;K,V&gt; createEntry(com.google.common.collect.LinkedListMultimap.Node&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; createEntry(node : LinkedListMultimap.Node&lt;K, V&gt;?) : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.Collection entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.List&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableList&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.List&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K?) : MutableList&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.List&lt;V&gt; getCopy(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCopy(key : Any?) : MutableList&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap com.google.common.collect.Multiset&lt;K&gt; keys()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keys() : Multiset&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap boolean put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K?, p1 : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap boolean putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(multimap : Multimap&lt;out K, out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap boolean putAll(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : K?, p1 : Iterable&lt;out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap boolean remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.List&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(key : Any?) : MutableList&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap void removeAllNodes(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAllNodes(p0 : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap void removeNode(com.google.common.collect.LinkedListMultimap.Node&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeNode(node : LinkedListMultimap.Node&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(x0 : Any?, x1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.List&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : MutableList&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.Collection values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.List&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableList&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ListMultimap java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : MutableMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ListMultimap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ListMultimap java.util.List&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : MutableList&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ListMultimap java.util.List&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableList&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ListMultimap java.util.List&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : MutableList&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.1 1(java.util.List)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : List)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.2 2(java.util.List)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 2(x0 : List)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.AbstractListWrapper AbstractListWrapper(java.util.List&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AbstractListWrapper(backingList : List&lt;E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.CharSequenceAsList boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.CharSequenceAsList boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.CharSequenceAsList int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(o : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.CharSequenceAsList int lastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.CharSequenceAsList java.util.List&lt;java.lang.Character&gt; subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(fromIndex : Int, toIndex : Int) : MutableList&lt;Character?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.OnePlusArrayList OnePlusArrayList(E, E[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun OnePlusArrayList(p0 : E?, p1 : Array&lt;out E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.OnePlusArrayList E get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(index : Int) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.RandomAccessListWrapper RandomAccessListWrapper(java.util.List&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RandomAccessListWrapper(backingList : List&lt;E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.RandomAccessReverseList RandomAccessReverseList(java.util.List&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RandomAccessReverseList(forwardList : List&lt;T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.ReverseList ReverseList(java.util.List&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ReverseList(forwardList : List&lt;T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.ReverseList int access$000(com.google.common.collect.Lists.ReverseList, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : Lists.ReverseList, x1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.ReverseList void add(int, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : Int, p1 : T?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.ReverseList boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.ReverseList java.util.List&lt;T&gt; getForwardList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getForwardList() : MutableList&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.ReverseList int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.ReverseList int lastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.ReverseList java.util.ListIterator&lt;T&gt; listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(index : Int) : MutableListIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.ReverseList T set(int, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : Int, p1 : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.ReverseList java.util.List&lt;T&gt; subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(fromIndex : Int, toIndex : Int) : MutableList&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.StringAsImmutableList boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.StringAsImmutableList int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.StringAsImmutableList int lastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.StringAsImmutableList com.google.common.collect.ImmutableList&lt;java.lang.Character&gt; subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(fromIndex : Int, toIndex : Int) : ImmutableList&lt;Character?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.StringAsImmutableList java.util.List subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(x0 : Int, x1 : Int) : MutableList&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.TransformingRandomAccessList TransformingRandomAccessList(java.util.List&lt;F&gt;, com.google.common.base.Function&lt;? super F,? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TransformingRandomAccessList(fromList : List&lt;F&gt;, function : Function&lt;in F, out T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.TransformingRandomAccessList T get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(index : Int) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.TransformingRandomAccessList T remove(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(index : Int) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.TransformingSequentialList.1 T next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.TransformingSequentialList.1 T previous()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun previous() : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.TransformingSequentialList TransformingSequentialList(java.util.List&lt;F&gt;, com.google.common.base.Function&lt;? super F,? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TransformingSequentialList(fromList : List&lt;F&gt;, function : Function&lt;in F, out T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.TransformingSequentialList java.util.ListIterator&lt;T&gt; listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(index : Int) : MutableListIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.TwoPlusArrayList TwoPlusArrayList(E, E, E[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TwoPlusArrayList(p0 : E?, p1 : E?, p2 : Array&lt;out E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists.TwoPlusArrayList E get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(index : Int) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists boolean addAllImpl(java.util.List&lt;E&gt;, int, java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; addAllImpl(list : MutableList&lt;E&gt;?, index : Int, elements : Iterable&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;E&gt; asList(E, E, E[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; asList(p0 : E?, p1 : E?, p2 : Array&lt;out E&gt;) : MutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;E&gt; asList(E, E[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; asList(first : E?, rest : Array&lt;out E&gt;) : MutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;java.lang.Character&gt; charactersOf(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun charactersOf(sequence : CharSequence) : MutableList&lt;Character?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists com.google.common.collect.ImmutableList&lt;java.lang.Character&gt; charactersOf(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun charactersOf(string : String) : ImmutableList&lt;Character?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists boolean equalsImpl(java.util.List&lt;?&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equalsImpl(list : List&lt;*&gt;, object : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists int hashCodeImpl(java.util.List&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashCodeImpl(list : List&lt;*&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists int indexOfImpl(java.util.List&lt;?&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOfImpl(list : List&lt;*&gt;, element : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists int lastIndexOfImpl(java.util.List&lt;?&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOfImpl(list : List&lt;*&gt;, element : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.ListIterator&lt;E&gt; listIteratorImpl(java.util.List&lt;E&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; listIteratorImpl(list : List&lt;E&gt;, index : Int) : MutableListIterator&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.ArrayList&lt;E&gt; newArrayList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newArrayList() : ArrayList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.ArrayList&lt;E&gt; newArrayList(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newArrayList(elements : Iterable&lt;out E&gt;) : ArrayList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.ArrayList&lt;E&gt; newArrayList(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newArrayList(elements : Iterator&lt;out E&gt;) : ArrayList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.ArrayList&lt;E&gt; newArrayList(E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newArrayList(vararg elements : E) : ArrayList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.ArrayList&lt;E&gt; newArrayListWithCapacity(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newArrayListWithCapacity(initialArraySize : Int) : ArrayList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.ArrayList&lt;E&gt; newArrayListWithExpectedSize(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newArrayListWithExpectedSize(estimatedSize : Int) : ArrayList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.concurrent.CopyOnWriteArrayList&lt;E&gt; newCopyOnWriteArrayList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newCopyOnWriteArrayList() : CopyOnWriteArrayList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.concurrent.CopyOnWriteArrayList&lt;E&gt; newCopyOnWriteArrayList(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newCopyOnWriteArrayList(elements : Iterable&lt;out E&gt;) : CopyOnWriteArrayList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.LinkedList&lt;E&gt; newLinkedList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newLinkedList() : LinkedList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.LinkedList&lt;E&gt; newLinkedList(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newLinkedList(elements : Iterable&lt;out E&gt;) : LinkedList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;java.util.List&lt;T&gt;&gt; partition(java.util.List&lt;T&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; partition(list : List&lt;T&gt;, size : Int) : MutableList&lt;List&lt;T&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;T&gt; reverse(java.util.List&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; reverse(list : List&lt;T&gt;) : MutableList&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;E&gt; subListImpl(java.util.List&lt;E&gt;, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; subListImpl(list : List&lt;E&gt;, fromIndex : Int, toIndex : Int) : MutableList&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;T&gt; transform(java.util.List&lt;F&gt;, com.google.common.base.Function&lt;? super F,? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;F, T&gt; transform(fromList : List&lt;F&gt;, function : Function&lt;in F, out T&gt;) : MutableList&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraint void checkKeyValue(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkKeyValue(p0 : K?, p1 : V?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraint java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.1 V setValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValue(p0 : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.2.1 V checkElement(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkElement(p0 : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.2 java.lang.Object getValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.2 java.util.Collection&lt;V&gt; getValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapEntries.1 java.lang.Object next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapEntries.1 java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : MutableMap.MutableEntry&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapEntries com.google.common.collect.MapConstraint access$600(com.google.common.collect.MapConstraints.ConstrainedAsMapEntries)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$600(x0 : MapConstraints.ConstrainedAsMapEntries) : MapConstraint?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapEntries boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapEntries boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapEntries boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapEntries java.util.Iterator&lt;java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapEntries boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapEntries boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapEntries boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapEntries T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapValues boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapValues boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapValues java.util.Iterator&lt;java.util.Collection&lt;V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapValues boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapValues boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapValues boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedAsMapValues T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedBiMap ConstrainedBiMap(com.google.common.collect.BiMap&lt;K,V&gt;, com.google.common.collect.BiMap&lt;V,K&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConstrainedBiMap(p0 : BiMap&lt;K, V&gt;, p1 : BiMap&lt;V, K&gt;?, p2 : MapConstraint&lt;in K, in V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedBiMap com.google.common.collect.BiMap&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : BiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedBiMap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedBiMap java.util.Map delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedBiMap V forcePut(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun forcePut(p0 : K?, p1 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedEntries.1 java.lang.Object next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedEntries.1 java.util.Map.Entry&lt;K,V&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedEntries boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedEntries boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedEntries java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedEntries boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedEntries boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedEntries boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedEntries T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedEntrySet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedListMultimap ConstrainedListMultimap(com.google.common.collect.ListMultimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConstrainedListMultimap(delegate : ListMultimap&lt;K, V&gt;, constraint : MapConstraint&lt;in K, in V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedListMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedListMultimap java.util.List&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K?) : MutableList&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedListMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedListMultimap java.util.List&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableList&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedListMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(x0 : Any?, x1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedListMultimap java.util.List&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(key : K?, values : Iterable&lt;out V&gt;) : MutableList&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMap ConstrainedMap(java.util.Map&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConstrainedMap(delegate : Map&lt;K, V&gt;, constraint : MapConstraint&lt;in K, in V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMap java.util.Map&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMap V put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K, p1 : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMap void putAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Map&lt;out K, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMultimap.1 boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMultimap.1 java.util.Set&lt;java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMultimap.1 java.lang.Object get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMultimap.1 java.util.Collection&lt;V&gt; get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Any?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMultimap.1 java.util.Collection&lt;java.util.Collection&lt;V&gt;&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&lt;Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMultimap.2 V checkElement(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkElement(p0 : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMultimap ConstrainedMultimap(com.google.common.collect.Multimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConstrainedMultimap(delegate : Multimap&lt;K, V&gt;, constraint : MapConstraint&lt;in K, in V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMultimap java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : MutableMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMultimap com.google.common.collect.Multimap&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Multimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMultimap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMultimap java.util.Collection&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableCollection&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMultimap java.util.Collection&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K?) : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMultimap boolean put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K?, p1 : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMultimap boolean putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(multimap : Multimap&lt;out K, out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMultimap boolean putAll(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(key : K?, values : Iterable&lt;out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedMultimap java.util.Collection&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(key : K?, values : Iterable&lt;out V&gt;) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSetMultimap ConstrainedSetMultimap(com.google.common.collect.SetMultimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConstrainedSetMultimap(delegate : SetMultimap&lt;K, V&gt;, constraint : MapConstraint&lt;in K, in V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSetMultimap java.util.Collection entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSetMultimap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSetMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSetMultimap java.util.Set&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K?) : MutableSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSetMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSetMultimap java.util.Set&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSetMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(x0 : Any?, x1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSetMultimap java.util.Set&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(key : K?, values : Iterable&lt;out V&gt;) : MutableSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSortedSetMultimap ConstrainedSortedSetMultimap(com.google.common.collect.SortedSetMultimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConstrainedSortedSetMultimap(delegate : SortedSetMultimap&lt;K, V&gt;, constraint : MapConstraint&lt;in K, in V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSortedSetMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSortedSetMultimap java.util.Set get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSortedSetMultimap java.util.SortedSet&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K?) : SortedSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSortedSetMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSortedSetMultimap java.util.Set removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSortedSetMultimap java.util.SortedSet&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : SortedSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSortedSetMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(x0 : Any?, x1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSortedSetMultimap java.util.Set replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(x0 : Any?, x1 : Iterable) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.ConstrainedSortedSetMultimap java.util.SortedSet&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(key : K?, values : Iterable&lt;out V&gt;) : SortedSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.InverseConstraint InverseConstraint(com.google.common.collect.MapConstraint&lt;? super V,? super K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun InverseConstraint(constraint : MapConstraint&lt;in V, in K&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.InverseConstraint void checkKeyValue(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkKeyValue(p0 : K?, p1 : V?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.NotNullMapConstraint void checkKeyValue(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkKeyValue(key : Any?, value : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints.NotNullMapConstraint java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Set access$000(java.util.Set, com.google.common.collect.MapConstraint)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : Set?, x1 : MapConstraint?) : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Map access$100(java.util.Map, com.google.common.collect.MapConstraint)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : Map?, x1 : MapConstraint?) : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Set access$200(java.util.Set, com.google.common.collect.MapConstraint)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : Set?, x1 : MapConstraint?) : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Collection access$300(java.util.Collection, com.google.common.collect.MapConstraint)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : Collection?, x1 : MapConstraint?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Collection access$400(java.lang.Object, java.lang.Iterable, com.google.common.collect.MapConstraint)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : Any?, x1 : Iterable, x2 : MapConstraint?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Map.Entry access$500(java.util.Map.Entry, com.google.common.collect.MapConstraint)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$500(x0 : Map.Entry, x1 : MapConstraint) : MutableMap.MutableEntry&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Map.Entry access$700(java.util.Map.Entry, com.google.common.collect.MapConstraint)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$700(x0 : Map.Entry, x1 : MapConstraint) : MutableMap.MutableEntry&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Map&lt;K,V&gt; checkMap(java.util.Map&lt;? extends K,? extends V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; checkMap(map : Map&lt;out K, out V&gt;?, constraint : MapConstraint&lt;in K, in V&gt;?) : MutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Collection&lt;V&gt; checkValues(K, java.lang.Iterable&lt;? extends V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; checkValues(key : K?, values : Iterable&lt;out V&gt;, constraint : MapConstraint&lt;in K, in V&gt;?) : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Set&lt;java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;&gt; constrainedAsMapEntries(java.util.Set&lt;java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; constrainedAsMapEntries(entries : Set&lt;Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?&gt;?, constraint : MapConstraint&lt;in K, in V&gt;?) : MutableSet&lt;Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt; constrainedAsMapEntry(java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; constrainedAsMapEntry(entry : Map.Entry&lt;K, Collection&lt;V&gt;?&gt;, constraint : MapConstraint&lt;in K, in V&gt;) : MutableMap.MutableEntry&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.BiMap&lt;K,V&gt; constrainedBiMap(com.google.common.collect.BiMap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; constrainedBiMap(map : BiMap&lt;K, V&gt;, constraint : MapConstraint&lt;in K, in V&gt;) : BiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Collection&lt;java.util.Map.Entry&lt;K,V&gt;&gt; constrainedEntries(java.util.Collection&lt;java.util.Map.Entry&lt;K,V&gt;&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; constrainedEntries(entries : Collection&lt;Map.Entry&lt;K, V&gt;?&gt;?, constraint : MapConstraint&lt;in K, in V&gt;?) : MutableCollection&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Map.Entry&lt;K,V&gt; constrainedEntry(java.util.Map.Entry&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; constrainedEntry(entry : Map.Entry&lt;K, V&gt;, constraint : MapConstraint&lt;in K, in V&gt;) : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; constrainedEntrySet(java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; constrainedEntrySet(entries : Set&lt;Map.Entry&lt;K, V&gt;?&gt;?, constraint : MapConstraint&lt;in K, in V&gt;?) : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.ListMultimap&lt;K,V&gt; constrainedListMultimap(com.google.common.collect.ListMultimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; constrainedListMultimap(multimap : ListMultimap&lt;K, V&gt;, constraint : MapConstraint&lt;in K, in V&gt;) : ListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Map&lt;K,V&gt; constrainedMap(java.util.Map&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; constrainedMap(map : Map&lt;K, V&gt;, constraint : MapConstraint&lt;in K, in V&gt;) : MutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.Multimap&lt;K,V&gt; constrainedMultimap(com.google.common.collect.Multimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; constrainedMultimap(multimap : Multimap&lt;K, V&gt;, constraint : MapConstraint&lt;in K, in V&gt;) : Multimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.SetMultimap&lt;K,V&gt; constrainedSetMultimap(com.google.common.collect.SetMultimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; constrainedSetMultimap(multimap : SetMultimap&lt;K, V&gt;, constraint : MapConstraint&lt;in K, in V&gt;) : SetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.SortedSetMultimap&lt;K,V&gt; constrainedSortedSetMultimap(com.google.common.collect.SortedSetMultimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; constrainedSortedSetMultimap(multimap : SortedSetMultimap&lt;K, V&gt;, constraint : MapConstraint&lt;in K, in V&gt;) : SortedSetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.MapConstraint&lt;java.lang.Object,java.lang.Object&gt; notNull()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun notNull() : MapConstraint&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapDifference.ValueDifference boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapDifference.ValueDifference V leftValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun leftValue() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapDifference.ValueDifference V rightValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rightValue() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapDifference boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker.NullComputingConcurrentMap NullComputingConcurrentMap(com.google.common.collect.MapMaker, com.google.common.base.Function&lt;? super K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun NullComputingConcurrentMap(mapMaker : MapMaker, computingFunction : Function&lt;in K, out V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker.NullComputingConcurrentMap V compute(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compute(key : K) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker.NullComputingConcurrentMap V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(k : Any?) : V&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker.NullConcurrentMap NullConcurrentMap(com.google.common.collect.MapMaker)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun NullConcurrentMap(mapMaker : MapMaker)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker.NullConcurrentMap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker.NullConcurrentMap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker.NullConcurrentMap V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker.NullConcurrentMap V put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(key : K, value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker.NullConcurrentMap V putIfAbsent(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putIfAbsent(key : K, value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker.NullConcurrentMap V remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker.NullConcurrentMap boolean remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker.NullConcurrentMap V replace(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(key : K, value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker.NullConcurrentMap boolean replace(K, V, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(p0 : K, p1 : V?, p2 : V) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker.RemovalNotification RemovalNotification(K, V, com.google.common.collect.MapMaker.RemovalCause)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RemovalNotification(key : K?, value : V?, cause : MapMaker.RemovalCause?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.GenericMapMaker concurrencyLevel(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun concurrencyLevel(x0 : Int) : GenericMapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMaker concurrencyLevel(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun concurrencyLevel(concurrencyLevel : Int) : MapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.GenericMapMaker expireAfterAccess(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun expireAfterAccess(x0 : Long, x1 : TimeUnit) : GenericMapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMaker expireAfterAccess(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun expireAfterAccess(duration : Long, unit : TimeUnit) : MapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.GenericMapMaker expireAfterWrite(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun expireAfterWrite(x0 : Long, x1 : TimeUnit) : GenericMapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMaker expireAfterWrite(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun expireAfterWrite(duration : Long, unit : TimeUnit) : MapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.base.Equivalence&lt;java.lang.Object&gt; getKeyEquivalence()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKeyEquivalence() : Equivalence&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMakerInternalMap.Strength getKeyStrength()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKeyStrength() : MapMakerInternalMap.Strength&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.base.Ticker getTicker()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTicker() : Ticker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMakerInternalMap.Strength getValueStrength()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValueStrength() : MapMakerInternalMap.Strength&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.GenericMapMaker initialCapacity(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initialCapacity(x0 : Int) : GenericMapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMaker initialCapacity(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initialCapacity(initialCapacity : Int) : MapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.GenericMapMaker keyEquivalence(com.google.common.base.Equivalence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keyEquivalence(x0 : Equivalence) : GenericMapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMaker keyEquivalence(com.google.common.base.Equivalence&lt;java.lang.Object&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keyEquivalence(equivalence : Equivalence&lt;Any?&gt;) : MapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker java.util.concurrent.ConcurrentMap&lt;K,V&gt; makeComputingMap(com.google.common.base.Function&lt;? super K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; makeComputingMap(computingFunction : Function&lt;in K, out V&gt;) : ConcurrentMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMakerInternalMap&lt;K,V&gt; makeCustomMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; makeCustomMap() : MapMakerInternalMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker java.util.concurrent.ConcurrentMap&lt;K,V&gt; makeMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; makeMap() : ConcurrentMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.GenericMapMaker maximumSize(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun maximumSize(x0 : Int) : GenericMapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMaker maximumSize(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun maximumSize(size : Int) : MapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.GenericMapMaker&lt;K,V&gt; removalListener(com.google.common.collect.MapMaker.RemovalListener&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; removalListener(listener : MapMaker.RemovalListener&lt;K, V&gt;) : GenericMapMaker&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.MapMakerInternalMap.Strength)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setKeyStrength(strength : MapMakerInternalMap.Strength) : MapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMaker setValueStrength(com.google.common.collect.MapMakerInternalMap.Strength)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValueStrength(strength : MapMakerInternalMap.Strength) : MapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.GenericMapMaker softKeys()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun softKeys() : GenericMapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMaker softKeys()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun softKeys() : MapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.GenericMapMaker softValues()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun softValues() : GenericMapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMaker softValues()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun softValues() : MapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.GenericMapMaker weakKeys()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun weakKeys() : GenericMapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMaker weakKeys()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun weakKeys() : MapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.GenericMapMaker weakValues()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun weakValues() : GenericMapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMaker weakValues()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun weakValues() : MapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.1 void clear(com.google.common.collect.MapMakerInternalMap.ValueReference&lt;java.lang.Object,java.lang.Object&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear(p0 : MapMakerInternalMap.ValueReference&lt;Any?, Any?&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.1 com.google.common.collect.MapMakerInternalMap.ValueReference&lt;java.lang.Object,java.lang.Object&gt; copyFor(java.lang.ref.ReferenceQueue&lt;java.lang.Object&gt;, java.lang.Object, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;java.lang.Object,java.lang.Object&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFor(p0 : ReferenceQueue&lt;Any?&gt;?, p1 : Any?, p2 : MapMakerInternalMap.ReferenceEntry&lt;Any?, Any?&gt;?) : MapMakerInternalMap.ValueReference&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.1 java.lang.Object get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.1 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;java.lang.Object,java.lang.Object&gt; getEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEntry() : MapMakerInternalMap.ReferenceEntry&lt;Any?, Any?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.1 java.lang.Object waitForValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun waitForValue() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.2 java.util.Iterator&lt;java.lang.Object&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.2 java.lang.Object peek()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun peek() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.2 java.lang.Object poll()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun poll() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.AbstractSerializationProxy void readEntries(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readEntries(in : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.AbstractSerializationProxy com.google.common.collect.MapMaker readMapMaker(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readMapMaker(in : ObjectInputStream) : MapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.AbstractSerializationProxy void writeMapTo(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeMapTo(out : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.10 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEntry(segment : MapMakerInternalMap.Segment&lt;K, V&gt;?, original : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, newNext : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.10 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : MapMakerInternalMap.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.11 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEntry(segment : MapMakerInternalMap.Segment&lt;K, V&gt;?, original : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, newNext : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.11 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : MapMakerInternalMap.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.12 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEntry(segment : MapMakerInternalMap.Segment&lt;K, V&gt;?, original : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, newNext : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.12 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : MapMakerInternalMap.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.1 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : MapMakerInternalMap.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.2 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEntry(segment : MapMakerInternalMap.Segment&lt;K, V&gt;?, original : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, newNext : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.2 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : MapMakerInternalMap.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.3 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEntry(segment : MapMakerInternalMap.Segment&lt;K, V&gt;?, original : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, newNext : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.3 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : MapMakerInternalMap.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.4 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEntry(segment : MapMakerInternalMap.Segment&lt;K, V&gt;?, original : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, newNext : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.4 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : MapMakerInternalMap.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.5 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : MapMakerInternalMap.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.6 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEntry(segment : MapMakerInternalMap.Segment&lt;K, V&gt;?, original : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, newNext : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.6 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : MapMakerInternalMap.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.7 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEntry(segment : MapMakerInternalMap.Segment&lt;K, V&gt;?, original : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, newNext : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.7 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : MapMakerInternalMap.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.8 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEntry(segment : MapMakerInternalMap.Segment&lt;K, V&gt;?, original : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, newNext : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.8 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : MapMakerInternalMap.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory.9 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : MapMakerInternalMap.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEntry(segment : MapMakerInternalMap.Segment&lt;K, V&gt;?, original : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, newNext : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory void copyEvictableEntry(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyEvictableEntry(original : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, newEntry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory void copyExpirableEntry(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; copyExpirableEntry(original : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, newEntry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory com.google.common.collect.MapMakerInternalMap.EntryFactory getFactory(com.google.common.collect.MapMakerInternalMap.Strength, boolean, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getFactory(keyStrength : MapMakerInternalMap.Strength, expireAfterWrite : Boolean, evictsBySize : Boolean) : MapMakerInternalMap.EntryFactory?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryFactory com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; newEntry(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newEntry(p0 : MapMakerInternalMap.Segment&lt;K, V&gt;, p1 : K?, p2 : Int, p3 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntryIterator EntryIterator(com.google.common.collect.MapMakerInternalMap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun EntryIterator()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntrySet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EntrySet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EvictionQueue.2 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; computeNext(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeNext(previous : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EvictionQueue.2 java.lang.Object computeNext(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeNext(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EvictionQueue boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(o : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EvictionQueue java.util.Iterator&lt;com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EvictionQueue boolean offer(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun offer(entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EvictionQueue boolean offer(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun offer(x0 : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EvictionQueue com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; peek()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun peek() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EvictionQueue java.lang.Object peek()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun peek() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EvictionQueue com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; poll()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun poll() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EvictionQueue java.lang.Object poll()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun poll() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.EvictionQueue boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(o : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ExpirationQueue.2 com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; computeNext(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeNext(previous : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ExpirationQueue.2 java.lang.Object computeNext(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeNext(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ExpirationQueue boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(o : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ExpirationQueue java.util.Iterator&lt;com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ExpirationQueue boolean offer(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun offer(entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ExpirationQueue boolean offer(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun offer(x0 : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ExpirationQueue com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; peek()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun peek() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ExpirationQueue java.lang.Object peek()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun peek() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ExpirationQueue com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; poll()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun poll() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ExpirationQueue java.lang.Object poll()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun poll() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ExpirationQueue boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(o : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.HashIterator HashIterator(com.google.common.collect.MapMakerInternalMap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun HashIterator()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.HashIterator boolean advanceTo(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun advanceTo(entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.KeyIterator KeyIterator(com.google.common.collect.MapMakerInternalMap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun KeyIterator()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.KeySet java.util.Iterator&lt;K&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.NullEntry java.lang.Object getKey()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKey() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.NullEntry com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;java.lang.Object,java.lang.Object&gt; getNext()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNext() : MapMakerInternalMap.ReferenceEntry&lt;Any?, Any?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.NullEntry com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;java.lang.Object,java.lang.Object&gt; getNextEvictable()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNextEvictable() : MapMakerInternalMap.ReferenceEntry&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.NullEntry com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;java.lang.Object,java.lang.Object&gt; getNextExpirable()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNextExpirable() : MapMakerInternalMap.ReferenceEntry&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.NullEntry com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;java.lang.Object,java.lang.Object&gt; getPreviousEvictable()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPreviousEvictable() : MapMakerInternalMap.ReferenceEntry&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.NullEntry com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;java.lang.Object,java.lang.Object&gt; getPreviousExpirable()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPreviousExpirable() : MapMakerInternalMap.ReferenceEntry&lt;Any?, Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.NullEntry com.google.common.collect.MapMakerInternalMap.ValueReference&lt;java.lang.Object,java.lang.Object&gt; getValueReference()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValueReference() : MapMakerInternalMap.ValueReference&lt;Any?, Any?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ReferenceEntry K getKey()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getKey() : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ReferenceEntry com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; getNext()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNext() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ReferenceEntry com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; getNextEvictable()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNextEvictable() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ReferenceEntry com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; getNextExpirable()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNextExpirable() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ReferenceEntry com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; getPreviousEvictable()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPreviousEvictable() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ReferenceEntry com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; getPreviousExpirable()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPreviousExpirable() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ReferenceEntry com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt; getValueReference()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValueReference() : MapMakerInternalMap.ValueReference&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment Segment(com.google.common.collect.MapMakerInternalMap&lt;K,V&gt;, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Segment(map : MapMakerInternalMap&lt;K, V&gt;, initialCapacity : Int, maxSegmentSize : Int)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyEntry(original : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, newNext : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment void enqueueNotification(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMaker.RemovalCause)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun enqueueNotification(entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, cause : MapMaker.RemovalCause?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment void enqueueNotification(K, int, V, com.google.common.collect.MapMaker.RemovalCause)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun enqueueNotification(key : K?, hash : Int, value : V?, cause : MapMaker.RemovalCause?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment V get(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Any?, hash : Int) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; getEntry(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEntry(key : Any?, hash : Int) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; getLiveEntry(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLiveEntry(key : Any?, hash : Int) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment V getLiveValue(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLiveValue(entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment void initTable(java.util.concurrent.atomic.AtomicReferenceArray&lt;com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initTable(newTable : AtomicReferenceArray&lt;MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment boolean isCollected(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isCollected(entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment boolean isCollected(com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isCollected(valueReference : MapMakerInternalMap.ValueReference&lt;K, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; newEntry(K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newEntry(p0 : K?, p1 : Int, p2 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment java.util.concurrent.atomic.AtomicReferenceArray&lt;com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;&gt; newEntryArray(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newEntryArray(size : Int) : AtomicReferenceArray&lt;MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment V put(K, int, V, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(key : K?, hash : Int, value : V?, onlyIfAbsent : Boolean) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment void recordExpirationTime(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun recordExpirationTime(entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, expirationNanos : Long) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment V remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(key : Any?, hash : Int) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment void removeCollectedEntry(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeCollectedEntry(entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; removeFromChain(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeFromChain(first : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?, entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment V replace(K, int, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(key : K?, hash : Int, newValue : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Segment void setValue(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValue(entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, value : V?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.SerializationProxy void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(in : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.SerializationProxy void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(out : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.SoftEntry SoftEntry(java.lang.ref.ReferenceQueue&lt;K&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SoftEntry(queue : ReferenceQueue&lt;K&gt;?, key : K?, hash : Int, next : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.SoftEntry com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; getNext()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNext() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.SoftEvictableEntry SoftEvictableEntry(java.lang.ref.ReferenceQueue&lt;K&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SoftEvictableEntry(queue : ReferenceQueue&lt;K&gt;?, key : K?, hash : Int, next : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.SoftExpirableEntry SoftExpirableEntry(java.lang.ref.ReferenceQueue&lt;K&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SoftExpirableEntry(queue : ReferenceQueue&lt;K&gt;?, key : K?, hash : Int, next : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.SoftExpirableEvictableEntry SoftExpirableEvictableEntry(java.lang.ref.ReferenceQueue&lt;K&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SoftExpirableEvictableEntry(queue : ReferenceQueue&lt;K&gt;?, key : K?, hash : Int, next : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.SoftValueReference void clear(com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear(p0 : MapMakerInternalMap.ValueReference&lt;K, V&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.SoftValueReference com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt; copyFor(java.lang.ref.ReferenceQueue&lt;V&gt;, V, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFor(queue : ReferenceQueue&lt;V&gt;?, value : V?, entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Strength.1 com.google.common.base.Equivalence&lt;java.lang.Object&gt; defaultEquivalence()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun defaultEquivalence() : Equivalence&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Strength.1 com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt; referenceValue(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; referenceValue(segment : MapMakerInternalMap.Segment&lt;K, V&gt;, entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?, value : V?) : MapMakerInternalMap.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Strength.2 com.google.common.base.Equivalence&lt;java.lang.Object&gt; defaultEquivalence()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun defaultEquivalence() : Equivalence&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Strength.2 com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt; referenceValue(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; referenceValue(segment : MapMakerInternalMap.Segment&lt;K, V&gt;, entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?, value : V?) : MapMakerInternalMap.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Strength.3 com.google.common.base.Equivalence&lt;java.lang.Object&gt; defaultEquivalence()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun defaultEquivalence() : Equivalence&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Strength.3 com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt; referenceValue(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; referenceValue(segment : MapMakerInternalMap.Segment&lt;K, V&gt;, entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?, value : V?) : MapMakerInternalMap.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Strength com.google.common.base.Equivalence&lt;java.lang.Object&gt; defaultEquivalence()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun defaultEquivalence() : Equivalence&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Strength com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt; referenceValue(com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; referenceValue(p0 : MapMakerInternalMap.Segment&lt;K, V&gt;, p1 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?, p2 : V?) : MapMakerInternalMap.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.StrongEntry StrongEntry(K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun StrongEntry(key : K?, hash : Int, next : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.StrongEntry com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; getNext()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNext() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.StrongEvictableEntry StrongEvictableEntry(K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun StrongEvictableEntry(key : K?, hash : Int, next : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.StrongExpirableEntry StrongExpirableEntry(K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun StrongExpirableEntry(key : K?, hash : Int, next : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.StrongExpirableEvictableEntry StrongExpirableEvictableEntry(K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun StrongExpirableEvictableEntry(key : K?, hash : Int, next : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.StrongValueReference void clear(com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear(p0 : MapMakerInternalMap.ValueReference&lt;K, V&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.StrongValueReference com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt; copyFor(java.lang.ref.ReferenceQueue&lt;V&gt;, V, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFor(queue : ReferenceQueue&lt;V&gt;?, value : V?, entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.StrongValueReference com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; getEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEntry() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ValueIterator ValueIterator(com.google.common.collect.MapMakerInternalMap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ValueIterator()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ValueReference void clear(com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear(p0 : MapMakerInternalMap.ValueReference&lt;K, V&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ValueReference com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt; copyFor(java.lang.ref.ReferenceQueue&lt;V&gt;, V, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFor(p0 : ReferenceQueue&lt;V&gt;?, p1 : V?, p2 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ValueReference V get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ValueReference com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; getEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEntry() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.ValueReference V waitForValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun waitForValue() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.Values java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.WeakEntry WeakEntry(java.lang.ref.ReferenceQueue&lt;K&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WeakEntry(queue : ReferenceQueue&lt;K&gt;?, key : K?, hash : Int, next : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.WeakEntry com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; getNext()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getNext() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.WeakEvictableEntry WeakEvictableEntry(java.lang.ref.ReferenceQueue&lt;K&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WeakEvictableEntry(queue : ReferenceQueue&lt;K&gt;?, key : K?, hash : Int, next : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.WeakExpirableEntry WeakExpirableEntry(java.lang.ref.ReferenceQueue&lt;K&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WeakExpirableEntry(queue : ReferenceQueue&lt;K&gt;?, key : K?, hash : Int, next : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.WeakExpirableEvictableEntry WeakExpirableEvictableEntry(java.lang.ref.ReferenceQueue&lt;K&gt;, K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WeakExpirableEvictableEntry(queue : ReferenceQueue&lt;K&gt;?, key : K?, hash : Int, next : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.WeakValueReference void clear(com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear(p0 : MapMakerInternalMap.ValueReference&lt;K, V&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.WeakValueReference com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt; copyFor(java.lang.ref.ReferenceQueue&lt;V&gt;, V, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyFor(queue : ReferenceQueue&lt;V&gt;?, value : V?, entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.WriteThroughEntry boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap.WriteThroughEntry V setValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValue(newValue : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap MapMakerInternalMap(com.google.common.collect.MapMaker)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MapMakerInternalMap(builder : MapMaker)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap void connectEvictables(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; connectEvictables(previous : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, next : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap void connectExpirables(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; connectExpirables(previous : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, next : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(key : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(value : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; copyEntry(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyEntry(original : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, newNext : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt; createSegment(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createSegment(initialCapacity : Int, maxSegmentSize : Int) : MapMakerInternalMap.Segment&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap java.util.Queue&lt;E&gt; discardingQueue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; discardingQueue() : Queue&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; getEntry(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEntry(p0 : Any?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; getLiveEntry(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLiveEntry(p0 : Any?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap V getLiveValue(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLiveValue(entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap boolean isExpired(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isExpired(entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap boolean isExpired(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isExpired(entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, now : Long) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap boolean isLive(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isLive(entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; newEntry(K, int, com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newEntry(p0 : K?, p1 : Int, p2 : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?) : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap com.google.common.collect.MapMakerInternalMap.Segment&lt;K,V&gt;[] newSegmentArray(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newSegmentArray(ssize : Int) : Array&lt;out MapMakerInternalMap.Segment&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt; newValueReference(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newValueReference(entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;, value : V?) : MapMakerInternalMap.ValueReference&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt; nullEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; nullEntry() : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap void nullifyEvictable(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; nullifyEvictable(nulled : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap void nullifyExpirable(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; nullifyExpirable(nulled : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap V put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(key : K, value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap void putAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(m : Map&lt;out K, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap V putIfAbsent(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putIfAbsent(key : K, value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap void reclaimKey(com.google.common.collect.MapMakerInternalMap.ReferenceEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reclaimKey(entry : MapMakerInternalMap.ReferenceEntry&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap void reclaimValue(com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reclaimValue(valueReference : MapMakerInternalMap.ValueReference&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap V remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(key : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap boolean remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(key : Any?, value : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap V replace(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(key : K, value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap boolean replace(K, V, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replace(p0 : K, p1 : V?, p2 : V) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap com.google.common.collect.MapMakerInternalMap.ValueReference&lt;K,V&gt; unset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unset() : MapMakerInternalMap.ValueReference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap java.util.Collection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMakerInternalMap java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.2 V2 transformEntry(K, V1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transformEntry(key : K?, value : V1?) : V2?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.3 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.3 boolean apply(java.util.Map.Entry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(input : Map.Entry&lt;K, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.4 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.4 boolean apply(java.util.Map.Entry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(input : Map.Entry&lt;K, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.5 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.5 boolean apply(java.util.Map.Entry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(input : Map.Entry&lt;K, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.6 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.6 boolean apply(java.util.Map.Entry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(input : Map.Entry&lt;K, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.7 7(java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 7(x0 : Iterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.7 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.7 K transform(java.util.Map.Entry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(entry : Map.Entry&lt;K, V&gt;) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.8 8(java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 8(x0 : Iterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.8 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.8 V transform(java.util.Map.Entry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(entry : Map.Entry&lt;K, V&gt;) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AbstractFilteredMap.Values java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AbstractFilteredMap.Values boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(collection : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AbstractFilteredMap.Values boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(collection : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AbstractFilteredMap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AbstractFilteredMap V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AbstractFilteredMap void putAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(map : Map&lt;out K, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AbstractFilteredMap V remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(key : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AbstractFilteredMap java.util.Collection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AsMapView.1 boolean add(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : K) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AsMapView.1 boolean addAll(java.util.Collection&lt;? extends K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(p0 : Collection&lt;out K&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AsMapView.1 java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AsMapView.1 java.util.Collection delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AsMapView.1 java.util.Set&lt;K&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AsMapView.2.1 java.lang.Object next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AsMapView.2.1 java.util.Map.Entry&lt;K,V&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AsMapView.2 java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AsMapView AsMapView(java.util.Set&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AsMapView(set : Set&lt;K&gt;, function : Function&lt;in K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AsMapView java.util.Set access$000(com.google.common.collect.Maps.AsMapView)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : Maps.AsMapView) : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AsMapView java.util.Set&lt;K&gt; backingSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun backingSet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AsMapView boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AsMapView java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AsMapView V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AsMapView java.util.Set&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AsMapView V remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.AsMapView java.util.Collection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.DescendingMap java.util.Comparator&lt;? super K&gt; comparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun comparator() : Comparator&lt;in K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.DescendingMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.DescendingMap java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entryIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entryIterator() : MutableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.DescendingMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.DescendingMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.DescendingMap java.util.NavigableSet&lt;K&gt; navigableKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun navigableKeySet() : NavigableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.DescendingMap com.google.common.collect.Ordering&lt;T&gt; reverse(java.util.Comparator&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; reverse(forward : Comparator&lt;T&gt;) : Ordering&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.DescendingMap java.util.Collection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.EntrySet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.EntrySet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.EntrySet boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.EntrySet boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.EntryTransformer V2 transformEntry(K, V1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transformEntry(p0 : K?, p1 : V1?) : V2?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredEntryMap.EntrySet.1.1 V setValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValue(p0 : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredEntryMap.EntrySet.1 java.lang.Object next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredEntryMap.EntrySet.1 java.util.Map.Entry&lt;K,V&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredEntryMap.EntrySet java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredEntryMap.EntrySet java.util.Collection delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredEntryMap.EntrySet java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredEntryMap.EntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredEntryMap.KeySet java.util.Iterator&lt;K&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredEntryMap.KeySet boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(collection : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredEntryMap FilteredEntryMap(java.util.Map&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FilteredEntryMap(unfiltered : Map&lt;K, V&gt;, entryPredicate : Predicate&lt;in Map.Entry&lt;K, V&gt;?&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredEntryMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredEntryMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredEntrySortedMap FilteredEntrySortedMap(java.util.SortedMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FilteredEntrySortedMap(unfiltered : SortedMap&lt;K, V&gt;, entryPredicate : Predicate&lt;in Map.Entry&lt;K, V&gt;?&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredEntrySortedMap java.util.SortedMap&lt;K,V&gt; headMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(toKey : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredEntrySortedMap java.util.SortedMap&lt;K,V&gt; subMap(K, K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(fromKey : K?, toKey : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredEntrySortedMap java.util.SortedMap&lt;K,V&gt; tailMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(fromKey : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredKeyMap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredKeyMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.FilteredKeyMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.ImprovedAbstractMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.ImprovedAbstractMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.ImprovedAbstractMap java.util.Collection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.KeySet java.util.Iterator&lt;K&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.KeySet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.MapDifferenceImpl boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(object : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.NavigableKeySet K pollFirst()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pollFirst() : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.NavigableKeySet K pollLast()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pollLast() : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.SortedAsMapView SortedAsMapView(java.util.SortedSet&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SortedAsMapView(set : SortedSet&lt;K&gt;, function : Function&lt;in K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.SortedAsMapView java.util.Set backingSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun backingSet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.SortedAsMapView java.util.SortedSet&lt;K&gt; backingSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun backingSet() : SortedSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.SortedAsMapView java.util.SortedMap&lt;K,V&gt; headMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(toKey : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.SortedAsMapView java.util.SortedMap&lt;K,V&gt; subMap(K, K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(fromKey : K?, toKey : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.SortedAsMapView java.util.SortedMap&lt;K,V&gt; tailMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(fromKey : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesMap.1.1 1(com.google.common.collect.Maps.TransformedEntriesMap.1, java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Iterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesMap.1.1 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesMap.1.1 java.util.Map.Entry&lt;K,V2&gt; transform(java.util.Map.Entry&lt;K,V1&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(entry : Map.Entry&lt;K, V1&gt;?) : MutableMap.MutableEntry&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesMap.1 java.util.Iterator&lt;java.util.Map.Entry&lt;K,V2&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;K, V2&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesMap TransformedEntriesMap(java.util.Map&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TransformedEntriesMap(fromMap : Map&lt;K, V1&gt;, transformer : Maps.EntryTransformer&lt;in K, in V1, V2&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesMap java.util.Set&lt;java.util.Map.Entry&lt;K,V2&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Map.Entry&lt;K, V2&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesMap V2 get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Any?) : V2?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesMap V2 remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(key : Any?) : V2?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesMap java.util.Collection&lt;V2&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&lt;V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap TransformedEntriesNavigableMap(java.util.NavigableMap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TransformedEntriesNavigableMap(fromMap : NavigableMap&lt;K, V1&gt;, transformer : Maps.EntryTransformer&lt;in K, in V1, V2&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.Map.Entry&lt;K,V2&gt; ceilingEntry(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ceilingEntry(key : K?) : MutableMap.MutableEntry&lt;K, V2&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.NavigableMap&lt;K,V2&gt; descendingMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingMap() : NavigableMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.Map.Entry&lt;K,V2&gt; firstEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun firstEntry() : MutableMap.MutableEntry&lt;K, V2&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.Map.Entry&lt;K,V2&gt; floorEntry(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun floorEntry(key : K?) : MutableMap.MutableEntry&lt;K, V2&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.NavigableMap&lt;K,V2&gt; headMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(toKey : K?) : NavigableMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.SortedMap headMap(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(x0 : Any?) : SortedMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.NavigableMap&lt;K,V2&gt; headMap(K, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(toKey : K?, inclusive : Boolean) : NavigableMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.Map.Entry&lt;K,V2&gt; higherEntry(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun higherEntry(key : K?) : MutableMap.MutableEntry&lt;K, V2&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.Map.Entry&lt;K,V2&gt; lastEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastEntry() : MutableMap.MutableEntry&lt;K, V2&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.Map.Entry&lt;K,V2&gt; lowerEntry(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lowerEntry(key : K?) : MutableMap.MutableEntry&lt;K, V2&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.Map.Entry&lt;K,V2&gt; pollFirstEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pollFirstEntry() : MutableMap.MutableEntry&lt;K, V2&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.Map.Entry&lt;K,V2&gt; pollLastEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pollLastEntry() : MutableMap.MutableEntry&lt;K, V2&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.NavigableMap&lt;K,V2&gt; subMap(K, K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(fromKey : K?, toKey : K?) : NavigableMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.SortedMap subMap(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(x0 : Any?, x1 : Any?) : SortedMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.NavigableMap&lt;K,V2&gt; subMap(K, boolean, K, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(fromKey : K?, fromInclusive : Boolean, toKey : K?, toInclusive : Boolean) : NavigableMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.NavigableMap&lt;K,V2&gt; tailMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(fromKey : K?) : NavigableMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.SortedMap tailMap(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(x0 : Any?) : SortedMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.NavigableMap&lt;K,V2&gt; tailMap(K, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(fromKey : K?, inclusive : Boolean) : NavigableMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesNavigableMap java.util.Map.Entry&lt;K,V2&gt; transformEntry(java.util.Map.Entry&lt;K,V1&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transformEntry(entry : Map.Entry&lt;K, V1&gt;?) : MutableMap.MutableEntry&lt;K, V2&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesSortedMap TransformedEntriesSortedMap(java.util.SortedMap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TransformedEntriesSortedMap(fromMap : SortedMap&lt;K, V1&gt;, transformer : Maps.EntryTransformer&lt;in K, in V1, V2&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesSortedMap java.util.SortedMap&lt;K,V2&gt; headMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(toKey : K?) : SortedMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesSortedMap java.util.SortedMap&lt;K,V2&gt; subMap(K, K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(fromKey : K?, toKey : K?) : SortedMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.TransformedEntriesSortedMap java.util.SortedMap&lt;K,V2&gt; tailMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(fromKey : K?) : SortedMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableBiMap UnmodifiableBiMap(com.google.common.collect.BiMap&lt;? extends K,? extends V&gt;, com.google.common.collect.BiMap&lt;V,K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun UnmodifiableBiMap(p0 : BiMap&lt;out K, out V&gt;?, p1 : BiMap&lt;V, K&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableBiMap V forcePut(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun forcePut(p0 : K?, p1 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableBiMap com.google.common.collect.BiMap&lt;V,K&gt; inverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun inverse() : BiMap&lt;V, K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableEntries.1 java.lang.Object next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableEntries.1 java.util.Map.Entry&lt;K,V&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableEntries boolean add(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : Any) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableEntries boolean addAll(java.util.Collection&lt;? extends java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(p0 : Collection&lt;out Map.Entry&lt;K, V&gt;?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableEntries java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableEntries boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableEntries boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableEntries boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableEntries T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableEntrySet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableNavigableMap java.util.Map.Entry&lt;K,V&gt; ceilingEntry(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ceilingEntry(key : K?) : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableNavigableMap java.util.NavigableSet&lt;K&gt; descendingKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingKeySet() : NavigableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableNavigableMap java.util.NavigableMap&lt;K,V&gt; descendingMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingMap() : NavigableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableNavigableMap java.util.Map.Entry&lt;K,V&gt; firstEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun firstEntry() : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableNavigableMap java.util.Map.Entry&lt;K,V&gt; floorEntry(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun floorEntry(key : K?) : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableNavigableMap java.util.SortedMap&lt;K,V&gt; headMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(toKey : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableNavigableMap java.util.NavigableMap&lt;K,V&gt; headMap(K, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(toKey : K?, inclusive : Boolean) : NavigableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableNavigableMap java.util.Map.Entry&lt;K,V&gt; higherEntry(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun higherEntry(key : K?) : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableNavigableMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableNavigableMap java.util.Map.Entry&lt;K,V&gt; lastEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastEntry() : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableNavigableMap java.util.Map.Entry&lt;K,V&gt; lowerEntry(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lowerEntry(key : K?) : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableNavigableMap java.util.NavigableSet&lt;K&gt; navigableKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun navigableKeySet() : NavigableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableNavigableMap java.util.SortedMap&lt;K,V&gt; subMap(K, K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(fromKey : K?, toKey : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableNavigableMap java.util.NavigableMap&lt;K,V&gt; subMap(K, boolean, K, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(fromKey : K?, fromInclusive : Boolean, toKey : K?, toInclusive : Boolean) : NavigableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableNavigableMap java.util.SortedMap&lt;K,V&gt; tailMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(fromKey : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.UnmodifiableNavigableMap java.util.NavigableMap&lt;K,V&gt; tailMap(K, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(fromKey : K?, inclusive : Boolean) : NavigableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.ValueDifferenceImpl ValueDifferenceImpl(V, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ValueDifferenceImpl(left : V?, right : V?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.ValueDifferenceImpl com.google.common.collect.MapDifference.ValueDifference&lt;V&gt; create(V, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; create(p0 : V?, p1 : V?) : MapDifference.ValueDifference&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.ValueDifferenceImpl boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.ValueDifferenceImpl V leftValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun leftValue() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.ValueDifferenceImpl V rightValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rightValue() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.Values boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.Values java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.Values boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.Values boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps.Values boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map.Entry access$300(java.util.Map.Entry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : Map.Entry?) : MutableMap.MutableEntry?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.Maps.EntryTransformer&lt;K,V1,V2&gt; asEntryTransformer(com.google.common.base.Function&lt;? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V1, V2&gt; asEntryTransformer(function : Function&lt;in V1, V2&gt;) : Maps.EntryTransformer&lt;K, V1, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V&gt; asMap(java.util.Set&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; asMap(set : Set&lt;K&gt;, function : Function&lt;in K, V&gt;) : MutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V&gt; asMap(java.util.SortedSet&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; asMap(set : SortedSet&lt;K&gt;, function : Function&lt;in K, V&gt;) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps boolean containsEntryImpl(java.util.Collection&lt;java.util.Map.Entry&lt;K,V&gt;&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; containsEntryImpl(c : Collection&lt;Map.Entry&lt;K, V&gt;?&gt;?, o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps boolean containsKeyImpl(java.util.Map&lt;?,?&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKeyImpl(p0 : Map&lt;*, *&gt;, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps boolean containsValueImpl(java.util.Map&lt;?,?&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValueImpl(map : Map&lt;*, *&gt;, value : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.MapDifference&lt;K,V&gt; difference(java.util.Map&lt;? extends K,? extends V&gt;, java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; difference(left : Map&lt;out K, out V&gt;, right : Map&lt;out K, out V&gt;?) : MapDifference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.MapDifference&lt;K,V&gt; difference(java.util.Map&lt;? extends K,? extends V&gt;, java.util.Map&lt;? extends K,? extends V&gt;, com.google.common.base.Equivalence&lt;? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; difference(left : Map&lt;out K, out V&gt;, right : Map&lt;out K, out V&gt;?, valueEquivalence : Equivalence&lt;in V&gt;) : MapDifference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.SortedMapDifference&lt;K,V&gt; difference(java.util.SortedMap&lt;K,? extends V&gt;, java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; difference(left : SortedMap&lt;K, out V&gt;, right : Map&lt;out K, out V&gt;) : SortedMapDifference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps boolean equalsImpl(java.util.Map&lt;?,?&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equalsImpl(map : Map&lt;*, *&gt;?, object : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V&gt; filterEntries(java.util.Map&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; filterEntries(unfiltered : Map&lt;K, V&gt;, entryPredicate : Predicate&lt;in Map.Entry&lt;K, V&gt;?&gt;) : MutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V&gt; filterEntries(java.util.SortedMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; filterEntries(unfiltered : SortedMap&lt;K, V&gt;, entryPredicate : Predicate&lt;in Map.Entry&lt;K, V&gt;?&gt;) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V&gt; filterFiltered(com.google.common.collect.Maps.AbstractFilteredMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; filterFiltered(map : Maps.AbstractFilteredMap&lt;K, V&gt;, entryPredicate : Predicate&lt;in Map.Entry&lt;K, V&gt;?&gt;) : MutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V&gt; filterFiltered(com.google.common.collect.Maps.FilteredEntrySortedMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; filterFiltered(map : Maps.FilteredEntrySortedMap&lt;K, V&gt;, entryPredicate : Predicate&lt;in Map.Entry&lt;K, V&gt;?&gt;) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V&gt; filterKeys(java.util.Map&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; filterKeys(unfiltered : Map&lt;K, V&gt;, keyPredicate : Predicate&lt;in K&gt;) : MutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V&gt; filterKeys(java.util.SortedMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; filterKeys(unfiltered : SortedMap&lt;K, V&gt;, keyPredicate : Predicate&lt;in K&gt;) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V&gt; filterValues(java.util.Map&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; filterValues(unfiltered : Map&lt;K, V&gt;, valuePredicate : Predicate&lt;in V&gt;) : MutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V&gt; filterValues(java.util.SortedMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; filterValues(unfiltered : SortedMap&lt;K, V&gt;, valuePredicate : Predicate&lt;in V&gt;) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;java.lang.String,java.lang.String&gt; fromProperties(java.util.Properties)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fromProperties(properties : Properties) : ImmutableMap&lt;String?, String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps int hashCodeImpl(java.util.Map&lt;?,?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashCodeImpl(map : Map&lt;*, *&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map.Entry&lt;K,V&gt; immutableEntry(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; immutableEntry(key : K?, value : V?) : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Iterator&lt;K&gt; keyIterator(java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; keyIterator(entryIterator : Iterator&lt;Map.Entry&lt;K, V&gt;?&gt;) : MutableIterator&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps K keyOrNull(java.util.Map.Entry&lt;K,?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K&gt; keyOrNull(entry : Map.Entry&lt;K, *&gt;?) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.MapDifference&lt;K,V&gt; mapDifference(boolean, java.util.Map&lt;K,V&gt;, java.util.Map&lt;K,V&gt;, java.util.Map&lt;K,V&gt;, java.util.Map&lt;K,com.google.common.collect.MapDifference.ValueDifference&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; mapDifference(areEqual : Boolean, onlyOnLeft : Map&lt;K, V&gt;?, onlyOnRight : Map&lt;K, V&gt;?, onBoth : Map&lt;K, V&gt;?, differences : Map&lt;K, MapDifference.ValueDifference&lt;V&gt;?&gt;?) : MapDifference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.concurrent.ConcurrentMap&lt;K,V&gt; newConcurrentMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newConcurrentMap() : ConcurrentMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.EnumMap&lt;K,V&gt; newEnumMap(java.lang.Class&lt;K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Enum&lt;K&gt;?, V&gt; newEnumMap(type : Class&lt;K&gt;) : EnumMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.EnumMap&lt;K,V&gt; newEnumMap(java.util.Map&lt;K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Enum&lt;K&gt;?, V&gt; newEnumMap(map : Map&lt;K, out V&gt;?) : EnumMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.HashMap&lt;K,V&gt; newHashMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newHashMap() : HashMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.HashMap&lt;K,V&gt; newHashMap(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newHashMap(map : Map&lt;out K, out V&gt;?) : HashMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.HashMap&lt;K,V&gt; newHashMapWithExpectedSize(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newHashMapWithExpectedSize(expectedSize : Int) : HashMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.IdentityHashMap&lt;K,V&gt; newIdentityHashMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newIdentityHashMap() : IdentityHashMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.LinkedHashMap&lt;K,V&gt; newLinkedHashMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newLinkedHashMap() : LinkedHashMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.LinkedHashMap&lt;K,V&gt; newLinkedHashMap(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newLinkedHashMap(map : Map&lt;out K, out V&gt;?) : LinkedHashMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.TreeMap&lt;K,V&gt; newTreeMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Comparable?, V&gt; newTreeMap() : TreeMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.TreeMap&lt;K,V&gt; newTreeMap(java.util.Comparator&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C, K : C, V&gt; newTreeMap(p0 : Comparator&lt;C&gt;?) : TreeMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.TreeMap&lt;K,V&gt; newTreeMap(java.util.SortedMap&lt;K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newTreeMap(map : SortedMap&lt;K, out V&gt;?) : TreeMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Comparator&lt;? super E&gt; orNaturalOrder(java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; orNaturalOrder(comparator : Comparator&lt;in E&gt;?) : Comparator&lt;in E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps void putAllImpl(java.util.Map&lt;K,V&gt;, java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; putAllImpl(self : MutableMap&lt;K, V&gt;?, map : Map&lt;out K, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps boolean removeEntryImpl(java.util.Collection&lt;java.util.Map.Entry&lt;K,V&gt;&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; removeEntryImpl(c : MutableCollection&lt;Map.Entry&lt;K, V&gt;?&gt;?, o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps V safeGet(java.util.Map&lt;?,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; safeGet(map : Map&lt;*, V&gt;?, key : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.SortedMapDifference&lt;K,V&gt; sortedMapDifference(boolean, java.util.SortedMap&lt;K,V&gt;, java.util.SortedMap&lt;K,V&gt;, java.util.SortedMap&lt;K,V&gt;, java.util.SortedMap&lt;K,com.google.common.collect.MapDifference.ValueDifference&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; sortedMapDifference(areEqual : Boolean, onlyOnLeft : SortedMap&lt;K, V&gt;?, onlyOnRight : SortedMap&lt;K, V&gt;?, onBoth : SortedMap&lt;K, V&gt;?, differences : SortedMap&lt;K, MapDifference.ValueDifference&lt;V&gt;?&gt;?) : SortedMapDifference&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.BiMap&lt;K,V&gt; synchronizedBiMap(com.google.common.collect.BiMap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; synchronizedBiMap(bimap : BiMap&lt;K, V&gt;) : BiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; synchronizedNavigableMap(java.util.NavigableMap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; synchronizedNavigableMap(navigableMap : NavigableMap&lt;K, V&gt;) : NavigableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.lang.String toStringImpl(java.util.Map&lt;?,?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStringImpl(map : Map&lt;*, *&gt;) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V2&gt; transformEntries(java.util.Map&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V1, V2&gt; transformEntries(fromMap : Map&lt;K, V1&gt;, transformer : Maps.EntryTransformer&lt;in K, in V1, V2&gt;) : MutableMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V2&gt; transformEntries(java.util.NavigableMap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V1, V2&gt; transformEntries(fromMap : NavigableMap&lt;K, V1&gt;, transformer : Maps.EntryTransformer&lt;in K, in V1, V2&gt;) : NavigableMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V2&gt; transformEntries(java.util.SortedMap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V1, V2&gt; transformEntries(fromMap : SortedMap&lt;K, V1&gt;, transformer : Maps.EntryTransformer&lt;in K, in V1, V2&gt;) : SortedMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V2&gt; transformEntriesIgnoreNavigable(java.util.SortedMap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V1, V2&gt; transformEntriesIgnoreNavigable(fromMap : SortedMap&lt;K, V1&gt;, transformer : Maps.EntryTransformer&lt;in K, in V1, V2&gt;) : SortedMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V2&gt; transformValues(java.util.Map&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V1, V2&gt; transformValues(fromMap : Map&lt;K, V1&gt;, function : Function&lt;in V1, V2&gt;) : MutableMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V2&gt; transformValues(java.util.NavigableMap&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V1, V2&gt; transformValues(fromMap : NavigableMap&lt;K, V1&gt;, function : Function&lt;in V1, V2&gt;) : NavigableMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V2&gt; transformValues(java.util.SortedMap&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V1, V2&gt; transformValues(fromMap : SortedMap&lt;K, V1&gt;, function : Function&lt;in V1, V2&gt;) : SortedMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;K,V&gt; uniqueIndex(java.lang.Iterable&lt;V&gt;, com.google.common.base.Function&lt;? super V,K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; uniqueIndex(values : Iterable&lt;V&gt;, keyFunction : Function&lt;in V, K&gt;) : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;K,V&gt; uniqueIndex(java.util.Iterator&lt;V&gt;, com.google.common.base.Function&lt;? super V,K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; uniqueIndex(values : Iterator&lt;V&gt;, keyFunction : Function&lt;in V, K&gt;) : ImmutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.BiMap&lt;K,V&gt; unmodifiableBiMap(com.google.common.collect.BiMap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unmodifiableBiMap(bimap : BiMap&lt;out K, out V&gt;?) : BiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map.Entry&lt;K,V&gt; unmodifiableEntry(java.util.Map.Entry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unmodifiableEntry(entry : Map.Entry&lt;K, V&gt;) : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; unmodifiableEntrySet(java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unmodifiableEntrySet(entrySet : Set&lt;Map.Entry&lt;K, V&gt;?&gt;?) : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; unmodifiableNavigableMap(java.util.NavigableMap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unmodifiableNavigableMap(map : NavigableMap&lt;K, V&gt;) : NavigableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map.Entry&lt;K,V&gt; unmodifiableOrNull(java.util.Map.Entry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unmodifiableOrNull(p0 : Map.Entry&lt;K, V&gt;?) : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.UnmodifiableIterator&lt;V&gt; valueIterator(com.google.common.collect.UnmodifiableIterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; valueIterator(entryIterator : UnmodifiableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;?) : UnmodifiableIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Iterator&lt;V&gt; valueIterator(java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; valueIterator(entryIterator : Iterator&lt;Map.Entry&lt;K, V&gt;?&gt;) : MutableIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue.Builder Builder(java.util.Comparator&lt;B&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Builder(comparator : Comparator&lt;B&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue.Builder Builder(java.util.Comparator, com.google.common.collect.MinMaxPriorityQueue.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Builder(x0 : Comparator, x1 : MinMaxPriorityQueue.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue.Builder com.google.common.collect.Ordering access$200(com.google.common.collect.MinMaxPriorityQueue.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : MinMaxPriorityQueue.Builder) : Ordering&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue.Builder int access$300(com.google.common.collect.MinMaxPriorityQueue.Builder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : MinMaxPriorityQueue.Builder) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue.Builder com.google.common.collect.MinMaxPriorityQueue&lt;T&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; create() : MinMaxPriorityQueue&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue.Builder com.google.common.collect.MinMaxPriorityQueue&lt;T&gt; create(java.lang.Iterable&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; create(initialContents : Iterable&lt;out T&gt;) : MinMaxPriorityQueue&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue.Builder com.google.common.collect.MinMaxPriorityQueue.Builder&lt;B&gt; expectedSize(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun expectedSize(expectedSize : Int) : MinMaxPriorityQueue.Builder&lt;B&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue.Builder com.google.common.collect.MinMaxPriorityQueue.Builder&lt;B&gt; maximumSize(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun maximumSize(maximumSize : Int) : MinMaxPriorityQueue.Builder&lt;B&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue.Builder com.google.common.collect.Ordering&lt;T&gt; ordering()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; ordering() : Ordering&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue.Heap boolean access$400(com.google.common.collect.MinMaxPriorityQueue.Heap, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : MinMaxPriorityQueue.Heap, x1 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue.Heap com.google.common.collect.MinMaxPriorityQueue.MoveDesc&lt;E&gt; tryCrossOverAndBubbleUp(int, int, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tryCrossOverAndBubbleUp(removeIndex : Int, vacated : Int, toTrickle : E?) : MinMaxPriorityQueue.MoveDesc&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue.QueueIterator boolean containsExact(java.lang.Iterable&lt;E&gt;, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsExact(elements : Iterable&lt;E&gt;, target : E?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue MinMaxPriorityQueue(com.google.common.collect.MinMaxPriorityQueue.Builder&lt;? super E&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MinMaxPriorityQueue(builder : MinMaxPriorityQueue.Builder&lt;in E&gt;, queueSize : Int)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue MinMaxPriorityQueue(com.google.common.collect.MinMaxPriorityQueue.Builder, int, com.google.common.collect.MinMaxPriorityQueue.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MinMaxPriorityQueue(x0 : MinMaxPriorityQueue.Builder, x1 : Int, x2 : MinMaxPriorityQueue.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$500(x0 : MinMaxPriorityQueue) : Array&lt;out Any?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue int access$600(com.google.common.collect.MinMaxPriorityQueue)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$600(x0 : MinMaxPriorityQueue) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue int access$700(com.google.common.collect.MinMaxPriorityQueue)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$700(x0 : MinMaxPriorityQueue) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue boolean add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(element : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue boolean addAll(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(newElements : Collection&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue com.google.common.collect.MinMaxPriorityQueue&lt;E&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;E&gt;?&gt; create() : MinMaxPriorityQueue&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue com.google.common.collect.MinMaxPriorityQueue&lt;E&gt; create(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable&lt;E&gt;?&gt; create(initialContents : Iterable&lt;out E&gt;) : MinMaxPriorityQueue&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue com.google.common.collect.MinMaxPriorityQueue.Builder&lt;java.lang.Comparable&gt; expectedSize(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun expectedSize(expectedSize : Int) : MinMaxPriorityQueue.Builder&lt;Comparable?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue com.google.common.collect.MinMaxPriorityQueue.MoveDesc&lt;E&gt; fillHole(int, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fillHole(index : Int, toTrickle : E?) : MinMaxPriorityQueue.MoveDesc&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue com.google.common.collect.MinMaxPriorityQueue&lt;E&gt;.Heap heapForIndex(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun heapForIndex(i : Int) : MinMaxPriorityQueue&lt;E&gt;.Heap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue int initialQueueSize(int, int, java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initialQueueSize(configuredExpectedSize : Int, maximumSize : Int, initialContents : Iterable&lt;*&gt;?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue com.google.common.collect.MinMaxPriorityQueue.Builder&lt;java.lang.Comparable&gt; maximumSize(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun maximumSize(maximumSize : Int) : MinMaxPriorityQueue.Builder&lt;Comparable?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue boolean offer(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun offer(element : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue com.google.common.collect.MinMaxPriorityQueue.Builder&lt;B&gt; orderedBy(java.util.Comparator&lt;B&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;B&gt; orderedBy(comparator : Comparator&lt;B&gt;) : MinMaxPriorityQueue.Builder&lt;B&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue E peek()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun peek() : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue E peekFirst()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun peekFirst() : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue E peekLast()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun peekLast() : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue E poll()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun poll() : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue E pollFirst()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pollFirst() : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue E pollLast()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pollLast() : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue com.google.common.collect.MinMaxPriorityQueue.MoveDesc&lt;E&gt; removeAt(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAt(index : Int) : MinMaxPriorityQueue.MoveDesc&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue java.lang.Object[] toArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray() : Array&lt;out Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : MutableMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap boolean containsEntry(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsEntry(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap java.util.Collection&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableCollection&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap java.util.Collection&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap com.google.common.collect.Multiset&lt;K&gt; keys()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keys() : Multiset&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap boolean put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K?, p1 : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap boolean putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Multimap&lt;out K, out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap boolean putAll(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : K?, p1 : Iterable&lt;out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap boolean remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap java.util.Collection&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap java.util.Collection&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap java.util.Collection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.2 V2 transformEntry(K, V1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transformEntry(key : K?, value : V1?) : V2?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.3 V2 transformEntry(K, V1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transformEntry(key : K?, value : V1?) : V2?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.4 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.4 boolean apply(java.util.Map.Entry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(input : Map.Entry&lt;K, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.5 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.5 boolean apply(java.util.Map.Entry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(input : Map.Entry&lt;K, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.AsMap.EntrySet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.AsMap java.util.Set&lt;java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : MutableSet&lt;Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.AsMap java.util.Iterator&lt;java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;&gt; entryIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entryIterator() : MutableIterator&lt;Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.AsMap java.lang.Object get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.AsMap java.util.Collection&lt;V&gt; get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Any?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.AsMap java.lang.Object remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.AsMap java.util.Collection&lt;V&gt; remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(key : Any?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.CustomListMultimap CustomListMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.List&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CustomListMultimap(map : Map&lt;K, Collection&lt;V&gt;?&gt;, factory : Supplier&lt;out List&lt;V&gt;?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.CustomListMultimap void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.CustomListMultimap void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.CustomMultimap CustomMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.Collection&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CustomMultimap(map : Map&lt;K, Collection&lt;V&gt;?&gt;, factory : Supplier&lt;out Collection&lt;V&gt;?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.CustomMultimap void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.CustomMultimap void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.CustomSetMultimap CustomSetMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.Set&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CustomSetMultimap(map : Map&lt;K, Collection&lt;V&gt;?&gt;, factory : Supplier&lt;out Set&lt;V&gt;?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.CustomSetMultimap void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.CustomSetMultimap void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.CustomSortedSetMultimap CustomSortedSetMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.SortedSet&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CustomSortedSetMultimap(map : Map&lt;K, Collection&lt;V&gt;?&gt;, factory : Supplier&lt;out SortedSet&lt;V&gt;?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.CustomSortedSetMultimap void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.CustomSortedSetMultimap void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.Entries boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.Entries boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.EntrySet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.1 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.1 boolean apply(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(input : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.2 java.lang.Object transformEntry(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transformEntry(x0 : Any?, x1 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.2 java.util.Collection&lt;V&gt; transformEntry(K, java.util.Collection&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transformEntry(key : K?, collection : Collection&lt;V&gt;) : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap.EntrySet.1 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap.EntrySet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap.EntrySet boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap.EntrySet boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap.KeySet.1 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap.KeySet.1 boolean apply(java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(entry : Map.Entry&lt;K, Collection&lt;V&gt;?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap.KeySet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap.KeySet boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap.KeySet boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap.Values.1 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap.Values.1 boolean apply(java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(entry : Map.Entry&lt;K, Collection&lt;V&gt;?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap.Values.2 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap.Values.2 boolean apply(java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(entry : Map.Entry&lt;K, Collection&lt;V&gt;?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap.Values boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap.Values boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap.Values boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap java.lang.Object remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.AsMap java.util.Collection&lt;V&gt; remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(o : Any?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.Keys.EntrySet.1 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.Keys.EntrySet.1 boolean apply(java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(entry : Map.Entry&lt;K, Collection&lt;V&gt;?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.Keys.EntrySet boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.Keys.EntrySet boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.Keys java.util.Set&lt;com.google.common.collect.Multiset.Entry&lt;K&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : MutableSet&lt;Multiset.Entry&lt;K&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.Keys int remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.ValuePredicate boolean apply(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap.Values boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap boolean containsEntry(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsEntry(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; createAsMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAsMap() : MutableMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap java.util.Collection&lt;V&gt; filterCollection(java.util.Collection&lt;V&gt;, com.google.common.base.Predicate&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun filterCollection(collection : Collection&lt;V&gt;, predicate : Predicate&lt;V&gt;) : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap java.util.Collection&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K?) : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap boolean put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K?, p1 : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap boolean putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(multimap : Multimap&lt;out K, out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap boolean putAll(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(key : K?, values : Iterable&lt;out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap boolean remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap java.util.Collection&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.FilteredMultimap java.util.Collection&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(key : K?, values : Iterable&lt;out V&gt;) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.Keys.1 1(com.google.common.collect.Multimaps.Keys, java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Iterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.Keys.1 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.Keys.1 com.google.common.collect.Multiset.Entry&lt;K&gt; transform(java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(backingEntry : Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?) : Multiset.Entry&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.Keys.KeysEntrySet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.Keys.KeysEntrySet java.util.Iterator&lt;com.google.common.collect.Multiset.Entry&lt;K&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Multiset.Entry&lt;K&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.Keys.KeysEntrySet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.Keys boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.Keys int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.Keys java.util.Set&lt;com.google.common.collect.Multiset.Entry&lt;K&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : MutableSet&lt;Multiset.Entry&lt;K&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.Keys java.util.Iterator&lt;com.google.common.collect.Multiset.Entry&lt;K&gt;&gt; entryIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entryIterator() : MutableIterator&lt;Multiset.Entry&lt;K&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.Keys java.util.Iterator&lt;K&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.Keys int remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap.1 java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap.AsMap java.util.Set&lt;java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : MutableSet&lt;Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap.AsMap java.lang.Object get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap.AsMap java.util.Collection&lt;V&gt; get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Any?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap.AsMap java.lang.Object remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap.AsMap java.util.Collection&lt;V&gt; remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(key : Any?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap.AsMapEntries.1.1 java.lang.Object getValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap.AsMapEntries.1.1 java.util.Collection&lt;V&gt; getValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap.AsMapEntries.1 1(com.google.common.collect.Multimaps.MapMultimap.AsMapEntries, java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Iterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap.AsMapEntries.1 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap.AsMapEntries.1 java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt; transform(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(key : K?) : MutableMap.MutableEntry&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap.AsMapEntries boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap.AsMapEntries java.util.Iterator&lt;java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap.AsMapEntries boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap MapMultimap(java.util.Map&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MapMultimap(map : Map&lt;K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : MutableMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap boolean containsEntry(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsEntry(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap java.util.Set&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K?) : MutableSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap com.google.common.collect.Multiset&lt;K&gt; keys()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keys() : Multiset&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap boolean put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K?, p1 : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap boolean putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Multimap&lt;out K, out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap boolean putAll(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : K?, p1 : Iterable&lt;out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap boolean remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(x0 : Any?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap java.util.Set&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(key : Any?) : MutableSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.MapMultimap java.util.Set&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : MutableSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesListMultimap.1 V2 apply(V1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : V1?) : V2?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesListMultimap TransformedEntriesListMultimap(com.google.common.collect.ListMultimap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TransformedEntriesListMultimap(fromMultimap : ListMultimap&lt;K, V1&gt;, transformer : Maps.EntryTransformer&lt;in K, in V1, V2&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesListMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesListMultimap java.util.List&lt;V2&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K?) : MutableList&lt;V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesListMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(x0 : Any?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesListMultimap java.util.List&lt;V2&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(key : Any?) : MutableList&lt;V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesListMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesListMultimap java.util.List&lt;V2&gt; replaceValues(K, java.lang.Iterable&lt;? extends V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V2&gt;) : MutableList&lt;V2&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesListMultimap java.util.Collection transform(java.lang.Object, java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any?, x1 : Collection) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesListMultimap java.util.List&lt;V2&gt; transform(K, java.util.Collection&lt;V1&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(key : K?, values : Collection&lt;V1&gt;) : MutableList&lt;V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap.1 V2 apply(V1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : V1?) : V2?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap.2 java.lang.Object transformEntry(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transformEntry(x0 : Any?, x1 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap.2 java.util.Collection&lt;V2&gt; transformEntry(K, java.util.Collection&lt;V1&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transformEntry(key : K?, value : Collection&lt;V1&gt;) : MutableCollection&lt;V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap.3 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap.3 V2 apply(java.util.Map.Entry&lt;K,V1&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(entry : Map.Entry&lt;K, V1&gt;) : V2?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap.TransformedEntries.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap.TransformedEntries.1 java.util.Map.Entry&lt;K,V2&gt; apply(java.util.Map.Entry&lt;K,V1&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(entry : Map.Entry&lt;K, V1&gt;?) : MutableMap.MutableEntry&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap.TransformedEntries TransformedEntries(com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TransformedEntries(transformer : Maps.EntryTransformer&lt;in K, in V1, V2&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap.TransformedEntries boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap.TransformedEntries boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap TransformedEntriesMultimap(com.google.common.collect.Multimap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TransformedEntriesMultimap(fromMultimap : Multimap&lt;K, V1&gt;, transformer : Maps.EntryTransformer&lt;in K, in V1, V2&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap boolean containsEntry(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsEntry(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap java.util.Collection&lt;V2&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K?) : MutableCollection&lt;V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap boolean put(K, V2)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K?, p1 : V2?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap boolean putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Multimap&lt;out K, out V2&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap boolean putAll(K, java.lang.Iterable&lt;? extends V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : K?, p1 : Iterable&lt;out V2&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap boolean remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap java.util.Collection&lt;V2&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(key : Any?) : MutableCollection&lt;V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap java.util.Collection&lt;V2&gt; replaceValues(K, java.lang.Iterable&lt;? extends V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V2&gt;) : MutableCollection&lt;V2&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.TransformedEntriesMultimap java.util.Collection&lt;V2&gt; transform(K, java.util.Collection&lt;V1&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(key : K?, values : Collection&lt;V1&gt;) : MutableCollection&lt;V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableAsMapEntries.1 java.lang.Object next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableAsMapEntries.1 java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : MutableMap.MutableEntry&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableAsMapEntries boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableAsMapEntries boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableAsMapEntries boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableAsMapEntries java.util.Iterator&lt;java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableAsMapEntries T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableAsMapValues boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableAsMapValues boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableAsMapValues java.util.Iterator&lt;java.util.Collection&lt;V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableAsMapValues T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableListMultimap UnmodifiableListMultimap(com.google.common.collect.ListMultimap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun UnmodifiableListMultimap(delegate : ListMultimap&lt;K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableListMultimap com.google.common.collect.ListMultimap&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : ListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableListMultimap com.google.common.collect.Multimap delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Multimap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableListMultimap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableListMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableListMultimap java.util.List&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : MutableList&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableListMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableListMultimap java.util.List&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableList&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableListMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableListMultimap java.util.List&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : MutableList&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap.1 boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap.1 java.util.Set&lt;java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap.1 java.lang.Object get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap.1 java.util.Collection&lt;V&gt; get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Any?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap.1 java.util.Collection&lt;java.util.Collection&lt;V&gt;&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&lt;Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap UnmodifiableMultimap(com.google.common.collect.Multimap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun UnmodifiableMultimap(delegate : Multimap&lt;K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : MutableMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap com.google.common.collect.Multimap&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Multimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap java.util.Collection&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableCollection&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap java.util.Collection&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap com.google.common.collect.Multiset&lt;K&gt; keys()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keys() : Multiset&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap boolean put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K?, p1 : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap boolean putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Multimap&lt;out K, out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap boolean putAll(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : K?, p1 : Iterable&lt;out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap boolean remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap java.util.Collection&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableMultimap java.util.Collection&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSetMultimap UnmodifiableSetMultimap(com.google.common.collect.SetMultimap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun UnmodifiableSetMultimap(delegate : SetMultimap&lt;K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSetMultimap com.google.common.collect.Multimap delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Multimap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSetMultimap com.google.common.collect.SetMultimap&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : SetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSetMultimap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSetMultimap java.util.Collection entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSetMultimap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSetMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSetMultimap java.util.Set&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : MutableSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSetMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSetMultimap java.util.Set&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSetMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSetMultimap java.util.Set&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : MutableSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSortedSetMultimap UnmodifiableSortedSetMultimap(com.google.common.collect.SortedSetMultimap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun UnmodifiableSortedSetMultimap(delegate : SortedSetMultimap&lt;K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSortedSetMultimap com.google.common.collect.Multimap delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Multimap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSortedSetMultimap com.google.common.collect.SetMultimap delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : SetMultimap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSortedSetMultimap com.google.common.collect.SortedSetMultimap&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : SortedSetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSortedSetMultimap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSortedSetMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSortedSetMultimap java.util.Set get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSortedSetMultimap java.util.SortedSet&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : SortedSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSortedSetMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSortedSetMultimap java.util.Set removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSortedSetMultimap java.util.SortedSet&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : SortedSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSortedSetMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSortedSetMultimap java.util.Set replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.UnmodifiableSortedSetMultimap java.util.SortedSet&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : SortedSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.Values boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps.Values java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps java.util.Set access$000(java.util.Set)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : Set?) : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps java.util.Collection access$200(java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : Collection?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps java.util.Map.Entry access$300(java.util.Map.Entry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : Map.Entry) : MutableMap.MutableEntry&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; filterEntries(com.google.common.collect.Multimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; filterEntries(unfiltered : Multimap&lt;K, V&gt;, entryPredicate : Predicate&lt;in Map.Entry&lt;K, V&gt;?&gt;) : Multimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; filterFiltered(com.google.common.collect.Multimaps.FilteredMultimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; filterFiltered(map : Multimaps.FilteredMultimap&lt;K, V&gt;, entryPredicate : Predicate&lt;in Map.Entry&lt;K, V&gt;?&gt;) : Multimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; filterKeys(com.google.common.collect.Multimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; filterKeys(unfiltered : Multimap&lt;K, V&gt;, keyPredicate : Predicate&lt;in K&gt;) : Multimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; filterValues(com.google.common.collect.Multimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; filterValues(unfiltered : Multimap&lt;K, V&gt;, valuePredicate : Predicate&lt;in V&gt;) : Multimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; forMap(java.util.Map&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; forMap(map : Map&lt;K, V&gt;) : SetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; index(java.lang.Iterable&lt;V&gt;, com.google.common.base.Function&lt;? super V,K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; index(values : Iterable&lt;V&gt;, keyFunction : Function&lt;in V, K&gt;) : ImmutableListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; index(java.util.Iterator&lt;V&gt;, com.google.common.base.Function&lt;? super V,K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; index(values : Iterator&lt;V&gt;, keyFunction : Function&lt;in V, K&gt;) : ImmutableListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps M invertFrom(com.google.common.collect.Multimap&lt;? extends V,? extends K&gt;, M)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V, M : Multimap&lt;K, V&gt;?&gt; invertFrom(source : Multimap&lt;out V, out K&gt;, dest : M) : M&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V&gt; newListMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.List&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newListMultimap(map : Map&lt;K, Collection&lt;V&gt;?&gt;, factory : Supplier&lt;out List&lt;V&gt;?&gt;) : ListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; newMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.Collection&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newMultimap(map : Map&lt;K, Collection&lt;V&gt;?&gt;, factory : Supplier&lt;out Collection&lt;V&gt;?&gt;) : Multimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; newSetMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.Set&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newSetMultimap(map : Map&lt;K, Collection&lt;V&gt;?&gt;, factory : Supplier&lt;out Set&lt;V&gt;?&gt;) : SetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SortedSetMultimap&lt;K,V&gt; newSortedSetMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.SortedSet&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newSortedSetMultimap(map : Map&lt;K, Collection&lt;V&gt;?&gt;, factory : Supplier&lt;out SortedSet&lt;V&gt;?&gt;) : SortedSetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V&gt; synchronizedListMultimap(com.google.common.collect.ListMultimap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; synchronizedListMultimap(multimap : ListMultimap&lt;K, V&gt;) : ListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; synchronizedMultimap(com.google.common.collect.Multimap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; synchronizedMultimap(multimap : Multimap&lt;K, V&gt;) : Multimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; synchronizedSetMultimap(com.google.common.collect.SetMultimap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; synchronizedSetMultimap(multimap : SetMultimap&lt;K, V&gt;) : SetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SortedSetMultimap&lt;K,V&gt; synchronizedSortedSetMultimap(com.google.common.collect.SortedSetMultimap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; synchronizedSortedSetMultimap(multimap : SortedSetMultimap&lt;K, V&gt;) : SortedSetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V2&gt; transformEntries(com.google.common.collect.ListMultimap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V1, V2&gt; transformEntries(fromMap : ListMultimap&lt;K, V1&gt;, transformer : Maps.EntryTransformer&lt;in K, in V1, V2&gt;) : ListMultimap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V2&gt; transformEntries(com.google.common.collect.Multimap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V1, V2&gt; transformEntries(fromMap : Multimap&lt;K, V1&gt;, transformer : Maps.EntryTransformer&lt;in K, in V1, V2&gt;) : Multimap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V2&gt; transformValues(com.google.common.collect.ListMultimap&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V1, V2&gt; transformValues(fromMultimap : ListMultimap&lt;K, V1&gt;, function : Function&lt;in V1, V2&gt;) : ListMultimap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V2&gt; transformValues(com.google.common.collect.Multimap&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V1, V2&gt; transformValues(fromMultimap : Multimap&lt;K, V1&gt;, function : Function&lt;in V1, V2&gt;) : Multimap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps java.util.Set&lt;java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;&gt; unmodifiableAsMapEntries(java.util.Set&lt;java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unmodifiableAsMapEntries(asMapEntries : Set&lt;Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?&gt;?) : MutableSet&lt;Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt; unmodifiableAsMapEntry(java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unmodifiableAsMapEntry(entry : Map.Entry&lt;K, Collection&lt;V&gt;?&gt;) : MutableMap.MutableEntry&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps java.util.Collection&lt;java.util.Map.Entry&lt;K,V&gt;&gt; unmodifiableEntries(java.util.Collection&lt;java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unmodifiableEntries(entries : Collection&lt;Map.Entry&lt;K, V&gt;?&gt;?) : MutableCollection&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V&gt; unmodifiableListMultimap(com.google.common.collect.ImmutableListMultimap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unmodifiableListMultimap(delegate : ImmutableListMultimap&lt;K, V&gt;) : ListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V&gt; unmodifiableListMultimap(com.google.common.collect.ListMultimap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unmodifiableListMultimap(delegate : ListMultimap&lt;K, V&gt;) : ListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; unmodifiableMultimap(com.google.common.collect.ImmutableMultimap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unmodifiableMultimap(delegate : ImmutableMultimap&lt;K, V&gt;) : Multimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; unmodifiableMultimap(com.google.common.collect.Multimap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unmodifiableMultimap(delegate : Multimap&lt;K, V&gt;) : Multimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; unmodifiableSetMultimap(com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unmodifiableSetMultimap(delegate : ImmutableSetMultimap&lt;K, V&gt;) : SetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; unmodifiableSetMultimap(com.google.common.collect.SetMultimap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unmodifiableSetMultimap(delegate : SetMultimap&lt;K, V&gt;) : SetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SortedSetMultimap&lt;K,V&gt; unmodifiableSortedSetMultimap(com.google.common.collect.SortedSetMultimap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unmodifiableSortedSetMultimap(delegate : SortedSetMultimap&lt;K, V&gt;) : SortedSetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset.Entry boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset.Entry E getElement()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getElement() : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset boolean add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset int add(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset java.util.Set&lt;E&gt; elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset java.util.Set&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset int remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset int setCount(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : E?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset boolean setCount(E, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : E?, p1 : Int, p2 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.1 int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.1 java.util.Set&lt;E&gt; createElementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createElementSet() : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.1 java.util.Iterator&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entryIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entryIterator() : MutableIterator&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.2 int compare(com.google.common.collect.Multiset.Entry&lt;?&gt;, com.google.common.collect.Multiset.Entry&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(entry1 : Multiset.Entry&lt;*&gt;, entry2 : Multiset.Entry&lt;*&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.2 int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any?, x1 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.AbstractEntry boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.ElementSet.1 1(com.google.common.collect.Multisets.ElementSet, java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Iterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.ElementSet.1 E transform(com.google.common.collect.Multiset.Entry&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(entry : Multiset.Entry&lt;E&gt;) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.ElementSet.1 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.ElementSet java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.EntrySet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.EntrySet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.ImmutableEntry ImmutableEntry(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ImmutableEntry(p0 : E?, p1 : Int)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.ImmutableEntry E getElement()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getElement() : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset.1.1 1(com.google.common.collect.Multisets.SetMultiset.1, java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Iterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset.1.1 com.google.common.collect.Multiset.Entry&lt;E&gt; transform(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(e : E?) : Multiset.Entry&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset.1.1 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset.1 java.util.Iterator&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset.ElementSet boolean add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset.ElementSet boolean addAll(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(p0 : Collection&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset.ElementSet java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset.ElementSet java.util.Collection delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset.ElementSet java.util.Set&lt;E&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset SetMultiset(java.util.Set&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SetMultiset(set : Set&lt;E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset boolean add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset int add(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset boolean addAll(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(p0 : Collection&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset java.util.Collection delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset java.util.Set&lt;E&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset java.util.Set&lt;E&gt; elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset java.util.Set&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset int remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset int setCount(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : E?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.SetMultiset boolean setCount(E, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : E?, p1 : Int, p2 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.UnmodifiableMultiset boolean add(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.UnmodifiableMultiset int add(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.UnmodifiableMultiset boolean addAll(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(p0 : Collection&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.UnmodifiableMultiset java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.UnmodifiableMultiset boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.UnmodifiableMultiset int remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.UnmodifiableMultiset boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.UnmodifiableMultiset boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.UnmodifiableMultiset int setCount(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : E?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.UnmodifiableMultiset boolean setCount(E, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : E?, p1 : Int, p2 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.UnmodifiableSortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; descendingMultiset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingMultiset() : SortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.UnmodifiableSortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMultiset(upperBound : E?, boundType : BoundType) : SortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.UnmodifiableSortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; subMultiset(E, com.google.common.collect.BoundType, E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMultiset(lowerBound : E?, lowerBoundType : BoundType, upperBound : E?, upperBoundType : BoundType) : SortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets.UnmodifiableSortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMultiset(lowerBound : E?, boundType : BoundType) : SortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets boolean addAllImpl(com.google.common.collect.Multiset&lt;E&gt;, java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; addAllImpl(self : Multiset&lt;E&gt;?, elements : Collection&lt;out E&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets boolean containsOccurrences(com.google.common.collect.Multiset&lt;?&gt;, com.google.common.collect.Multiset&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsOccurrences(superMultiset : Multiset&lt;*&gt;, subMultiset : Multiset&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.ImmutableMultiset&lt;E&gt; copyHighestCountFirst(com.google.common.collect.Multiset&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; copyHighestCountFirst(multiset : Multiset&lt;E&gt;) : ImmutableMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets boolean equalsImpl(com.google.common.collect.Multiset&lt;?&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equalsImpl(p0 : Multiset&lt;*&gt;?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; forSet(java.util.Set&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; forSet(set : Set&lt;E&gt;) : Multiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset.Entry&lt;E&gt; immutableEntry(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; immutableEntry(e : E?, n : Int) : Multiset.Entry&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets int inferDistinctElements(java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun inferDistinctElements(elements : Iterable&lt;*&gt;?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; intersection(com.google.common.collect.Multiset&lt;E&gt;, com.google.common.collect.Multiset&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; intersection(multiset1 : Multiset&lt;E&gt;, multiset2 : Multiset&lt;*&gt;) : Multiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets java.util.Iterator&lt;E&gt; iteratorImpl(com.google.common.collect.Multiset&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; iteratorImpl(multiset : Multiset&lt;E&gt;) : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets boolean removeAllImpl(com.google.common.collect.Multiset&lt;?&gt;, java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAllImpl(self : Multiset&lt;*&gt;, elementsToRemove : Collection&lt;*&gt;?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets boolean removeOccurrences(com.google.common.collect.Multiset&lt;?&gt;, com.google.common.collect.Multiset&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeOccurrences(multisetToModify : Multiset&lt;*&gt;, occurrencesToRemove : Multiset&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets boolean removeOccurrencesImpl(com.google.common.collect.Multiset&lt;E&gt;, com.google.common.collect.Multiset&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; removeOccurrencesImpl(multisetToModify : Multiset&lt;E&gt;, occurrencesToRemove : Multiset&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets boolean retainAllImpl(com.google.common.collect.Multiset&lt;?&gt;, java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAllImpl(self : Multiset&lt;*&gt;, elementsToRetain : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets boolean retainOccurrences(com.google.common.collect.Multiset&lt;?&gt;, com.google.common.collect.Multiset&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainOccurrences(multisetToModify : Multiset&lt;*&gt;, multisetToRetain : Multiset&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets boolean retainOccurrencesImpl(com.google.common.collect.Multiset&lt;E&gt;, com.google.common.collect.Multiset&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; retainOccurrencesImpl(multisetToModify : Multiset&lt;E&gt;, occurrencesToRetain : Multiset&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets int setCountImpl(com.google.common.collect.Multiset&lt;E&gt;, E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; setCountImpl(self : Multiset&lt;E&gt;, element : E?, count : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets boolean setCountImpl(com.google.common.collect.Multiset&lt;E&gt;, E, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; setCountImpl(self : Multiset&lt;E&gt;, element : E?, oldCount : Int, newCount : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets int sizeImpl(com.google.common.collect.Multiset&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sizeImpl(multiset : Multiset&lt;*&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; unmodifiableMultiset(com.google.common.collect.ImmutableMultiset&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; unmodifiableMultiset(multiset : ImmutableMultiset&lt;E&gt;) : Multiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; unmodifiableMultiset(com.google.common.collect.Multiset&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; unmodifiableMultiset(multiset : Multiset&lt;out E&gt;) : Multiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.SortedMultiset&lt;E&gt; unmodifiableSortedMultiset(com.google.common.collect.SortedMultiset&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; unmodifiableSortedMultiset(sortedMultiset : SortedMultiset&lt;E&gt;) : SortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap.1 void checkKeyValue(java.lang.Class&lt;?&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkKeyValue(key : Class&lt;*&gt;, value : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap.1 void checkKeyValue(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkKeyValue(x0 : Any?, x1 : Any?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap MutableClassToInstanceMap(java.util.Map&lt;java.lang.Class&lt;? extends B&gt;,B&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MutableClassToInstanceMap(delegate : Map&lt;Class&lt;out B&gt;?, B&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap java.lang.Object access$000(java.lang.Class, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : Class, x1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap T cast(java.lang.Class&lt;T&gt;, B)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;B, T : B&gt; cast(type : Class&lt;T&gt;, value : B?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap com.google.common.collect.MutableClassToInstanceMap&lt;B&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;B&gt; create() : MutableClassToInstanceMap&lt;B&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap com.google.common.collect.MutableClassToInstanceMap&lt;B&gt; create(java.util.Map&lt;java.lang.Class&lt;? extends B&gt;,B&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;B&gt; create(backingMap : Map&lt;Class&lt;out B&gt;?, B&gt;) : MutableClassToInstanceMap&lt;B&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap java.util.Set entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap T getInstance(java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; getInstance(type : Class&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap void putAll(java.util.Map)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Map) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap T putInstance(java.lang.Class&lt;T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; putInstance(type : Class&lt;T&gt;, value : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.NaturalOrdering int binarySearch(java.util.List, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun binarySearch(p0 : List?, p1 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.NaturalOrdering int compare(java.lang.Comparable, java.lang.Comparable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : Comparable, right : Comparable) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.NaturalOrdering int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any?, x1 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.NaturalOrdering java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.NaturalOrdering com.google.common.collect.Ordering&lt;S&gt; reverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S : Comparable?&gt; reverse() : Ordering&lt;S&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.NaturalOrdering java.util.List&lt;E&gt; sortedCopy(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable?&gt; sortedCopy(iterable : Iterable&lt;E&gt;) : MutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.NaturalOrdering java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.NullsFirstOrdering int compare(T, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(p0 : T?, p1 : T?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.NullsFirstOrdering boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.NullsFirstOrdering com.google.common.collect.Ordering&lt;S&gt; nullsFirst()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S : T&gt; nullsFirst() : Ordering&lt;S&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.NullsFirstOrdering com.google.common.collect.Ordering&lt;S&gt; nullsLast()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S : T&gt; nullsLast() : Ordering&lt;S&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.NullsFirstOrdering com.google.common.collect.Ordering&lt;S&gt; reverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S : T&gt; reverse() : Ordering&lt;S&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.NullsLastOrdering int compare(T, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(p0 : T?, p1 : T?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.NullsLastOrdering boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.NullsLastOrdering com.google.common.collect.Ordering&lt;S&gt; nullsFirst()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S : T&gt; nullsFirst() : Ordering&lt;S&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.NullsLastOrdering com.google.common.collect.Ordering&lt;S&gt; nullsLast()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S : T&gt; nullsLast() : Ordering&lt;S&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.NullsLastOrdering com.google.common.collect.Ordering&lt;S&gt; reverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S : T&gt; reverse() : Ordering&lt;S&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ObjectArrays T[] arraysCopyOf(T[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; arraysCopyOf(original : Array&lt;out T&gt;, newLength : Int) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ObjectArrays java.lang.Object checkElementNotNull(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkElementNotNull(element : Any, index : Int) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ObjectArrays T[] concat(T, T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; concat(p0 : T?, p1 : Array&lt;out T&gt;) : Array&lt;out T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ObjectArrays T[] concat(T[], T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; concat(p0 : Array&lt;out T&gt;, p1 : T?) : Array&lt;out T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ObjectArrays T[] concat(T[], T[], java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; concat(first : Array&lt;out T&gt;, second : Array&lt;out T&gt;, type : Class&lt;T&gt;?) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ObjectArrays java.lang.Object[] fillArray(java.lang.Iterable&lt;?&gt;, java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fillArray(elements : Iterable&lt;*&gt;, array : Array&lt;out Any?&gt;?) : Array&lt;out Any?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ObjectArrays T[] newArray(T[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; newArray(reference : Array&lt;out T&gt;, length : Int) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ObjectArrays void swap(java.lang.Object[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun swap(array : Array&lt;out Any?&gt;, i : Int, j : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ObjectArrays java.lang.Object[] toArrayImpl(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArrayImpl(c : Collection&lt;*&gt;) : Array&lt;out Any?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ObjectArrays T[] toArrayImpl(java.util.Collection&lt;?&gt;, T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArrayImpl(c : Collection&lt;*&gt;, array : Array&lt;out T&gt;) : Array&lt;out T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering.ArbitraryOrdering.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering.ArbitraryOrdering int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : Any?, right : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering.ArbitraryOrdering java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;java.lang.Object&gt; allEqual()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun allEqual() : Ordering&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;java.lang.Object&gt; arbitrary()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun arbitrary() : Ordering&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering int binarySearch(java.util.List&lt;? extends T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun binarySearch(p0 : List&lt;out T&gt;?, p1 : T?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering int compare(T, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(p0 : T?, p1 : T?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;T&gt; compound(java.lang.Iterable&lt;? extends java.util.Comparator&lt;? super T&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; compound(comparators : Iterable&lt;out Comparator&lt;in T&gt;?&gt;) : Ordering&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;U&gt; compound(java.util.Comparator&lt;? super U&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;U : T&gt; compound(secondaryComparator : Comparator&lt;in U&gt;) : Ordering&lt;U&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;T&gt; explicit(T, T...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; explicit(leastValue : T?, vararg remainingValuesInOrder : T) : Ordering&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;T&gt; explicit(java.util.List&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; explicit(valuesInOrder : List&lt;T&gt;) : Ordering&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;T&gt; from(com.google.common.collect.Ordering&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; from(ordering : Ordering&lt;T&gt;) : Ordering&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;T&gt; from(java.util.Comparator&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; from(comparator : Comparator&lt;T&gt;) : Ordering&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering java.util.List&lt;E&gt; greatestOf(java.lang.Iterable&lt;E&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; greatestOf(iterable : Iterable&lt;E&gt;, k : Int) : MutableList&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.ImmutableList&lt;E&gt; immutableSortedCopy(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; immutableSortedCopy(iterable : Iterable&lt;E&gt;) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering boolean isOrdered(java.lang.Iterable&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isOrdered(iterable : Iterable&lt;out T&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering boolean isStrictlyOrdered(java.lang.Iterable&lt;? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isStrictlyOrdered(iterable : Iterable&lt;out T&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering java.util.List&lt;E&gt; leastOf(java.lang.Iterable&lt;E&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; leastOf(iterable : Iterable&lt;E&gt;, k : Int) : MutableList&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;java.lang.Iterable&lt;S&gt;&gt; lexicographical()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S : T&gt; lexicographical() : Ordering&lt;Iterable&lt;S&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering E max(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; max(iterable : Iterable&lt;E&gt;) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering E max(E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; max(a : E?, b : E?) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering E max(E, E, E, E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; max(p0 : E?, p1 : E?, p2 : E?, vararg p3 : E) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering E max(java.util.Iterator&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; max(iterator : Iterator&lt;E&gt;) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering E min(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; min(iterable : Iterable&lt;E&gt;) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering E min(E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; min(a : E?, b : E?) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering E min(E, E, E, E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; min(p0 : E?, p1 : E?, p2 : E?, vararg p3 : E) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering E min(java.util.Iterator&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; min(iterator : Iterator&lt;E&gt;) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;C&gt; natural()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable?&gt; natural() : Ordering&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;S&gt; nullsFirst()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S : T&gt; nullsFirst() : Ordering&lt;S&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;S&gt; nullsLast()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S : T&gt; nullsLast() : Ordering&lt;S&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;F&gt; onResultOf(com.google.common.base.Function&lt;F,? extends T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;F&gt; onResultOf(function : Function&lt;F, out T&gt;) : Ordering&lt;F&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering int partition(E[], int, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; partition(values : Array&lt;out E&gt;, left : Int, right : Int, pivotIndex : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;S&gt; reverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S : T&gt; reverse() : Ordering&lt;S&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering java.util.List&lt;E&gt; sortedCopy(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; sortedCopy(iterable : Iterable&lt;E&gt;) : MutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;java.lang.Object&gt; usingToString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun usingToString() : Ordering&lt;Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Platform T[] clone(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; clone(array : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Platform java.util.SortedMap&lt;K,V2&gt; mapsTransformEntriesSortedMap(java.util.SortedMap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V1, V2&gt; mapsTransformEntriesSortedMap(fromMap : SortedMap&lt;K, V1&gt;, transformer : Maps.EntryTransformer&lt;in K, in V1, V2&gt;) : SortedMap&lt;K, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Platform T[] newArray(T[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; newArray(reference : Array&lt;out T&gt;, length : Int) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Platform com.google.common.collect.MapMaker tryWeakKeys(com.google.common.collect.MapMaker)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tryWeakKeys(mapMaker : MapMaker) : MapMaker&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues int drain(java.util.concurrent.BlockingQueue&lt;E&gt;, java.util.Collection&lt;? super E&gt;, int, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; drain(q : BlockingQueue&lt;E&gt;?, buffer : MutableCollection&lt;in E&gt;, numElements : Int, timeout : Long, unit : TimeUnit) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues int drainUninterruptibly(java.util.concurrent.BlockingQueue&lt;E&gt;, java.util.Collection&lt;? super E&gt;, int, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; drainUninterruptibly(q : BlockingQueue&lt;E&gt;?, buffer : MutableCollection&lt;in E&gt;, numElements : Int, timeout : Long, unit : TimeUnit) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.ArrayBlockingQueue&lt;E&gt; newArrayBlockingQueue(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newArrayBlockingQueue(capacity : Int) : ArrayBlockingQueue&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.ArrayDeque&lt;E&gt; newArrayDeque()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newArrayDeque() : ArrayDeque&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.ArrayDeque&lt;E&gt; newArrayDeque(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newArrayDeque(elements : Iterable&lt;out E&gt;) : ArrayDeque&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.ConcurrentLinkedQueue&lt;E&gt; newConcurrentLinkedQueue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newConcurrentLinkedQueue() : ConcurrentLinkedQueue&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.ConcurrentLinkedQueue&lt;E&gt; newConcurrentLinkedQueue(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newConcurrentLinkedQueue(elements : Iterable&lt;out E&gt;) : ConcurrentLinkedQueue&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.LinkedBlockingDeque&lt;E&gt; newLinkedBlockingDeque()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newLinkedBlockingDeque() : LinkedBlockingDeque&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.LinkedBlockingDeque&lt;E&gt; newLinkedBlockingDeque(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newLinkedBlockingDeque(capacity : Int) : LinkedBlockingDeque&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.LinkedBlockingDeque&lt;E&gt; newLinkedBlockingDeque(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newLinkedBlockingDeque(elements : Iterable&lt;out E&gt;) : LinkedBlockingDeque&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.LinkedBlockingQueue&lt;E&gt; newLinkedBlockingQueue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newLinkedBlockingQueue() : LinkedBlockingQueue&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.LinkedBlockingQueue&lt;E&gt; newLinkedBlockingQueue(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newLinkedBlockingQueue(capacity : Int) : LinkedBlockingQueue&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.LinkedBlockingQueue&lt;E&gt; newLinkedBlockingQueue(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newLinkedBlockingQueue(elements : Iterable&lt;out E&gt;) : LinkedBlockingQueue&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.PriorityBlockingQueue&lt;E&gt; newPriorityBlockingQueue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newPriorityBlockingQueue() : PriorityBlockingQueue&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.PriorityBlockingQueue&lt;E&gt; newPriorityBlockingQueue(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newPriorityBlockingQueue(elements : Iterable&lt;out E&gt;) : PriorityBlockingQueue&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.PriorityQueue&lt;E&gt; newPriorityQueue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newPriorityQueue() : PriorityQueue&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.PriorityQueue&lt;E&gt; newPriorityQueue(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newPriorityQueue(elements : Iterable&lt;out E&gt;) : PriorityQueue&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.SynchronousQueue&lt;E&gt; newSynchronousQueue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newSynchronousQueue() : SynchronousQueue&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range Range(com.google.common.collect.Cut&lt;C&gt;, com.google.common.collect.Cut&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Range(lowerBound : Cut&lt;C&gt;, upperBound : Cut&lt;C&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range boolean apply(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(input : C) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.ContiguousSet&lt;C&gt; asSet(com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asSet(domain : DiscreteDomain&lt;C&gt;) : ContiguousSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; canonical(com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun canonical(domain : DiscreteDomain&lt;C&gt;) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range int compareOrThrow(java.lang.Comparable, java.lang.Comparable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compareOrThrow(left : Comparable, right : Comparable?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range boolean contains(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(value : C) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range boolean containsAll(java.lang.Iterable&lt;? extends C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(values : Iterable&lt;out C&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range boolean encloses(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun encloses(other : Range&lt;C&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; intersection(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersection(connectedRange : Range&lt;C&gt;) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range boolean isConnected(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isConnected(other : Range&lt;C&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range C lowerEndpoint()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lowerEndpoint() : C?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; span(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun span(other : Range&lt;C&gt;) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range java.lang.String toString(com.google.common.collect.Cut&lt;?&gt;, com.google.common.collect.Cut&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString(lowerBound : Cut&lt;*&gt;, upperBound : Cut&lt;*&gt;) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range C upperEndpoint()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun upperEndpoint() : C?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeMap.RangeValue RangeValue(com.google.common.collect.Range&lt;K&gt;, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RangeValue(key : Range&lt;K&gt;, value : V)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeMap.RangeValue com.google.common.collect.Cut&lt;K&gt; getLowerBound()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLowerBound() : Cut&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeMap.RangeValue com.google.common.collect.RangeMap.RangeValue&lt;K,V&gt; withLowerBound(com.google.common.collect.Cut&lt;K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withLowerBound(p0 : Cut&lt;K&gt;) : RangeMap.RangeValue&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeMap.RangeValue com.google.common.collect.RangeMap.RangeValue&lt;K,V&gt; withUpperBound(com.google.common.collect.Cut&lt;K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withUpperBound(p0 : Cut&lt;K&gt;?) : RangeMap.RangeValue&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeMap V apply(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(input : K) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeMap java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeMap void clear(com.google.common.collect.Range&lt;K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun clear(rangeToClear : Range&lt;K&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeMap com.google.common.collect.RangeMap&lt;K,V&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Comparable?, V&gt; create() : RangeMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeMap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeMap V get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeMap void put(com.google.common.collect.Range&lt;K&gt;, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(keyRange : Range&lt;K&gt;, value : V) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeMap void putAll(com.google.common.collect.RangeMap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(rangeMap : RangeMap&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeMap void putRange(com.google.common.collect.RangeMap.RangeValue&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putRange(rangeValue : RangeMap.RangeValue&lt;K, V&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeMap void removeRange(com.google.common.collect.RangeMap.RangeValue&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeRange(rangeValue : RangeMap.RangeValue&lt;K, V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet.StandardComplement.1 java.util.Iterator&lt;com.google.common.collect.Range&lt;C&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Range&lt;C&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet.StandardComplement void add(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : Range&lt;C&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet.StandardComplement java.util.Set&lt;com.google.common.collect.Range&lt;C&gt;&gt; asRanges()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asRanges() : MutableSet&lt;Range&lt;C&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet.StandardComplement boolean contains(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(value : C) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet.StandardComplement java.util.Set&lt;com.google.common.collect.Range&lt;C&gt;&gt; createAsRanges()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAsRanges() : MutableSet&lt;Range&lt;C&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet.StandardComplement void remove(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Range&lt;C&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet void add(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : Range&lt;C&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet void addAll(com.google.common.collect.RangeSet&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(other : RangeSet&lt;C&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet java.util.Set&lt;com.google.common.collect.Range&lt;C&gt;&gt; asRanges()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asRanges() : MutableSet&lt;Range&lt;C&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet com.google.common.collect.RangeSet&lt;C&gt; complement()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun complement() : RangeSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet boolean contains(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(value : C) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet boolean encloses(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun encloses(p0 : Range&lt;C&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet boolean enclosesAll(com.google.common.collect.RangeSet&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun enclosesAll(other : RangeSet&lt;C&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet com.google.common.collect.Range&lt;C&gt; rangeContaining(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rangeContaining(value : C) : Range&lt;C&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet void remove(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Range&lt;C&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet void removeAll(com.google.common.collect.RangeSet&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(other : RangeSet&lt;C&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ranges com.google.common.collect.Range&lt;C&gt; all()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable&lt;*&gt;?&gt; all() : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ranges com.google.common.collect.Range&lt;C&gt; atLeast(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable&lt;*&gt;?&gt; atLeast(endpoint : C) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ranges com.google.common.collect.Range&lt;C&gt; atMost(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable&lt;*&gt;?&gt; atMost(endpoint : C) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ranges com.google.common.collect.Range&lt;C&gt; closed(C, C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable&lt;*&gt;?&gt; closed(lower : C, upper : C) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ranges com.google.common.collect.Range&lt;C&gt; closedOpen(C, C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable&lt;*&gt;?&gt; closedOpen(lower : C, upper : C) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ranges com.google.common.collect.Range&lt;C&gt; create(com.google.common.collect.Cut&lt;C&gt;, com.google.common.collect.Cut&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable&lt;*&gt;?&gt; create(lowerBound : Cut&lt;C&gt;, upperBound : Cut&lt;C&gt;?) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ranges com.google.common.collect.Range&lt;C&gt; downTo(C, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable&lt;*&gt;?&gt; downTo(endpoint : C, boundType : BoundType) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ranges com.google.common.collect.Range&lt;C&gt; encloseAll(java.lang.Iterable&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable&lt;*&gt;?&gt; encloseAll(values : Iterable&lt;C&gt;) : Range&lt;C&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ranges com.google.common.collect.Range&lt;C&gt; greaterThan(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable&lt;*&gt;?&gt; greaterThan(endpoint : C) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ranges com.google.common.collect.Range&lt;C&gt; lessThan(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable&lt;*&gt;?&gt; lessThan(endpoint : C) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ranges com.google.common.collect.Range&lt;C&gt; open(C, C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable&lt;*&gt;?&gt; open(lower : C, upper : C) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ranges com.google.common.collect.Range&lt;C&gt; openClosed(C, C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable&lt;*&gt;?&gt; openClosed(lower : C, upper : C) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ranges com.google.common.collect.Range&lt;C&gt; range(C, com.google.common.collect.BoundType, C, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable&lt;*&gt;?&gt; range(lower : C, lowerType : BoundType, upper : C, upperType : BoundType) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ranges com.google.common.collect.Range&lt;C&gt; singleton(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable&lt;*&gt;?&gt; singleton(value : C) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ranges com.google.common.collect.Range&lt;C&gt; upTo(C, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable&lt;*&gt;?&gt; upTo(endpoint : C, boundType : BoundType) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet.1 C computeNext(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeNext(previous : C?) : C?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet.1 java.lang.Object computeNext(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeNext(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet.DescendingContiguousSet.1 C computeNext(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeNext(previous : C?) : C?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet.DescendingContiguousSet.1 java.lang.Object computeNext(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeNext(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet.DescendingContiguousSet com.google.common.collect.ImmutableSortedSet&lt;C&gt; headSetImpl(C, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSetImpl(toElement : C, inclusive : Boolean) : ImmutableSortedSet&lt;C&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet.DescendingContiguousSet com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSetImpl(x0 : Any, x1 : Boolean) : ImmutableSortedSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet.DescendingContiguousSet int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet.DescendingContiguousSet com.google.common.collect.UnmodifiableIterator&lt;C&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet.DescendingContiguousSet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet.DescendingContiguousSet com.google.common.collect.ImmutableSortedSet&lt;C&gt; subSetImpl(C, boolean, C, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSetImpl(fromElement : C?, fromInclusive : Boolean, toElement : C, toInclusive : Boolean) : ImmutableSortedSet&lt;C&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet.DescendingContiguousSet com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object, boolean, java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSetImpl(x0 : Any, x1 : Boolean, x2 : Any, x3 : Boolean) : ImmutableSortedSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet.DescendingContiguousSet com.google.common.collect.ImmutableSortedSet&lt;C&gt; tailSetImpl(C, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSetImpl(fromElement : C, inclusive : Boolean) : ImmutableSortedSet&lt;C&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet.DescendingContiguousSet com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSetImpl(x0 : Any, x1 : Boolean) : ImmutableSortedSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet.SerializedForm java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(object : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(targets : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet com.google.common.collect.ImmutableSortedSet&lt;C&gt; createDescendingSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createDescendingSet() : ImmutableSortedSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet boolean equalsOrThrow(java.lang.Comparable&lt;?&gt;, java.lang.Comparable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equalsOrThrow(p0 : Comparable&lt;*&gt;?, p1 : Comparable&lt;*&gt;?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; headSetImpl(C, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSetImpl(toElement : C, inclusive : Boolean) : ContiguousSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSetImpl(x0 : Any, x1 : Boolean) : ImmutableSortedSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; intersection(com.google.common.collect.ContiguousSet&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersection(other : ContiguousSet&lt;C&gt;) : ContiguousSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; intersectionInCurrentDomain(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun intersectionInCurrentDomain(other : Range&lt;C&gt;) : ContiguousSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet com.google.common.collect.UnmodifiableIterator&lt;C&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet com.google.common.collect.Range&lt;C&gt; range()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun range() : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet com.google.common.collect.Range&lt;C&gt; range(com.google.common.collect.BoundType, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun range(lowerBoundType : BoundType?, upperBoundType : BoundType?) : Range&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; subSetImpl(C, boolean, C, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSetImpl(fromElement : C, fromInclusive : Boolean, toElement : C?, toInclusive : Boolean) : ContiguousSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object, boolean, java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSetImpl(x0 : Any, x1 : Boolean, x2 : Any, x3 : Boolean) : ImmutableSortedSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; tailSetImpl(C, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSetImpl(fromElement : C, inclusive : Boolean) : ContiguousSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSetImpl(x0 : Any, x1 : Boolean) : ImmutableSortedSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(other : Array&lt;out T&gt;) : Array&lt;out T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularContiguousSet java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableAsList RegularImmutableAsList(com.google.common.collect.ImmutableCollection&lt;E&gt;, java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RegularImmutableAsList(delegate : ImmutableCollection&lt;E&gt;?, array : Array&lt;out Any?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableAsList boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableAsList int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableAsList int lastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableAsList com.google.common.collect.UnmodifiableListIterator&lt;E&gt; listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(index : Int) : UnmodifiableListIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableAsList java.util.ListIterator listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(x0 : Int) : MutableListIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableAsList T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableBiMap RegularImmutableBiMap(com.google.common.collect.ImmutableMap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RegularImmutableBiMap(delegate : ImmutableMap&lt;K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableList RegularImmutableList(java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RegularImmutableList(array : Array&lt;out Any?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableList boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableList com.google.common.collect.UnmodifiableListIterator&lt;E&gt; listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(index : Int) : UnmodifiableListIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableList java.util.ListIterator listIterator(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listIterator(x0 : Int) : MutableListIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableList com.google.common.collect.ImmutableList&lt;E&gt; subListUnchecked(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subListUnchecked(fromIndex : Int, toIndex : Int) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableList java.lang.Object[] toArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray() : Array&lt;out Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableList T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(other : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMap.EntrySet com.google.common.collect.ImmutableList&lt;java.util.Map.Entry&lt;K,V&gt;&gt; createAsList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAsList() : ImmutableList&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMap.EntrySet com.google.common.collect.UnmodifiableIterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMap.EntrySet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMap.LinkedEntry com.google.common.collect.RegularImmutableMap.LinkedEntry&lt;K,V&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : RegularImmutableMap.LinkedEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMap.TerminalEntry com.google.common.collect.RegularImmutableMap.LinkedEntry&lt;K,V&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : RegularImmutableMap.LinkedEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMap RegularImmutableMap(java.util.Map.Entry&lt;?,?&gt;...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RegularImmutableMap(vararg immutableEntries : Map.Entry&lt;*, *&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMap com.google.common.collect.RegularImmutableMap.LinkedEntry[] access$100(com.google.common.collect.RegularImmutableMap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : RegularImmutableMap) : Array&lt;out RegularImmutableMap.LinkedEntry?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMap com.google.common.collect.RegularImmutableMap.LinkedEntry&lt;K,V&gt;[] createEntryArray(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntryArray(size : Int) : Array&lt;out RegularImmutableMap.LinkedEntry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMap com.google.common.collect.ImmutableSet&lt;java.util.Map.Entry&lt;K,V&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : ImmutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMap com.google.common.collect.ImmutableSet&lt;K&gt; createKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createKeySet() : ImmutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMap V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMap com.google.common.collect.RegularImmutableMap.LinkedEntry&lt;K,V&gt; newLinkedEntry(K, V, com.google.common.collect.RegularImmutableMap.LinkedEntry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; newLinkedEntry(key : K?, value : V?, next : RegularImmutableMap.LinkedEntry&lt;K, V&gt;?) : RegularImmutableMap.LinkedEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMultiset.EntrySet.1 com.google.common.collect.Multiset.Entry&lt;E&gt; get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(index : Int) : Multiset.Entry&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMultiset.EntrySet.1 java.lang.Object get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Int) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMultiset.EntrySet com.google.common.collect.ImmutableList&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; createAsList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAsList() : ImmutableList&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMultiset.EntrySet com.google.common.collect.UnmodifiableIterator&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMultiset.EntrySet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMultiset com.google.common.collect.ImmutableMap access$100(com.google.common.collect.RegularImmutableMultiset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : RegularImmutableMultiset) : ImmutableMap?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMultiset com.google.common.collect.Multiset.Entry access$200(java.util.Map.Entry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : Map.Entry) : Multiset.Entry&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMultiset boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMultiset int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMultiset com.google.common.collect.ImmutableSet&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : ImmutableSet&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMultiset com.google.common.collect.ImmutableSet&lt;E&gt; elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : ImmutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMultiset java.util.Set elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableMultiset com.google.common.collect.Multiset.Entry&lt;E&gt; entryFromMapEntry(java.util.Map.Entry&lt;E,java.lang.Integer&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; entryFromMapEntry(entry : Map.Entry&lt;E, Int?&gt;) : Multiset.Entry&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(target : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMap.EntrySet.1 java.lang.Object get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Int) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMap.EntrySet.1 java.util.Map.Entry&lt;K,V&gt; get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(index : Int) : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMap.EntrySet com.google.common.collect.ImmutableList&lt;java.util.Map.Entry&lt;K,V&gt;&gt; createAsList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAsList() : ImmutableList&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMap.EntrySet com.google.common.collect.UnmodifiableIterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMap.EntrySet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; createDescendingMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createDescendingMap() : ImmutableSortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMap com.google.common.collect.ImmutableSet&lt;java.util.Map.Entry&lt;K,V&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : ImmutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMap V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; headMap(K, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(toKey : K, inclusive : Boolean) : ImmutableSortedMap&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMap java.util.NavigableMap headMap(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(x0 : Any, x1 : Boolean) : NavigableMap?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; tailMap(K, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(fromKey : K, inclusive : Boolean) : ImmutableSortedMap&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMap java.util.NavigableMap tailMap(java.lang.Object, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(x0 : Any, x1 : Boolean) : NavigableMap?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMultiset.EntrySet.1 com.google.common.collect.Multiset.Entry&lt;E&gt; get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(index : Int) : Multiset.Entry&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMultiset.EntrySet.1 java.lang.Object get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Int) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMultiset.EntrySet com.google.common.collect.ImmutableList&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; createAsList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAsList() : ImmutableList&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMultiset.EntrySet com.google.common.collect.UnmodifiableIterator&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMultiset.EntrySet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMultiset int access$100(com.google.common.collect.RegularImmutableSortedMultiset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : RegularImmutableSortedMultiset) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMultiset com.google.common.collect.Multiset.Entry access$200(com.google.common.collect.RegularImmutableSortedMultiset, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : RegularImmutableSortedMultiset, x1 : Int) : Multiset.Entry&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMultiset int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMultiset com.google.common.collect.ImmutableSet&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : ImmutableSet&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMultiset com.google.common.collect.Multiset.Entry&lt;E&gt; firstEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun firstEntry() : Multiset.Entry&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMultiset com.google.common.collect.Multiset.Entry&lt;E&gt; getEntry(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEntry(index : Int) : Multiset.Entry&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMultiset(upperBound : E, boundType : BoundType) : ImmutableSortedMultiset&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMultiset com.google.common.collect.SortedMultiset headMultiset(java.lang.Object, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMultiset(x0 : Any?, x1 : BoundType) : SortedMultiset?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMultiset com.google.common.collect.Multiset.Entry&lt;E&gt; lastEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastEntry() : Multiset.Entry&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMultiset(lowerBound : E, boundType : BoundType) : ImmutableSortedMultiset&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedMultiset com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMultiset(x0 : Any?, x1 : BoundType) : SortedMultiset?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedSet RegularImmutableSortedSet(com.google.common.collect.ImmutableList&lt;E&gt;, java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RegularImmutableSortedSet(elements : ImmutableList&lt;E&gt;, comparator : Comparator&lt;in E&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedSet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedSet boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(targets : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedSet com.google.common.collect.ImmutableList&lt;E&gt; createAsList()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAsList() : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; createDescendingSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createDescendingSet() : ImmutableSortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedSet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedSet int headIndex(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headIndex(toElement : E, inclusive : Boolean) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; headSetImpl(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSetImpl(toElement : E, inclusive : Boolean) : ImmutableSortedSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedSet int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(target : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedSet com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedSet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; subSetImpl(E, boolean, E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSetImpl(fromElement : E, fromInclusive : Boolean, toElement : E, toInclusive : Boolean) : ImmutableSortedSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedSet int tailIndex(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailIndex(fromElement : E, inclusive : Boolean) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; tailSetImpl(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSetImpl(fromElement : E, inclusive : Boolean) : ImmutableSortedSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableSortedSet T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.1 java.lang.Object apply(com.google.common.collect.Table.Cell&lt;java.lang.Object,java.lang.Object,java.lang.Object&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(from : Table.Cell&lt;Any?, Any?, Any?&gt;) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable.Column Column(com.google.common.collect.RegularImmutableTable.DenseImmutableTable, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Column(columnIndex : Int)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable.Column com.google.common.collect.ImmutableMap&lt;R,java.lang.Integer&gt; keyToIndex()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keyToIndex() : ImmutableMap&lt;R, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable.ColumnMap ColumnMap(com.google.common.collect.RegularImmutableTable.DenseImmutableTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ColumnMap()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable.ColumnMap ColumnMap(com.google.common.collect.RegularImmutableTable.DenseImmutableTable, com.google.common.collect.RegularImmutableTable.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ColumnMap(x0 : RegularImmutableTable.DenseImmutableTable, x1 : RegularImmutableTable.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable.ColumnMap java.lang.Object getValue(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue(x0 : Int) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable.ColumnMap java.util.Map&lt;R,V&gt; getValue(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue(keyIndex : Int) : MutableMap&lt;R, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable.ColumnMap com.google.common.collect.ImmutableMap&lt;C,java.lang.Integer&gt; keyToIndex()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keyToIndex() : ImmutableMap&lt;C, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable.Row Row(com.google.common.collect.RegularImmutableTable.DenseImmutableTable, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Row(rowIndex : Int)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable.Row com.google.common.collect.ImmutableMap&lt;C,java.lang.Integer&gt; keyToIndex()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keyToIndex() : ImmutableMap&lt;C, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable.RowMap RowMap(com.google.common.collect.RegularImmutableTable.DenseImmutableTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RowMap()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable.RowMap RowMap(com.google.common.collect.RegularImmutableTable.DenseImmutableTable, com.google.common.collect.RegularImmutableTable.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RowMap(x0 : RegularImmutableTable.DenseImmutableTable, x1 : RegularImmutableTable.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable.RowMap java.lang.Object getValue(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue(x0 : Int) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable.RowMap java.util.Map&lt;C,V&gt; getValue(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue(keyIndex : Int) : MutableMap&lt;C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable.RowMap com.google.common.collect.ImmutableMap&lt;R,java.lang.Integer&gt; keyToIndex()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keyToIndex() : ImmutableMap&lt;R, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable DenseImmutableTable(com.google.common.collect.ImmutableSet&lt;com.google.common.collect.Table.Cell&lt;R,C,V&gt;&gt;, com.google.common.collect.ImmutableSet&lt;R&gt;, com.google.common.collect.ImmutableSet&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun DenseImmutableTable(cellSet : ImmutableSet&lt;Table.Cell&lt;R, C, V&gt;?&gt;, rowSpace : ImmutableSet&lt;R&gt;, columnSpace : ImmutableSet&lt;C&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable int[] access$300(com.google.common.collect.RegularImmutableTable.DenseImmutableTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : RegularImmutableTable.DenseImmutableTable) : IntArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable com.google.common.collect.ImmutableMap access$400(com.google.common.collect.RegularImmutableTable.DenseImmutableTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : RegularImmutableTable.DenseImmutableTable) : ImmutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable java.lang.Object[][] access$500(com.google.common.collect.RegularImmutableTable.DenseImmutableTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$500(x0 : RegularImmutableTable.DenseImmutableTable) : Array&lt;out Array&lt;out Any?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable int[] access$600(com.google.common.collect.RegularImmutableTable.DenseImmutableTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$600(x0 : RegularImmutableTable.DenseImmutableTable) : IntArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable com.google.common.collect.ImmutableMap access$700(com.google.common.collect.RegularImmutableTable.DenseImmutableTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$700(x0 : RegularImmutableTable.DenseImmutableTable) : ImmutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable com.google.common.collect.ImmutableMap&lt;R,V&gt; column(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(columnKey : C) : ImmutableMap&lt;R, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable java.util.Map column(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(x0 : Any) : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable com.google.common.collect.ImmutableSet&lt;C&gt; columnKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnKeySet() : ImmutableSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable java.util.Set columnKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnKeySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable com.google.common.collect.ImmutableMap&lt;C,java.util.Map&lt;R,V&gt;&gt; columnMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnMap() : ImmutableMap&lt;C, Map&lt;R, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable java.util.Map columnMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable boolean contains(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable boolean containsColumn(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsColumn(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable boolean containsRow(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsRow(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable V get(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(rowKey : Any?, columnKey : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable com.google.common.collect.ImmutableMap&lt;E,java.lang.Integer&gt; makeIndex(com.google.common.collect.ImmutableSet&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; makeIndex(set : ImmutableSet&lt;E&gt;) : ImmutableMap&lt;E, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable com.google.common.collect.ImmutableMap&lt;C,V&gt; row(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(rowKey : R) : ImmutableMap&lt;C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable java.util.Map row(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(x0 : Any?) : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable com.google.common.collect.ImmutableSet&lt;R&gt; rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : ImmutableSet&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable java.util.Set rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable com.google.common.collect.ImmutableMap&lt;R,java.util.Map&lt;C,V&gt;&gt; rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : ImmutableMap&lt;R, Map&lt;C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable java.util.Map rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.DenseImmutableTable java.util.Collection values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.ImmutableArrayMap.1.1 java.lang.Object get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Int) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.ImmutableArrayMap.1.1 java.util.Map.Entry&lt;K,V&gt; get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(index : Int) : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.ImmutableArrayMap.1 com.google.common.collect.UnmodifiableIterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.ImmutableArrayMap.1 java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.ImmutableArrayMap.2 com.google.common.collect.UnmodifiableIterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.ImmutableArrayMap.2 java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.ImmutableArrayMap com.google.common.collect.ImmutableSet&lt;java.util.Map.Entry&lt;K,V&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : ImmutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.ImmutableArrayMap com.google.common.collect.ImmutableSet&lt;K&gt; createKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createKeySet() : ImmutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.ImmutableArrayMap V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.ImmutableArrayMap V getValue(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue(p0 : Int) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.ImmutableArrayMap com.google.common.collect.ImmutableMap&lt;K,java.lang.Integer&gt; keyToIndex()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keyToIndex() : ImmutableMap&lt;K, Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable.1 java.util.Map&lt;B,V&gt; apply(com.google.common.collect.ImmutableMap.Builder&lt;B,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(from : ImmutableMap.Builder&lt;B, V&gt;) : MutableMap&lt;B, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable SparseImmutableTable(com.google.common.collect.ImmutableSet&lt;com.google.common.collect.Table.Cell&lt;R,C,V&gt;&gt;, com.google.common.collect.ImmutableSet&lt;R&gt;, com.google.common.collect.ImmutableSet&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SparseImmutableTable(cellSet : ImmutableSet&lt;Table.Cell&lt;R, C, V&gt;?&gt;, rowSpace : ImmutableSet&lt;R&gt;, columnSpace : ImmutableSet&lt;C&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable com.google.common.collect.ImmutableMap&lt;A,java.util.Map&lt;B,V&gt;&gt; buildIndex(java.util.Map&lt;A,com.google.common.collect.ImmutableMap.Builder&lt;B,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;A, B, V&gt; buildIndex(indexBuilder : Map&lt;A, ImmutableMap.Builder&lt;B, V&gt;?&gt;) : ImmutableMap&lt;A, Map&lt;B, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable com.google.common.collect.ImmutableMap&lt;R,V&gt; column(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(columnKey : C) : ImmutableMap&lt;R, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable java.util.Map column(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(x0 : Any) : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable com.google.common.collect.ImmutableSet&lt;C&gt; columnKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnKeySet() : ImmutableSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable java.util.Set columnKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnKeySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable com.google.common.collect.ImmutableMap&lt;C,java.util.Map&lt;R,V&gt;&gt; columnMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnMap() : ImmutableMap&lt;C, Map&lt;R, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable java.util.Map columnMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable boolean contains(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable boolean containsColumn(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsColumn(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable boolean containsRow(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsRow(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable V get(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?, p1 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable java.util.Map&lt;A,com.google.common.collect.ImmutableMap.Builder&lt;B,V&gt;&gt; makeIndexBuilder(com.google.common.collect.ImmutableSet&lt;A&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;A, B, V&gt; makeIndexBuilder(keySpace : ImmutableSet&lt;A&gt;) : MutableMap&lt;A, ImmutableMap.Builder&lt;B, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable com.google.common.collect.ImmutableMap&lt;C,V&gt; row(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(rowKey : R) : ImmutableMap&lt;C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable java.util.Map row(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(x0 : Any?) : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable com.google.common.collect.ImmutableSet&lt;R&gt; rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : ImmutableSet&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable java.util.Set rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable com.google.common.collect.ImmutableMap&lt;R,java.util.Map&lt;C,V&gt;&gt; rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : ImmutableMap&lt;R, Map&lt;C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable java.util.Map rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable.SparseImmutableTable java.util.Collection values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable com.google.common.collect.RegularImmutableTable&lt;R,C,V&gt; forCells(java.lang.Iterable&lt;com.google.common.collect.Table.Cell&lt;R,C,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; forCells(cells : Iterable&lt;Table.Cell&lt;R, C, V&gt;?&gt;) : RegularImmutableTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable com.google.common.collect.RegularImmutableTable&lt;R,C,V&gt; forCells(java.util.List&lt;com.google.common.collect.Table.Cell&lt;R,C,V&gt;&gt;, java.util.Comparator&lt;? super R&gt;, java.util.Comparator&lt;? super C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; forCells(cells : List&lt;Table.Cell&lt;R, C, V&gt;?&gt;, rowComparator : Comparator&lt;in R&gt;?, columnComparator : Comparator&lt;in C&gt;?) : RegularImmutableTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable com.google.common.collect.RegularImmutableTable&lt;R,C,V&gt; forCellsInternal(java.lang.Iterable&lt;com.google.common.collect.Table.Cell&lt;R,C,V&gt;&gt;, java.util.Comparator&lt;? super R&gt;, java.util.Comparator&lt;? super C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; forCellsInternal(cells : Iterable&lt;Table.Cell&lt;R, C, V&gt;?&gt;, rowComparator : Comparator&lt;in R&gt;?, columnComparator : Comparator&lt;in C&gt;?) : RegularImmutableTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable com.google.common.base.Function&lt;com.google.common.collect.Table.Cell&lt;R,C,V&gt;,V&gt; getValueFunction()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValueFunction() : Function&lt;Table.Cell&lt;R, C, V&gt;?, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable com.google.common.collect.ImmutableCollection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : ImmutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RegularImmutableTable java.util.Collection values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseNaturalOrdering int compare(java.lang.Comparable, java.lang.Comparable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : Comparable, right : Comparable?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseNaturalOrdering int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any?, x1 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseNaturalOrdering java.lang.Object max(java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun max(p0 : Iterable) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseNaturalOrdering java.lang.Object max(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun max(p0 : Any?, p1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseNaturalOrdering java.lang.Object max(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun max(p0 : Any?, p1 : Any?, p2 : Any?, p3 : Array&lt;out Any?&gt;) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseNaturalOrdering java.lang.Object max(java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun max(p0 : Iterator) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseNaturalOrdering java.lang.Object min(java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun min(p0 : Iterable) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseNaturalOrdering java.lang.Object min(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun min(p0 : Any?, p1 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseNaturalOrdering java.lang.Object min(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun min(p0 : Any?, p1 : Any?, p2 : Any?, p3 : Array&lt;out Any?&gt;) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseNaturalOrdering java.lang.Object min(java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun min(p0 : Iterator) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseNaturalOrdering java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseNaturalOrdering com.google.common.collect.Ordering&lt;S&gt; reverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S : Comparable?&gt; reverse() : Ordering&lt;S&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseNaturalOrdering java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseOrdering ReverseOrdering(com.google.common.collect.Ordering&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ReverseOrdering(forwardOrder : Ordering&lt;in T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseOrdering int compare(T, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(p0 : T?, p1 : T?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseOrdering boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseOrdering E max(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; max(iterable : Iterable&lt;E&gt;) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseOrdering E max(E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; max(a : E?, b : E?) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseOrdering E max(E, E, E, E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; max(a : E?, b : E?, c : E?, vararg rest : E) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseOrdering E max(java.util.Iterator&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; max(iterator : Iterator&lt;E&gt;) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseOrdering E min(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; min(iterable : Iterable&lt;E&gt;) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseOrdering E min(E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; min(a : E?, b : E?) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseOrdering E min(E, E, E, E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; min(a : E?, b : E?, c : E?, vararg rest : E) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseOrdering E min(java.util.Iterator&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : T&gt; min(iterator : Iterator&lt;E&gt;) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ReverseOrdering com.google.common.collect.Ordering&lt;S&gt; reverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S : T&gt; reverse() : Ordering&lt;S&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RowSortedTable java.util.SortedSet&lt;R&gt; rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : SortedSet&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RowSortedTable java.util.SortedMap&lt;R,java.util.Map&lt;C,V&gt;&gt; rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : SortedMap&lt;R, Map&lt;C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Serialization.FieldSetter FieldSetter(java.lang.reflect.Field)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FieldSetter(field : Field)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Serialization.FieldSetter FieldSetter(java.lang.reflect.Field, com.google.common.collect.Serialization.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FieldSetter(x0 : Field, x1 : Serialization.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Serialization com.google.common.collect.Serialization.FieldSetter&lt;T&gt; getFieldSetter(java.lang.Class&lt;T&gt;, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; getFieldSetter(clazz : Class&lt;T&gt;, fieldName : String?) : Serialization.FieldSetter&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Serialization void populateMap(java.util.Map&lt;K,V&gt;, java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; populateMap(map : MutableMap&lt;K, V&gt;?, stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Serialization void populateMap(java.util.Map&lt;K,V&gt;, java.io.ObjectInputStream, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; populateMap(map : MutableMap&lt;K, V&gt;?, stream : ObjectInputStream?, size : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Serialization void populateMultimap(com.google.common.collect.Multimap&lt;K,V&gt;, java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; populateMultimap(multimap : Multimap&lt;K, V&gt;?, stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Serialization void populateMultiset(com.google.common.collect.Multiset&lt;E&gt;, java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; populateMultiset(multiset : Multiset&lt;E&gt;?, stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Serialization void populateMultiset(com.google.common.collect.Multiset&lt;E&gt;, java.io.ObjectInputStream, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; populateMultiset(multiset : Multiset&lt;E&gt;?, stream : ObjectInputStream?, distinctElements : Int) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Serialization int readCount(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readCount(stream : ObjectInputStream) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Serialization void writeMap(java.util.Map&lt;K,V&gt;, java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; writeMap(map : Map&lt;K, V&gt;, stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Serialization void writeMultimap(com.google.common.collect.Multimap&lt;K,V&gt;, java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; writeMultimap(multimap : Multimap&lt;K, V&gt;, stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Serialization void writeMultiset(com.google.common.collect.Multiset&lt;E&gt;, java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; writeMultiset(multiset : Multiset&lt;E&gt;, stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SetMultimap java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : MutableMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SetMultimap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entries() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SetMultimap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SetMultimap java.util.Set&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : MutableSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SetMultimap java.util.Set&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SetMultimap java.util.Set&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : MutableSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.1 S copyInto(S)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S : Set&lt;E&gt;?&gt; copyInto(set : S) : S&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.1 com.google.common.collect.ImmutableSet&lt;E&gt; immutableCopy()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun immutableCopy() : ImmutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.1 java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.2 java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.3 java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.CartesianSet.1 java.lang.Object get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Int) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.CartesianSet.1 java.util.List&lt;B&gt; get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(index : Int) : MutableList&lt;B&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.CartesianSet.Axis Axis(java.util.Set&lt;? extends B&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Axis(set : Set&lt;out B&gt;, dividend : Int)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.CartesianSet.Axis boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.CartesianSet CartesianSet(java.util.List&lt;? extends java.util.Set&lt;? extends B&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CartesianSet(sets : List&lt;out Set&lt;out B&gt;?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.CartesianSet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(element : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.CartesianSet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.CartesianSet com.google.common.collect.UnmodifiableIterator&lt;java.util.List&lt;B&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;List&lt;B&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.CartesianSet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.DescendingSet java.util.Comparator&lt;? super E&gt; comparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun comparator() : Comparator&lt;in E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.DescendingSet java.util.SortedSet&lt;E&gt; headSet(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(p0 : E) : SortedSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.DescendingSet java.util.NavigableSet&lt;E&gt; headSet(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(p0 : E, p1 : Boolean) : NavigableSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.DescendingSet com.google.common.collect.Ordering&lt;T&gt; reverse(java.util.Comparator&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; reverse(forward : Comparator&lt;T&gt;) : Ordering&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.DescendingSet java.util.SortedSet&lt;E&gt; subSet(E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(p0 : E, p1 : E) : SortedSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.DescendingSet java.util.NavigableSet&lt;E&gt; subSet(E, boolean, E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(p0 : E, p1 : Boolean, p2 : E, p3 : Boolean) : NavigableSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.DescendingSet java.util.SortedSet&lt;E&gt; tailSet(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(p0 : E) : SortedSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.DescendingSet java.util.NavigableSet&lt;E&gt; tailSet(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(p0 : E, p1 : Boolean) : NavigableSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.DescendingSet T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.FilteredSet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.FilteredSortedSet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.FilteredSortedSet java.util.SortedSet&lt;E&gt; headSet(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(toElement : E?) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.FilteredSortedSet java.util.SortedSet&lt;E&gt; subSet(E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(fromElement : E?, toElement : E?) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.FilteredSortedSet java.util.SortedSet&lt;E&gt; tailSet(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(fromElement : E?) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.ImprovedAbstractSet boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.ImprovedAbstractSet boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.PowerSet.1.1 java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.PowerSet.1 java.lang.Object get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Int) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.PowerSet.1 java.util.Set&lt;E&gt; get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(setBits : Int) : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.PowerSet PowerSet(com.google.common.collect.ImmutableSet&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PowerSet(input : ImmutableSet&lt;E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.PowerSet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.PowerSet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.PowerSet java.util.Iterator&lt;java.util.Set&lt;E&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Set&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.SetFromMap SetFromMap(java.util.Map&lt;E,java.lang.Boolean&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SetFromMap(map : Map&lt;E, Boolean?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.SetFromMap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.SetFromMap void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.SetView S copyInto(S)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;S : Set&lt;E&gt;?&gt; copyInto(set : S) : S&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.SetView com.google.common.collect.ImmutableSet&lt;E&gt; immutableCopy()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun immutableCopy() : ImmutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.UnmodifiableNavigableSet UnmodifiableNavigableSet(java.util.NavigableSet&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun UnmodifiableNavigableSet(delegate : NavigableSet&lt;E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.UnmodifiableNavigableSet java.util.Iterator&lt;E&gt; descendingIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingIterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.UnmodifiableNavigableSet java.util.NavigableSet&lt;E&gt; descendingSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingSet() : NavigableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.UnmodifiableNavigableSet java.util.NavigableSet&lt;E&gt; headSet(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(toElement : E?, inclusive : Boolean) : NavigableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.UnmodifiableNavigableSet java.util.NavigableSet&lt;E&gt; subSet(E, boolean, E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(fromElement : E?, fromInclusive : Boolean, toElement : E?, toInclusive : Boolean) : NavigableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets.UnmodifiableNavigableSet java.util.NavigableSet&lt;E&gt; tailSet(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(fromElement : E?, inclusive : Boolean) : NavigableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.Set&lt;java.util.List&lt;B&gt;&gt; cartesianProduct(java.util.List&lt;? extends java.util.Set&lt;? extends B&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;B&gt; cartesianProduct(sets : List&lt;out Set&lt;out B&gt;?&gt;) : MutableSet&lt;List&lt;B&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.Set&lt;java.util.List&lt;B&gt;&gt; cartesianProduct(java.util.Set&lt;? extends B&gt;...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;B&gt; cartesianProduct(vararg sets : Set&lt;out B&gt;?) : MutableSet&lt;List&lt;B&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.EnumSet&lt;E&gt; complementOf(java.util.Collection&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Enum&lt;E&gt;?&gt; complementOf(collection : Collection&lt;E&gt;) : EnumSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.EnumSet&lt;E&gt; complementOf(java.util.Collection&lt;E&gt;, java.lang.Class&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Enum&lt;E&gt;?&gt; complementOf(collection : Collection&lt;E&gt;, type : Class&lt;E&gt;?) : EnumSet&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.Sets.SetView&lt;E&gt; difference(java.util.Set&lt;E&gt;, java.util.Set&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; difference(set1 : Set&lt;E&gt;, set2 : Set&lt;*&gt;) : Sets.SetView&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets boolean equalsImpl(java.util.Set&lt;?&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equalsImpl(s : Set&lt;*&gt;?, object : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.Set&lt;E&gt; filter(java.util.Set&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; filter(unfiltered : Set&lt;E&gt;, predicate : Predicate&lt;in E&gt;) : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.SortedSet&lt;E&gt; filter(java.util.SortedSet&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; filter(unfiltered : SortedSet&lt;E&gt;, predicate : Predicate&lt;in E&gt;) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets int hashCodeImpl(java.util.Set&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashCodeImpl(s : Set&lt;*&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.ImmutableSet&lt;E&gt; immutableEnumSet(E, E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Enum&lt;E&gt;?&gt; immutableEnumSet(anElement : E?, vararg otherElements : E?) : ImmutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.ImmutableSet&lt;E&gt; immutableEnumSet(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Enum&lt;E&gt;?&gt; immutableEnumSet(elements : Iterable&lt;E&gt;) : ImmutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.Sets.SetView&lt;E&gt; intersection(java.util.Set&lt;E&gt;, java.util.Set&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; intersection(set1 : Set&lt;E&gt;, set2 : Set&lt;*&gt;) : Sets.SetView&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.EnumSet&lt;E&gt; makeComplementByHand(java.util.Collection&lt;E&gt;, java.lang.Class&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Enum&lt;E&gt;?&gt; makeComplementByHand(collection : Collection&lt;E&gt;?, type : Class&lt;E&gt;?) : EnumSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.concurrent.CopyOnWriteArraySet&lt;E&gt; newCopyOnWriteArraySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newCopyOnWriteArraySet() : CopyOnWriteArraySet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.concurrent.CopyOnWriteArraySet&lt;E&gt; newCopyOnWriteArraySet(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newCopyOnWriteArraySet(elements : Iterable&lt;out E&gt;) : CopyOnWriteArraySet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.EnumSet&lt;E&gt; newEnumSet(java.lang.Iterable&lt;E&gt;, java.lang.Class&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Enum&lt;E&gt;?&gt; newEnumSet(iterable : Iterable&lt;E&gt;, elementType : Class&lt;E&gt;?) : EnumSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.HashSet&lt;E&gt; newHashSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newHashSet() : HashSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.HashSet&lt;E&gt; newHashSet(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newHashSet(elements : Iterable&lt;out E&gt;) : HashSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.HashSet&lt;E&gt; newHashSet(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newHashSet(elements : Iterator&lt;out E&gt;) : HashSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.HashSet&lt;E&gt; newHashSet(E...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newHashSet(vararg elements : E) : HashSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.HashSet&lt;E&gt; newHashSetWithExpectedSize(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newHashSetWithExpectedSize(expectedSize : Int) : HashSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.Set&lt;E&gt; newIdentityHashSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newIdentityHashSet() : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.LinkedHashSet&lt;E&gt; newLinkedHashSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newLinkedHashSet() : LinkedHashSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.LinkedHashSet&lt;E&gt; newLinkedHashSet(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newLinkedHashSet(elements : Iterable&lt;out E&gt;) : LinkedHashSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.LinkedHashSet&lt;E&gt; newLinkedHashSetWithExpectedSize(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newLinkedHashSetWithExpectedSize(expectedSize : Int) : LinkedHashSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.Set&lt;E&gt; newSetFromMap(java.util.Map&lt;E,java.lang.Boolean&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newSetFromMap(map : Map&lt;E, Boolean?&gt;) : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.TreeSet&lt;E&gt; newTreeSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable?&gt; newTreeSet() : TreeSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.TreeSet&lt;E&gt; newTreeSet(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable?&gt; newTreeSet(elements : Iterable&lt;out E&gt;) : TreeSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.TreeSet&lt;E&gt; newTreeSet(java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newTreeSet(comparator : Comparator&lt;in E&gt;) : TreeSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.Set&lt;java.util.Set&lt;E&gt;&gt; powerSet(java.util.Set&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; powerSet(set : Set&lt;E&gt;) : MutableSet&lt;Set&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets boolean removeAllImpl(java.util.Set&lt;?&gt;, java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAllImpl(set : MutableSet&lt;*&gt;?, collection : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets boolean removeAllImpl(java.util.Set&lt;?&gt;, java.util.Iterator&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAllImpl(set : MutableSet&lt;*&gt;?, iterator : Iterator&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.Sets.SetView&lt;E&gt; symmetricDifference(java.util.Set&lt;? extends E&gt;, java.util.Set&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; symmetricDifference(set1 : Set&lt;out E&gt;, set2 : Set&lt;out E&gt;) : Sets.SetView&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.NavigableSet&lt;E&gt; synchronizedNavigableSet(java.util.NavigableSet&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; synchronizedNavigableSet(navigableSet : NavigableSet&lt;E&gt;) : NavigableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.Sets.SetView&lt;E&gt; union(java.util.Set&lt;? extends E&gt;, java.util.Set&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; union(set1 : Set&lt;out E&gt;, set2 : Set&lt;out E&gt;) : Sets.SetView&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.NavigableSet&lt;E&gt; unmodifiableNavigableSet(java.util.NavigableSet&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; unmodifiableNavigableSet(set : NavigableSet&lt;E&gt;) : NavigableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableList SingletonImmutableList(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SingletonImmutableList(element : E)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableList boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableList boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(object : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableList E get(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(index : Int) : E&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableList int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableList com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableList java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableList int lastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableList com.google.common.collect.ImmutableList&lt;E&gt; reverse()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun reverse() : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableList com.google.common.collect.ImmutableList&lt;E&gt; subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(fromIndex : Int, toIndex : Int) : ImmutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableList java.util.List subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(x0 : Int, x1 : Int) : MutableList&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableList java.lang.Object[] toArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray() : Array&lt;out Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableList T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(array : Array&lt;out T&gt;) : Array&lt;out T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableMap SingletonImmutableMap(java.util.Map.Entry&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SingletonImmutableMap(entry : Map.Entry&lt;K, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableMap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableMap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableMap com.google.common.collect.ImmutableSet&lt;java.util.Map.Entry&lt;K,V&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : ImmutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableMap com.google.common.collect.ImmutableSet&lt;K&gt; createKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createKeySet() : ImmutableSet&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableMap com.google.common.collect.ImmutableCollection&lt;V&gt; createValues()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createValues() : ImmutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableMap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableMap V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableSet SingletonImmutableSet(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SingletonImmutableSet(element : E)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableSet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableSet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableSet com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableSet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableSet java.lang.Object[] toArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray() : Array&lt;out Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableSet T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(array : Array&lt;out T&gt;) : Array&lt;out T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable SingletonImmutableTable(com.google.common.collect.Table.Cell&lt;R,C,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SingletonImmutableTable(cell : Table.Cell&lt;R, C, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable SingletonImmutableTable(R, C, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SingletonImmutableTable(rowKey : R, columnKey : C, value : V)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable com.google.common.collect.ImmutableSet&lt;com.google.common.collect.Table.Cell&lt;R,C,V&gt;&gt; cellSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cellSet() : ImmutableSet&lt;Table.Cell&lt;R, C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable java.util.Set cellSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cellSet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable com.google.common.collect.ImmutableMap&lt;R,V&gt; column(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(columnKey : C) : ImmutableMap&lt;R, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable java.util.Map column(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(x0 : Any) : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable com.google.common.collect.ImmutableSet&lt;C&gt; columnKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnKeySet() : ImmutableSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable java.util.Set columnKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnKeySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable com.google.common.collect.ImmutableMap&lt;C,java.util.Map&lt;R,V&gt;&gt; columnMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnMap() : ImmutableMap&lt;C, Map&lt;R, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable java.util.Map columnMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable boolean contains(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable boolean containsColumn(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsColumn(columnKey : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable boolean containsRow(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsRow(rowKey : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable V get(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?, p1 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable com.google.common.collect.ImmutableMap&lt;C,V&gt; row(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(rowKey : R) : ImmutableMap&lt;C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable java.util.Map row(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(x0 : Any?) : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable com.google.common.collect.ImmutableSet&lt;R&gt; rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : ImmutableSet&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable java.util.Set rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable com.google.common.collect.ImmutableMap&lt;R,java.util.Map&lt;C,V&gt;&gt; rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : ImmutableMap&lt;R, Map&lt;C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable java.util.Map rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable com.google.common.collect.ImmutableCollection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : ImmutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SingletonImmutableTable java.util.Collection values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedIterable java.util.Comparator&lt;? super T&gt; comparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun comparator() : Comparator&lt;in T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedIterable java.util.Iterator&lt;T&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedIterables java.util.Comparator&lt;? super E&gt; comparator(java.util.SortedSet&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; comparator(sortedSet : SortedSet&lt;E&gt;) : Comparator&lt;in E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedIterables boolean hasSameComparator(java.util.Comparator&lt;?&gt;, java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hasSameComparator(comparator : Comparator&lt;*&gt;, elements : Iterable&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedLists.KeyPresentBehavior.1 int resultIndex(java.util.Comparator&lt;? super E&gt;, E, java.util.List&lt;? extends E&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; resultIndex(p0 : Comparator&lt;in E&gt;?, p1 : E?, p2 : List&lt;out E&gt;, p3 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedLists.KeyPresentBehavior.2 int resultIndex(java.util.Comparator&lt;? super E&gt;, E, java.util.List&lt;? extends E&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; resultIndex(comparator : Comparator&lt;in E&gt;?, key : E?, list : List&lt;out E&gt;, foundIndex : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedLists.KeyPresentBehavior.3 int resultIndex(java.util.Comparator&lt;? super E&gt;, E, java.util.List&lt;? extends E&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; resultIndex(p0 : Comparator&lt;in E&gt;?, p1 : E?, p2 : List&lt;out E&gt;, p3 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedLists.KeyPresentBehavior.4 int resultIndex(java.util.Comparator&lt;? super E&gt;, E, java.util.List&lt;? extends E&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; resultIndex(p0 : Comparator&lt;in E&gt;?, p1 : E?, p2 : List&lt;out E&gt;, p3 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedLists.KeyPresentBehavior.5 int resultIndex(java.util.Comparator&lt;? super E&gt;, E, java.util.List&lt;? extends E&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; resultIndex(p0 : Comparator&lt;in E&gt;?, p1 : E?, p2 : List&lt;out E&gt;, p3 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedLists.KeyPresentBehavior int resultIndex(java.util.Comparator&lt;? super E&gt;, E, java.util.List&lt;? extends E&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; resultIndex(p0 : Comparator&lt;in E&gt;?, p1 : E?, p2 : List&lt;out E&gt;, p3 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedLists int binarySearch(java.util.List&lt;E&gt;, com.google.common.base.Function&lt;? super E,K&gt;, K, com.google.common.collect.SortedLists.KeyPresentBehavior, com.google.common.collect.SortedLists.KeyAbsentBehavior)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E, K : Comparable?&gt; binarySearch(p0 : List&lt;E&gt;, p1 : Function&lt;in E, K&gt;, p2 : K?, p3 : SortedLists.KeyPresentBehavior, p4 : SortedLists.KeyAbsentBehavior) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedLists int binarySearch(java.util.List&lt;E&gt;, com.google.common.base.Function&lt;? super E,K&gt;, K, java.util.Comparator&lt;? super K&gt;, com.google.common.collect.SortedLists.KeyPresentBehavior, com.google.common.collect.SortedLists.KeyAbsentBehavior)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E, K&gt; binarySearch(list : List&lt;E&gt;, keyFunction : Function&lt;in E, K&gt;, key : K?, keyComparator : Comparator&lt;in K&gt;, presentBehavior : SortedLists.KeyPresentBehavior, absentBehavior : SortedLists.KeyAbsentBehavior) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedLists int binarySearch(java.util.List&lt;? extends E&gt;, E, com.google.common.collect.SortedLists.KeyPresentBehavior, com.google.common.collect.SortedLists.KeyAbsentBehavior)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable?&gt; binarySearch(list : List&lt;out E&gt;, e : E, presentBehavior : SortedLists.KeyPresentBehavior, absentBehavior : SortedLists.KeyAbsentBehavior) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedLists int binarySearch(java.util.List&lt;? extends E&gt;, E, java.util.Comparator&lt;? super E&gt;, com.google.common.collect.SortedLists.KeyPresentBehavior, com.google.common.collect.SortedLists.KeyAbsentBehavior)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; binarySearch(list : List&lt;out E&gt;, key : E?, comparator : Comparator&lt;in E&gt;, presentBehavior : SortedLists.KeyPresentBehavior, absentBehavior : SortedLists.KeyAbsentBehavior) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultiset java.util.Comparator&lt;? super E&gt; comparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun comparator() : Comparator&lt;in E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; descendingMultiset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingMultiset() : SortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultiset java.util.SortedSet&lt;E&gt; elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.Multiset.Entry&lt;E&gt; firstEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun firstEntry() : Multiset.Entry&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMultiset(p0 : E?, p1 : BoundType) : SortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultiset java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.Multiset.Entry&lt;E&gt; lastEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastEntry() : Multiset.Entry&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.Multiset.Entry&lt;E&gt; pollFirstEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pollFirstEntry() : Multiset.Entry&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.Multiset.Entry&lt;E&gt; pollLastEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pollLastEntry() : Multiset.Entry&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; subMultiset(E, com.google.common.collect.BoundType, E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMultiset(p0 : E?, p1 : BoundType, p2 : E?, p3 : BoundType) : SortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMultiset(p0 : E?, p1 : BoundType) : SortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultisets.DescendingMultiset java.util.Comparator&lt;? super E&gt; comparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun comparator() : Comparator&lt;in E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultisets.DescendingMultiset java.util.Set&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : MutableSet&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultisets.DescendingMultiset java.util.Set elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultisets.DescendingMultiset java.util.SortedSet&lt;E&gt; elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultisets.DescendingMultiset java.util.Set&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultisets.DescendingMultiset com.google.common.collect.SortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMultiset(p0 : E?, p1 : BoundType) : SortedMultiset&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultisets.DescendingMultiset java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultisets.DescendingMultiset com.google.common.collect.SortedMultiset&lt;E&gt; subMultiset(E, com.google.common.collect.BoundType, E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMultiset(p0 : E?, p1 : BoundType, p2 : E?, p3 : BoundType) : SortedMultiset&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultisets.DescendingMultiset com.google.common.collect.SortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMultiset(p0 : E?, p1 : BoundType) : SortedMultiset&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultisets.DescendingMultiset T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultisets java.lang.Object access$000(com.google.common.collect.Multiset.Entry)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : Multiset.Entry) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultisets E getElementOrThrow(com.google.common.collect.Multiset.Entry&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; getElementOrThrow(entry : Multiset.Entry&lt;E&gt;) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedSetMultimap java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : MutableMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedSetMultimap java.util.SortedSet&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : K?) : SortedSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedSetMultimap java.util.SortedSet&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : SortedSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedSetMultimap java.util.SortedSet&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : SortedSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardRowSortedTable.RowKeySortedSet java.util.SortedSet&lt;R&gt; headSet(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(toElement : R) : SortedSet&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardRowSortedTable.RowKeySortedSet java.util.SortedSet&lt;R&gt; subSet(R, R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(fromElement : R, toElement : R) : SortedSet&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardRowSortedTable.RowKeySortedSet java.util.SortedSet&lt;R&gt; tailSet(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(fromElement : R) : SortedSet&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardRowSortedTable.RowSortedMap java.util.SortedMap&lt;R,java.util.Map&lt;C,V&gt;&gt; headMap(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(toKey : R) : SortedMap&lt;R, Map&lt;C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardRowSortedTable.RowSortedMap java.util.SortedMap&lt;R,java.util.Map&lt;C,V&gt;&gt; subMap(R, R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(fromKey : R, toKey : R) : SortedMap&lt;R, Map&lt;C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardRowSortedTable.RowSortedMap java.util.SortedMap&lt;R,java.util.Map&lt;C,V&gt;&gt; tailMap(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(fromKey : R) : SortedMap&lt;R, Map&lt;C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardRowSortedTable java.util.SortedMap access$100(com.google.common.collect.StandardRowSortedTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : StandardRowSortedTable) : SortedMap?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardRowSortedTable java.util.Set rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardRowSortedTable java.util.SortedSet&lt;R&gt; rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : SortedSet&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardRowSortedTable java.util.Map rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardRowSortedTable java.util.SortedMap&lt;R,java.util.Map&lt;C,V&gt;&gt; rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : SortedMap&lt;R, Map&lt;C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.CellIterator com.google.common.collect.Table.Cell&lt;R,C,V&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Table.Cell&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.CellIterator java.lang.Object next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.CellSet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.CellSet java.util.Iterator&lt;com.google.common.collect.Table.Cell&lt;R,C,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Table.Cell&lt;R, C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.CellSet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column.EntrySet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column.EntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;R,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;R, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column.EntrySet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column.EntrySet boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column.EntrySetIterator.1 V setValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValue(value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column.KeySet.1 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column.KeySet.1 boolean apply(java.util.Map.Entry&lt;R,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(entry : Map.Entry&lt;R, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column.KeySet java.util.Iterator&lt;R&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column.KeySet boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column.Values.1 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column.Values.1 boolean apply(java.util.Map.Entry&lt;R,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(entry : Map.Entry&lt;R, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column.Values.2 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column.Values.2 boolean apply(java.util.Map.Entry&lt;R,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(entry : Map.Entry&lt;R, V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column.Values java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column.Values boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column.Values boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column.Values boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column Column(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Column(columnKey : C)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column java.util.Set&lt;java.util.Map.Entry&lt;R,V&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : MutableSet&lt;Map.Entry&lt;R, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column java.util.Set&lt;R&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column V put(R, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(key : R, value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column V remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(key : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Column java.util.Collection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnKeySet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnKeySet java.util.Iterator&lt;C&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnKeySet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnKeySet boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnKeySet boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap.ColumnMapEntrySet.1 1(com.google.common.collect.StandardTable.ColumnMap.ColumnMapEntrySet, java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Iterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap.ColumnMapEntrySet.1 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap.ColumnMapEntrySet.1 java.util.Map.Entry&lt;C,java.util.Map&lt;R,V&gt;&gt; transform(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(columnKey : C) : MutableMap.MutableEntry&lt;C, Map&lt;R, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap.ColumnMapEntrySet ColumnMapEntrySet(com.google.common.collect.StandardTable.ColumnMap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ColumnMapEntrySet()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap.ColumnMapEntrySet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap.ColumnMapEntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;C,java.util.Map&lt;R,V&gt;&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;C, Map&lt;R, V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap.ColumnMapEntrySet boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap.ColumnMapValues ColumnMapValues(com.google.common.collect.StandardTable.ColumnMap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ColumnMapValues()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap.ColumnMapValues ColumnMapValues(com.google.common.collect.StandardTable.ColumnMap, com.google.common.collect.StandardTable.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ColumnMapValues(x0 : StandardTable.ColumnMap, x1 : StandardTable.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap.ColumnMapValues java.util.Iterator&lt;java.util.Map&lt;R,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map&lt;R, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap.ColumnMapValues boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap.ColumnMapValues boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap java.util.Set&lt;java.util.Map.Entry&lt;C,java.util.Map&lt;R,V&gt;&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : MutableSet&lt;Map.Entry&lt;C, Map&lt;R, V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap java.lang.Object get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap java.util.Map&lt;R,V&gt; get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Any?) : MutableMap&lt;R, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap java.util.Set&lt;C&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap java.lang.Object remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap java.util.Map&lt;R,V&gt; remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(key : Any?) : MutableMap&lt;R, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.ColumnMap java.util.Collection&lt;java.util.Map&lt;R,V&gt;&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&lt;Map&lt;R, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Row.RowEntrySet.1.1 boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Row.RowEntrySet.1.1 V setValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValue(value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Row.RowEntrySet.1 java.lang.Object next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Row.RowEntrySet.1 java.util.Map.Entry&lt;C,V&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : MutableMap.MutableEntry&lt;C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Row.RowEntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;C,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Row Row(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Row(rowKey : R)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Row java.util.Map&lt;C,V&gt; computeBackingRowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeBackingRowMap() : MutableMap&lt;C, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Row boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(key : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Row java.util.Set&lt;java.util.Map.Entry&lt;C,V&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Map.Entry&lt;C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Row V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Row java.util.Set&lt;C&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Row V put(C, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(key : C, value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Row V remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(key : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.RowKeySet java.util.Iterator&lt;R&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.RowKeySet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.RowMap.EntrySet.1 1(com.google.common.collect.StandardTable.RowMap.EntrySet, java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Iterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.RowMap.EntrySet.1 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.RowMap.EntrySet.1 java.util.Map.Entry&lt;R,java.util.Map&lt;C,V&gt;&gt; transform(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(rowKey : R) : MutableMap.MutableEntry&lt;R, Map&lt;C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.RowMap.EntrySet EntrySet(com.google.common.collect.StandardTable.RowMap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun EntrySet()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.RowMap.EntrySet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.RowMap.EntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;R,java.util.Map&lt;C,V&gt;&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;R, Map&lt;C, V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.RowMap.EntrySet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.RowMap java.util.Set&lt;java.util.Map.Entry&lt;R,java.util.Map&lt;C,V&gt;&gt;&gt; createEntrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createEntrySet() : MutableSet&lt;Map.Entry&lt;R, Map&lt;C, V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.RowMap java.lang.Object get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.RowMap java.util.Map&lt;C,V&gt; get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Any?) : MutableMap&lt;C, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.RowMap java.util.Set&lt;R&gt; keySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun keySet() : MutableSet&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.RowMap java.lang.Object remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.RowMap java.util.Map&lt;C,V&gt; remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(key : Any?) : MutableMap&lt;C, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Values.1 1(com.google.common.collect.StandardTable.Values, java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Iterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Values.1 V transform(com.google.common.collect.Table.Cell&lt;R,C,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(cell : Table.Cell&lt;R, C, V&gt;) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Values.1 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable.Values java.util.Iterator&lt;V&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable java.util.Map access$1100(com.google.common.collect.StandardTable, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1100(x0 : StandardTable, x1 : Any?) : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable boolean access$300(com.google.common.collect.StandardTable, java.lang.Object, java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : StandardTable, x1 : Any?, x2 : Any?, x3 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable boolean access$400(com.google.common.collect.StandardTable, java.lang.Object, java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : StandardTable, x1 : Any?, x2 : Any?, x3 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable java.util.Set&lt;com.google.common.collect.Table.Cell&lt;R,C,V&gt;&gt; cellSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cellSet() : MutableSet&lt;Table.Cell&lt;R, C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable java.util.Map&lt;R,V&gt; column(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(columnKey : C) : MutableMap&lt;R, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable java.util.Set&lt;C&gt; columnKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnKeySet() : MutableSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable java.util.Map&lt;C,java.util.Map&lt;R,V&gt;&gt; columnMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnMap() : MutableMap&lt;C, Map&lt;R, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable boolean contains(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(rowKey : Any?, columnKey : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable boolean containsColumn(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsColumn(columnKey : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable boolean containsMapping(java.lang.Object, java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsMapping(rowKey : Any?, columnKey : Any?, value : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable boolean containsRow(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsRow(rowKey : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable java.util.Iterator&lt;C&gt; createColumnKeyIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createColumnKeyIterator() : MutableIterator&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable V get(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(rowKey : Any?, columnKey : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable V put(R, C, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(rowKey : R?, columnKey : C?, value : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable void putAll(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(table : Table&lt;out R, out C, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable V remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(rowKey : Any?, columnKey : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable java.util.Map&lt;R,V&gt; removeColumn(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeColumn(column : Any?) : MutableMap&lt;R, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable java.util.Map&lt;C,V&gt; row(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(rowKey : R?) : MutableMap&lt;C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable java.util.Set&lt;R&gt; rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : MutableSet&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable java.util.Map&lt;R,java.util.Map&lt;C,V&gt;&gt; rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : MutableMap&lt;R, Map&lt;C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.StandardTable java.util.Collection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMap SynchronizedAsMap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedAsMap(delegate : Map&lt;K, Collection&lt;V&gt;?&gt;, mutex : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMap java.lang.Object get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMap java.util.Collection&lt;V&gt; get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Any?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMapEntries.1.1 java.lang.Object getValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMapEntries.1.1 java.util.Collection&lt;V&gt; getValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMapEntries.1 java.lang.Object next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMapEntries.1 java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : MutableMap.MutableEntry&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMapEntries SynchronizedAsMapEntries(java.util.Set&lt;java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedAsMapEntries(p0 : Set&lt;Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?&gt;, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMapEntries boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMapEntries boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMapEntries boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMapEntries java.util.Iterator&lt;java.util.Map.Entry&lt;K,java.util.Collection&lt;V&gt;&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;K, Collection&lt;V&gt;?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMapEntries boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMapEntries boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMapEntries boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(c : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMapEntries T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(array : Array&lt;out T&gt;) : Array&lt;out T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMapValues.1 java.lang.Object next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMapValues.1 java.util.Collection&lt;V&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMapValues SynchronizedAsMapValues(java.util.Collection&lt;java.util.Collection&lt;V&gt;&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedAsMapValues(delegate : Collection&lt;Collection&lt;V&gt;?&gt;, mutex : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedAsMapValues java.util.Iterator&lt;java.util.Collection&lt;V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedBiMap SynchronizedBiMap(com.google.common.collect.BiMap&lt;K,V&gt;, java.lang.Object, com.google.common.collect.BiMap&lt;V,K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedBiMap(p0 : BiMap&lt;K, V&gt;, p1 : Any?, p2 : BiMap&lt;V, K&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedBiMap SynchronizedBiMap(com.google.common.collect.BiMap, java.lang.Object, com.google.common.collect.BiMap, com.google.common.collect.Synchronized.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedBiMap(x0 : BiMap, x1 : Any?, x2 : BiMap?, x3 : Synchronized.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedBiMap com.google.common.collect.BiMap&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : BiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedBiMap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedBiMap java.util.Map delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedBiMap V forcePut(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun forcePut(p0 : K?, p1 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedCollection SynchronizedCollection(java.util.Collection&lt;E&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedCollection(p0 : Collection&lt;E&gt;, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedCollection SynchronizedCollection(java.util.Collection, java.lang.Object, com.google.common.collect.Synchronized.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedCollection(x0 : Collection, x1 : Any?, x2 : Synchronized.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedCollection boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedCollection boolean containsAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedCollection java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedCollection java.util.Collection&lt;E&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedCollection java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedCollection boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedCollection boolean removeAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedCollection boolean retainAll(java.util.Collection&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedCollection T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(p0 : Array&lt;out T&gt;) : Array&lt;out T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedEntry SynchronizedEntry(java.util.Map.Entry&lt;K,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedEntry(p0 : Map.Entry&lt;K, V&gt;, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedEntry java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedEntry java.util.Map.Entry&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedList SynchronizedList(java.util.List&lt;E&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedList(p0 : List&lt;E&gt;, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedList java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedList java.util.Collection delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedList java.util.List&lt;E&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedList java.util.List&lt;E&gt; subList(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subList(fromIndex : Int, toIndex : Int) : MutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedListMultimap SynchronizedListMultimap(com.google.common.collect.ListMultimap&lt;K,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedListMultimap(p0 : ListMultimap&lt;K, V&gt;, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedListMultimap com.google.common.collect.ListMultimap&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : ListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedListMultimap com.google.common.collect.Multimap delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Multimap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedListMultimap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedListMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedListMultimap java.util.List&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K?) : MutableList&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedListMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedListMultimap java.util.List&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableList&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedListMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedListMultimap java.util.List&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : MutableList&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMap SynchronizedMap(java.util.Map&lt;K,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedMap(p0 : Map&lt;K, V&gt;, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMap java.util.Map&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMap V get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultimap SynchronizedMultimap(com.google.common.collect.Multimap&lt;K,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedMultimap(p0 : Multimap&lt;K, V&gt;, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultimap boolean containsEntry(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsEntry(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultimap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultimap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultimap com.google.common.collect.Multimap&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Multimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultimap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultimap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultimap java.util.Collection&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K?) : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultimap boolean put(K, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : K?, p1 : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultimap boolean putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Multimap&lt;out K, out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultimap boolean putAll(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : K?, p1 : Iterable&lt;out V&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultimap boolean remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultimap java.util.Collection&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultimap java.util.Collection&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : MutableCollection&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultiset SynchronizedMultiset(com.google.common.collect.Multiset&lt;E&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedMultiset(p0 : Multiset&lt;E&gt;, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultiset int add(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultiset int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(p0 : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultiset com.google.common.collect.Multiset&lt;E&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Multiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultiset java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultiset java.util.Collection delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultiset boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultiset int remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultiset int setCount(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : E?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedMultiset boolean setCount(E, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : E?, p1 : Int, p2 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap SynchronizedNavigableMap(java.util.NavigableMap&lt;K,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedNavigableMap(p0 : NavigableMap&lt;K, V&gt;, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.util.Map.Entry&lt;K,V&gt; ceilingEntry(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ceilingEntry(key : K?) : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.util.Map delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.util.NavigableMap&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : NavigableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.util.SortedMap delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : SortedMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.util.Map.Entry&lt;K,V&gt; firstEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun firstEntry() : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.util.Map.Entry&lt;K,V&gt; floorEntry(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun floorEntry(key : K?) : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.util.SortedMap&lt;K,V&gt; headMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(toKey : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.util.NavigableMap&lt;K,V&gt; headMap(K, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(toKey : K?, inclusive : Boolean) : NavigableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.util.Map.Entry&lt;K,V&gt; higherEntry(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun higherEntry(key : K?) : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.util.Map.Entry&lt;K,V&gt; lastEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastEntry() : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.util.Map.Entry&lt;K,V&gt; lowerEntry(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lowerEntry(key : K?) : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.util.Map.Entry&lt;K,V&gt; pollFirstEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pollFirstEntry() : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.util.Map.Entry&lt;K,V&gt; pollLastEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pollLastEntry() : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.util.SortedMap&lt;K,V&gt; subMap(K, K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(fromKey : K?, toKey : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.util.NavigableMap&lt;K,V&gt; subMap(K, boolean, K, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(fromKey : K?, fromInclusive : Boolean, toKey : K?, toInclusive : Boolean) : NavigableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.util.SortedMap&lt;K,V&gt; tailMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(fromKey : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableMap java.util.NavigableMap&lt;K,V&gt; tailMap(K, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(fromKey : K?, inclusive : Boolean) : NavigableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableSet SynchronizedNavigableSet(java.util.NavigableSet&lt;E&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedNavigableSet(p0 : NavigableSet&lt;E&gt;, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableSet java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableSet java.util.Collection delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableSet java.util.NavigableSet&lt;E&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : NavigableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableSet java.util.Set delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableSet java.util.SortedSet delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : SortedSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableSet java.util.SortedSet&lt;E&gt; headSet(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(toElement : E) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableSet java.util.NavigableSet&lt;E&gt; headSet(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(toElement : E?, inclusive : Boolean) : NavigableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableSet java.util.SortedSet&lt;E&gt; subSet(E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(fromElement : E, toElement : E) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableSet java.util.NavigableSet&lt;E&gt; subSet(E, boolean, E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(fromElement : E?, fromInclusive : Boolean, toElement : E?, toInclusive : Boolean) : NavigableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableSet java.util.SortedSet&lt;E&gt; tailSet(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(fromElement : E) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedNavigableSet java.util.NavigableSet&lt;E&gt; tailSet(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(fromElement : E?, inclusive : Boolean) : NavigableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedObject SynchronizedObject(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedObject(p0 : Any, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedObject java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedObject void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedRandomAccessList SynchronizedRandomAccessList(java.util.List&lt;E&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedRandomAccessList(p0 : List&lt;E&gt;, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSet SynchronizedSet(java.util.Set&lt;E&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedSet(p0 : Set&lt;E&gt;, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSet java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSet java.util.Collection delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSet java.util.Set&lt;E&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSetMultimap SynchronizedSetMultimap(com.google.common.collect.SetMultimap&lt;K,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedSetMultimap(p0 : SetMultimap&lt;K, V&gt;, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSetMultimap com.google.common.collect.Multimap delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Multimap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSetMultimap com.google.common.collect.SetMultimap&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : SetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSetMultimap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSetMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSetMultimap java.util.Set&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K?) : MutableSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSetMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSetMultimap java.util.Set&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSetMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSetMultimap java.util.Set&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : MutableSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedMap SynchronizedSortedMap(java.util.SortedMap&lt;K,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedSortedMap(p0 : SortedMap&lt;K, V&gt;, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedMap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedMap java.util.Map delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedMap java.util.SortedMap&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedMap java.util.SortedMap&lt;K,V&gt; headMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(toKey : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedMap java.util.SortedMap&lt;K,V&gt; subMap(K, K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(fromKey : K?, toKey : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedMap java.util.SortedMap&lt;K,V&gt; tailMap(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(fromKey : K?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSet SynchronizedSortedSet(java.util.SortedSet&lt;E&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedSortedSet(p0 : SortedSet&lt;E&gt;, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSet java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSet java.util.Collection delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSet java.util.Set delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSet java.util.SortedSet&lt;E&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSet java.util.SortedSet&lt;E&gt; headSet(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headSet(toElement : E) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSet java.util.SortedSet&lt;E&gt; subSet(E, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subSet(fromElement : E, toElement : E) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSet java.util.SortedSet&lt;E&gt; tailSet(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailSet(fromElement : E) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSetMultimap SynchronizedSortedSetMultimap(com.google.common.collect.SortedSetMultimap&lt;K,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedSortedSetMultimap(p0 : SortedSetMultimap&lt;K, V&gt;, p1 : Any?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSetMultimap com.google.common.collect.Multimap delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Multimap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSetMultimap com.google.common.collect.SetMultimap delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : SetMultimap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSetMultimap com.google.common.collect.SortedSetMultimap&lt;K,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : SortedSetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSetMultimap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSetMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSetMultimap java.util.Set get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSetMultimap java.util.SortedSet&lt;V&gt; get(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : K?) : SortedSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSetMultimap java.util.Collection removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSetMultimap java.util.Set removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSetMultimap java.util.SortedSet&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : SortedSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSetMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableCollection?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSetMultimap java.util.Set replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : Any?, p1 : Iterable) : MutableSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized.SynchronizedSortedSetMultimap java.util.SortedSet&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(p0 : K?, p1 : Iterable&lt;out V&gt;) : SortedSet&lt;V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.SortedSet access$100(java.util.SortedSet, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : SortedSet, x1 : Any?) : SortedSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.List access$200(java.util.List, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : List, x1 : Any?) : MutableList&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.Set access$300(java.util.Set, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : Set, x1 : Any?) : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.Collection access$400(java.util.Collection, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : Collection, x1 : Any?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.Collection access$500(java.util.Collection, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$500(x0 : Collection, x1 : Any?) : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.Map.Entry access$700(java.util.Map.Entry, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$700(x0 : Map.Entry?, x1 : Any?) : MutableMap.MutableEntry?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized com.google.common.collect.BiMap&lt;K,V&gt; biMap(com.google.common.collect.BiMap&lt;K,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; biMap(bimap : BiMap&lt;K, V&gt;, mutex : Any?) : BiMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.Collection&lt;E&gt; collection(java.util.Collection&lt;E&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; collection(p0 : Collection&lt;E&gt;, p1 : Any?) : MutableCollection&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.List&lt;E&gt; list(java.util.List&lt;E&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; list(p0 : List&lt;E&gt;, p1 : Any?) : MutableList&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized com.google.common.collect.ListMultimap&lt;K,V&gt; listMultimap(com.google.common.collect.ListMultimap&lt;K,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; listMultimap(multimap : ListMultimap&lt;K, V&gt;, mutex : Any?) : ListMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.Map&lt;K,V&gt; map(java.util.Map&lt;K,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; map(p0 : Map&lt;K, V&gt;, p1 : Any?) : MutableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized com.google.common.collect.Multimap&lt;K,V&gt; multimap(com.google.common.collect.Multimap&lt;K,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; multimap(multimap : Multimap&lt;K, V&gt;, mutex : Any?) : Multimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized com.google.common.collect.Multiset&lt;E&gt; multiset(com.google.common.collect.Multiset&lt;E&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; multiset(multiset : Multiset&lt;E&gt;, mutex : Any?) : Multiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.NavigableMap&lt;K,V&gt; navigableMap(java.util.NavigableMap&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; navigableMap(navigableMap : NavigableMap&lt;K, V&gt;) : NavigableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.NavigableMap&lt;K,V&gt; navigableMap(java.util.NavigableMap&lt;K,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; navigableMap(navigableMap : NavigableMap&lt;K, V&gt;, mutex : Any?) : NavigableMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.NavigableSet&lt;E&gt; navigableSet(java.util.NavigableSet&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; navigableSet(navigableSet : NavigableSet&lt;E&gt;) : NavigableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.NavigableSet&lt;E&gt; navigableSet(java.util.NavigableSet&lt;E&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; navigableSet(navigableSet : NavigableSet&lt;E&gt;, mutex : Any?) : NavigableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.Map.Entry&lt;K,V&gt; nullableSynchronizedEntry(java.util.Map.Entry&lt;K,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; nullableSynchronizedEntry(p0 : Map.Entry&lt;K, V&gt;?, p1 : Any?) : MutableMap.MutableEntry&lt;K, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.Set&lt;E&gt; set(java.util.Set&lt;E&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; set(set : Set&lt;E&gt;, mutex : Any?) : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized com.google.common.collect.SetMultimap&lt;K,V&gt; setMultimap(com.google.common.collect.SetMultimap&lt;K,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; setMultimap(multimap : SetMultimap&lt;K, V&gt;, mutex : Any?) : SetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.SortedMap&lt;K,V&gt; sortedMap(java.util.SortedMap&lt;K,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; sortedMap(sortedMap : SortedMap&lt;K, V&gt;, mutex : Any?) : SortedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.SortedSet&lt;E&gt; sortedSet(java.util.SortedSet&lt;E&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; sortedSet(p0 : SortedSet&lt;E&gt;, p1 : Any?) : SortedSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized com.google.common.collect.SortedSetMultimap&lt;K,V&gt; sortedSetMultimap(com.google.common.collect.SortedSetMultimap&lt;K,V&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; sortedSetMultimap(multimap : SortedSetMultimap&lt;K, V&gt;, mutex : Any?) : SortedSetMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.Collection&lt;E&gt; typePreservingCollection(java.util.Collection&lt;E&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; typePreservingCollection(p0 : Collection&lt;E&gt;, p1 : Any?) : MutableCollection&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Synchronized java.util.Set&lt;E&gt; typePreservingSet(java.util.Set&lt;E&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; typePreservingSet(p0 : Set&lt;E&gt;, p1 : Any?) : MutableSet&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table.Cell boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table.Cell C getColumnKey()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColumnKey() : C?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table.Cell R getRowKey()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRowKey() : R?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table.Cell V getValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table java.util.Set&lt;com.google.common.collect.Table.Cell&lt;R,C,V&gt;&gt; cellSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cellSet() : MutableSet&lt;Table.Cell&lt;R, C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table java.util.Map&lt;R,V&gt; column(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(p0 : C) : MutableMap&lt;R, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table java.util.Set&lt;C&gt; columnKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnKeySet() : MutableSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table java.util.Map&lt;C,java.util.Map&lt;R,V&gt;&gt; columnMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun columnMap() : MutableMap&lt;C, Map&lt;R, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table boolean contains(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table boolean containsColumn(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsColumn(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table boolean containsRow(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsRow(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table V get(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?, p1 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table V put(R, C, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : R?, p1 : C?, p2 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table void putAll(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Table&lt;out R, out C, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table V remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table java.util.Map&lt;C,V&gt; row(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(p0 : R?) : MutableMap&lt;C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table java.util.Set&lt;R&gt; rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : MutableSet&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table java.util.Map&lt;R,java.util.Map&lt;C,V&gt;&gt; rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : MutableMap&lt;R, Map&lt;C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table java.util.Collection&lt;V&gt; values()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun values() : MutableCollection&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.AbstractCell boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.ImmutableCell ImmutableCell(R, C, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ImmutableCell(p0 : R?, p1 : C?, p2 : V?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.ImmutableCell C getColumnKey()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getColumnKey() : C?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.ImmutableCell R getRowKey()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRowKey() : R?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.ImmutableCell V getValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getValue() : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable.1 com.google.common.collect.Table.Cell&lt;R,C,V2&gt; apply(com.google.common.collect.Table.Cell&lt;R,C,V1&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(cell : Table.Cell&lt;R, C, V1&gt;) : Table.Cell&lt;R, C, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable.2 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable.2 java.util.Map&lt;C,V2&gt; apply(java.util.Map&lt;C,V1&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(row : Map&lt;C, V1&gt;) : MutableMap&lt;C, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable.3 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable.3 java.util.Map&lt;R,V2&gt; apply(java.util.Map&lt;R,V1&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(column : Map&lt;R, V1&gt;) : MutableMap&lt;R, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable.CellSet CellSet(com.google.common.collect.Tables.TransformedTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CellSet()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable.CellSet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable TransformedTable(com.google.common.collect.Table&lt;R,C,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TransformedTable(fromTable : Table&lt;R, C, V1&gt;, function : Function&lt;in V1, V2&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable com.google.common.base.Function&lt;com.google.common.collect.Table.Cell&lt;R,C,V1&gt;,com.google.common.collect.Table.Cell&lt;R,C,V2&gt;&gt; cellFunction()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cellFunction() : Function&lt;Table.Cell&lt;R, C, V1&gt;?, Table.Cell&lt;R, C, V2&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable java.util.Map&lt;R,V2&gt; column(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(columnKey : C) : MutableMap&lt;R, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable boolean contains(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable boolean containsColumn(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsColumn(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable boolean containsRow(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsRow(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable java.util.Map&lt;C,java.util.Map&lt;R,V2&gt;&gt; createColumnMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createColumnMap() : MutableMap&lt;C, Map&lt;R, V2&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable java.util.Map&lt;R,java.util.Map&lt;C,V2&gt;&gt; createRowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createRowMap() : MutableMap&lt;R, Map&lt;C, V2&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable V2 get(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(rowKey : Any?, columnKey : Any?) : V2?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable V2 put(R, C, V2)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : R?, p1 : C?, p2 : V2?) : V2?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable void putAll(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Table&lt;out R, out C, out V2&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable V2 remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(rowKey : Any?, columnKey : Any?) : V2?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransformedTable java.util.Map&lt;C,V2&gt; row(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(rowKey : R?) : MutableMap&lt;C, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable.1 com.google.common.collect.Table.Cell&lt;?,?,?&gt; apply(com.google.common.collect.Table.Cell&lt;?,?,?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(cell : Table.Cell&lt;*, *, *&gt;) : Table.Cell&lt;*, *, *&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable.CellSet CellSet(com.google.common.collect.Tables.TransposeTable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CellSet()&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable.CellSet boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable.CellSet boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable.CellSet boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable TransposeTable(com.google.common.collect.Table&lt;R,C,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TransposeTable(original : Table&lt;R, C, V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable com.google.common.base.Function access$000()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000() : Function&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable java.util.Set&lt;com.google.common.collect.Table.Cell&lt;C,R,V&gt;&gt; cellSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cellSet() : MutableSet&lt;Table.Cell&lt;C, R, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable java.util.Map&lt;C,V&gt; column(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(p0 : R) : MutableMap&lt;C, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable boolean contains(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable boolean containsColumn(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsColumn(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable boolean containsRow(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsRow(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable V get(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?, p1 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable V put(C, R, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : C?, p1 : R?, p2 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable void putAll(com.google.common.collect.Table&lt;? extends C,? extends R,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(table : Table&lt;out C, out R, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable V remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.TransposeTable java.util.Map&lt;R,V&gt; row(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(p0 : C?) : MutableMap&lt;R, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.UnmodifiableRowSortedMap UnmodifiableRowSortedMap(com.google.common.collect.RowSortedTable&lt;R,? extends C,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun UnmodifiableRowSortedMap(delegate : RowSortedTable&lt;R, out C, out V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.UnmodifiableRowSortedMap com.google.common.collect.RowSortedTable&lt;R,C,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : RowSortedTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.UnmodifiableRowSortedMap com.google.common.collect.Table delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Table&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.UnmodifiableRowSortedMap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.UnmodifiableTable UnmodifiableTable(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun UnmodifiableTable(delegate : Table&lt;out R, out C, out V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.UnmodifiableTable java.util.Map&lt;R,V&gt; column(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(p0 : C?) : MutableMap&lt;R, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.UnmodifiableTable com.google.common.collect.Table&lt;R,C,V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Table&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.UnmodifiableTable java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.UnmodifiableTable V put(R, C, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : R?, p1 : C?, p2 : V?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.UnmodifiableTable void putAll(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Table&lt;out R, out C, out V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.UnmodifiableTable V remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables.UnmodifiableTable java.util.Map&lt;C,V&gt; row(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(p0 : R?) : MutableMap&lt;C, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.base.Function access$100()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100() : Function&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.Table.Cell&lt;R,C,V&gt; immutableCell(R, C, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; immutableCell(rowKey : R?, columnKey : C?, value : V?) : Table.Cell&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.Table&lt;R,C,V&gt; newCustomTable(java.util.Map&lt;R,java.util.Map&lt;C,V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.Map&lt;C,V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; newCustomTable(backingMap : Map&lt;R, Map&lt;C, V&gt;?&gt;, factory : Supplier&lt;out Map&lt;C, V&gt;?&gt;) : Table&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.Table&lt;R,C,V2&gt; transformValues(com.google.common.collect.Table&lt;R,C,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V1, V2&gt; transformValues(fromTable : Table&lt;R, C, V1&gt;, function : Function&lt;in V1, V2&gt;) : Table&lt;R, C, V2&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.Table&lt;C,R,V&gt; transpose(com.google.common.collect.Table&lt;R,C,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; transpose(table : Table&lt;R, C, V&gt;) : Table&lt;C, R, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.RowSortedTable&lt;R,C,V&gt; unmodifiableRowSortedTable(com.google.common.collect.RowSortedTable&lt;R,? extends C,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; unmodifiableRowSortedTable(table : RowSortedTable&lt;R, out C, out V&gt;) : RowSortedTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.Table&lt;R,C,V&gt; unmodifiableTable(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; unmodifiableTable(table : Table&lt;out R, out C, out V&gt;) : Table&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.base.Function&lt;java.util.Map&lt;K,V&gt;,java.util.Map&lt;K,V&gt;&gt; unmodifiableWrapper()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; unmodifiableWrapper() : Function&lt;Map&lt;K, V&gt;?, Map&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TransformedImmutableSet com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : UnmodifiableIterator&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TransformedImmutableSet java.util.Iterator iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TransformedImmutableSet java.lang.Object[] toArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray() : Array&lt;out Any?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TransformedImmutableSet T[] toArray(T[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toArray(array : Array&lt;out T&gt;) : Array&lt;out T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TransformedImmutableSet E transform(D)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : D) : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TransformedIterator TransformedIterator(java.util.Iterator&lt;? extends F&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TransformedIterator(backingIterator : Iterator&lt;out F&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TransformedIterator T transform(F)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(p0 : F) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TransformedListIterator TransformedListIterator(java.util.ListIterator&lt;? extends F&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TransformedListIterator(backingIterator : ListIterator&lt;out F&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TransformedListIterator void set(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : T?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable.1 java.util.Iterator&lt;C&gt; apply(java.util.Map&lt;C,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(input : Map&lt;C, V&gt;) : MutableIterator&lt;C&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable.Factory java.lang.Object get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable.Factory java.util.TreeMap&lt;C,V&gt; get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : TreeMap&lt;C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable.TreeRow TreeRow(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TreeRow(rowKey : R)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable.TreeRow TreeRow(R, C, C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TreeRow(rowKey : R, lowerBound : C?, upperBound : C?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable.TreeRow java.util.Map computeBackingRowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeBackingRowMap() : MutableMap?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable.TreeRow java.util.SortedMap&lt;C,V&gt; computeBackingRowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun computeBackingRowMap() : SortedMap&lt;C, V&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable.TreeRow boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable.TreeRow java.util.SortedMap&lt;C,V&gt; headMap(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMap(toKey : C) : SortedMap&lt;C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable.TreeRow V put(C, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(key : C, value : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable.TreeRow boolean rangeContains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rangeContains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable.TreeRow java.util.SortedMap&lt;C,V&gt; subMap(C, C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMap(fromKey : C, toKey : C?) : SortedMap&lt;C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable.TreeRow java.util.SortedMap&lt;C,V&gt; tailMap(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMap(fromKey : C) : SortedMap&lt;C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.util.Map column(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun column(p0 : Any) : MutableMap?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable boolean contains(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable boolean containsColumn(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsColumn(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable boolean containsRow(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsRow(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable com.google.common.collect.TreeBasedTable&lt;R,C,V&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R : Comparable?, C : Comparable?, V&gt; create() : TreeBasedTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable com.google.common.collect.TreeBasedTable&lt;R,C,V&gt; create(com.google.common.collect.TreeBasedTable&lt;R,C,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; create(table : TreeBasedTable&lt;R, C, out V&gt;) : TreeBasedTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable com.google.common.collect.TreeBasedTable&lt;R,C,V&gt; create(java.util.Comparator&lt;? super R&gt;, java.util.Comparator&lt;? super C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, C, V&gt; create(rowComparator : Comparator&lt;in R&gt;, columnComparator : Comparator&lt;in C&gt;) : TreeBasedTable&lt;R, C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.util.Iterator&lt;C&gt; createColumnKeyIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createColumnKeyIterator() : MutableIterator&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable V get(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any?, p1 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.lang.Object put(java.lang.Object, java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : Any?, p1 : Any?, p2 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable void putAll(com.google.common.collect.Table)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Table) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable V remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.util.Map row(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(x0 : Any?) : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.util.SortedMap&lt;C,V&gt; row(R)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun row(rowKey : R) : SortedMap&lt;C, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.util.Set rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.util.SortedSet&lt;R&gt; rowKeySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowKeySet() : SortedSet&lt;R&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.util.Map rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.util.SortedMap&lt;R,java.util.Map&lt;C,V&gt;&gt; rowMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rowMap() : SortedMap&lt;R, Map&lt;C, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap java.util.Map asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : MutableMap&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap java.util.SortedMap&lt;K,java.util.Collection&lt;V&gt;&gt; asMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asMap() : SortedMap&lt;K, Collection&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap boolean containsEntry(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsEntry(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap boolean containsKey(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsKey(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap boolean containsValue(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsValue(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap com.google.common.collect.TreeMultimap&lt;K,V&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Comparable?, V : Comparable?&gt; create() : TreeMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap com.google.common.collect.TreeMultimap&lt;K,V&gt; create(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K : Comparable?, V : Comparable?&gt; create(multimap : Multimap&lt;out K, out V&gt;?) : TreeMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap com.google.common.collect.TreeMultimap&lt;K,V&gt; create(java.util.Comparator&lt;? super K&gt;, java.util.Comparator&lt;? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; create(keyComparator : Comparator&lt;in K&gt;, valueComparator : Comparator&lt;in V&gt;) : TreeMultimap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap java.util.Collection createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableCollection&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap java.util.Set createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : MutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap java.util.SortedSet&lt;V&gt; createCollection()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createCollection() : SortedSet&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap java.util.SortedSet get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Any?) : SortedSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap boolean put(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap boolean putAll(com.google.common.collect.Multimap)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Multimap) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap boolean putAll(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Any?, p1 : Iterable) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap boolean remove(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap java.util.SortedSet removeAll(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Any?) : SortedSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap java.util.SortedSet replaceValues(java.lang.Object, java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceValues(x0 : Any?, x1 : Iterable) : SortedSet?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.1 E getElement()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getElement() : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.2 com.google.common.collect.Multiset.Entry&lt;E&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Multiset.Entry&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.2 java.lang.Object next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.3 com.google.common.collect.Multiset.Entry&lt;E&gt; next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Multiset.Entry&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.3 java.lang.Object next()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun next() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.Aggregate.1 int nodeAggregate(com.google.common.collect.TreeMultiset.AvlNode&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun nodeAggregate(node : TreeMultiset.AvlNode&lt;*&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.Aggregate.1 long treeAggregate(com.google.common.collect.TreeMultiset.AvlNode&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun treeAggregate(p0 : TreeMultiset.AvlNode&lt;*&gt;?) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.Aggregate.2 int nodeAggregate(com.google.common.collect.TreeMultiset.AvlNode&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun nodeAggregate(p0 : TreeMultiset.AvlNode&lt;*&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.Aggregate.2 long treeAggregate(com.google.common.collect.TreeMultiset.AvlNode&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun treeAggregate(p0 : TreeMultiset.AvlNode&lt;*&gt;?) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.Aggregate int nodeAggregate(com.google.common.collect.TreeMultiset.AvlNode&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun nodeAggregate(p0 : TreeMultiset.AvlNode&lt;*&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.Aggregate long treeAggregate(com.google.common.collect.TreeMultiset.AvlNode&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun treeAggregate(p0 : TreeMultiset.AvlNode&lt;*&gt;?) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode AvlNode(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AvlNode(p0 : E?, p1 : Int)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode access$1000(com.google.common.collect.TreeMultiset.AvlNode, java.util.Comparator, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1000(x0 : TreeMultiset.AvlNode, x1 : Comparator, x2 : Any?) : TreeMultiset.AvlNode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode access$1100(com.google.common.collect.TreeMultiset.AvlNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1100(x0 : TreeMultiset.AvlNode) : TreeMultiset.AvlNode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode access$1102(com.google.common.collect.TreeMultiset.AvlNode, com.google.common.collect.TreeMultiset.AvlNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1102(x0 : TreeMultiset.AvlNode, x1 : TreeMultiset.AvlNode?) : TreeMultiset.AvlNode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode int access$200(com.google.common.collect.TreeMultiset.AvlNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : TreeMultiset.AvlNode) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode long access$300(com.google.common.collect.TreeMultiset.AvlNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : TreeMultiset.AvlNode) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode int access$400(com.google.common.collect.TreeMultiset.AvlNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : TreeMultiset.AvlNode) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode java.lang.Object access$500(com.google.common.collect.TreeMultiset.AvlNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$500(x0 : TreeMultiset.AvlNode) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode access$600(com.google.common.collect.TreeMultiset.AvlNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$600(x0 : TreeMultiset.AvlNode) : TreeMultiset.AvlNode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode access$700(com.google.common.collect.TreeMultiset.AvlNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$700(x0 : TreeMultiset.AvlNode) : TreeMultiset.AvlNode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode access$800(com.google.common.collect.TreeMultiset.AvlNode, java.util.Comparator, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$800(x0 : TreeMultiset.AvlNode, x1 : Comparator, x2 : Any?) : TreeMultiset.AvlNode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode access$900(com.google.common.collect.TreeMultiset.AvlNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$900(x0 : TreeMultiset.AvlNode) : TreeMultiset.AvlNode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode access$902(com.google.common.collect.TreeMultiset.AvlNode, com.google.common.collect.TreeMultiset.AvlNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$902(x0 : TreeMultiset.AvlNode, x1 : TreeMultiset.AvlNode?) : TreeMultiset.AvlNode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt; add(java.util.Comparator&lt;? super E&gt;, E, int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : Comparator&lt;in E&gt;, p1 : E?, p2 : Int, p3 : IntArray) : TreeMultiset.AvlNode&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt; addLeftChild(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addLeftChild(e : E?, count : Int) : TreeMultiset.AvlNode&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt; addRightChild(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addRightChild(e : E?, count : Int) : TreeMultiset.AvlNode&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt; ceiling(java.util.Comparator&lt;? super E&gt;, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ceiling(p0 : Comparator&lt;in E&gt;, p1 : E?) : TreeMultiset.AvlNode&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode int count(java.util.Comparator&lt;? super E&gt;, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(comparator : Comparator&lt;in E&gt;, e : E?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt; floor(java.util.Comparator&lt;? super E&gt;, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun floor(p0 : Comparator&lt;in E&gt;, p1 : E?) : TreeMultiset.AvlNode&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode E getElement()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getElement() : E?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode int height(com.google.common.collect.TreeMultiset.AvlNode&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun height(node : TreeMultiset.AvlNode&lt;*&gt;?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt; rebalance()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rebalance() : TreeMultiset.AvlNode&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt; remove(java.util.Comparator&lt;? super E&gt;, E, int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Comparator&lt;in E&gt;, p1 : E?, p2 : Int, p3 : IntArray) : TreeMultiset.AvlNode&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt; rotateLeft()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rotateLeft() : TreeMultiset.AvlNode&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt; rotateRight()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rotateRight() : TreeMultiset.AvlNode&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt; setCount(java.util.Comparator&lt;? super E&gt;, E, int, int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : Comparator&lt;in E&gt;, p1 : E?, p2 : Int, p3 : Int, p4 : IntArray) : TreeMultiset.AvlNode&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt; setCount(java.util.Comparator&lt;? super E&gt;, E, int, int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : Comparator&lt;in E&gt;, p1 : E?, p2 : Int, p3 : IntArray) : TreeMultiset.AvlNode&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.AvlNode long totalCount(com.google.common.collect.TreeMultiset.AvlNode&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun totalCount(node : TreeMultiset.AvlNode&lt;*&gt;?) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.Reference void checkAndSet(T, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkAndSet(p0 : T?, p1 : T?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset.Reference T get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset TreeMultiset(com.google.common.collect.TreeMultiset.Reference&lt;com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt;&gt;, com.google.common.collect.GeneralRange&lt;E&gt;, com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TreeMultiset(rootReference : TreeMultiset.Reference&lt;TreeMultiset.AvlNode&lt;E&gt;?&gt;?, range : GeneralRange&lt;E&gt;, endLink : TreeMultiset.AvlNode&lt;E&gt;?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset TreeMultiset(java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TreeMultiset(comparator : Comparator&lt;in E&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.TreeMultiset.AvlNode access$1200(com.google.common.collect.TreeMultiset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1200(x0 : TreeMultiset) : TreeMultiset.AvlNode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.GeneralRange access$1300(com.google.common.collect.TreeMultiset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1300(x0 : TreeMultiset) : GeneralRange&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.Multiset.Entry access$1400(com.google.common.collect.TreeMultiset, com.google.common.collect.TreeMultiset.AvlNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1400(x0 : TreeMultiset, x1 : TreeMultiset.AvlNode?) : Multiset.Entry&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.TreeMultiset.AvlNode access$1500(com.google.common.collect.TreeMultiset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1500(x0 : TreeMultiset) : TreeMultiset.AvlNode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.TreeMultiset.AvlNode access$1600(com.google.common.collect.TreeMultiset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1600(x0 : TreeMultiset) : TreeMultiset.AvlNode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset void access$1700(com.google.common.collect.TreeMultiset.AvlNode, com.google.common.collect.TreeMultiset.AvlNode, com.google.common.collect.TreeMultiset.AvlNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1700(x0 : TreeMultiset.AvlNode, x1 : TreeMultiset.AvlNode, x2 : TreeMultiset.AvlNode) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset void access$1800(com.google.common.collect.TreeMultiset.AvlNode, com.google.common.collect.TreeMultiset.AvlNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$1800(x0 : TreeMultiset.AvlNode, x1 : TreeMultiset.AvlNode) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset boolean add(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset int add(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(p0 : E?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset boolean addAll(java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addAll(p0 : Collection) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset long aggregateAboveRange(com.google.common.collect.TreeMultiset.Aggregate, com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun aggregateAboveRange(aggr : TreeMultiset.Aggregate?, node : TreeMultiset.AvlNode&lt;E&gt;?) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset long aggregateBelowRange(com.google.common.collect.TreeMultiset.Aggregate, com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun aggregateBelowRange(aggr : TreeMultiset.Aggregate?, node : TreeMultiset.AvlNode&lt;E&gt;?) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset long aggregateForEntries(com.google.common.collect.TreeMultiset.Aggregate)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun aggregateForEntries(aggr : TreeMultiset.Aggregate) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset java.util.Comparator comparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun comparator() : Comparator&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset int count(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun count(element : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.TreeMultiset&lt;E&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable?&gt; create() : TreeMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.TreeMultiset&lt;E&gt; create(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Comparable?&gt; create(elements : Iterable&lt;out E&gt;) : TreeMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.TreeMultiset&lt;E&gt; create(java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; create(p0 : Comparator&lt;in E&gt;?) : TreeMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset java.util.Iterator&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; descendingEntryIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingEntryIterator() : MutableIterator&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.SortedMultiset descendingMultiset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun descendingMultiset() : SortedMultiset&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset int distinctElements(com.google.common.collect.TreeMultiset.AvlNode&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun distinctElements(node : TreeMultiset.AvlNode&lt;*&gt;?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset java.util.SortedSet elementSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun elementSet() : SortedSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset java.util.Iterator&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entryIterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entryIterator() : MutableIterator&lt;Multiset.Entry&lt;E&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.Multiset.Entry firstEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun firstEntry() : Multiset.Entry?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt; firstNode()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun firstNode() : TreeMultiset.AvlNode&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.SortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun headMultiset(p0 : E?, p1 : BoundType) : SortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.Multiset.Entry lastEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastEntry() : Multiset.Entry?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt; lastNode()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastNode() : TreeMultiset.AvlNode&lt;E&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.Multiset.Entry pollFirstEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pollFirstEntry() : Multiset.Entry?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.Multiset.Entry pollLastEntry()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun pollLastEntry() : Multiset.Entry?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(stream : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset boolean remove(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset int remove(java.lang.Object, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(p0 : Any?, p1 : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset boolean removeAll(java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun removeAll(p0 : Collection) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset boolean retainAll(java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun retainAll(p0 : Collection) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset int setCount(E, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(element : E?, count : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset boolean setCount(E, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setCount(p0 : E?, p1 : Int, p2 : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.SortedMultiset subMultiset(java.lang.Object, com.google.common.collect.BoundType, java.lang.Object, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subMultiset(x0 : Any?, x1 : BoundType, x2 : Any?, x3 : BoundType) : SortedMultiset?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset void successor(com.google.common.collect.TreeMultiset.AvlNode&lt;T&gt;, com.google.common.collect.TreeMultiset.AvlNode&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; successor(a : TreeMultiset.AvlNode&lt;T&gt;, b : TreeMultiset.AvlNode&lt;T&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset void successor(com.google.common.collect.TreeMultiset.AvlNode&lt;T&gt;, com.google.common.collect.TreeMultiset.AvlNode&lt;T&gt;, com.google.common.collect.TreeMultiset.AvlNode&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; successor(a : TreeMultiset.AvlNode&lt;T&gt;, b : TreeMultiset.AvlNode&lt;T&gt;, c : TreeMultiset.AvlNode&lt;T&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.SortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tailMultiset(p0 : E?, p1 : BoundType) : SortedMultiset&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.Multiset.Entry&lt;E&gt; wrapEntry(com.google.common.collect.TreeMultiset.AvlNode&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun wrapEntry(baseEntry : TreeMultiset.AvlNode&lt;E&gt;?) : Multiset.Entry&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(stream : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeSet.AsRanges boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeSet java.util.NavigableMap access$000(com.google.common.collect.TreeRangeSet)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : TreeRangeSet) : NavigableMap?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeSet void add(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(rangeToAdd : Range&lt;C&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeSet java.util.Set&lt;com.google.common.collect.Range&lt;C&gt;&gt; asRanges()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asRanges() : MutableSet&lt;Range&lt;C&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeSet com.google.common.collect.RangeSet&lt;C&gt; complement()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun complement() : RangeSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeSet com.google.common.collect.TreeRangeSet&lt;C&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;C : Comparable?&gt; create() : TreeRangeSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeSet com.google.common.collect.RangeSet&lt;C&gt; createComplement()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createComplement() : RangeSet&lt;C&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeSet boolean encloses(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun encloses(range : Range&lt;C&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeSet com.google.common.collect.Range&lt;C&gt; rangeContaining(C)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rangeContaining(p0 : C) : Range&lt;C&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeSet void remove(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remove(rangeToRemove : Range&lt;C&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeSet void replaceRangeWithSameLowerBound(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun replaceRangeWithSameLowerBound(range : Range&lt;C&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.UsingToStringOrdering int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : Any?, right : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.UsingToStringOrdering java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.UsingToStringOrdering java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.WellBehavedMap.EntrySet.1.1 V setValue(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setValue(p0 : V) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.WellBehavedMap.EntrySet.1 1(com.google.common.collect.WellBehavedMap.EntrySet, java.util.Iterator)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun 1(x0 : Iterator)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.WellBehavedMap.EntrySet.1 java.lang.Object transform(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(x0 : Any) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.WellBehavedMap.EntrySet.1 java.util.Map.Entry&lt;K,V&gt; transform(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun transform(key : K?) : MutableMap.MutableEntry&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.WellBehavedMap.EntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; iterator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun iterator() : MutableIterator&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.WellBehavedMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun entrySet() : MutableSet&lt;Map.Entry&lt;K, V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.WellBehavedMap com.google.common.collect.WellBehavedMap&lt;K,V&gt; wrap(java.util.Map&lt;K,V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; wrap(delegate : Map&lt;K, V&gt;?) : WellBehavedMap&lt;K, V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.eventbus.AnnotatedHandlerFinder com.google.common.collect.Multimap&lt;java.lang.Class&lt;?&gt;,com.google.common.eventbus.EventHandler&gt; findAllHandlers(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findAllHandlers(listener : Any) : Multimap&lt;Class&lt;*&gt;?, EventHandler?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.eventbus.AnnotatedHandlerFinder com.google.common.eventbus.EventHandler makeHandler(java.lang.Object, java.lang.reflect.Method)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun makeHandler(listener : Any, method : Method) : EventHandler&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.eventbus.AnnotatedHandlerFinder boolean methodIsDeclaredThreadSafe(java.lang.reflect.Method)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun methodIsDeclaredThreadSafe(method : Method) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.eventbus.AsyncEventBus void access$001(com.google.common.eventbus.AsyncEventBus, java.lang.Object, com.google.common.eventbus.EventHandler)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$001(x0 : AsyncEventBus, x1 : Any?, x2 : EventHandler?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.eventbus.EventBus.1 java.lang.Object get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.eventbus.EventBus.1 java.util.Set&lt;com.google.common.eventbus.EventHandler&gt; get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : MutableSet&lt;EventHandler?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.eventbus.EventBus.2 java.lang.Object initialValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initialValue() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.eventbus.EventBus.2 java.util.concurrent.ConcurrentLinkedQueue&lt;com.google.common.eventbus.EventBus.EventWithHandler&gt; initialValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initialValue() : ConcurrentLinkedQueue&lt;EventBus.EventWithHandler?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.eventbus.EventBus.4 java.util.Set&lt;java.lang.Class&lt;?&gt;&gt; load(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun load(concreteClass : Class&lt;*&gt;) : MutableSet&lt;Class&lt;*&gt;?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.eventbus.EventBus.4 java.lang.Object load(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun load(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.eventbus.EventBus java.util.Set&lt;com.google.common.eventbus.EventHandler&gt; newHandlerSet()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newHandlerSet() : MutableSet&lt;EventHandler?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.eventbus.EventBus void post(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun post(event : Any) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.eventbus.EventHandler EventHandler(java.lang.Object, java.lang.reflect.Method)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun EventHandler(target : Any, method : Method)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.eventbus.EventHandler boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.eventbus.HandlerFindingStrategy com.google.common.collect.Multimap&lt;java.lang.Class&lt;?&gt;,com.google.common.eventbus.EventHandler&gt; findAllHandlers(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findAllHandlers(p0 : Any) : Multimap&lt;Class&lt;*&gt;?, EventHandler?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.eventbus.SynchronizedEventHandler SynchronizedEventHandler(java.lang.Object, java.lang.reflect.Method)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SynchronizedEventHandler(target : Any, method : Method)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.Hasher putBoolean(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBoolean(b : Boolean) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.PrimitiveSink putBoolean(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBoolean(x0 : Boolean) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.Hasher putByte(byte)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putByte(b : Byte) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.PrimitiveSink putByte(byte)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putByte(x0 : Byte) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.Hasher putBytes(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(bytes : ByteArray) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.PrimitiveSink putBytes(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(x0 : ByteArray) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.Hasher putBytes(byte[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(bytes : ByteArray, off : Int, len : Int) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.PrimitiveSink putBytes(byte[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(x0 : ByteArray, x1 : Int, x2 : Int) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.Hasher putChar(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putChar(c : Char) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.PrimitiveSink putChar(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putChar(x0 : Char) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.Hasher putDouble(double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putDouble(d : Double) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.PrimitiveSink putDouble(double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putDouble(x0 : Double) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.Hasher putFloat(float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putFloat(f : Float) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.PrimitiveSink putFloat(float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putFloat(x0 : Float) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.Hasher putInt(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putInt(i : Int) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.PrimitiveSink putInt(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putInt(x0 : Int) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.Hasher putLong(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putLong(l : Long) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.PrimitiveSink putLong(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putLong(x0 : Long) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.Hasher putObject(T, com.google.common.hash.Funnel&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; putObject(instance : T?, funnel : Funnel&lt;in T&gt;) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.Hasher putShort(short)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putShort(s : Short) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.PrimitiveSink putShort(short)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putShort(x0 : Short) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.Hasher putString(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(chars : CharSequence) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(x0 : CharSequence) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.Hasher putString(java.lang.CharSequence, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(chars : CharSequence, charset : Charset?) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction.1 com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(x0 : CharSequence, x1 : Charset?) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction com.google.common.hash.HashCode makeHash(com.google.common.hash.Hasher[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun makeHash(p0 : Array&lt;out Hasher?&gt;) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractCompositeHashFunction com.google.common.hash.Hasher newHasher()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newHasher() : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractHasher com.google.common.hash.Hasher putString(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(charSequence : CharSequence) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractHasher com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(x0 : CharSequence) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractHasher com.google.common.hash.Hasher putString(java.lang.CharSequence, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(charSequence : CharSequence, charset : Charset?) : Hasher?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractHasher com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(x0 : CharSequence, x1 : Charset?) : PrimitiveSink?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction.BufferingHasher com.google.common.hash.Hasher putByte(byte)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putByte(b : Byte) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction.BufferingHasher com.google.common.hash.PrimitiveSink putByte(byte)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putByte(x0 : Byte) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction.BufferingHasher com.google.common.hash.Hasher putBytes(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(bytes : ByteArray) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction.BufferingHasher com.google.common.hash.PrimitiveSink putBytes(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(x0 : ByteArray) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction.BufferingHasher com.google.common.hash.Hasher putBytes(byte[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(bytes : ByteArray, off : Int, len : Int) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction.BufferingHasher com.google.common.hash.PrimitiveSink putBytes(byte[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(x0 : ByteArray, x1 : Int, x2 : Int) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction.BufferingHasher com.google.common.hash.Hasher putChar(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putChar(c : Char) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction.BufferingHasher com.google.common.hash.PrimitiveSink putChar(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putChar(x0 : Char) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction.BufferingHasher com.google.common.hash.Hasher putInt(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putInt(i : Int) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction.BufferingHasher com.google.common.hash.PrimitiveSink putInt(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putInt(x0 : Int) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction.BufferingHasher com.google.common.hash.Hasher putLong(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putLong(l : Long) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction.BufferingHasher com.google.common.hash.PrimitiveSink putLong(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putLong(x0 : Long) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction.BufferingHasher com.google.common.hash.Hasher putObject(T, com.google.common.hash.Funnel&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; putObject(instance : T?, funnel : Funnel&lt;in T&gt;) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction.BufferingHasher com.google.common.hash.Hasher putShort(short)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putShort(s : Short) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction.BufferingHasher com.google.common.hash.PrimitiveSink putShort(short)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putShort(x0 : Short) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction com.google.common.hash.HashCode hashBytes(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashBytes(input : ByteArray) : HashCode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction com.google.common.hash.HashCode hashString(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashString(input : CharSequence) : HashCode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction com.google.common.hash.HashCode hashString(java.lang.CharSequence, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashString(input : CharSequence, charset : Charset?) : HashCode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction com.google.common.hash.Hasher newHasher()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newHasher() : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractNonStreamingHashFunction com.google.common.hash.Hasher newHasher(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newHasher(expectedInputSize : Int) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.HashCode makeHash()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun makeHash() : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher void process(java.nio.ByteBuffer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(p0 : ByteBuffer) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher void processRemaining(java.nio.ByteBuffer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processRemaining(bb : ByteBuffer) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.Hasher putByte(byte)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putByte(b : Byte) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.PrimitiveSink putByte(byte)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putByte(x0 : Byte) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.Hasher putBytes(java.nio.ByteBuffer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(readBuffer : ByteBuffer) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.Hasher putBytes(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(bytes : ByteArray) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.PrimitiveSink putBytes(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(x0 : ByteArray) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.Hasher putBytes(byte[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(bytes : ByteArray, off : Int, len : Int) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.PrimitiveSink putBytes(byte[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(x0 : ByteArray, x1 : Int, x2 : Int) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.Hasher putChar(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putChar(c : Char) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.PrimitiveSink putChar(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putChar(x0 : Char) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.Hasher putInt(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putInt(i : Int) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.PrimitiveSink putInt(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putInt(x0 : Int) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.Hasher putLong(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putLong(l : Long) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.PrimitiveSink putLong(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putLong(x0 : Long) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.Hasher putObject(T, com.google.common.hash.Funnel&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; putObject(instance : T?, funnel : Funnel&lt;in T&gt;) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.Hasher putShort(short)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putShort(s : Short) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.PrimitiveSink putShort(short)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putShort(x0 : Short) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.Hasher putString(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(charSequence : CharSequence) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction.AbstractStreamingHasher com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(x0 : CharSequence) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction com.google.common.hash.HashCode hashBytes(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashBytes(p0 : ByteArray) : HashCode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction com.google.common.hash.HashCode hashInt(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashInt(p0 : Int) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction com.google.common.hash.HashCode hashLong(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashLong(p0 : Long) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction com.google.common.hash.HashCode hashString(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashString(p0 : CharSequence) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.AbstractStreamingHashFunction com.google.common.hash.HashCode hashString(java.lang.CharSequence, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashString(p0 : CharSequence, p1 : Charset?) : HashCode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.BloomFilter.SerialForm SerialForm(com.google.common.hash.BloomFilter&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SerialForm(bf : BloomFilter&lt;T&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.BloomFilter.SerialForm java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.BloomFilter BloomFilter(com.google.common.hash.BloomFilterStrategies.BitArray, int, com.google.common.hash.Funnel&lt;T&gt;, com.google.common.hash.BloomFilter.Strategy)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BloomFilter(bits : BloomFilterStrategies.BitArray, numHashFunctions : Int, funnel : Funnel&lt;T&gt;, strategy : BloomFilter.Strategy?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.BloomFilter BloomFilter(com.google.common.hash.BloomFilterStrategies.BitArray, int, com.google.common.hash.Funnel, com.google.common.hash.BloomFilter.Strategy, com.google.common.hash.BloomFilter.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BloomFilter(x0 : BloomFilterStrategies.BitArray, x1 : Int, x2 : Funnel, x3 : BloomFilter.Strategy?, x4 : BloomFilter.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.BloomFilter com.google.common.hash.BloomFilterStrategies.BitArray access$000(com.google.common.hash.BloomFilter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : BloomFilter) : BloomFilterStrategies.BitArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.BloomFilter int access$100(com.google.common.hash.BloomFilter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : BloomFilter) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.BloomFilter com.google.common.hash.Funnel access$200(com.google.common.hash.BloomFilter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : BloomFilter) : Funnel&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.BloomFilter com.google.common.hash.BloomFilter.Strategy access$300(com.google.common.hash.BloomFilter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : BloomFilter) : BloomFilter.Strategy?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.BloomFilter com.google.common.hash.BloomFilter&lt;T&gt; copy()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy() : BloomFilter&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.BloomFilter com.google.common.hash.BloomFilter&lt;T&gt; create(com.google.common.hash.Funnel&lt;T&gt;, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; create(funnel : Funnel&lt;T&gt;, expectedInsertions : Int) : BloomFilter&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.BloomFilter com.google.common.hash.BloomFilter&lt;T&gt; create(com.google.common.hash.Funnel&lt;T&gt;, int, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; create(funnel : Funnel&lt;T&gt;, expectedInsertions : Int, falsePositiveProbability : Double) : BloomFilter&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.BloomFilter boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.BloomFilter java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.BloomFilterStrategies.BitArray BitArray(long[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BitArray(data : LongArray)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.BloomFilterStrategies.BitArray com.google.common.hash.BloomFilterStrategies.BitArray copy()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy() : BloomFilterStrategies.BitArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.BloomFilterStrategies.BitArray boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnel void funnel(T, com.google.common.hash.PrimitiveSink)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun funnel(p0 : T, p1 : PrimitiveSink) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels.ByteArrayFunnel void funnel(java.lang.Object, com.google.common.hash.PrimitiveSink)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun funnel(x0 : Any, x1 : PrimitiveSink) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels.ByteArrayFunnel void funnel(byte[], com.google.common.hash.PrimitiveSink)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun funnel(from : ByteArray?, into : PrimitiveSink) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels.ByteArrayFunnel java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels.IntegerFunnel void funnel(java.lang.Integer, com.google.common.hash.PrimitiveSink)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun funnel(from : Int, into : PrimitiveSink) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels.IntegerFunnel void funnel(java.lang.Object, com.google.common.hash.PrimitiveSink)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun funnel(x0 : Any, x1 : PrimitiveSink) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels.IntegerFunnel java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels.LongFunnel void funnel(java.lang.Long, com.google.common.hash.PrimitiveSink)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun funnel(from : Long, into : PrimitiveSink) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels.LongFunnel void funnel(java.lang.Object, com.google.common.hash.PrimitiveSink)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun funnel(x0 : Any, x1 : PrimitiveSink) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels.LongFunnel java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels.SinkAsStream SinkAsStream(com.google.common.hash.PrimitiveSink)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SinkAsStream(sink : PrimitiveSink)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels.StringFunnel void funnel(java.lang.CharSequence, com.google.common.hash.PrimitiveSink)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun funnel(from : CharSequence?, into : PrimitiveSink) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels.StringFunnel void funnel(java.lang.Object, com.google.common.hash.PrimitiveSink)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun funnel(x0 : Any, x1 : PrimitiveSink) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels.StringFunnel java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels java.io.OutputStream asOutputStream(com.google.common.hash.PrimitiveSink)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asOutputStream(sink : PrimitiveSink) : OutputStream&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels com.google.common.hash.Funnel&lt;byte[]&gt; byteArrayFunnel()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun byteArrayFunnel() : Funnel&lt;ByteArray?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels com.google.common.hash.Funnel&lt;java.lang.Integer&gt; integerFunnel()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun integerFunnel() : Funnel&lt;Int?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels com.google.common.hash.Funnel&lt;java.lang.Long&gt; longFunnel()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun longFunnel() : Funnel&lt;Long?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Funnels com.google.common.hash.Funnel&lt;java.lang.CharSequence&gt; stringFunnel()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun stringFunnel() : Funnel&lt;CharSequence?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.HashCode byte[] asBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asBytes() : ByteArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.HashCode boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(object : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.HashCode int writeBytesTo(byte[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeBytesTo(dest : ByteArray, offset : Int, maxLength : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.HashCodes.IntHashCode byte[] asBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asBytes() : ByteArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.HashCodes.LongHashCode byte[] asBytes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asBytes() : ByteArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.HashCodes com.google.common.hash.HashCode fromBytes(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fromBytes(bytes : ByteArray) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.HashCodes com.google.common.hash.HashCode fromBytesNoCopy(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fromBytesNoCopy(bytes : ByteArray?) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.HashCodes com.google.common.hash.HashCode fromInt(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fromInt(hash : Int) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.HashCodes com.google.common.hash.HashCode fromLong(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fromLong(hash : Long) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.HashFunction com.google.common.hash.HashCode hashBytes(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashBytes(p0 : ByteArray) : HashCode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.HashFunction com.google.common.hash.HashCode hashInt(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashInt(p0 : Int) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.HashFunction com.google.common.hash.HashCode hashLong(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashLong(p0 : Long) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.HashFunction com.google.common.hash.HashCode hashString(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashString(p0 : CharSequence) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.HashFunction com.google.common.hash.HashCode hashString(java.lang.CharSequence, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashString(p0 : CharSequence, p1 : Charset?) : HashCode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.HashFunction com.google.common.hash.Hasher newHasher()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newHasher() : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.HashFunction com.google.common.hash.Hasher newHasher(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newHasher(p0 : Int) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hasher com.google.common.hash.HashCode hash()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hash() : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hasher com.google.common.hash.Hasher putBoolean(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBoolean(p0 : Boolean) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hasher com.google.common.hash.Hasher putByte(byte)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putByte(p0 : Byte) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hasher com.google.common.hash.Hasher putBytes(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(p0 : ByteArray) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hasher com.google.common.hash.Hasher putBytes(byte[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(p0 : ByteArray, p1 : Int, p2 : Int) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hasher com.google.common.hash.Hasher putChar(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putChar(p0 : Char) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hasher com.google.common.hash.Hasher putDouble(double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putDouble(p0 : Double) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hasher com.google.common.hash.Hasher putFloat(float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putFloat(p0 : Float) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hasher com.google.common.hash.Hasher putInt(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putInt(p0 : Int) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hasher com.google.common.hash.Hasher putLong(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putLong(p0 : Long) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hasher com.google.common.hash.Hasher putObject(T, com.google.common.hash.Funnel&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; putObject(p0 : T?, p1 : Funnel&lt;in T&gt;) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hasher com.google.common.hash.Hasher putShort(short)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putShort(p0 : Short) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hasher com.google.common.hash.Hasher putString(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(p0 : CharSequence) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hasher com.google.common.hash.Hasher putString(java.lang.CharSequence, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(p0 : CharSequence, p1 : Charset?) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hashing.ConcatenatedHashFunction ConcatenatedHashFunction(com.google.common.hash.HashFunction...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ConcatenatedHashFunction(vararg functions : HashFunction)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hashing.ConcatenatedHashFunction com.google.common.hash.HashCode makeHash(com.google.common.hash.Hasher[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun makeHash(hashers : Array&lt;out Hasher?&gt;) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hashing com.google.common.hash.HashCode combineOrdered(java.lang.Iterable&lt;com.google.common.hash.HashCode&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun combineOrdered(hashCodes : Iterable&lt;HashCode?&gt;) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hashing com.google.common.hash.HashCode combineUnordered(java.lang.Iterable&lt;com.google.common.hash.HashCode&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun combineUnordered(hashCodes : Iterable&lt;HashCode?&gt;) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hashing int consistentHash(com.google.common.hash.HashCode, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun consistentHash(hashCode : HashCode, buckets : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hashing com.google.common.hash.HashFunction goodFastHash(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun goodFastHash(minimumBits : Int) : HashFunction&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hashing com.google.common.hash.HashFunction md5()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun md5() : HashFunction&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hashing com.google.common.hash.HashFunction murmur3_128()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun murmur3_128() : HashFunction&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hashing com.google.common.hash.HashFunction murmur3_128(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun murmur3_128(seed : Int) : HashFunction&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hashing com.google.common.hash.HashFunction murmur3_32()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun murmur3_32() : HashFunction&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hashing com.google.common.hash.HashFunction murmur3_32(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun murmur3_32(seed : Int) : HashFunction&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hashing long padToLong(com.google.common.hash.HashCode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun padToLong(hashCode : HashCode) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hashing com.google.common.hash.HashFunction sha1()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sha1() : HashFunction&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hashing com.google.common.hash.HashFunction sha256()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sha256() : HashFunction&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Hashing com.google.common.hash.HashFunction sha512()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sha512() : HashFunction&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.HashCode hash()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hash() : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.Hasher putBoolean(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBoolean(b : Boolean) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.PrimitiveSink putBoolean(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBoolean(x0 : Boolean) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.Hasher putByte(byte)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putByte(b : Byte) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.PrimitiveSink putByte(byte)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putByte(x0 : Byte) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.Hasher putBytes(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(bytes : ByteArray) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.PrimitiveSink putBytes(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(x0 : ByteArray) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.Hasher putBytes(byte[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(bytes : ByteArray, off : Int, len : Int) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.PrimitiveSink putBytes(byte[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(x0 : ByteArray, x1 : Int, x2 : Int) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.Hasher putChar(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putChar(c : Char) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.PrimitiveSink putChar(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putChar(x0 : Char) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.Hasher putDouble(double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putDouble(d : Double) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.PrimitiveSink putDouble(double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putDouble(x0 : Double) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.Hasher putFloat(float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putFloat(f : Float) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.PrimitiveSink putFloat(float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putFloat(x0 : Float) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.Hasher putInt(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putInt(i : Int) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.PrimitiveSink putInt(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putInt(x0 : Int) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.Hasher putLong(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putLong(l : Long) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.PrimitiveSink putLong(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putLong(x0 : Long) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.Hasher putObject(T, com.google.common.hash.Funnel&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; putObject(instance : T?, funnel : Funnel&lt;in T&gt;) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.Hasher putShort(short)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putShort(s : Short) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.PrimitiveSink putShort(short)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putShort(x0 : Short) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.Hasher putString(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(charSequence : CharSequence) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(x0 : CharSequence) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.Hasher putString(java.lang.CharSequence, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(charSequence : CharSequence, charset : Charset?) : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction.MessageDigestHasher com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(x0 : CharSequence, x1 : Charset?) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.MessageDigestHashFunction com.google.common.hash.Hasher newHasher()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newHasher() : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Murmur3_128HashFunction.Murmur3_128Hasher com.google.common.hash.HashCode makeHash()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun makeHash() : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Murmur3_128HashFunction.Murmur3_128Hasher void process(java.nio.ByteBuffer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(bb : ByteBuffer) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Murmur3_128HashFunction.Murmur3_128Hasher void processRemaining(java.nio.ByteBuffer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processRemaining(bb : ByteBuffer) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Murmur3_128HashFunction com.google.common.hash.Hasher newHasher()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newHasher() : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Murmur3_32HashFunction.Murmur3_32Hasher com.google.common.hash.HashCode makeHash()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun makeHash() : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Murmur3_32HashFunction.Murmur3_32Hasher void process(java.nio.ByteBuffer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun process(bb : ByteBuffer) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Murmur3_32HashFunction.Murmur3_32Hasher void processRemaining(java.nio.ByteBuffer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun processRemaining(bb : ByteBuffer) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Murmur3_32HashFunction com.google.common.hash.HashCode access$200(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : Int, x1 : Int) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Murmur3_32HashFunction com.google.common.hash.HashCode fmix(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fmix(h1 : Int, length : Int) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Murmur3_32HashFunction com.google.common.hash.HashCode hashInt(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashInt(input : Int) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Murmur3_32HashFunction com.google.common.hash.HashCode hashLong(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashLong(input : Long) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Murmur3_32HashFunction com.google.common.hash.HashCode hashString(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hashString(input : CharSequence) : HashCode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.Murmur3_32HashFunction com.google.common.hash.Hasher newHasher()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newHasher() : Hasher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.PrimitiveSink com.google.common.hash.PrimitiveSink putBoolean(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBoolean(p0 : Boolean) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.PrimitiveSink com.google.common.hash.PrimitiveSink putByte(byte)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putByte(p0 : Byte) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.PrimitiveSink com.google.common.hash.PrimitiveSink putBytes(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(p0 : ByteArray) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.PrimitiveSink com.google.common.hash.PrimitiveSink putBytes(byte[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putBytes(p0 : ByteArray, p1 : Int, p2 : Int) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.PrimitiveSink com.google.common.hash.PrimitiveSink putChar(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putChar(p0 : Char) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.PrimitiveSink com.google.common.hash.PrimitiveSink putDouble(double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putDouble(p0 : Double) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.PrimitiveSink com.google.common.hash.PrimitiveSink putFloat(float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putFloat(p0 : Float) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.PrimitiveSink com.google.common.hash.PrimitiveSink putInt(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putInt(p0 : Int) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.PrimitiveSink com.google.common.hash.PrimitiveSink putLong(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putLong(p0 : Long) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.PrimitiveSink com.google.common.hash.PrimitiveSink putShort(short)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putShort(p0 : Short) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.PrimitiveSink com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(p0 : CharSequence) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.hash.PrimitiveSink com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putString(p0 : CharSequence, p1 : Charset?) : PrimitiveSink&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.AppendableWriter java.io.Writer append(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun append(c : Char) : Writer&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.AppendableWriter java.lang.Appendable append(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun append(x0 : Char) : Appendable&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.AppendableWriter java.io.Writer append(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun append(charSeq : CharSequence?) : Writer&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.AppendableWriter java.lang.Appendable append(java.lang.CharSequence)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun append(x0 : CharSequence?) : Appendable&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.AppendableWriter java.io.Writer append(java.lang.CharSequence, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun append(charSeq : CharSequence?, start : Int, end : Int) : Writer&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.AppendableWriter java.lang.Appendable append(java.lang.CharSequence, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun append(x0 : CharSequence?, x1 : Int, x2 : Int) : Appendable&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams.1 java.io.ByteArrayInputStream getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : ByteArrayInputStream&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams.1 java.lang.Object getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams.3 java.io.InputStream getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : InputStream&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams.3 java.lang.Object getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams.4 java.io.InputStream getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : InputStream&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams.4 java.lang.Object getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams.ByteArrayDataInputStream ByteArrayDataInputStream(byte[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ByteArrayDataInputStream(bytes : ByteArray, start : Int)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams long copy(com.google.common.io.InputSupplier&lt;? extends java.io.InputStream&gt;, com.google.common.io.OutputSupplier&lt;? extends java.io.OutputStream&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy(from : InputSupplier&lt;out InputStream?&gt;, to : OutputSupplier&lt;out OutputStream?&gt;) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams long copy(com.google.common.io.InputSupplier&lt;? extends java.io.InputStream&gt;, java.io.OutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy(from : InputSupplier&lt;out InputStream?&gt;, to : OutputStream?) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams long copy(java.io.InputStream, com.google.common.io.OutputSupplier&lt;? extends java.io.OutputStream&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy(from : InputStream, to : OutputSupplier&lt;out OutputStream?&gt;) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams long copy(java.io.InputStream, java.io.OutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy(from : InputStream, to : OutputStream?) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams long copy(java.nio.channels.ReadableByteChannel, java.nio.channels.WritableByteChannel)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy(from : ReadableByteChannel, to : WritableByteChannel?) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams boolean equal(com.google.common.io.InputSupplier&lt;? extends java.io.InputStream&gt;, com.google.common.io.InputSupplier&lt;? extends java.io.InputStream&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equal(supplier1 : InputSupplier&lt;out InputStream?&gt;, supplier2 : InputSupplier&lt;out InputStream?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams long getChecksum(com.google.common.io.InputSupplier&lt;? extends java.io.InputStream&gt;, java.util.zip.Checksum)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getChecksum(supplier : InputSupplier&lt;out InputStream?&gt;, checksum : Checksum?) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams com.google.common.hash.HashCode hash(com.google.common.io.InputSupplier&lt;? extends java.io.InputStream&gt;, com.google.common.hash.HashFunction)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hash(supplier : InputSupplier&lt;out InputStream?&gt;, hashFunction : HashFunction) : HashCode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams com.google.common.io.InputSupplier&lt;java.io.InputStream&gt; join(java.lang.Iterable&lt;? extends com.google.common.io.InputSupplier&lt;? extends java.io.InputStream&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(suppliers : Iterable&lt;out InputSupplier&lt;out InputStream?&gt;?&gt;?) : InputSupplier&lt;InputStream?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams com.google.common.io.InputSupplier&lt;java.io.InputStream&gt; join(com.google.common.io.InputSupplier&lt;? extends java.io.InputStream&gt;...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(vararg suppliers : InputSupplier&lt;out InputStream?&gt;?) : InputSupplier&lt;InputStream?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams long length(com.google.common.io.InputSupplier&lt;? extends java.io.InputStream&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun length(supplier : InputSupplier&lt;out InputStream?&gt;) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams com.google.common.io.ByteArrayDataInput newDataInput(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newDataInput(bytes : ByteArray?) : ByteArrayDataInput&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams com.google.common.io.ByteArrayDataInput newDataInput(byte[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newDataInput(bytes : ByteArray, start : Int) : ByteArrayDataInput&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams com.google.common.io.ByteArrayDataOutput newDataOutput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newDataOutput() : ByteArrayDataOutput&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams com.google.common.io.ByteArrayDataOutput newDataOutput(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newDataOutput(size : Int) : ByteArrayDataOutput&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams com.google.common.io.InputSupplier&lt;java.io.ByteArrayInputStream&gt; newInputStreamSupplier(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newInputStreamSupplier(b : ByteArray) : InputSupplier&lt;ByteArrayInputStream?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams com.google.common.io.InputSupplier&lt;java.io.ByteArrayInputStream&gt; newInputStreamSupplier(byte[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newInputStreamSupplier(b : ByteArray?, off : Int, len : Int) : InputSupplier&lt;ByteArrayInputStream?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams T readBytes(com.google.common.io.InputSupplier&lt;? extends java.io.InputStream&gt;, com.google.common.io.ByteProcessor&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; readBytes(supplier : InputSupplier&lt;out InputStream?&gt;, processor : ByteProcessor&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams void readFully(java.io.InputStream, byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readFully(in : InputStream?, b : ByteArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams com.google.common.io.InputSupplier&lt;java.io.InputStream&gt; slice(com.google.common.io.InputSupplier&lt;? extends java.io.InputStream&gt;, long, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun slice(supplier : InputSupplier&lt;out InputStream?&gt;, offset : Long, length : Long) : InputSupplier&lt;InputStream?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams byte[] toByteArray(com.google.common.io.InputSupplier&lt;? extends java.io.InputStream&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toByteArray(supplier : InputSupplier&lt;out InputStream?&gt;) : ByteArray?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams byte[] toByteArray(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toByteArray(in : InputStream) : ByteArray?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.ByteStreams void write(byte[], com.google.common.io.OutputSupplier&lt;? extends java.io.OutputStream&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun write(from : ByteArray, to : OutputSupplier&lt;out OutputStream?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams.1 java.io.StringReader getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : StringReader&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams.1 java.lang.Object getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams.2 java.io.InputStreamReader getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : InputStreamReader&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams.2 java.lang.Object getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams.3 java.io.OutputStreamWriter getOutput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutput() : OutputStreamWriter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams.3 java.lang.Object getOutput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutput() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams.4 java.io.Reader getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : Reader&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams.4 java.lang.Object getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams java.io.Writer asWriter(java.lang.Appendable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asWriter(target : Appendable?) : Writer&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams long copy(com.google.common.io.InputSupplier&lt;R&gt;, com.google.common.io.OutputSupplier&lt;W&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, W&gt; copy(from : InputSupplier&lt;R&gt;, to : OutputSupplier&lt;W&gt;) : Long where R : Readable?, R : Closeable?, W : Appendable?, W : Closeable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams long copy(com.google.common.io.InputSupplier&lt;R&gt;, java.lang.Appendable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R&gt; copy(from : InputSupplier&lt;R&gt;, to : Appendable?) : Long where R : Readable?, R : Closeable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams long copy(java.lang.Readable, java.lang.Appendable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy(from : Readable, to : Appendable?) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams com.google.common.io.InputSupplier&lt;java.io.Reader&gt; join(java.lang.Iterable&lt;? extends com.google.common.io.InputSupplier&lt;? extends java.io.Reader&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(suppliers : Iterable&lt;out InputSupplier&lt;out Reader?&gt;?&gt;?) : InputSupplier&lt;Reader?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams com.google.common.io.InputSupplier&lt;java.io.Reader&gt; join(com.google.common.io.InputSupplier&lt;? extends java.io.Reader&gt;...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(vararg suppliers : InputSupplier&lt;out Reader?&gt;?) : InputSupplier&lt;Reader?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams com.google.common.io.InputSupplier&lt;java.io.InputStreamReader&gt; newReaderSupplier(com.google.common.io.InputSupplier&lt;? extends java.io.InputStream&gt;, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newReaderSupplier(in : InputSupplier&lt;out InputStream?&gt;, charset : Charset) : InputSupplier&lt;InputStreamReader?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams com.google.common.io.InputSupplier&lt;java.io.StringReader&gt; newReaderSupplier(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newReaderSupplier(value : String) : InputSupplier&lt;StringReader?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams com.google.common.io.OutputSupplier&lt;java.io.OutputStreamWriter&gt; newWriterSupplier(com.google.common.io.OutputSupplier&lt;? extends java.io.OutputStream&gt;, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newWriterSupplier(out : OutputSupplier&lt;out OutputStream?&gt;, charset : Charset) : OutputSupplier&lt;OutputStreamWriter?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams java.lang.String readFirstLine(com.google.common.io.InputSupplier&lt;R&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R&gt; readFirstLine(supplier : InputSupplier&lt;R&gt;) : String? where R : Readable?, R : Closeable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams java.util.List&lt;java.lang.String&gt; readLines(com.google.common.io.InputSupplier&lt;R&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R&gt; readLines(supplier : InputSupplier&lt;R&gt;) : MutableList&lt;String?&gt; where R : Readable?, R : Closeable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams T readLines(com.google.common.io.InputSupplier&lt;R&gt;, com.google.common.io.LineProcessor&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R, T&gt; readLines(supplier : InputSupplier&lt;R&gt;, callback : LineProcessor&lt;T&gt;) : T? where R : Readable?, R : Closeable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams java.util.List&lt;java.lang.String&gt; readLines(java.lang.Readable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readLines(r : Readable) : MutableList&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams java.lang.String toString(com.google.common.io.InputSupplier&lt;R&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R&gt; toString(supplier : InputSupplier&lt;R&gt;) : String? where R : Readable?, R : Closeable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams java.lang.String toString(java.lang.Readable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString(r : Readable) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams java.lang.StringBuilder toStringBuilder(com.google.common.io.InputSupplier&lt;R&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R&gt; toStringBuilder(supplier : InputSupplier&lt;R&gt;) : StringBuilder where R : Readable?, R : Closeable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams java.lang.StringBuilder toStringBuilder(java.lang.Readable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toStringBuilder(r : Readable) : StringBuilder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.CharStreams void write(java.lang.CharSequence, com.google.common.io.OutputSupplier&lt;W&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;W&gt; write(from : CharSequence, to : OutputSupplier&lt;W&gt;) : Unit where W : Appendable?, W : Closeable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Closeables void close(java.io.Closeable, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun close(p0 : Closeable?, p1 : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Closeables void closeQuietly(java.io.Closeable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun closeQuietly(p0 : Closeable?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.FileBackedOutputStream.1 java.io.InputStream getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : InputStream&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.FileBackedOutputStream.1 java.lang.Object getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.FileBackedOutputStream.2 java.io.InputStream getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : InputStream&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.FileBackedOutputStream.2 java.lang.Object getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.FileBackedOutputStream java.io.InputStream access$100(com.google.common.io.FileBackedOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : FileBackedOutputStream) : InputStream&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.FileBackedOutputStream com.google.common.io.InputSupplier&lt;java.io.InputStream&gt; getSupplier()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSupplier() : InputSupplier&lt;InputStream?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.FileBackedOutputStream java.io.InputStream openStream()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun openStream() : InputStream&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.FileBackedOutputStream void write(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun write(b : ByteArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files.1 java.io.FileInputStream getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : FileInputStream&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files.1 java.lang.Object getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files.2 java.io.FileOutputStream getOutput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutput() : FileOutputStream&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files.2 java.lang.Object getOutput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutput() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files void append(java.lang.CharSequence, java.io.File, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun append(from : CharSequence, to : File, charset : Charset) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files void copy(com.google.common.io.InputSupplier&lt;? extends java.io.InputStream&gt;, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy(from : InputSupplier&lt;out InputStream?&gt;, to : File) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files void copy(com.google.common.io.InputSupplier&lt;R&gt;, java.io.File, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;R&gt; copy(from : InputSupplier&lt;R&gt;, to : File, charset : Charset) : Unit where R : Readable?, R : Closeable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files void copy(java.io.File, com.google.common.io.OutputSupplier&lt;? extends java.io.OutputStream&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy(from : File, to : OutputSupplier&lt;out OutputStream?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files void copy(java.io.File, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy(from : File, to : File) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files void copy(java.io.File, java.io.OutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy(from : File, to : OutputStream?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files void copy(java.io.File, java.nio.charset.Charset, com.google.common.io.OutputSupplier&lt;W&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;W&gt; copy(from : File, charset : Charset, to : OutputSupplier&lt;W&gt;) : Unit where W : Appendable?, W : Closeable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files void copy(java.io.File, java.nio.charset.Charset, java.lang.Appendable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy(from : File, charset : Charset, to : Appendable?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files void createParentDirs(java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createParentDirs(file : File) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files java.io.File createTempDir()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createTempDir() : File&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files long getChecksum(java.io.File, java.util.zip.Checksum)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getChecksum(file : File, checksum : Checksum?) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files java.lang.String getFileExtension(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getFileExtension(fileName : String) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files com.google.common.hash.HashCode hash(java.io.File, com.google.common.hash.HashFunction)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hash(file : File, hashFunction : HashFunction) : HashCode?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files java.nio.MappedByteBuffer map(java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun map(file : File) : MappedByteBuffer?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files java.nio.MappedByteBuffer map(java.io.File, java.nio.channels.FileChannel.MapMode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun map(file : File, mode : FileChannel.MapMode?) : MappedByteBuffer?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files java.nio.MappedByteBuffer map(java.io.RandomAccessFile, java.nio.channels.FileChannel.MapMode, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun map(raf : RandomAccessFile, mode : FileChannel.MapMode?, size : Long) : MappedByteBuffer?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files void move(java.io.File, java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun move(from : File, to : File) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files com.google.common.io.InputSupplier&lt;java.io.FileInputStream&gt; newInputStreamSupplier(java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newInputStreamSupplier(file : File) : InputSupplier&lt;FileInputStream?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files com.google.common.io.OutputSupplier&lt;java.io.FileOutputStream&gt; newOutputStreamSupplier(java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newOutputStreamSupplier(file : File) : OutputSupplier&lt;FileOutputStream?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files com.google.common.io.OutputSupplier&lt;java.io.FileOutputStream&gt; newOutputStreamSupplier(java.io.File, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newOutputStreamSupplier(file : File, append : Boolean) : OutputSupplier&lt;FileOutputStream?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files java.io.BufferedReader newReader(java.io.File, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newReader(file : File?, charset : Charset?) : BufferedReader&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files com.google.common.io.InputSupplier&lt;java.io.InputStreamReader&gt; newReaderSupplier(java.io.File, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newReaderSupplier(file : File, charset : Charset) : InputSupplier&lt;InputStreamReader?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files java.io.BufferedWriter newWriter(java.io.File, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newWriter(file : File?, charset : Charset?) : BufferedWriter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files com.google.common.io.OutputSupplier&lt;java.io.OutputStreamWriter&gt; newWriterSupplier(java.io.File, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newWriterSupplier(file : File, charset : Charset) : OutputSupplier&lt;OutputStreamWriter?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files com.google.common.io.OutputSupplier&lt;java.io.OutputStreamWriter&gt; newWriterSupplier(java.io.File, java.nio.charset.Charset, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newWriterSupplier(file : File, charset : Charset, append : Boolean) : OutputSupplier&lt;OutputStreamWriter?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files T readBytes(java.io.File, com.google.common.io.ByteProcessor&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; readBytes(file : File, processor : ByteProcessor&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files java.lang.String readFirstLine(java.io.File, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readFirstLine(file : File, charset : Charset) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files java.util.List&lt;java.lang.String&gt; readLines(java.io.File, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readLines(file : File, charset : Charset) : MutableList&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files T readLines(java.io.File, java.nio.charset.Charset, com.google.common.io.LineProcessor&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; readLines(file : File, charset : Charset, callback : LineProcessor&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files java.lang.String simplifyPath(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun simplifyPath(pathname : String) : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files byte[] toByteArray(java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toByteArray(file : File) : ByteArray?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files java.lang.String toString(java.io.File, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString(file : File, charset : Charset) : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files void touch(java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun touch(file : File) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files void write(java.lang.CharSequence, java.io.File, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun write(from : CharSequence, to : File, charset : Charset) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files void write(java.lang.CharSequence, java.io.File, java.nio.charset.Charset, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun write(from : CharSequence, to : File, charset : Charset, append : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Files void write(byte[], java.io.File)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun write(from : ByteArray, to : File) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.InputSupplier T getInput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInput() : T&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.LimitInputStream LimitInputStream(java.io.InputStream, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun LimitInputStream(in : InputStream, limit : Long)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.LineReader LineReader(java.lang.Readable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun LineReader(readable : Readable)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.LineReader java.util.Queue access$000(com.google.common.io.LineReader)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : LineReader) : Queue&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.LittleEndianDataInputStream LittleEndianDataInputStream(java.io.InputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun LittleEndianDataInputStream(in : InputStream)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.LittleEndianDataInputStream void readFully(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readFully(b : ByteArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.LittleEndianDataOutputStream LittleEndianDataOutputStream(java.io.OutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun LittleEndianDataOutputStream(out : OutputStream)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.LittleEndianDataOutputStream void writeChars(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeChars(s : String) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.OutputSupplier T getOutput()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOutput() : T&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.PatternFilenameFilter PatternFilenameFilter(java.util.regex.Pattern)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PatternFilenameFilter(pattern : Pattern)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.PatternFilenameFilter boolean accept(java.io.File, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun accept(p0 : File?, p1 : String?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Resources void copy(java.net.URL, java.io.OutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copy(from : URL, to : OutputStream?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Resources java.net.URL getResource(java.lang.Class&lt;?&gt;, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getResource(contextClass : Class&lt;*&gt;, resourceName : String?) : URL?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Resources java.net.URL getResource(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getResource(resourceName : String?) : URL?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Resources com.google.common.io.InputSupplier&lt;java.io.InputStream&gt; newInputStreamSupplier(java.net.URL)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newInputStreamSupplier(url : URL) : InputSupplier&lt;InputStream?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Resources com.google.common.io.InputSupplier&lt;java.io.InputStreamReader&gt; newReaderSupplier(java.net.URL, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newReaderSupplier(url : URL, charset : Charset) : InputSupplier&lt;InputStreamReader?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Resources java.util.List&lt;java.lang.String&gt; readLines(java.net.URL, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readLines(url : URL, charset : Charset) : MutableList&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Resources T readLines(java.net.URL, java.nio.charset.Charset, com.google.common.io.LineProcessor&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; readLines(url : URL, charset : Charset, callback : LineProcessor&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Resources byte[] toByteArray(java.net.URL)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toByteArray(url : URL) : ByteArray?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.io.Resources java.lang.String toString(java.net.URL, java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString(url : URL, charset : Charset) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.BigIntegerMath boolean fitsInLong(java.math.BigInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fitsInLong(x : BigInteger) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.BigIntegerMath boolean isPowerOfTwo(java.math.BigInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isPowerOfTwo(x : BigInteger) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.BigIntegerMath java.math.BigInteger listProduct(java.util.List&lt;java.math.BigInteger&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listProduct(nums : List&lt;BigInteger?&gt;) : BigInteger?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.BigIntegerMath int log10(java.math.BigInteger, java.math.RoundingMode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun log10(x : BigInteger, mode : RoundingMode) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.BigIntegerMath int log2(java.math.BigInteger, java.math.RoundingMode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun log2(x : BigInteger, mode : RoundingMode) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.BigIntegerMath java.math.BigInteger sqrt(java.math.BigInteger, java.math.RoundingMode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sqrt(x : BigInteger, mode : RoundingMode) : BigInteger?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.BigIntegerMath java.math.BigInteger sqrtApproxWithDoubles(java.math.BigInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sqrtApproxWithDoubles(x : BigInteger) : BigInteger?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.BigIntegerMath java.math.BigInteger sqrtFloor(java.math.BigInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sqrtFloor(x : BigInteger) : BigInteger&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.DoubleMath double roundIntermediate(double, java.math.RoundingMode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun roundIntermediate(x : Double, mode : RoundingMode) : Double&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.DoubleMath java.math.BigInteger roundToBigInteger(double, java.math.RoundingMode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun roundToBigInteger(x : Double, mode : RoundingMode) : BigInteger?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.DoubleMath int roundToInt(double, java.math.RoundingMode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun roundToInt(x : Double, mode : RoundingMode) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.DoubleMath long roundToLong(double, java.math.RoundingMode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun roundToLong(x : Double, mode : RoundingMode) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.DoubleUtils double bigToDouble(java.math.BigInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun bigToDouble(x : BigInteger) : Double&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.IntMath int divide(int, int, java.math.RoundingMode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun divide(p : Int, q : Int, mode : RoundingMode) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.IntMath int log10(int, java.math.RoundingMode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun log10(x : Int, mode : RoundingMode) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.IntMath int log2(int, java.math.RoundingMode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun log2(x : Int, mode : RoundingMode) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.IntMath int sqrt(int, java.math.RoundingMode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sqrt(x : Int, mode : RoundingMode) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.LongMath long divide(long, long, java.math.RoundingMode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun divide(p : Long, q : Long, mode : RoundingMode) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.LongMath int log10(long, java.math.RoundingMode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun log10(x : Long, mode : RoundingMode) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.LongMath int log2(long, java.math.RoundingMode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun log2(x : Long, mode : RoundingMode) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.LongMath long sqrt(long, java.math.RoundingMode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sqrt(x : Long, mode : RoundingMode) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.MathPreconditions java.math.BigInteger checkNonNegative(java.lang.String, java.math.BigInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkNonNegative(role : String?, x : BigInteger) : BigInteger&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.math.MathPreconditions java.math.BigInteger checkPositive(java.lang.String, java.math.BigInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkPositive(role : String?, x : BigInteger) : BigInteger&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.HostAndPort boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(other : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.HostAndPort com.google.common.net.HostAndPort fromParts(java.lang.String, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fromParts(host : String, port : Int) : HostAndPort&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.HostAndPort com.google.common.net.HostAndPort fromString(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fromString(hostPortString : String) : HostAndPort&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.HostAndPort com.google.common.net.HostAndPort requireBracketsForIPv6()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun requireBracketsForIPv6() : HostAndPort&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.HostAndPort com.google.common.net.HostAndPort withDefaultPort(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withDefaultPort(defaultPort : Int) : HostAndPort&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.HostSpecifier boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.HostSpecifier com.google.common.net.HostSpecifier from(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun from(specifier : String) : HostSpecifier&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.HostSpecifier com.google.common.net.HostSpecifier fromValid(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fromValid(specifier : String) : HostSpecifier&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses.TeredoInfo TeredoInfo(java.net.Inet4Address, java.net.Inet4Address, int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TeredoInfo(p0 : Inet4Address?, p1 : Inet4Address?, p2 : Int, p3 : Int)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses.TeredoInfo java.net.Inet4Address getClient()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getClient() : Inet4Address&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses.TeredoInfo java.net.Inet4Address getServer()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getServer() : Inet4Address&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses int coerceToInteger(java.net.InetAddress)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun coerceToInteger(ip : InetAddress) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses void compressLongestRunOfZeroes(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compressLongestRunOfZeroes(hextets : IntArray) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses java.lang.String convertDottedQuadToHex(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun convertDottedQuadToHex(ipString : String) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses java.net.InetAddress forString(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun forString(ipString : String) : InetAddress?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses java.net.InetAddress forUriString(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun forUriString(hostAddr : String) : InetAddress?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses java.net.InetAddress fromLittleEndianByteArray(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fromLittleEndianByteArray(addr : ByteArray) : InetAddress?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses java.net.Inet4Address get6to4IPv4Address(java.net.Inet6Address)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get6to4IPv4Address(ip : Inet6Address) : Inet4Address?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses java.net.Inet4Address getCoercedIPv4Address(java.net.InetAddress)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCoercedIPv4Address(ip : InetAddress) : Inet4Address?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses java.net.Inet4Address getCompatIPv4Address(java.net.Inet6Address)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getCompatIPv4Address(ip : Inet6Address) : Inet4Address?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses java.net.Inet4Address getEmbeddedIPv4ClientAddress(java.net.Inet6Address)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getEmbeddedIPv4ClientAddress(ip : Inet6Address) : Inet4Address?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses java.net.Inet4Address getInet4Address(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInet4Address(bytes : ByteArray) : Inet4Address?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses java.net.Inet4Address getIsatapIPv4Address(java.net.Inet6Address)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getIsatapIPv4Address(ip : Inet6Address) : Inet4Address?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses com.google.common.net.InetAddresses.TeredoInfo getTeredoInfo(java.net.Inet6Address)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTeredoInfo(ip : Inet6Address) : InetAddresses.TeredoInfo&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses boolean hasEmbeddedIPv4ClientAddress(java.net.Inet6Address)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hasEmbeddedIPv4ClientAddress(ip : Inet6Address) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses java.lang.String hextetsToIPv6String(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hextetsToIPv6String(hextets : IntArray) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses java.net.InetAddress increment(java.net.InetAddress)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun increment(address : InetAddress) : InetAddress?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses byte[] ipStringToBytes(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ipStringToBytes(ipString : String) : ByteArray?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses boolean is6to4Address(java.net.Inet6Address)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun is6to4Address(ip : Inet6Address) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses boolean isCompatIPv4Address(java.net.Inet6Address)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isCompatIPv4Address(ip : Inet6Address) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses boolean isInetAddress(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isInetAddress(ipString : String) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses boolean isIsatapAddress(java.net.Inet6Address)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isIsatapAddress(ip : Inet6Address) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses boolean isMappedIPv4Address(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isMappedIPv4Address(ipString : String) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses boolean isMaximum(java.net.InetAddress)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isMaximum(address : InetAddress) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses boolean isTeredoAddress(java.net.Inet6Address)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isTeredoAddress(ip : Inet6Address) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses byte parseOctet(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseOctet(ipPart : String) : Byte&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses byte[] textToNumericFormatV4(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun textToNumericFormatV4(ipString : String) : ByteArray?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses byte[] textToNumericFormatV6(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun textToNumericFormatV6(ipString : String) : ByteArray?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses java.lang.String toAddrString(java.net.InetAddress)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toAddrString(ip : InetAddress) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InetAddresses java.lang.String toUriString(java.net.InetAddress)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toUriString(ip : InetAddress) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InternetDomainName com.google.common.net.InternetDomainName ancestor(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ancestor(levels : Int) : InternetDomainName&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InternetDomainName com.google.common.net.InternetDomainName child(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun child(leftParts : String) : InternetDomainName&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InternetDomainName boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InternetDomainName com.google.common.net.InternetDomainName from(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun from(domain : String) : InternetDomainName&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InternetDomainName com.google.common.net.InternetDomainName fromLenient(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fromLenient(domain : String) : InternetDomainName&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InternetDomainName boolean matchesWildcardPublicSuffix(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun matchesWildcardPublicSuffix(domain : String) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InternetDomainName java.lang.String name()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun name() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InternetDomainName com.google.common.net.InternetDomainName parent()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parent() : InternetDomainName&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InternetDomainName com.google.common.collect.ImmutableList&lt;java.lang.String&gt; parts()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parts() : ImmutableList&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InternetDomainName com.google.common.net.InternetDomainName publicSuffix()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun publicSuffix() : InternetDomainName?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InternetDomainName com.google.common.net.InternetDomainName topPrivateDomain()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun topPrivateDomain() : InternetDomainName&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InternetDomainName boolean validatePart(java.lang.String, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun validatePart(part : String, isFinalPart : Boolean) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.InternetDomainName boolean validateSyntax(java.util.List&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun validateSyntax(parts : List&lt;String?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType.1 com.google.common.collect.ImmutableMultiset&lt;java.lang.String&gt; apply(java.util.Collection&lt;java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(input : Collection&lt;String?&gt;) : ImmutableMultiset&lt;String?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType.2 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType.2 java.lang.String apply(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(value : String) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType.Tokenizer char consumeCharacter(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun consumeCharacter(matcher : CharMatcher) : Char&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType.Tokenizer java.lang.String consumeToken(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun consumeToken(matcher : CharMatcher) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType.Tokenizer java.lang.String consumeTokenIfPresent(com.google.common.base.CharMatcher)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun consumeTokenIfPresent(matcher : CharMatcher) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType com.google.common.base.CharMatcher access$000()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000() : CharMatcher&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType java.lang.String access$100(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : String) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType com.google.common.base.Optional&lt;java.nio.charset.Charset&gt; charset()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun charset() : Optional&lt;Charset?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType com.google.common.net.MediaType create(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create(type : String, subtype : String) : MediaType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType com.google.common.net.MediaType create(java.lang.String, java.lang.String, com.google.common.collect.Multimap&lt;java.lang.String,java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create(type : String, subtype : String, parameters : Multimap&lt;String?, String?&gt;) : MediaType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType com.google.common.net.MediaType createApplicationType(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createApplicationType(subtype : String) : MediaType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType com.google.common.net.MediaType createAudioType(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createAudioType(subtype : String) : MediaType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType com.google.common.net.MediaType createConstant(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createConstant(type : String?, subtype : String?) : MediaType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType com.google.common.net.MediaType createConstantUtf8(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createConstantUtf8(type : String?, subtype : String?) : MediaType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType com.google.common.net.MediaType createImageType(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createImageType(subtype : String) : MediaType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType com.google.common.net.MediaType createTextType(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createTextType(subtype : String) : MediaType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType com.google.common.net.MediaType createVideoType(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createVideoType(subtype : String) : MediaType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType java.lang.String escapeAndQuote(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun escapeAndQuote(value : String) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType boolean is(com.google.common.net.MediaType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun is(mediaTypeRange : MediaType) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType java.lang.String normalizeToken(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun normalizeToken(token : String) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType java.util.Map&lt;java.lang.String,com.google.common.collect.ImmutableMultiset&lt;java.lang.String&gt;&gt; parametersAsMap()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parametersAsMap() : MutableMap&lt;String?, ImmutableMultiset&lt;String?&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType com.google.common.net.MediaType parse(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parse(input : String) : MediaType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType com.google.common.net.MediaType withCharset(java.nio.charset.Charset)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withCharset(charset : Charset) : MediaType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType com.google.common.net.MediaType withParameter(java.lang.String, java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withParameter(attribute : String, value : String) : MediaType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType com.google.common.net.MediaType withParameters(com.google.common.collect.Multimap&lt;java.lang.String,java.lang.String&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withParameters(parameters : Multimap&lt;String?, String?&gt;) : MediaType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.net.MediaType com.google.common.net.MediaType withoutParameters()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun withoutParameters() : MediaType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.AndroidInteger java.lang.Integer tryParse(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tryParse(string : String) : Int?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.AndroidInteger java.lang.Integer tryParse(java.lang.String, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tryParse(string : String, radix : Int) : Int?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.AndroidInteger java.lang.Integer tryParse(java.lang.String, int, int, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tryParse(string : String, offset : Int, radix : Int, negative : Boolean) : Int?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans.BooleanArrayAsList BooleanArrayAsList(boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun BooleanArrayAsList(array : BooleanArray)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans.BooleanArrayAsList boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(target : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans.BooleanArrayAsList int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(target : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans.BooleanArrayAsList int lastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(target : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans.BooleanArrayAsList java.lang.Boolean set(int, java.lang.Boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(index : Int, element : Boolean) : Boolean?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans.BooleanArrayAsList java.lang.Object set(int, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(x0 : Int, x1 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans.BooleanArrayAsList boolean[] toBooleanArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toBooleanArray() : BooleanArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans.LexicographicalComparator int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans.LexicographicalComparator int compare(boolean[], boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : BooleanArray, right : BooleanArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans java.util.List&lt;java.lang.Boolean&gt; asList(boolean...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asList(vararg backingArray : Boolean) : MutableList&lt;Boolean?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans boolean[] concat(boolean[]...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun concat(vararg arrays : BooleanArray) : BooleanArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans boolean contains(boolean[], boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(array : BooleanArray, target : Boolean) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans boolean[] copyOf(boolean[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyOf(original : BooleanArray, length : Int) : BooleanArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans boolean[] ensureCapacity(boolean[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ensureCapacity(array : BooleanArray, minLength : Int, padding : Int) : BooleanArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans int indexOf(boolean[], boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(array : BooleanArray, target : Boolean) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans int indexOf(boolean[], boolean[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(array : BooleanArray, target : BooleanArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans java.lang.String join(java.lang.String, boolean...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(separator : String, vararg array : Boolean) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans int lastIndexOf(boolean[], boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(array : BooleanArray, target : Boolean) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans java.util.Comparator&lt;boolean[]&gt; lexicographicalComparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lexicographicalComparator() : Comparator&lt;BooleanArray?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Booleans boolean[] toArray(java.util.Collection&lt;java.lang.Boolean&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray(collection : Collection&lt;Boolean?&gt;) : BooleanArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Bytes.ByteArrayAsList ByteArrayAsList(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ByteArrayAsList(array : ByteArray)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Bytes.ByteArrayAsList boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(target : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Bytes.ByteArrayAsList int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(target : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Bytes.ByteArrayAsList int lastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(target : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Bytes.ByteArrayAsList java.lang.Byte set(int, java.lang.Byte)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(index : Int, element : Byte) : Byte?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Bytes.ByteArrayAsList java.lang.Object set(int, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(x0 : Int, x1 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Bytes.ByteArrayAsList byte[] toByteArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toByteArray() : ByteArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Bytes java.util.List&lt;java.lang.Byte&gt; asList(byte...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asList(vararg backingArray : Byte) : MutableList&lt;Byte?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Bytes byte[] concat(byte[]...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun concat(vararg arrays : ByteArray) : ByteArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Bytes boolean contains(byte[], byte)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(array : ByteArray, target : Byte) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Bytes byte[] copyOf(byte[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyOf(original : ByteArray, length : Int) : ByteArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Bytes byte[] ensureCapacity(byte[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ensureCapacity(array : ByteArray, minLength : Int, padding : Int) : ByteArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Bytes int indexOf(byte[], byte)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(array : ByteArray, target : Byte) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Bytes int indexOf(byte[], byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(array : ByteArray, target : ByteArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Bytes int lastIndexOf(byte[], byte)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(array : ByteArray, target : Byte) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Bytes byte[] toArray(java.util.Collection&lt;? extends java.lang.Number&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray(collection : Collection&lt;out Number?&gt;) : ByteArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars.CharArrayAsList CharArrayAsList(char[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CharArrayAsList(array : CharArray)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars.CharArrayAsList boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(target : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars.CharArrayAsList int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(target : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars.CharArrayAsList int lastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(target : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars.CharArrayAsList java.lang.Character set(int, java.lang.Character)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(index : Int, element : Character) : Character?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars.CharArrayAsList java.lang.Object set(int, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(x0 : Int, x1 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars.CharArrayAsList char[] toCharArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toCharArray() : CharArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars.LexicographicalComparator int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars.LexicographicalComparator int compare(char[], char[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : CharArray, right : CharArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars java.util.List&lt;java.lang.Character&gt; asList(char...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asList(vararg backingArray : Char) : MutableList&lt;Character?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars char[] concat(char[]...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun concat(vararg arrays : CharArray) : CharArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars boolean contains(char[], char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(array : CharArray, target : Char) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars char[] copyOf(char[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyOf(original : CharArray, length : Int) : CharArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars char[] ensureCapacity(char[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ensureCapacity(array : CharArray, minLength : Int, padding : Int) : CharArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars char fromByteArray(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fromByteArray(bytes : ByteArray) : Char&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars int indexOf(char[], char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(array : CharArray, target : Char) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars int indexOf(char[], char[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(array : CharArray, target : CharArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars java.lang.String join(java.lang.String, char...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(separator : String, vararg array : Char) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars int lastIndexOf(char[], char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(array : CharArray, target : Char) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars java.util.Comparator&lt;char[]&gt; lexicographicalComparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lexicographicalComparator() : Comparator&lt;CharArray?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars char max(char...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun max(vararg array : Char) : Char&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars char min(char...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun min(vararg array : Char) : Char&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars char[] toArray(java.util.Collection&lt;java.lang.Character&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray(collection : Collection&lt;Character?&gt;) : CharArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Chars byte[] toByteArray(char)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toByteArray(value : Char) : ByteArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles.DoubleArrayAsList DoubleArrayAsList(double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun DoubleArrayAsList(array : DoubleArray)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles.DoubleArrayAsList boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(target : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles.DoubleArrayAsList int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(target : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles.DoubleArrayAsList int lastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(target : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles.DoubleArrayAsList java.lang.Double set(int, java.lang.Double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(index : Int, element : Double) : Double?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles.DoubleArrayAsList java.lang.Object set(int, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(x0 : Int, x1 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles.DoubleArrayAsList double[] toDoubleArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toDoubleArray() : DoubleArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles.LexicographicalComparator int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles.LexicographicalComparator int compare(double[], double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : DoubleArray, right : DoubleArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles java.util.List&lt;java.lang.Double&gt; asList(double...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asList(vararg backingArray : Double) : MutableList&lt;Double?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles double[] concat(double[]...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun concat(vararg arrays : DoubleArray) : DoubleArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles boolean contains(double[], double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(array : DoubleArray, target : Double) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles double[] copyOf(double[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyOf(original : DoubleArray, length : Int) : DoubleArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles double[] ensureCapacity(double[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ensureCapacity(array : DoubleArray, minLength : Int, padding : Int) : DoubleArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles int indexOf(double[], double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(array : DoubleArray, target : Double) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles int indexOf(double[], double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(array : DoubleArray, target : DoubleArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles java.lang.String join(java.lang.String, double...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(separator : String, vararg array : Double) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles int lastIndexOf(double[], double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(array : DoubleArray, target : Double) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles java.util.Comparator&lt;double[]&gt; lexicographicalComparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lexicographicalComparator() : Comparator&lt;DoubleArray?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles double max(double...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun max(vararg array : Double) : Double&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles double min(double...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun min(vararg array : Double) : Double&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Doubles double[] toArray(java.util.Collection&lt;? extends java.lang.Number&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray(collection : Collection&lt;out Number?&gt;) : DoubleArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats.FloatArrayAsList FloatArrayAsList(float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun FloatArrayAsList(array : FloatArray)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats.FloatArrayAsList boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(target : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats.FloatArrayAsList int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(target : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats.FloatArrayAsList int lastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(target : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats.FloatArrayAsList java.lang.Float set(int, java.lang.Float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(index : Int, element : Float) : Float?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats.FloatArrayAsList java.lang.Object set(int, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(x0 : Int, x1 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats.FloatArrayAsList float[] toFloatArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toFloatArray() : FloatArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats.LexicographicalComparator int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats.LexicographicalComparator int compare(float[], float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : FloatArray, right : FloatArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats java.util.List&lt;java.lang.Float&gt; asList(float...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asList(vararg backingArray : Float) : MutableList&lt;Float?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats float[] concat(float[]...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun concat(vararg arrays : FloatArray) : FloatArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats boolean contains(float[], float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(array : FloatArray, target : Float) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats float[] copyOf(float[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyOf(original : FloatArray, length : Int) : FloatArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats float[] ensureCapacity(float[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ensureCapacity(array : FloatArray, minLength : Int, padding : Int) : FloatArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats int indexOf(float[], float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(array : FloatArray, target : Float) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats int indexOf(float[], float[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(array : FloatArray, target : FloatArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats java.lang.String join(java.lang.String, float...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(separator : String, vararg array : Float) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats int lastIndexOf(float[], float)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(array : FloatArray, target : Float) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats java.util.Comparator&lt;float[]&gt; lexicographicalComparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lexicographicalComparator() : Comparator&lt;FloatArray?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats float max(float...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun max(vararg array : Float) : Float&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats float min(float...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun min(vararg array : Float) : Float&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Floats float[] toArray(java.util.Collection&lt;? extends java.lang.Number&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray(collection : Collection&lt;out Number?&gt;) : FloatArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints.IntArrayAsList IntArrayAsList(int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun IntArrayAsList(array : IntArray)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints.IntArrayAsList boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(target : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints.IntArrayAsList int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(target : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints.IntArrayAsList int lastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(target : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints.IntArrayAsList java.lang.Integer set(int, java.lang.Integer)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(index : Int, element : Int) : Int?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints.IntArrayAsList java.lang.Object set(int, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(x0 : Int, x1 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints.IntArrayAsList int[] toIntArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toIntArray() : IntArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints.LexicographicalComparator int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints.LexicographicalComparator int compare(int[], int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : IntArray, right : IntArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints java.util.List&lt;java.lang.Integer&gt; asList(int...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asList(vararg backingArray : Int) : MutableList&lt;Int?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints int[] concat(int[]...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun concat(vararg arrays : IntArray) : IntArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints boolean contains(int[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(array : IntArray, target : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints int[] copyOf(int[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyOf(original : IntArray, length : Int) : IntArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints int[] ensureCapacity(int[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ensureCapacity(array : IntArray, minLength : Int, padding : Int) : IntArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints int fromByteArray(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fromByteArray(bytes : ByteArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints int indexOf(int[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(array : IntArray, target : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints int indexOf(int[], int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(array : IntArray, target : IntArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints java.lang.String join(java.lang.String, int...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(separator : String, vararg array : Int) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints int lastIndexOf(int[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(array : IntArray, target : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints java.util.Comparator&lt;int[]&gt; lexicographicalComparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lexicographicalComparator() : Comparator&lt;IntArray?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints int max(int...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun max(vararg array : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints int min(int...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun min(vararg array : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints int[] toArray(java.util.Collection&lt;? extends java.lang.Number&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray(collection : Collection&lt;out Number?&gt;) : IntArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints byte[] toByteArray(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toByteArray(value : Int) : ByteArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Ints java.lang.Integer tryParse(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tryParse(string : String) : Int?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs.LexicographicalComparator int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs.LexicographicalComparator int compare(long[], long[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : LongArray, right : LongArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs.LongArrayAsList LongArrayAsList(long[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun LongArrayAsList(array : LongArray)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs.LongArrayAsList boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(target : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs.LongArrayAsList int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(target : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs.LongArrayAsList int lastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(target : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs.LongArrayAsList java.lang.Long set(int, java.lang.Long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(index : Int, element : Long) : Long?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs.LongArrayAsList java.lang.Object set(int, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(x0 : Int, x1 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs.LongArrayAsList long[] toLongArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toLongArray() : LongArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs java.util.List&lt;java.lang.Long&gt; asList(long...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asList(vararg backingArray : Long) : MutableList&lt;Long?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs long[] concat(long[]...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun concat(vararg arrays : LongArray) : LongArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs boolean contains(long[], long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(array : LongArray, target : Long) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs long[] copyOf(long[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyOf(original : LongArray, length : Int) : LongArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs long[] ensureCapacity(long[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ensureCapacity(array : LongArray, minLength : Int, padding : Int) : LongArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs long fromByteArray(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fromByteArray(bytes : ByteArray) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs int indexOf(long[], long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(array : LongArray, target : Long) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs int indexOf(long[], long[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(array : LongArray, target : LongArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs java.lang.String join(java.lang.String, long...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(separator : String, vararg array : Long) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs int lastIndexOf(long[], long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(array : LongArray, target : Long) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs java.util.Comparator&lt;long[]&gt; lexicographicalComparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lexicographicalComparator() : Comparator&lt;LongArray?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs long max(long...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun max(vararg array : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs long min(long...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun min(vararg array : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs long[] toArray(java.util.Collection&lt;? extends java.lang.Number&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray(collection : Collection&lt;out Number?&gt;) : LongArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Longs byte[] toByteArray(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toByteArray(value : Long) : ByteArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.ParseRequest com.google.common.primitives.ParseRequest fromString(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fromString(stringValue : String) : ParseRequest&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Primitives void add(java.util.Map&lt;java.lang.Class&lt;?&gt;,java.lang.Class&lt;?&gt;&gt;, java.util.Map&lt;java.lang.Class&lt;?&gt;,java.lang.Class&lt;?&gt;&gt;, java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(forward : MutableMap&lt;Class&lt;*&gt;?, Class&lt;*&gt;?&gt;, backward : MutableMap&lt;Class&lt;*&gt;?, Class&lt;*&gt;?&gt;, key : Class&lt;*&gt;?, value : Class&lt;*&gt;?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Primitives boolean isWrapperType(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isWrapperType(type : Class&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Primitives java.lang.Class&lt;T&gt; unwrap(java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; unwrap(type : Class&lt;T&gt;) : Class&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Primitives java.lang.Class&lt;T&gt; wrap(java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; wrap(type : Class&lt;T&gt;) : Class&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts.LexicographicalComparator int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts.LexicographicalComparator int compare(short[], short[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : ShortArray, right : ShortArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts.ShortArrayAsList ShortArrayAsList(short[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ShortArrayAsList(array : ShortArray)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts.ShortArrayAsList boolean contains(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(target : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts.ShortArrayAsList int indexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(target : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts.ShortArrayAsList int lastIndexOf(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(target : Any?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts.ShortArrayAsList java.lang.Object set(int, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(x0 : Int, x1 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts.ShortArrayAsList java.lang.Short set(int, java.lang.Short)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(index : Int, element : Short) : Short?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts.ShortArrayAsList short[] toShortArray()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toShortArray() : ShortArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts java.util.List&lt;java.lang.Short&gt; asList(short...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asList(vararg backingArray : Short) : MutableList&lt;Short?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts short[] concat(short[]...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun concat(vararg arrays : ShortArray) : ShortArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts boolean contains(short[], short)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun contains(array : ShortArray, target : Short) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts short[] copyOf(short[], int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun copyOf(original : ShortArray, length : Int) : ShortArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts short[] ensureCapacity(short[], int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ensureCapacity(array : ShortArray, minLength : Int, padding : Int) : ShortArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts short fromByteArray(byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun fromByteArray(bytes : ByteArray) : Short&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts int indexOf(short[], short)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(array : ShortArray, target : Short) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts int indexOf(short[], short[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexOf(array : ShortArray, target : ShortArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts java.lang.String join(java.lang.String, short...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(separator : String, vararg array : Short) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts int lastIndexOf(short[], short)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lastIndexOf(array : ShortArray, target : Short) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts java.util.Comparator&lt;short[]&gt; lexicographicalComparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lexicographicalComparator() : Comparator&lt;ShortArray?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts short max(short...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun max(vararg array : Short) : Short&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts short min(short...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun min(vararg array : Short) : Short&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts short[] toArray(java.util.Collection&lt;? extends java.lang.Number&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray(collection : Collection&lt;out Number?&gt;) : ShortArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.Shorts byte[] toByteArray(short)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toByteArray(value : Short) : ByteArray&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.SignedBytes.LexicographicalComparator int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.SignedBytes.LexicographicalComparator int compare(byte[], byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : ByteArray, right : ByteArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.SignedBytes java.lang.String join(java.lang.String, byte...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(separator : String, vararg array : Byte) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.SignedBytes java.util.Comparator&lt;byte[]&gt; lexicographicalComparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lexicographicalComparator() : Comparator&lt;ByteArray?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.SignedBytes byte max(byte...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun max(vararg array : Byte) : Byte&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.SignedBytes byte min(byte...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun min(vararg array : Byte) : Byte&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedBytes.LexicographicalComparatorHolder.PureJavaComparator int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedBytes.LexicographicalComparatorHolder.PureJavaComparator int compare(byte[], byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : ByteArray, right : ByteArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedBytes.LexicographicalComparatorHolder.UnsafeComparator int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedBytes.LexicographicalComparatorHolder.UnsafeComparator int compare(byte[], byte[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : ByteArray, right : ByteArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedBytes java.lang.String join(java.lang.String, byte...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(separator : String, vararg array : Byte) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedBytes java.util.Comparator&lt;byte[]&gt; lexicographicalComparatorJavaImpl()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lexicographicalComparatorJavaImpl() : Comparator&lt;ByteArray?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedBytes byte max(byte...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun max(vararg array : Byte) : Byte&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedBytes byte min(byte...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun min(vararg array : Byte) : Byte&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedBytes byte parseUnsignedByte(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseUnsignedByte(string : String) : Byte&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedBytes byte parseUnsignedByte(java.lang.String, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseUnsignedByte(string : String, radix : Int) : Byte&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInteger com.google.common.primitives.UnsignedInteger add(com.google.common.primitives.UnsignedInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(val : UnsignedInteger) : UnsignedInteger&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInteger com.google.common.primitives.UnsignedInteger asUnsigned(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asUnsigned(value : Int) : UnsignedInteger&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInteger int compareTo(com.google.common.primitives.UnsignedInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compareTo(other : UnsignedInteger) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInteger int compareTo(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compareTo(x0 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInteger com.google.common.primitives.UnsignedInteger divide(com.google.common.primitives.UnsignedInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun divide(val : UnsignedInteger) : UnsignedInteger&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInteger boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInteger com.google.common.primitives.UnsignedInteger multiply(com.google.common.primitives.UnsignedInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun multiply(val : UnsignedInteger) : UnsignedInteger&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInteger com.google.common.primitives.UnsignedInteger remainder(com.google.common.primitives.UnsignedInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remainder(val : UnsignedInteger) : UnsignedInteger&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInteger com.google.common.primitives.UnsignedInteger subtract(com.google.common.primitives.UnsignedInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subtract(val : UnsignedInteger) : UnsignedInteger&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInteger com.google.common.primitives.UnsignedInteger valueOf(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(value : Long) : UnsignedInteger&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInteger com.google.common.primitives.UnsignedInteger valueOf(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(string : String) : UnsignedInteger&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInteger com.google.common.primitives.UnsignedInteger valueOf(java.lang.String, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(string : String, radix : Int) : UnsignedInteger&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInteger com.google.common.primitives.UnsignedInteger valueOf(java.math.BigInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(value : BigInteger) : UnsignedInteger&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInts.LexicographicalComparator int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInts.LexicographicalComparator int compare(int[], int[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : IntArray, right : IntArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInts int decode(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun decode(stringValue : String) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInts java.lang.String join(java.lang.String, int...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(separator : String, vararg array : Int) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInts java.util.Comparator&lt;int[]&gt; lexicographicalComparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lexicographicalComparator() : Comparator&lt;IntArray?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInts int max(int...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun max(vararg array : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInts int min(int...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun min(vararg array : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInts int parseUnsignedInt(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseUnsignedInt(s : String) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedInts int parseUnsignedInt(java.lang.String, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseUnsignedInt(string : String, radix : Int) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLong com.google.common.primitives.UnsignedLong add(com.google.common.primitives.UnsignedLong)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(val : UnsignedLong) : UnsignedLong&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLong com.google.common.primitives.UnsignedLong asUnsigned(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun asUnsigned(value : Long) : UnsignedLong&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLong int compareTo(com.google.common.primitives.UnsignedLong)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compareTo(o : UnsignedLong) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLong int compareTo(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compareTo(x0 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLong com.google.common.primitives.UnsignedLong divide(com.google.common.primitives.UnsignedLong)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun divide(val : UnsignedLong) : UnsignedLong&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLong boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLong com.google.common.primitives.UnsignedLong multiply(com.google.common.primitives.UnsignedLong)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun multiply(val : UnsignedLong) : UnsignedLong&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLong com.google.common.primitives.UnsignedLong remainder(com.google.common.primitives.UnsignedLong)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun remainder(val : UnsignedLong) : UnsignedLong&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLong com.google.common.primitives.UnsignedLong subtract(com.google.common.primitives.UnsignedLong)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subtract(val : UnsignedLong) : UnsignedLong&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLong java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLong java.lang.String toString(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString(radix : Int) : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLong com.google.common.primitives.UnsignedLong valueOf(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(string : String) : UnsignedLong&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLong com.google.common.primitives.UnsignedLong valueOf(java.lang.String, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(string : String, radix : Int) : UnsignedLong&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLong com.google.common.primitives.UnsignedLong valueOf(java.math.BigInteger)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun valueOf(value : BigInteger) : UnsignedLong&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLongs.LexicographicalComparator int compare(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(x0 : Any, x1 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLongs.LexicographicalComparator int compare(long[], long[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(left : LongArray, right : LongArray) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLongs long decode(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun decode(stringValue : String) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLongs java.lang.String join(java.lang.String, long...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun join(separator : String, vararg array : Long) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLongs java.util.Comparator&lt;long[]&gt; lexicographicalComparator()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lexicographicalComparator() : Comparator&lt;LongArray?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLongs long max(long...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun max(vararg array : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLongs long min(long...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun min(vararg array : Long) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLongs long parseUnsignedLong(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseUnsignedLong(s : String) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLongs long parseUnsignedLong(java.lang.String, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun parseUnsignedLong(s : String, radix : Int) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLongs java.lang.String toString(long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString(x : Long) : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.primitives.UnsignedLongs java.lang.String toString(long, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString(x : Long, radix : Int) : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.AbstractInvocationHandler java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun invoke(p0 : Any?, p1 : Method?, p2 : Array&lt;out Any?&gt;?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.ImmutableTypeToInstanceMap.Builder com.google.common.reflect.ImmutableTypeToInstanceMap&lt;B&gt; build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ImmutableTypeToInstanceMap&lt;B&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.ImmutableTypeToInstanceMap.Builder com.google.common.reflect.ImmutableTypeToInstanceMap.Builder&lt;B&gt; put(com.google.common.reflect.TypeToken&lt;T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; put(key : TypeToken&lt;T&gt;, value : T) : ImmutableTypeToInstanceMap.Builder&lt;B&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.ImmutableTypeToInstanceMap.Builder com.google.common.reflect.ImmutableTypeToInstanceMap.Builder&lt;B&gt; put(java.lang.Class&lt;T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; put(key : Class&lt;T&gt;, value : T) : ImmutableTypeToInstanceMap.Builder&lt;B&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.ImmutableTypeToInstanceMap com.google.common.reflect.ImmutableTypeToInstanceMap.Builder&lt;B&gt; builder()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;B&gt; builder() : ImmutableTypeToInstanceMap.Builder&lt;B&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.ImmutableTypeToInstanceMap T getInstance(com.google.common.reflect.TypeToken&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; getInstance(type : TypeToken&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.ImmutableTypeToInstanceMap T getInstance(java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; getInstance(type : Class&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.ImmutableTypeToInstanceMap com.google.common.reflect.ImmutableTypeToInstanceMap&lt;B&gt; of()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;B&gt; of() : ImmutableTypeToInstanceMap&lt;B&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.ImmutableTypeToInstanceMap T putInstance(com.google.common.reflect.TypeToken&lt;T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; putInstance(p0 : TypeToken&lt;T&gt;, p1 : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.ImmutableTypeToInstanceMap T putInstance(java.lang.Class&lt;T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; putInstance(p0 : Class&lt;T&gt;, p1 : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.MutableTypeToInstanceMap java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.MutableTypeToInstanceMap java.util.Map&lt;com.google.common.reflect.TypeToken&lt;? extends B&gt;,B&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : MutableMap&lt;TypeToken&lt;out B&gt;?, B&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.MutableTypeToInstanceMap T getInstance(com.google.common.reflect.TypeToken&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; getInstance(p0 : TypeToken&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.MutableTypeToInstanceMap T getInstance(java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; getInstance(p0 : Class&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.MutableTypeToInstanceMap java.lang.Object put(java.lang.Object, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun put(p0 : Any, p1 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.MutableTypeToInstanceMap void putAll(java.util.Map&lt;? extends com.google.common.reflect.TypeToken&lt;? extends B&gt;,? extends B&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(p0 : Map&lt;out TypeToken&lt;out B&gt;?, out B&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.MutableTypeToInstanceMap T putInstance(com.google.common.reflect.TypeToken&lt;T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; putInstance(p0 : TypeToken&lt;T&gt;, p1 : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.MutableTypeToInstanceMap T putInstance(java.lang.Class&lt;T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; putInstance(p0 : Class&lt;T&gt;, p1 : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.MutableTypeToInstanceMap T trustedGet(com.google.common.reflect.TypeToken&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; trustedGet(type : TypeToken&lt;T&gt;?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.MutableTypeToInstanceMap T trustedPut(com.google.common.reflect.TypeToken&lt;T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; trustedPut(type : TypeToken&lt;T&gt;?, value : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Reflection java.lang.String getPackageName(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPackageName(cls : Class&lt;*&gt;) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Reflection java.lang.String getPackageName(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getPackageName(classFullName : String) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Reflection void initialize(java.lang.Class&lt;?&gt;...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initialize(vararg classes : Class&lt;*&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Reflection T newProxy(java.lang.Class&lt;T&gt;, java.lang.reflect.InvocationHandler)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; newProxy(interfaceType : Class&lt;T&gt;, handler : InvocationHandler) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeParameter TypeParameter(java.lang.reflect.TypeVariable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TypeParameter(typeVariable : TypeVariable&lt;*&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeParameter boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(o : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver.1 java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.TypeVariable&lt;?&gt;, com.google.common.reflect.TypeResolver)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resolveTypeVariable(intermediateVar : TypeVariable&lt;*&gt;, guardedResolver : TypeResolver?) : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver.TypeMappingIntrospector com.google.common.collect.ImmutableMap&lt;java.lang.reflect.TypeVariable&lt;?&gt;,java.lang.reflect.Type&gt; getTypeMappings(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTypeMappings(contextType : Type) : ImmutableMap&lt;TypeVariable&lt;*&gt;?, Type?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver.TypeMappingIntrospector void introspect(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun introspect(type : Type?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver.TypeMappingIntrospector void introspectClass(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun introspectClass(clazz : Class&lt;*&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver.TypeMappingIntrospector void introspectParameterizedType(java.lang.reflect.ParameterizedType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun introspectParameterizedType(parameterizedType : ParameterizedType) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver.WildcardCapturer java.lang.reflect.Type capture(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun capture(type : Type) : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver.WildcardCapturer java.lang.reflect.Type[] capture(java.lang.reflect.Type[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun capture(types : Array&lt;out Type?&gt;) : Array&lt;out Type?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver.WildcardCapturer java.lang.reflect.Type captureNullable(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun captureNullable(type : Type?) : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver com.google.common.reflect.TypeResolver accordingTo(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun accordingTo(type : Type) : TypeResolver&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver T checkNonNullArgument(T, java.lang.String, java.lang.Object...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; checkNonNullArgument(arg : T?, format : String?, vararg messageParams : Any?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver T expectArgument(java.lang.Class&lt;T&gt;, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; expectArgument(type : Class&lt;T&gt;, arg : Any?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver void populateTypeMappings(java.util.Map&lt;java.lang.reflect.TypeVariable&lt;?&gt;,java.lang.reflect.Type&gt;, java.lang.reflect.Type, java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun populateTypeMappings(mappings : MutableMap&lt;TypeVariable&lt;*&gt;?, Type?&gt;?, from : Type, to : Type?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver java.lang.reflect.Type resolveGenericArrayType(java.lang.reflect.GenericArrayType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resolveGenericArrayType(type : GenericArrayType) : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver java.lang.reflect.ParameterizedType resolveParameterizedType(java.lang.reflect.ParameterizedType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resolveParameterizedType(type : ParameterizedType) : ParameterizedType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver java.lang.reflect.Type resolveType(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resolveType(type : Type?) : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.TypeVariable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resolveTypeVariable(var : TypeVariable&lt;*&gt;?) : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.TypeVariable&lt;?&gt;, com.google.common.reflect.TypeResolver)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resolveTypeVariable(var : TypeVariable&lt;*&gt;, guardedResolver : TypeResolver?) : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver java.lang.reflect.Type[] resolveTypes(java.lang.reflect.Type[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resolveTypes(types : Array&lt;out Type?&gt;) : Array&lt;out Type?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver com.google.common.reflect.TypeResolver where(java.lang.reflect.Type, java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun where(formal : Type, actual : Type?) : TypeResolver&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeResolver com.google.common.reflect.TypeResolver where(java.util.Map&lt;? extends java.lang.reflect.TypeVariable&lt;?&gt;,? extends java.lang.reflect.Type&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun where(mappings : Map&lt;out TypeVariable&lt;*&gt;?, out Type?&gt;) : TypeResolver&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToInstanceMap T getInstance(com.google.common.reflect.TypeToken&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; getInstance(p0 : TypeToken&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToInstanceMap T getInstance(java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; getInstance(p0 : Class&lt;T&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToInstanceMap T putInstance(com.google.common.reflect.TypeToken&lt;T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; putInstance(p0 : TypeToken&lt;T&gt;, p1 : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToInstanceMap T putInstance(java.lang.Class&lt;T&gt;, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T : B&gt; putInstance(p0 : Class&lt;T&gt;, p1 : T?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.ClassSet com.google.common.reflect.TypeToken&lt;T&gt;.TypeSet classes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun classes() : TypeToken&lt;T&gt;.TypeSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.ClassSet java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.InterfaceSet.1 boolean apply(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(type : Class&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.InterfaceSet.1 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.InterfaceSet com.google.common.reflect.TypeToken&lt;T&gt;.TypeSet interfaces()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun interfaces() : TypeToken&lt;T&gt;.TypeSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.InterfaceSet java.lang.Object readResolve()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readResolve() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.SimpleTypeToken SimpleTypeToken(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SimpleTypeToken(type : Type)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector.1 java.lang.Iterable&lt;? extends com.google.common.reflect.TypeToken&lt;?&gt;&gt; getInterfaces(com.google.common.reflect.TypeToken&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInterfaces(type : TypeToken&lt;*&gt;) : MutableIterable&lt;out TypeToken&lt;*&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector.1 java.lang.Iterable getInterfaces(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInterfaces(x0 : Any) : MutableIterable&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector.1 java.lang.Class&lt;?&gt; getRawType(com.google.common.reflect.TypeToken&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRawType(type : TypeToken&lt;*&gt;) : Class&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector.1 java.lang.Class getRawType(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRawType(x0 : Any) : Class?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector.1 com.google.common.reflect.TypeToken&lt;?&gt; getSuperclass(com.google.common.reflect.TypeToken&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSuperclass(p0 : TypeToken&lt;*&gt;) : TypeToken&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector.1 java.lang.Object getSuperclass(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSuperclass(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector.2 java.lang.Iterable&lt;? extends java.lang.Class&lt;?&gt;&gt; getInterfaces(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInterfaces(type : Class&lt;*&gt;) : MutableIterable&lt;out Class&lt;*&gt;?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector.2 java.lang.Iterable getInterfaces(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInterfaces(x0 : Any) : MutableIterable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector.2 java.lang.Class getRawType(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRawType(p0 : Any) : Class?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector.2 java.lang.Class&lt;?&gt; getSuperclass(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSuperclass(p0 : Class&lt;*&gt;) : Class&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector.2 java.lang.Object getSuperclass(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSuperclass(x0 : Any) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector.3 com.google.common.collect.ImmutableList&lt;K&gt; collectTypes(java.lang.Iterable&lt;? extends K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun collectTypes(types : Iterable&lt;out K&gt;) : ImmutableList&lt;K&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector.3 java.lang.Iterable&lt;? extends K&gt; getInterfaces(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInterfaces(type : K) : MutableIterable&lt;out K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector.4 int compare(K, K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun compare(p0 : K?, p1 : K?) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector.ForwardingTypeCollector java.lang.Iterable&lt;? extends K&gt; getInterfaces(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInterfaces(p0 : K) : MutableIterable&lt;out K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector.ForwardingTypeCollector java.lang.Class&lt;?&gt; getRawType(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRawType(p0 : K) : Class&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector.ForwardingTypeCollector K getSuperclass(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSuperclass(type : K) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector com.google.common.reflect.TypeToken.TypeCollector&lt;K&gt; classesOnly()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun classesOnly() : TypeToken.TypeCollector&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector com.google.common.collect.ImmutableList&lt;K&gt; collectTypes(java.lang.Iterable&lt;? extends K&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun collectTypes(types : Iterable&lt;out K&gt;) : ImmutableList&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector com.google.common.collect.ImmutableList&lt;K&gt; collectTypes(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun collectTypes(type : K) : ImmutableList&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector int collectTypes(K, java.util.Map&lt;? super K,java.lang.Integer&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun collectTypes(type : K?, map : MutableMap&lt;in K, Int?&gt;) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector java.lang.Iterable&lt;? extends K&gt; getInterfaces(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getInterfaces(p0 : K) : MutableIterable&lt;out K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector java.lang.Class&lt;?&gt; getRawType(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRawType(p0 : K) : Class&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector K getSuperclass(K)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSuperclass(p0 : K) : K?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeCollector com.google.common.collect.ImmutableList&lt;K&gt; sortKeysByValue(java.util.Map&lt;K,V&gt;, java.util.Comparator&lt;? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K, V&gt; sortKeysByValue(map : Map&lt;K, V&gt;, valueComparator : Comparator&lt;in V&gt;?) : ImmutableList&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeFilter.1 boolean apply(com.google.common.reflect.TypeToken&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(type : TypeToken&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeFilter.1 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeFilter.2 boolean apply(com.google.common.reflect.TypeToken&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(type : TypeToken&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeFilter.2 boolean apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeSet com.google.common.reflect.TypeToken&lt;T&gt;.TypeSet classes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun classes() : TypeToken&lt;T&gt;.TypeSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken.TypeSet com.google.common.reflect.TypeToken&lt;T&gt;.TypeSet interfaces()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun interfaces() : TypeToken&lt;T&gt;.TypeSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken TypeToken(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TypeToken(type : Type)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken TypeToken(java.lang.reflect.Type, com.google.common.reflect.TypeToken.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TypeToken(x0 : Type, x1 : TypeToken.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.collect.ImmutableSet access$100(com.google.common.reflect.TypeToken)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : TypeToken) : ImmutableSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken java.lang.reflect.Type access$300(com.google.common.reflect.TypeToken)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300(x0 : TypeToken) : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.reflect.TypeToken&lt;? super T&gt; boundAsSuperclass(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun boundAsSuperclass(bound : Type) : TypeToken&lt;in T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.collect.ImmutableList&lt;com.google.common.reflect.TypeToken&lt;? super T&gt;&gt; boundsAsInterfaces(java.lang.reflect.Type[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun boundsAsInterfaces(bounds : Array&lt;out Type?&gt;) : ImmutableList&lt;TypeToken&lt;in T&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(p0 : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.reflect.TypeToken&lt;? extends T&gt; getArraySubtype(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getArraySubtype(subclass : Class&lt;*&gt;) : TypeToken&lt;out T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.reflect.TypeToken&lt;? super T&gt; getArraySupertype(java.lang.Class&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getArraySupertype(supertype : Class&lt;in T&gt;) : TypeToken&lt;in T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.reflect.TypeToken&lt;?&gt; getComponentType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getComponentType() : TypeToken&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.collect.ImmutableList&lt;com.google.common.reflect.TypeToken&lt;? super T&gt;&gt; getGenericInterfaces()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getGenericInterfaces() : ImmutableList&lt;TypeToken&lt;in T&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.reflect.TypeToken&lt;? super T&gt; getGenericSuperclass()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getGenericSuperclass() : TypeToken&lt;in T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.collect.ImmutableSet&lt;java.lang.Class&lt;? super T&gt;&gt; getImmediateRawTypes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getImmediateRawTypes() : ImmutableSet&lt;Class&lt;in T&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken java.lang.Class&lt;?&gt; getRawType(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRawType(type : Type) : Class&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.collect.ImmutableSet&lt;java.lang.Class&lt;?&gt;&gt; getRawTypes(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRawTypes(type : Type) : ImmutableSet&lt;Class&lt;*&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.collect.ImmutableSet&lt;java.lang.Class&lt;?&gt;&gt; getRawTypes(java.lang.reflect.Type[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRawTypes(types : Array&lt;out Type?&gt;) : ImmutableSet&lt;Class&lt;*&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.reflect.TypeToken&lt;? extends T&gt; getSubtypeFromLowerBounds(java.lang.Class&lt;?&gt;, java.lang.reflect.Type[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSubtypeFromLowerBounds(subclass : Class&lt;*&gt;?, lowerBounds : Array&lt;out Type?&gt;) : TypeToken&lt;out T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.reflect.TypeToken&lt;? super T&gt; getSupertype(java.lang.Class&lt;? super T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSupertype(superclass : Class&lt;in T&gt;) : TypeToken&lt;in T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.reflect.TypeToken&lt;? super T&gt; getSupertypeFromUpperBounds(java.lang.Class&lt;? super T&gt;, java.lang.reflect.Type[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getSupertypeFromUpperBounds(supertype : Class&lt;in T&gt;, upperBounds : Array&lt;out Type?&gt;) : TypeToken&lt;in T&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.reflect.TypeToken&lt;T&gt;.TypeSet getTypes()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getTypes() : TypeToken&lt;T&gt;.TypeSet&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken boolean isAssignable(java.lang.reflect.Type, java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAssignable(from : Type?, to : Type) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken boolean isAssignableBySubtypeBound(java.lang.reflect.Type, java.lang.reflect.WildcardType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAssignableBySubtypeBound(from : Type?, to : WildcardType) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken boolean isAssignableFrom(com.google.common.reflect.TypeToken&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAssignableFrom(type : TypeToken&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken boolean isAssignableFrom(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAssignableFrom(type : Type) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken boolean isAssignableFromAny(java.lang.reflect.Type[], java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAssignableFromAny(fromTypes : Array&lt;out Type?&gt;, to : Type?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken boolean isAssignableFromGenericArrayType(java.lang.reflect.GenericArrayType, java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAssignableFromGenericArrayType(from : GenericArrayType?, to : Type?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken boolean isAssignableToClass(java.lang.reflect.Type, java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAssignableToClass(from : Type, to : Class&lt;*&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken boolean isAssignableToGenericArrayType(java.lang.reflect.Type, java.lang.reflect.GenericArrayType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAssignableToGenericArrayType(from : Type?, to : GenericArrayType?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken boolean isAssignableToParameterizedType(java.lang.reflect.Type, java.lang.reflect.ParameterizedType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAssignableToParameterizedType(from : Type, to : ParameterizedType) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken boolean isAssignableToWildcardType(java.lang.reflect.Type, java.lang.reflect.WildcardType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun isAssignableToWildcardType(from : Type?, to : WildcardType) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken boolean matchTypeArgument(java.lang.reflect.Type, java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun matchTypeArgument(from : Type, to : Type?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.reflect.TypeToken&lt;T&gt; of(java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; of(type : Class&lt;T&gt;) : TypeToken&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.reflect.TypeToken&lt;?&gt; of(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun of(type : Type) : TypeToken&lt;*&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.reflect.TypeToken&lt;T&gt; rejectTypeVariables()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun rejectTypeVariables() : TypeToken&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.reflect.TypeToken&lt;?&gt; resolveSupertype(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resolveSupertype(type : Type) : TypeToken&lt;*&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.reflect.TypeToken&lt;?&gt; resolveType(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resolveType(type : Type) : TypeToken&lt;*&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken java.lang.reflect.Type resolveTypeArgsForSubclass(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun resolveTypeArgsForSubclass(subclass : Class&lt;*&gt;?) : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken java.lang.reflect.Type subtypeBound(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subtypeBound(type : Type?) : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken java.lang.reflect.Type subtypeBound(java.lang.reflect.WildcardType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subtypeBound(type : WildcardType) : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken java.lang.reflect.Type supertypeBound(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun supertypeBound(type : Type?) : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken java.lang.reflect.Type supertypeBound(java.lang.reflect.WildcardType)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun supertypeBound(type : WildcardType) : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.reflect.TypeToken&lt;? extends T&gt; toGenericType(java.lang.Class&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; toGenericType(cls : Class&lt;T&gt;) : TypeToken&lt;out T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.reflect.TypeToken&lt;T&gt; where(com.google.common.reflect.TypeParameter&lt;X&gt;, com.google.common.reflect.TypeToken&lt;X&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;X&gt; where(typeParam : TypeParameter&lt;X&gt;, typeArg : TypeToken&lt;X&gt;) : TypeToken&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken com.google.common.reflect.TypeToken&lt;T&gt; where(com.google.common.reflect.TypeParameter&lt;X&gt;, java.lang.Class&lt;X&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;X&gt; where(typeParam : TypeParameter&lt;X&gt;, typeArg : Class&lt;X&gt;) : TypeToken&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.TypeToken java.lang.Object writeReplace()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeReplace() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.1 java.lang.String apply(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(from : Type) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.ClassOwnership.1 java.lang.Class&lt;?&gt; getOwnerType(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOwnerType(p0 : Class&lt;*&gt;) : Class&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.ClassOwnership.2 java.lang.Class&lt;?&gt; getOwnerType(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOwnerType(p0 : Class&lt;*&gt;) : Class&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.ClassOwnership com.google.common.reflect.Types.ClassOwnership detectJvmBehavior()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun detectJvmBehavior() : Types.ClassOwnership&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.ClassOwnership java.lang.Class&lt;?&gt; getOwnerType(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOwnerType(p0 : Class&lt;*&gt;) : Class&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.GenericArrayTypeImpl boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.JavaVersion.2 java.lang.reflect.GenericArrayType newArrayType(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newArrayType(componentType : Type?) : GenericArrayType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.JavaVersion.2 java.lang.reflect.Type newArrayType(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newArrayType(x0 : Type?) : Type&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.JavaVersion.2 java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun usedInGenericType(type : Type) : Type&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.JavaVersion.3 java.lang.reflect.Type newArrayType(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newArrayType(componentType : Type?) : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.JavaVersion.3 java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun usedInGenericType(type : Type) : Type&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.JavaVersion java.lang.reflect.Type newArrayType(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newArrayType(p0 : Type?) : Type&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.JavaVersion java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun usedInGenericType(p0 : Type) : Type&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.JavaVersion com.google.common.collect.ImmutableList&lt;java.lang.reflect.Type&gt; usedInGenericType(java.lang.reflect.Type[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun usedInGenericType(types : Array&lt;out Type?&gt;) : ImmutableList&lt;Type?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.ParameterizedTypeImpl ParameterizedTypeImpl(java.lang.reflect.Type, java.lang.Class&lt;?&gt;, java.lang.reflect.Type[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ParameterizedTypeImpl(p0 : Type?, p1 : Class&lt;*&gt;, p2 : Array&lt;out Type?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.ParameterizedTypeImpl boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(other : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.ParameterizedTypeImpl java.lang.reflect.Type getOwnerType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getOwnerType() : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.ParameterizedTypeImpl java.lang.reflect.Type getRawType()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getRawType() : Type&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.TypeVariableImpl TypeVariableImpl(D, java.lang.String, java.lang.reflect.Type[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun TypeVariableImpl(genericDeclaration : D, name : String, bounds : Array&lt;out Type?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.TypeVariableImpl boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.TypeVariableImpl D getGenericDeclaration()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getGenericDeclaration() : D&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.TypeVariableImpl java.lang.String getName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getName() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.TypeVariableImpl java.lang.String toString()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.WildcardTypeImpl WildcardTypeImpl(java.lang.reflect.Type[], java.lang.reflect.Type[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WildcardTypeImpl(lowerBounds : Array&lt;out Type?&gt;, upperBounds : Array&lt;out Type?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types.WildcardTypeImpl boolean equals(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun equals(obj : Any?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types void access$100(java.lang.reflect.Type[], java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : Array&lt;out Type?&gt;, x1 : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types java.lang.reflect.Type[] access$200(java.util.Collection)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : Collection) : Array&lt;out Type?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types com.google.common.base.Function access$300()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$300() : Function&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types com.google.common.base.Joiner access$400()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400() : Joiner&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types java.lang.Iterable access$500(java.lang.Iterable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$500(x0 : Iterable) : MutableIterable&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types java.lang.IllegalArgumentException buildUnexpectedTypeException(java.lang.reflect.Type, java.lang.Class&lt;?&gt;...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun buildUnexpectedTypeException(type : Type, vararg expected : Class&lt;*&gt;) : IllegalArgumentException&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types boolean containsTypeVariable(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsTypeVariable(type : Type?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types boolean containsTypeVariable(java.lang.reflect.Type[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun containsTypeVariable(types : Array&lt;out Type?&gt;) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types void disallowPrimitiveType(java.lang.reflect.Type[], java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun disallowPrimitiveType(types : Array&lt;out Type?&gt;, usedAs : String?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types java.lang.Iterable&lt;java.lang.reflect.Type&gt; filterUpperBounds(java.lang.Iterable&lt;java.lang.reflect.Type&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun filterUpperBounds(bounds : Iterable&lt;Type?&gt;) : MutableIterable&lt;Type?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types java.lang.reflect.Type getComponentType(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getComponentType(type : Type) : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types java.lang.reflect.Type newArrayType(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newArrayType(componentType : Type?) : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types java.lang.reflect.ParameterizedType newParameterizedType(java.lang.Class&lt;?&gt;, java.lang.reflect.Type...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newParameterizedType(rawType : Class&lt;*&gt;, vararg arguments : Type) : ParameterizedType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.Class&lt;?&gt;, java.lang.reflect.Type...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newParameterizedTypeWithOwner(ownerType : Type?, rawType : Class&lt;*&gt;, vararg arguments : Type) : ParameterizedType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types java.lang.reflect.TypeVariable&lt;D&gt; newTypeVariable(D, java.lang.String, java.lang.reflect.Type...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;D : GenericDeclaration?&gt; newTypeVariable(declaration : D, name : String, vararg bounds : Type) : TypeVariable&lt;D&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subtypeOf(upperBound : Type?) : WildcardType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types java.lang.reflect.Type subtypeOfComponentType(java.lang.reflect.Type[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun subtypeOfComponentType(bounds : Array&lt;out Type?&gt;) : Type?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun supertypeOf(lowerBound : Type?) : WildcardType&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types java.lang.reflect.Type[] toArray(java.util.Collection&lt;java.lang.reflect.Type&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toArray(types : Collection&lt;Type?&gt;) : Array&lt;out Type?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.reflect.Types java.lang.String toString(java.lang.reflect.Type)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun toString(type : Type) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractCheckedFuture AbstractCheckedFuture(com.google.common.util.concurrent.ListenableFuture&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AbstractCheckedFuture(delegate : ListenableFuture&lt;V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractCheckedFuture X mapException(java.lang.Exception)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mapException(p0 : Exception?) : X?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractExecutionThreadService void addListener(com.google.common.util.concurrent.Service.Listener, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addListener(p0 : Service.Listener, p1 : Executor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractExecutionThreadService java.util.concurrent.Executor executor()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun executor() : Executor&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractFuture.Sync boolean complete(V, java.lang.Throwable, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun complete(v : V?, t : Throwable?, finalState : Int) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractFuture.Sync boolean set(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractFuture void addListener(java.lang.Runnable, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addListener(listener : Runnable, exec : Executor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractFuture V get(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(timeout : Long, unit : TimeUnit) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractFuture boolean set(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractFuture boolean setException(java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setException(throwable : Throwable) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractIdleService java.lang.String access$000(com.google.common.util.concurrent.AbstractIdleService)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : AbstractIdleService) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractIdleService void addListener(com.google.common.util.concurrent.Service.Listener, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addListener(p0 : Service.Listener, p1 : Executor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractIdleService java.util.concurrent.Executor executor(com.google.common.util.concurrent.Service.State)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun executor(state : Service.State?) : Executor&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractListeningExecutorService java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt; invokeAll(java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; invokeAll(tasks : Collection&lt;out Callable&lt;T&gt;?&gt;) : MutableList&lt;Future&lt;T&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractListeningExecutorService java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt; invokeAll(java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; invokeAll(tasks : Collection&lt;out Callable&lt;T&gt;?&gt;, timeout : Long, unit : TimeUnit) : MutableList&lt;Future&lt;T&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractListeningExecutorService T invokeAny(java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; invokeAny(tasks : Collection&lt;out Callable&lt;T&gt;?&gt;) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractListeningExecutorService T invokeAny(java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; invokeAny(tasks : Collection&lt;out Callable&lt;T&gt;?&gt;, timeout : Long, unit : TimeUnit) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractListeningExecutorService com.google.common.util.concurrent.ListenableFuture&lt;?&gt; submit(java.lang.Runnable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun submit(task : Runnable?) : ListenableFuture&lt;*&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractListeningExecutorService java.util.concurrent.Future submit(java.lang.Runnable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun submit(x0 : Runnable?) : Future&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractListeningExecutorService com.google.common.util.concurrent.ListenableFuture&lt;T&gt; submit(java.lang.Runnable, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; submit(task : Runnable?, result : T?) : ListenableFuture&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractListeningExecutorService java.util.concurrent.Future submit(java.lang.Runnable, java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun submit(x0 : Runnable?, x1 : Any?) : Future&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractListeningExecutorService com.google.common.util.concurrent.ListenableFuture&lt;T&gt; submit(java.util.concurrent.Callable&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; submit(task : Callable&lt;T&gt;?) : ListenableFuture&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractListeningExecutorService java.util.concurrent.Future submit(java.util.concurrent.Callable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun submit(x0 : Callable?) : Future&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService.1 java.util.concurrent.locks.ReentrantLock access$100(com.google.common.util.concurrent.AbstractScheduledService.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : AbstractScheduledService.1) : ReentrantLock&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService.1 java.util.concurrent.Future access$302(com.google.common.util.concurrent.AbstractScheduledService.1, java.util.concurrent.Future)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$302(x0 : AbstractScheduledService.1, x1 : Future?) : Future?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService.1 java.util.concurrent.ScheduledExecutorService access$500(com.google.common.util.concurrent.AbstractScheduledService.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$500(x0 : AbstractScheduledService.1) : ScheduledExecutorService?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService.1 java.lang.Runnable access$600(com.google.common.util.concurrent.AbstractScheduledService.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$600(x0 : AbstractScheduledService.1) : Runnable&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService.CustomScheduler.ReschedulableCallable java.lang.Object call()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun call() : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService.CustomScheduler.ReschedulableCallable java.lang.Void call()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun call() : Void?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService.CustomScheduler.Schedule Schedule(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Schedule(delay : Long, unit : TimeUnit)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService.CustomScheduler.Schedule long access$700(com.google.common.util.concurrent.AbstractScheduledService.CustomScheduler.Schedule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$700(x0 : AbstractScheduledService.CustomScheduler.Schedule) : Long&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService.CustomScheduler.Schedule java.util.concurrent.TimeUnit access$800(com.google.common.util.concurrent.AbstractScheduledService.CustomScheduler.Schedule)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$800(x0 : AbstractScheduledService.CustomScheduler.Schedule) : TimeUnit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService.CustomScheduler java.util.concurrent.Future&lt;?&gt; schedule(com.google.common.util.concurrent.AbstractService, java.util.concurrent.ScheduledExecutorService, java.lang.Runnable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun schedule(service : AbstractService?, executor : ScheduledExecutorService, runnable : Runnable?) : Future&lt;*&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService.Scheduler.1 java.util.concurrent.Future&lt;?&gt; schedule(com.google.common.util.concurrent.AbstractService, java.util.concurrent.ScheduledExecutorService, java.lang.Runnable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun schedule(service : AbstractService?, executor : ScheduledExecutorService, task : Runnable?) : Future&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService.Scheduler.2 java.util.concurrent.Future&lt;?&gt; schedule(com.google.common.util.concurrent.AbstractService, java.util.concurrent.ScheduledExecutorService, java.lang.Runnable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun schedule(service : AbstractService?, executor : ScheduledExecutorService, task : Runnable?) : Future&lt;*&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService.Scheduler com.google.common.util.concurrent.AbstractScheduledService.Scheduler newFixedDelaySchedule(long, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newFixedDelaySchedule(initialDelay : Long, delay : Long, unit : TimeUnit?) : AbstractScheduledService.Scheduler&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService.Scheduler com.google.common.util.concurrent.AbstractScheduledService.Scheduler newFixedRateSchedule(long, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newFixedRateSchedule(initialDelay : Long, period : Long, unit : TimeUnit?) : AbstractScheduledService.Scheduler&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService.Scheduler java.util.concurrent.Future&lt;?&gt; schedule(com.google.common.util.concurrent.AbstractService, java.util.concurrent.ScheduledExecutorService, java.lang.Runnable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun schedule(p0 : AbstractService?, p1 : ScheduledExecutorService, p2 : Runnable?) : Future&lt;*&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService com.google.common.util.concurrent.AbstractService access$400(com.google.common.util.concurrent.AbstractScheduledService)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$400(x0 : AbstractScheduledService) : AbstractService&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService void addListener(com.google.common.util.concurrent.Service.Listener, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addListener(listener : Service.Listener, executor : Executor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService com.google.common.util.concurrent.ListenableFuture&lt;com.google.common.util.concurrent.Service.State&gt; start()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun start() : ListenableFuture&lt;Service.State?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractScheduledService com.google.common.util.concurrent.ListenableFuture&lt;com.google.common.util.concurrent.Service.State&gt; stop()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun stop() : ListenableFuture&lt;Service.State?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractService.1 void failed(com.google.common.util.concurrent.Service.State, java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun failed(from : Service.State, failure : Throwable?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractService.StateSnapshot StateSnapshot(com.google.common.util.concurrent.Service.State, boolean, java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun StateSnapshot(internalState : Service.State?, shutdownWhenStartupFinishes : Boolean, failure : Throwable?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractService.StateSnapshot java.lang.Throwable failureCause()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun failureCause() : Throwable?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractService.Transition com.google.common.util.concurrent.Service.State get(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(timeout : Long, unit : TimeUnit) : Service.State?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractService.Transition java.lang.Object get(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(x0 : Long, x1 : TimeUnit) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractService com.google.common.util.concurrent.AbstractService.Transition access$100(com.google.common.util.concurrent.AbstractService)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : AbstractService) : AbstractService.Transition&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractService com.google.common.util.concurrent.AbstractService.Transition access$200(com.google.common.util.concurrent.AbstractService)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : AbstractService) : AbstractService.Transition&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractService void addListener(com.google.common.util.concurrent.Service.Listener, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addListener(listener : Service.Listener, executor : Executor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractService void notifyFailed(java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun notifyFailed(cause : Throwable) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractService com.google.common.util.concurrent.ListenableFuture&lt;com.google.common.util.concurrent.Service.State&gt; start()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun start() : ListenableFuture&lt;Service.State?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AbstractService com.google.common.util.concurrent.ListenableFuture&lt;com.google.common.util.concurrent.Service.State&gt; stop()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun stop() : ListenableFuture&lt;Service.State?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AsyncFunction com.google.common.util.concurrent.ListenableFuture&lt;O&gt; apply(I)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : I) : ListenableFuture&lt;O&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AtomicDouble void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(s : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AtomicDouble void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(s : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AtomicDoubleArray AtomicDoubleArray(double[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AtomicDoubleArray(array : DoubleArray)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AtomicDoubleArray void readObject(java.io.ObjectInputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readObject(s : ObjectInputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AtomicDoubleArray void writeObject(java.io.ObjectOutputStream)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeObject(s : ObjectOutputStream) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AtomicLongMap.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AtomicLongMap.1 java.lang.Long apply(java.util.concurrent.atomic.AtomicLong)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(atomic : AtomicLong) : Long?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AtomicLongMap AtomicLongMap(java.util.concurrent.ConcurrentHashMap&lt;K,java.util.concurrent.atomic.AtomicLong&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun AtomicLongMap(map : ConcurrentHashMap&lt;K, AtomicLong?&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AtomicLongMap com.google.common.util.concurrent.AtomicLongMap&lt;K&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K&gt; create() : AtomicLongMap&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AtomicLongMap com.google.common.util.concurrent.AtomicLongMap&lt;K&gt; create(java.util.Map&lt;? extends K,? extends java.lang.Long&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;K&gt; create(m : Map&lt;out K, out Long?&gt;) : AtomicLongMap&lt;K&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.AtomicLongMap void putAll(java.util.Map&lt;? extends K,? extends java.lang.Long&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun putAll(m : Map&lt;out K, out Long?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Atomics java.util.concurrent.atomic.AtomicReference&lt;V&gt; newReference()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; newReference() : AtomicReference&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Atomics java.util.concurrent.atomic.AtomicReference&lt;V&gt; newReference(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; newReference(p0 : V?) : AtomicReference&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Atomics java.util.concurrent.atomic.AtomicReferenceArray&lt;E&gt; newReferenceArray(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newReferenceArray(length : Int) : AtomicReferenceArray&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Atomics java.util.concurrent.atomic.AtomicReferenceArray&lt;E&gt; newReferenceArray(E[])'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; newReferenceArray(array : Array&lt;out E&gt;?) : AtomicReferenceArray&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Callables java.util.concurrent.Callable&lt;T&gt; returning(T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; returning(p0 : T?) : Callable&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.1 java.lang.Object initialValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initialValue() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.1 java.util.ArrayList&lt;com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode&gt; initialValue()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun initialValue() : ArrayList&lt;CycleDetectingLockFactory.LockGraphNode?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.CycleDetectingLock com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode getLockGraphNode()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLockGraphNode() : CycleDetectingLockFactory.LockGraphNode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.CycleDetectingReentrantLock CycleDetectingReentrantLock(com.google.common.util.concurrent.CycleDetectingLockFactory, com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CycleDetectingReentrantLock(lockGraphNode : CycleDetectingLockFactory.LockGraphNode, fair : Boolean)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.CycleDetectingReentrantLock CycleDetectingReentrantLock(com.google.common.util.concurrent.CycleDetectingLockFactory, com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode, boolean, com.google.common.util.concurrent.CycleDetectingLockFactory.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CycleDetectingReentrantLock(x0 : CycleDetectingLockFactory?, x1 : CycleDetectingLockFactory.LockGraphNode, x2 : Boolean, x3 : CycleDetectingLockFactory.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.CycleDetectingReentrantLock com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode getLockGraphNode()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLockGraphNode() : CycleDetectingLockFactory.LockGraphNode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.CycleDetectingReentrantReadWriteLock CycleDetectingReentrantReadWriteLock(com.google.common.util.concurrent.CycleDetectingLockFactory, com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CycleDetectingReentrantReadWriteLock(lockGraphNode : CycleDetectingLockFactory.LockGraphNode, fair : Boolean)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.CycleDetectingReentrantReadWriteLock CycleDetectingReentrantReadWriteLock(com.google.common.util.concurrent.CycleDetectingLockFactory, com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode, boolean, com.google.common.util.concurrent.CycleDetectingLockFactory.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun CycleDetectingReentrantReadWriteLock(x0 : CycleDetectingLockFactory?, x1 : CycleDetectingLockFactory.LockGraphNode, x2 : Boolean, x3 : CycleDetectingLockFactory.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.CycleDetectingReentrantReadWriteLock com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode getLockGraphNode()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLockGraphNode() : CycleDetectingLockFactory.LockGraphNode&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.CycleDetectingReentrantReadWriteLock java.util.concurrent.locks.Lock readLock()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readLock() : Lock&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.CycleDetectingReentrantReadWriteLock java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock readLock()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readLock() : ReentrantReadWriteLock.ReadLock&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.CycleDetectingReentrantReadWriteLock java.util.concurrent.locks.Lock writeLock()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeLock() : Lock&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.CycleDetectingReentrantReadWriteLock java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock writeLock()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun writeLock() : ReentrantReadWriteLock.WriteLock&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.ExampleStackTrace ExampleStackTrace(com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode, com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ExampleStackTrace(node1 : CycleDetectingLockFactory.LockGraphNode, node2 : CycleDetectingLockFactory.LockGraphNode)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode LockGraphNode(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun LockGraphNode(lockName : String)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode void checkAcquiredLock(com.google.common.util.concurrent.CycleDetectingLockFactory.Policy, com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkAcquiredLock(policy : CycleDetectingLockFactory.Policy?, acquiredLock : CycleDetectingLockFactory.LockGraphNode) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode void checkAcquiredLocks(com.google.common.util.concurrent.CycleDetectingLockFactory.Policy, java.util.List&lt;com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun checkAcquiredLocks(policy : CycleDetectingLockFactory.Policy?, acquiredLocks : List&lt;CycleDetectingLockFactory.LockGraphNode?&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode com.google.common.util.concurrent.CycleDetectingLockFactory.ExampleStackTrace findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode, java.util.Set&lt;com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findPathTo(node : CycleDetectingLockFactory.LockGraphNode?, seen : MutableSet&lt;CycleDetectingLockFactory.LockGraphNode?&gt;) : CycleDetectingLockFactory.ExampleStackTrace?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode java.lang.String getLockName()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLockName() : String&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.OrderedLockGraphNodesCreator java.util.Map&lt;? extends java.lang.Enum,com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode&gt; apply(java.lang.Class&lt;? extends java.lang.Enum&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(clazz : Class&lt;out Enum?&gt;) : MutableMap&lt;out Enum?, CycleDetectingLockFactory.LockGraphNode?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.OrderedLockGraphNodesCreator java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.OrderedLockGraphNodesCreator java.util.Map&lt;E,com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode&gt; createNodesFor(java.lang.Class&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Enum&lt;E&gt;?&gt; createNodesFor(clazz : Class&lt;E&gt;) : MutableMap&lt;E, CycleDetectingLockFactory.LockGraphNode?&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.OrderedLockGraphNodesCreator java.lang.String getLockName(java.lang.Enum&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getLockName(rank : Enum&lt;*&gt;) : String?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.PotentialDeadlockException PotentialDeadlockException(com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode, com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode, com.google.common.util.concurrent.CycleDetectingLockFactory.ExampleStackTrace)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PotentialDeadlockException(node1 : CycleDetectingLockFactory.LockGraphNode, node2 : CycleDetectingLockFactory.LockGraphNode, conflictingStackTrace : CycleDetectingLockFactory.ExampleStackTrace?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.PotentialDeadlockException PotentialDeadlockException(com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode, com.google.common.util.concurrent.CycleDetectingLockFactory.LockGraphNode, com.google.common.util.concurrent.CycleDetectingLockFactory.ExampleStackTrace, com.google.common.util.concurrent.CycleDetectingLockFactory.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun PotentialDeadlockException(x0 : CycleDetectingLockFactory.LockGraphNode, x1 : CycleDetectingLockFactory.LockGraphNode, x2 : CycleDetectingLockFactory.ExampleStackTrace?, x3 : CycleDetectingLockFactory.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.WithExplicitOrdering java.util.concurrent.locks.ReentrantLock newReentrantLock(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newReentrantLock(rank : E?) : ReentrantLock&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.WithExplicitOrdering java.util.concurrent.locks.ReentrantLock newReentrantLock(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newReentrantLock(rank : E?, fair : Boolean) : ReentrantLock&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.WithExplicitOrdering java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newReentrantReadWriteLock(rank : E?) : ReentrantReadWriteLock&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory.WithExplicitOrdering java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(E, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newReentrantReadWriteLock(rank : E?, fair : Boolean) : ReentrantReadWriteLock&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory void aboutToAcquire(com.google.common.util.concurrent.CycleDetectingLockFactory.CycleDetectingLock)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun aboutToAcquire(lock : CycleDetectingLockFactory.CycleDetectingLock) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory void access$600(com.google.common.util.concurrent.CycleDetectingLockFactory, com.google.common.util.concurrent.CycleDetectingLockFactory.CycleDetectingLock)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$600(x0 : CycleDetectingLockFactory, x1 : CycleDetectingLockFactory.CycleDetectingLock) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory void access$700(com.google.common.util.concurrent.CycleDetectingLockFactory, com.google.common.util.concurrent.CycleDetectingLockFactory.CycleDetectingLock)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$700(x0 : CycleDetectingLockFactory, x1 : CycleDetectingLockFactory.CycleDetectingLock) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory void lockStateChanged(com.google.common.util.concurrent.CycleDetectingLockFactory.CycleDetectingLock)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lockStateChanged(lock : CycleDetectingLockFactory.CycleDetectingLock) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory com.google.common.util.concurrent.CycleDetectingLockFactory newInstance(com.google.common.util.concurrent.CycleDetectingLockFactory.Policy)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newInstance(policy : CycleDetectingLockFactory.Policy?) : CycleDetectingLockFactory&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory com.google.common.util.concurrent.CycleDetectingLockFactory.WithExplicitOrdering&lt;E&gt; newInstanceWithExplicitOrdering(java.lang.Class&lt;E&gt;, com.google.common.util.concurrent.CycleDetectingLockFactory.Policy)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E : Enum&lt;E&gt;?&gt; newInstanceWithExplicitOrdering(enumClass : Class&lt;E&gt;?, policy : CycleDetectingLockFactory.Policy?) : CycleDetectingLockFactory.WithExplicitOrdering&lt;E&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newReentrantLock(lockName : String?) : ReentrantLock&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.String, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newReentrantLock(lockName : String?, fair : Boolean) : ReentrantLock&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newReentrantReadWriteLock(lockName : String?) : ReentrantReadWriteLock&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.CycleDetectingLockFactory java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.String, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun newReentrantReadWriteLock(lockName : String?, fair : Boolean) : ReentrantReadWriteLock&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ExecutionList void add(java.lang.Runnable, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun add(runnable : Runnable, executor : Executor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.FakeTimeLimiter T callWithTimeout(java.util.concurrent.Callable&lt;T&gt;, long, java.util.concurrent.TimeUnit, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; callWithTimeout(callable : Callable&lt;T&gt;, timeoutDuration : Long, timeoutUnit : TimeUnit, amInterruptible : Boolean) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.FakeTimeLimiter T newProxy(T, java.lang.Class&lt;T&gt;, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; newProxy(p0 : T, p1 : Class&lt;T&gt;, p2 : Long, p3 : TimeUnit) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingCheckedFuture.SimpleForwardingCheckedFuture SimpleForwardingCheckedFuture(com.google.common.util.concurrent.CheckedFuture&lt;V,X&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SimpleForwardingCheckedFuture(delegate : CheckedFuture&lt;V, X&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingCheckedFuture.SimpleForwardingCheckedFuture com.google.common.util.concurrent.CheckedFuture&lt;V,X&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : CheckedFuture&lt;V, X&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingCheckedFuture.SimpleForwardingCheckedFuture com.google.common.util.concurrent.ListenableFuture delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : ListenableFuture&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingCheckedFuture.SimpleForwardingCheckedFuture java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingCheckedFuture.SimpleForwardingCheckedFuture java.util.concurrent.Future delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Future&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingCheckedFuture com.google.common.util.concurrent.CheckedFuture&lt;V,X&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : CheckedFuture&lt;V, X&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingCheckedFuture com.google.common.util.concurrent.ListenableFuture delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : ListenableFuture&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingCheckedFuture java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingCheckedFuture java.util.concurrent.Future delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Future&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingFuture.SimpleForwardingFuture SimpleForwardingFuture(java.util.concurrent.Future&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SimpleForwardingFuture(delegate : Future&lt;V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingFuture.SimpleForwardingFuture java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingFuture.SimpleForwardingFuture java.util.concurrent.Future&lt;V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Future&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingFuture java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingFuture java.util.concurrent.Future&lt;V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Future&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingListenableFuture.SimpleForwardingListenableFuture SimpleForwardingListenableFuture(com.google.common.util.concurrent.ListenableFuture&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SimpleForwardingListenableFuture(delegate : ListenableFuture&lt;V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingListenableFuture.SimpleForwardingListenableFuture com.google.common.util.concurrent.ListenableFuture&lt;V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : ListenableFuture&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingListenableFuture.SimpleForwardingListenableFuture java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingListenableFuture.SimpleForwardingListenableFuture java.util.concurrent.Future delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Future&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingListenableFuture void addListener(java.lang.Runnable, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addListener(p0 : Runnable, p1 : Executor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingListenableFuture com.google.common.util.concurrent.ListenableFuture&lt;V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : ListenableFuture&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingListenableFuture java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingListenableFuture java.util.concurrent.Future delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Future&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ForwardingService void addListener(com.google.common.util.concurrent.Service.Listener, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addListener(p0 : Service.Listener, p1 : Executor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures.1 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures.2 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures.3 com.google.common.util.concurrent.ListenableFuture&lt;O&gt; apply(I)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(input : I) : ListenableFuture&lt;O&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures.4 O applyTransformation(I)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun applyTransformation(input : I?) : O?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures.4 O get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : O?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures.4 O get(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(timeout : Long, unit : TimeUnit?) : O?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures.5 com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(p0 : Any) : ListenableFuture?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures.7 java.lang.Object apply(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(x0 : Any?) : Any?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures.7 java.lang.Boolean apply(java.lang.reflect.Constructor&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun apply(input : Constructor&lt;*&gt;) : Boolean?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures.ChainingListenableFuture ChainingListenableFuture(com.google.common.util.concurrent.AsyncFunction&lt;? super I,? extends O&gt;, com.google.common.util.concurrent.ListenableFuture&lt;? extends I&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ChainingListenableFuture(function : AsyncFunction&lt;in I, out O&gt;, inputFuture : ListenableFuture&lt;out I&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures.ChainingListenableFuture ChainingListenableFuture(com.google.common.util.concurrent.AsyncFunction, com.google.common.util.concurrent.ListenableFuture, com.google.common.util.concurrent.Futures.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ChainingListenableFuture(x0 : AsyncFunction, x1 : ListenableFuture, x2 : Futures.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures.ChainingListenableFuture com.google.common.util.concurrent.ListenableFuture access$102(com.google.common.util.concurrent.Futures.ChainingListenableFuture, com.google.common.util.concurrent.ListenableFuture)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$102(x0 : Futures.ChainingListenableFuture, x1 : ListenableFuture?) : ListenableFuture?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures.ChainingListenableFuture void cancel(java.util.concurrent.Future&lt;?&gt;, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun cancel(future : Future&lt;*&gt;?, mayInterruptIfRunning : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures.ListFuture ListFuture(com.google.common.collect.ImmutableList&lt;? extends com.google.common.util.concurrent.ListenableFuture&lt;? extends V&gt;&gt;, boolean, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ListFuture(futures : ImmutableList&lt;out ListenableFuture&lt;out V&gt;?&gt;, allMustSucceed : Boolean, listenerExecutor : Executor?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures.ListFuture void access$200(com.google.common.util.concurrent.Futures.ListFuture, int, java.util.concurrent.Future)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$200(x0 : Futures.ListFuture, x1 : Int, x2 : Future?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures.MappingCheckedFuture MappingCheckedFuture(com.google.common.util.concurrent.ListenableFuture&lt;V&gt;, com.google.common.base.Function&lt;java.lang.Exception,X&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun MappingCheckedFuture(delegate : ListenableFuture&lt;V&gt;, mapper : Function&lt;Exception?, X&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures.MappingCheckedFuture X mapException(java.lang.Exception)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun mapException(e : Exception?) : X?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures void addCallback(com.google.common.util.concurrent.ListenableFuture&lt;V&gt;, com.google.common.util.concurrent.FutureCallback&lt;? super V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; addCallback(future : ListenableFuture&lt;V&gt;, callback : FutureCallback&lt;in V&gt;) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures void addCallback(com.google.common.util.concurrent.ListenableFuture&lt;V&gt;, com.google.common.util.concurrent.FutureCallback&lt;? super V&gt;, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; addCallback(future : ListenableFuture&lt;V&gt;, callback : FutureCallback&lt;in V&gt;, executor : Executor?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures com.google.common.util.concurrent.ListenableFuture&lt;java.util.List&lt;V&gt;&gt; allAsList(java.lang.Iterable&lt;? extends com.google.common.util.concurrent.ListenableFuture&lt;? extends V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; allAsList(futures : Iterable&lt;out ListenableFuture&lt;out V&gt;?&gt;) : ListenableFuture&lt;List&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures com.google.common.util.concurrent.ListenableFuture&lt;java.util.List&lt;V&gt;&gt; allAsList(com.google.common.util.concurrent.ListenableFuture&lt;? extends V&gt;...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; allAsList(vararg futures : ListenableFuture&lt;out V&gt;) : ListenableFuture&lt;List&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures com.google.common.util.concurrent.ListenableFuture&lt;V&gt; dereference(com.google.common.util.concurrent.ListenableFuture&lt;? extends com.google.common.util.concurrent.ListenableFuture&lt;? extends V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; dereference(nested : ListenableFuture&lt;out ListenableFuture&lt;out V&gt;?&gt;) : ListenableFuture&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures V get(java.util.concurrent.Future&lt;V&gt;, long, java.util.concurrent.TimeUnit, java.lang.Class&lt;X&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, X : Exception?&gt; get(future : Future&lt;V&gt;, timeout : Long, unit : TimeUnit, exceptionClass : Class&lt;X&gt;?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures V get(java.util.concurrent.Future&lt;V&gt;, java.lang.Class&lt;X&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, X : Exception?&gt; get(future : Future&lt;V&gt;, exceptionClass : Class&lt;X&gt;?) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures V getUnchecked(java.util.concurrent.Future&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; getUnchecked(future : Future&lt;V&gt;) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures com.google.common.util.concurrent.CheckedFuture&lt;V,X&gt; immediateCheckedFuture(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, X : Exception?&gt; immediateCheckedFuture(p0 : V?) : CheckedFuture&lt;V, X&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures com.google.common.util.concurrent.CheckedFuture&lt;V,X&gt; immediateFailedCheckedFuture(X)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, X : Exception?&gt; immediateFailedCheckedFuture(exception : X) : CheckedFuture&lt;V, X&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures com.google.common.util.concurrent.ListenableFuture&lt;V&gt; immediateFailedFuture(java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; immediateFailedFuture(throwable : Throwable) : ListenableFuture&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures com.google.common.util.concurrent.ListenableFuture&lt;V&gt; immediateFuture(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; immediateFuture(value : V?) : ListenableFuture&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures java.util.concurrent.Future&lt;O&gt; lazyTransform(java.util.concurrent.Future&lt;I&gt;, com.google.common.base.Function&lt;? super I,? extends O&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;I, O&gt; lazyTransform(input : Future&lt;I&gt;, function : Function&lt;in I, out O&gt;) : Future&lt;O&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures com.google.common.util.concurrent.CheckedFuture&lt;V,X&gt; makeChecked(com.google.common.util.concurrent.ListenableFuture&lt;V&gt;, com.google.common.base.Function&lt;java.lang.Exception,X&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V, X : Exception?&gt; makeChecked(future : ListenableFuture&lt;V&gt;, mapper : Function&lt;Exception?, X&gt;) : CheckedFuture&lt;V, X&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures X newFromConstructor(java.lang.reflect.Constructor&lt;X&gt;, java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;X&gt; newFromConstructor(constructor : Constructor&lt;X&gt;, cause : Throwable?) : X?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures X newWithCause(java.lang.Class&lt;X&gt;, java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;X : Exception?&gt; newWithCause(exceptionClass : Class&lt;X&gt;, cause : Throwable?) : X&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures java.util.List&lt;java.lang.reflect.Constructor&lt;X&gt;&gt; preferringStrings(java.util.List&lt;java.lang.reflect.Constructor&lt;X&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;X : Exception?&gt; preferringStrings(constructors : List&lt;Constructor&lt;X&gt;?&gt;) : MutableList&lt;Constructor&lt;X&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures com.google.common.util.concurrent.ListenableFuture&lt;java.util.List&lt;V&gt;&gt; successfulAsList(java.lang.Iterable&lt;? extends com.google.common.util.concurrent.ListenableFuture&lt;? extends V&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; successfulAsList(futures : Iterable&lt;out ListenableFuture&lt;out V&gt;?&gt;) : ListenableFuture&lt;List&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures com.google.common.util.concurrent.ListenableFuture&lt;java.util.List&lt;V&gt;&gt; successfulAsList(com.google.common.util.concurrent.ListenableFuture&lt;? extends V&gt;...)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; successfulAsList(vararg futures : ListenableFuture&lt;out V&gt;) : ListenableFuture&lt;List&lt;V&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures com.google.common.util.concurrent.ListenableFuture&lt;O&gt; transform(com.google.common.util.concurrent.ListenableFuture&lt;I&gt;, com.google.common.base.Function&lt;? super I,? extends O&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;I, O&gt; transform(input : ListenableFuture&lt;I&gt;, function : Function&lt;in I, out O&gt;) : ListenableFuture&lt;O&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures com.google.common.util.concurrent.ListenableFuture&lt;O&gt; transform(com.google.common.util.concurrent.ListenableFuture&lt;I&gt;, com.google.common.base.Function&lt;? super I,? extends O&gt;, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;I, O&gt; transform(input : ListenableFuture&lt;I&gt;, function : Function&lt;in I, out O&gt;, executor : Executor?) : ListenableFuture&lt;O&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures com.google.common.util.concurrent.ListenableFuture&lt;O&gt; transform(com.google.common.util.concurrent.ListenableFuture&lt;I&gt;, com.google.common.util.concurrent.AsyncFunction&lt;? super I,? extends O&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;I, O&gt; transform(input : ListenableFuture&lt;I&gt;, function : AsyncFunction&lt;in I, out O&gt;) : ListenableFuture&lt;O&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Futures com.google.common.util.concurrent.ListenableFuture&lt;O&gt; transform(com.google.common.util.concurrent.ListenableFuture&lt;I&gt;, com.google.common.util.concurrent.AsyncFunction&lt;? super I,? extends O&gt;, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;I, O&gt; transform(input : ListenableFuture&lt;I&gt;, function : AsyncFunction&lt;in I, out O&gt;, executor : Executor?) : ListenableFuture&lt;O&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.JdkFutureAdapters.ListenableFutureAdapter ListenableFutureAdapter(java.util.concurrent.Future&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ListenableFutureAdapter(delegate : Future&lt;V&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.JdkFutureAdapters.ListenableFutureAdapter ListenableFutureAdapter(java.util.concurrent.Future&lt;V&gt;, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ListenableFutureAdapter(delegate : Future&lt;V&gt;, adapterExecutor : Executor)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.JdkFutureAdapters.ListenableFutureAdapter java.util.concurrent.Future access$000(com.google.common.util.concurrent.JdkFutureAdapters.ListenableFutureAdapter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : JdkFutureAdapters.ListenableFutureAdapter) : Future&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.JdkFutureAdapters.ListenableFutureAdapter com.google.common.util.concurrent.ExecutionList access$100(com.google.common.util.concurrent.JdkFutureAdapters.ListenableFutureAdapter)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$100(x0 : JdkFutureAdapters.ListenableFutureAdapter) : ExecutionList&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.JdkFutureAdapters.ListenableFutureAdapter void addListener(java.lang.Runnable, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addListener(listener : Runnable, exec : Executor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.JdkFutureAdapters.ListenableFutureAdapter java.lang.Object delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.JdkFutureAdapters.ListenableFutureAdapter java.util.concurrent.Future&lt;V&gt; delegate()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun delegate() : Future&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.JdkFutureAdapters com.google.common.util.concurrent.ListenableFuture&lt;V&gt; listenInPoolThread(java.util.concurrent.Future&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; listenInPoolThread(future : Future&lt;V&gt;) : ListenableFuture&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.JdkFutureAdapters com.google.common.util.concurrent.ListenableFuture&lt;V&gt; listenInPoolThread(java.util.concurrent.Future&lt;V&gt;, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; listenInPoolThread(future : Future&lt;V&gt;, executor : Executor) : ListenableFuture&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ListenableFuture void addListener(java.lang.Runnable, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addListener(p0 : Runnable, p1 : Executor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ListenableFutureTask ListenableFutureTask(java.lang.Runnable, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ListenableFutureTask(runnable : Runnable?, result : V?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ListenableFutureTask void addListener(java.lang.Runnable, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addListener(listener : Runnable, exec : Executor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ListenableFutureTask com.google.common.util.concurrent.ListenableFutureTask&lt;V&gt; create(java.lang.Runnable, V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; create(p0 : Runnable?, p1 : V?) : ListenableFutureTask&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ListenableFutureTask com.google.common.util.concurrent.ListenableFutureTask&lt;V&gt; create(java.util.concurrent.Callable&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; create(callable : Callable&lt;V&gt;?) : ListenableFutureTask&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ListeningExecutorService java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt; invokeAll(java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; invokeAll(p0 : Collection&lt;out Callable&lt;T&gt;?&gt;) : MutableList&lt;Future&lt;T&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ListeningExecutorService java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt; invokeAll(java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; invokeAll(p0 : Collection&lt;out Callable&lt;T&gt;?&gt;, p1 : Long, p2 : TimeUnit) : MutableList&lt;Future&lt;T&gt;?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ListeningExecutorService com.google.common.util.concurrent.ListenableFuture&lt;?&gt; submit(java.lang.Runnable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun submit(p0 : Runnable?) : ListenableFuture&lt;*&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ListeningExecutorService com.google.common.util.concurrent.ListenableFuture&lt;T&gt; submit(java.lang.Runnable, T)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; submit(p0 : Runnable?, p1 : T?) : ListenableFuture&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ListeningExecutorService com.google.common.util.concurrent.ListenableFuture&lt;T&gt; submit(java.util.concurrent.Callable&lt;T&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; submit(p0 : Callable&lt;T&gt;?) : ListenableFuture&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor.Guard Guard(com.google.common.util.concurrent.Monitor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Guard(monitor : Monitor)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor java.util.concurrent.locks.ReentrantLock access$000(com.google.common.util.concurrent.Monitor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun access$000(x0 : Monitor) : ReentrantLock&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor void decrementWaiters(com.google.common.util.concurrent.Monitor.Guard)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun decrementWaiters(guard : Monitor.Guard) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor boolean enterIf(com.google.common.util.concurrent.Monitor.Guard)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun enterIf(guard : Monitor.Guard) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor boolean enterIf(com.google.common.util.concurrent.Monitor.Guard, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun enterIf(guard : Monitor.Guard, time : Long, unit : TimeUnit?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor boolean enterIfInterruptibly(com.google.common.util.concurrent.Monitor.Guard)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun enterIfInterruptibly(guard : Monitor.Guard) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor boolean enterIfInterruptibly(com.google.common.util.concurrent.Monitor.Guard, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun enterIfInterruptibly(guard : Monitor.Guard, time : Long, unit : TimeUnit?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor void enterWhen(com.google.common.util.concurrent.Monitor.Guard)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun enterWhen(guard : Monitor.Guard) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor boolean enterWhen(com.google.common.util.concurrent.Monitor.Guard, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun enterWhen(guard : Monitor.Guard, time : Long, unit : TimeUnit?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor void enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor.Guard)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun enterWhenUninterruptibly(guard : Monitor.Guard) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor boolean enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor.Guard, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun enterWhenUninterruptibly(guard : Monitor.Guard, time : Long, unit : TimeUnit) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor int getWaitQueueLength(com.google.common.util.concurrent.Monitor.Guard)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getWaitQueueLength(guard : Monitor.Guard) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor boolean hasWaiters(com.google.common.util.concurrent.Monitor.Guard)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun hasWaiters(guard : Monitor.Guard) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor void incrementWaiters(com.google.common.util.concurrent.Monitor.Guard)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun incrementWaiters(guard : Monitor.Guard) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor void signalConditionsOfSatisfiedGuards(com.google.common.util.concurrent.Monitor.Guard)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun signalConditionsOfSatisfiedGuards(interruptedGuard : Monitor.Guard?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor boolean tryEnterIf(com.google.common.util.concurrent.Monitor.Guard)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tryEnterIf(guard : Monitor.Guard) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor void waitFor(com.google.common.util.concurrent.Monitor.Guard)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun waitFor(guard : Monitor.Guard) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor boolean waitFor(com.google.common.util.concurrent.Monitor.Guard, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun waitFor(guard : Monitor.Guard, time : Long, unit : TimeUnit) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor void waitForUninterruptibly(com.google.common.util.concurrent.Monitor.Guard)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun waitForUninterruptibly(guard : Monitor.Guard) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor boolean waitForUninterruptibly(com.google.common.util.concurrent.Monitor.Guard, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun waitForUninterruptibly(guard : Monitor.Guard, time : Long, unit : TimeUnit) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor boolean waitInterruptibly(com.google.common.util.concurrent.Monitor.Guard, long, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun waitInterruptibly(guard : Monitor.Guard, remainingNanos : Long, signalBeforeWaiting : Boolean) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor void waitInterruptibly(com.google.common.util.concurrent.Monitor.Guard, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun waitInterruptibly(guard : Monitor.Guard, signalBeforeWaiting : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor boolean waitUninterruptibly(com.google.common.util.concurrent.Monitor.Guard, long, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun waitUninterruptibly(guard : Monitor.Guard, timeoutNanos : Long, signalBeforeWaiting : Boolean) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Monitor void waitUninterruptibly(com.google.common.util.concurrent.Monitor.Guard, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun waitUninterruptibly(guard : Monitor.Guard, signalBeforeWaiting : Boolean) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.MoreExecutors.ListeningDecorator ListeningDecorator(java.util.concurrent.ExecutorService)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ListeningDecorator(delegate : ExecutorService)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.MoreExecutors.SameThreadExecutorService boolean awaitTermination(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun awaitTermination(timeout : Long, unit : TimeUnit) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.MoreExecutors.SameThreadExecutorService void execute(java.lang.Runnable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun execute(command : Runnable) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.MoreExecutors.ScheduledListeningDecorator ScheduledListeningDecorator(java.util.concurrent.ScheduledExecutorService)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun ScheduledListeningDecorator(delegate : ScheduledExecutorService)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.MoreExecutors java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getExitingExecutorService(executor : ThreadPoolExecutor) : ExecutorService?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.MoreExecutors java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getExitingExecutorService(executor : ThreadPoolExecutor, terminationTimeout : Long, timeUnit : TimeUnit?) : ExecutorService?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.MoreExecutors java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getExitingScheduledExecutorService(executor : ScheduledThreadPoolExecutor) : ScheduledExecutorService?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.MoreExecutors java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun getExitingScheduledExecutorService(executor : ScheduledThreadPoolExecutor, terminationTimeout : Long, timeUnit : TimeUnit?) : ScheduledExecutorService?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.MoreExecutors T invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService, java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;, boolean, long)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; invokeAnyImpl(executorService : ListeningExecutorService, tasks : Collection&lt;out Callable&lt;T&gt;?&gt;, timed : Boolean, nanos : Long) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.MoreExecutors com.google.common.util.concurrent.ListeningExecutorService listeningDecorator(java.util.concurrent.ExecutorService)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listeningDecorator(delegate : ExecutorService) : ListeningExecutorService&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.MoreExecutors com.google.common.util.concurrent.ListeningScheduledExecutorService listeningDecorator(java.util.concurrent.ScheduledExecutorService)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun listeningDecorator(delegate : ScheduledExecutorService) : ListeningScheduledExecutorService&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.MoreExecutors com.google.common.util.concurrent.ListeningExecutorService sameThreadExecutor()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sameThreadExecutor() : ListeningExecutorService&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.MoreExecutors com.google.common.util.concurrent.ListenableFuture&lt;T&gt; submitAndAddQueueListener(com.google.common.util.concurrent.ListeningExecutorService, java.util.concurrent.Callable&lt;T&gt;, java.util.concurrent.BlockingQueue&lt;java.util.concurrent.Future&lt;T&gt;&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; submitAndAddQueueListener(executorService : ListeningExecutorService, task : Callable&lt;T&gt;?, queue : BlockingQueue&lt;Future&lt;T&gt;?&gt;?) : ListenableFuture&lt;T&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.RateLimiter.Bursty Bursty(com.google.common.util.concurrent.RateLimiter.SleepingTicker)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun Bursty(ticker : RateLimiter.SleepingTicker)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.RateLimiter.WarmingUp WarmingUp(com.google.common.util.concurrent.RateLimiter.SleepingTicker, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun WarmingUp(ticker : RateLimiter.SleepingTicker, warmupPeriod : Long, timeUnit : TimeUnit)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.RateLimiter RateLimiter(com.google.common.util.concurrent.RateLimiter.SleepingTicker)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RateLimiter(ticker : RateLimiter.SleepingTicker)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.RateLimiter RateLimiter(com.google.common.util.concurrent.RateLimiter.SleepingTicker, com.google.common.util.concurrent.RateLimiter.1)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun RateLimiter(x0 : RateLimiter.SleepingTicker, x1 : RateLimiter.1?)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.RateLimiter com.google.common.util.concurrent.RateLimiter create(double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create(permitsPerSecond : Double) : RateLimiter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.RateLimiter com.google.common.util.concurrent.RateLimiter create(double, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create(permitsPerSecond : Double, warmupPeriod : Long, unit : TimeUnit) : RateLimiter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.RateLimiter com.google.common.util.concurrent.RateLimiter create(com.google.common.util.concurrent.RateLimiter.SleepingTicker, double)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create(ticker : RateLimiter.SleepingTicker, permitsPerSecond : Double) : RateLimiter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.RateLimiter com.google.common.util.concurrent.RateLimiter create(com.google.common.util.concurrent.RateLimiter.SleepingTicker, double, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun create(ticker : RateLimiter.SleepingTicker, permitsPerSecond : Double, warmupPeriod : Long, timeUnit : TimeUnit) : RateLimiter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.RateLimiter com.google.common.util.concurrent.RateLimiter createBursty(com.google.common.util.concurrent.RateLimiter.SleepingTicker, double, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun createBursty(ticker : RateLimiter.SleepingTicker, permitsPerSecond : Double, maxBurstSize : Int) : RateLimiter&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.RateLimiter boolean tryAcquire(int, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tryAcquire(permits : Int, timeout : Long, unit : TimeUnit) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.RateLimiter boolean tryAcquire(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun tryAcquire(timeout : Long, unit : TimeUnit) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Service.Listener void failed(com.google.common.util.concurrent.Service.State, java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun failed(p0 : Service.State, p1 : Throwable?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Service void addListener(com.google.common.util.concurrent.Service.Listener, java.util.concurrent.Executor)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun addListener(p0 : Service.Listener, p1 : Executor) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Service com.google.common.util.concurrent.ListenableFuture&lt;com.google.common.util.concurrent.Service.State&gt; start()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun start() : ListenableFuture&lt;Service.State?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Service com.google.common.util.concurrent.ListenableFuture&lt;com.google.common.util.concurrent.Service.State&gt; stop()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun stop() : ListenableFuture&lt;Service.State?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.SettableFuture com.google.common.util.concurrent.SettableFuture&lt;V&gt; create()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; create() : SettableFuture&lt;V&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.SettableFuture boolean set(V)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun set(p0 : V?) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.SettableFuture boolean setException(java.lang.Throwable)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setException(throwable : Throwable) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.SimpleTimeLimiter SimpleTimeLimiter(java.util.concurrent.ExecutorService)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun SimpleTimeLimiter(executor : ExecutorService)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.SimpleTimeLimiter T callWithTimeout(java.util.concurrent.Callable&lt;T&gt;, long, java.util.concurrent.TimeUnit, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; callWithTimeout(callable : Callable&lt;T&gt;, timeoutDuration : Long, timeoutUnit : TimeUnit, amInterruptible : Boolean) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.SimpleTimeLimiter boolean declaresInterruptedEx(java.lang.reflect.Method)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun declaresInterruptedEx(method : Method) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.SimpleTimeLimiter java.util.Set&lt;java.lang.reflect.Method&gt; findInterruptibleMethods(java.lang.Class&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun findInterruptibleMethods(interfaceType : Class&lt;*&gt;) : MutableSet&lt;Method?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.SimpleTimeLimiter T newProxy(java.lang.Class&lt;T&gt;, java.lang.reflect.InvocationHandler)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; newProxy(interfaceType : Class&lt;T&gt;, handler : InvocationHandler?) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.SimpleTimeLimiter T newProxy(T, java.lang.Class&lt;T&gt;, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; newProxy(target : T, interfaceType : Class&lt;T&gt;, timeoutDuration : Long, timeoutUnit : TimeUnit) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped.1 java.lang.Object get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped.1 java.util.concurrent.locks.Lock get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : Lock&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped.2 java.lang.Object get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped.2 java.util.concurrent.locks.Lock get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : Lock&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped.3 java.lang.Object get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped.3 java.util.concurrent.Semaphore get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : Semaphore&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped.4 java.lang.Object get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped.4 java.util.concurrent.Semaphore get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : Semaphore&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped.5 java.lang.Object get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : Any&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped.5 java.util.concurrent.locks.ReadWriteLock get()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get() : ReadWriteLock&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped.LazyStriped LazyStriped(int, com.google.common.base.Supplier&lt;L&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun LazyStriped(stripes : Int, supplier : Supplier&lt;L&gt;)&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped.PowerOfTwoStriped L get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(key : Any) : L?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped.PowerOfTwoStriped int indexFor(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexFor(key : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped java.lang.Iterable&lt;L&gt; bulkGet(java.lang.Iterable&lt;?&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun bulkGet(keys : Iterable&lt;*&gt;) : MutableIterable&lt;L&gt;?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped L get(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun get(p0 : Any) : L?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped int indexFor(java.lang.Object)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun indexFor(p0 : Any) : Int&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped com.google.common.util.concurrent.Striped&lt;java.util.concurrent.locks.Lock&gt; lazyWeakLock(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lazyWeakLock(stripes : Int) : Striped&lt;Lock?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped com.google.common.util.concurrent.Striped&lt;java.util.concurrent.locks.ReadWriteLock&gt; lazyWeakReadWriteLock(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lazyWeakReadWriteLock(stripes : Int) : Striped&lt;ReadWriteLock?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped com.google.common.util.concurrent.Striped&lt;java.util.concurrent.Semaphore&gt; lazyWeakSemaphore(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lazyWeakSemaphore(stripes : Int, permits : Int) : Striped&lt;Semaphore?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped com.google.common.util.concurrent.Striped&lt;java.util.concurrent.locks.Lock&gt; lock(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun lock(stripes : Int) : Striped&lt;Lock?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped com.google.common.util.concurrent.Striped&lt;java.util.concurrent.locks.ReadWriteLock&gt; readWriteLock(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun readWriteLock(stripes : Int) : Striped&lt;ReadWriteLock?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Striped com.google.common.util.concurrent.Striped&lt;java.util.concurrent.Semaphore&gt; semaphore(int, int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun semaphore(stripes : Int, permits : Int) : Striped&lt;Semaphore?&gt;&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ThreadFactoryBuilder java.util.concurrent.ThreadFactory build()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build() : ThreadFactory&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ThreadFactoryBuilder java.util.concurrent.ThreadFactory build(com.google.common.util.concurrent.ThreadFactoryBuilder)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun build(builder : ThreadFactoryBuilder) : ThreadFactory&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ThreadFactoryBuilder com.google.common.util.concurrent.ThreadFactoryBuilder setDaemon(boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setDaemon(daemon : Boolean) : ThreadFactoryBuilder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ThreadFactoryBuilder com.google.common.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setNameFormat(nameFormat : String?) : ThreadFactoryBuilder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ThreadFactoryBuilder com.google.common.util.concurrent.ThreadFactoryBuilder setPriority(int)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setPriority(priority : Int) : ThreadFactoryBuilder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ThreadFactoryBuilder com.google.common.util.concurrent.ThreadFactoryBuilder setThreadFactory(java.util.concurrent.ThreadFactory)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setThreadFactory(backingThreadFactory : ThreadFactory) : ThreadFactoryBuilder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.ThreadFactoryBuilder com.google.common.util.concurrent.ThreadFactoryBuilder setUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun setUncaughtExceptionHandler(uncaughtExceptionHandler : Thread.UncaughtExceptionHandler) : ThreadFactoryBuilder&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.TimeLimiter T callWithTimeout(java.util.concurrent.Callable&lt;T&gt;, long, java.util.concurrent.TimeUnit, boolean)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; callWithTimeout(p0 : Callable&lt;T&gt;, p1 : Long, p2 : TimeUnit, p3 : Boolean) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.TimeLimiter T newProxy(T, java.lang.Class&lt;T&gt;, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;T&gt; newProxy(p0 : T, p1 : Class&lt;T&gt;, p2 : Long, p3 : TimeUnit) : T?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.UncaughtExceptionHandlers java.lang.Thread.UncaughtExceptionHandler systemExit()'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun systemExit() : Thread.UncaughtExceptionHandler&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Uninterruptibles void awaitUninterruptibly(java.util.concurrent.CountDownLatch)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun awaitUninterruptibly(latch : CountDownLatch) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Uninterruptibles boolean awaitUninterruptibly(java.util.concurrent.CountDownLatch, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun awaitUninterruptibly(latch : CountDownLatch, timeout : Long, unit : TimeUnit) : Boolean&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Uninterruptibles V getUninterruptibly(java.util.concurrent.Future&lt;V&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; getUninterruptibly(future : Future&lt;V&gt;) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Uninterruptibles V getUninterruptibly(java.util.concurrent.Future&lt;V&gt;, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;V&gt; getUninterruptibly(future : Future&lt;V&gt;, timeout : Long, unit : TimeUnit) : V?&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Uninterruptibles void joinUninterruptibly(java.lang.Thread)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun joinUninterruptibly(toJoin : Thread) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Uninterruptibles void joinUninterruptibly(java.lang.Thread, long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun joinUninterruptibly(toJoin : Thread, timeout : Long, unit : TimeUnit) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Uninterruptibles void putUninterruptibly(java.util.concurrent.BlockingQueue&lt;E&gt;, E)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; putUninterruptibly(queue : BlockingQueue&lt;E&gt;, element : E?) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Uninterruptibles void sleepUninterruptibly(long, java.util.concurrent.TimeUnit)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun sleepUninterruptibly(sleepFor : Long, unit : TimeUnit) : Unit&quot;"/>
        </annotation>
    </item>
    <item name='com.google.common.util.concurrent.Uninterruptibles E takeUninterruptibly(java.util.concurrent.BlockingQueue&lt;E&gt;)'>
        <annotation name='jet.runtime.typeinfo.KotlinSignature'>
            <val name="value" val="&quot;fun &lt;E&gt; takeUninterruptibly(queue : BlockingQueue&lt;E&gt;) : E?&quot;"/>
        </annotation>
    </item>
</root>
