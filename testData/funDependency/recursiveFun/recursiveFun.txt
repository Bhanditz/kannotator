funDependency.recursiveFun.First:<init>()V in[funDependency.recursiveFun.Second:bar()V -> funDependency.recursiveFun.First:<init>()V] out[funDependency.recursiveFun.First:<init>()V -> java.lang.Object:<init>()V]
funDependency.recursiveFun.First:foo()V in[funDependency.recursiveFun.First:foo()V -> funDependency.recursiveFun.First:foo()V, funDependency.recursiveFun.Second:bar()V -> funDependency.recursiveFun.First:foo()V] out[funDependency.recursiveFun.First:foo()V -> funDependency.recursiveFun.Second:<init>()V, funDependency.recursiveFun.First:foo()V -> funDependency.recursiveFun.Second:bar()V, funDependency.recursiveFun.First:foo()V -> funDependency.recursiveFun.First:foo()V]
funDependency.recursiveFun.Second:<init>()V in[funDependency.recursiveFun.First:foo()V -> funDependency.recursiveFun.Second:<init>()V] out[funDependency.recursiveFun.Second:<init>()V -> java.lang.Object:<init>()V]
funDependency.recursiveFun.Second:bar()V in[funDependency.recursiveFun.First:foo()V -> funDependency.recursiveFun.Second:bar()V] out[funDependency.recursiveFun.Second:bar()V -> funDependency.recursiveFun.First:<init>()V, funDependency.recursiveFun.Second:bar()V -> funDependency.recursiveFun.First:foo()V]
java.lang.Object:<init>()V in[funDependency.recursiveFun.First:<init>()V -> java.lang.Object:<init>()V, funDependency.recursiveFun.Second:<init>()V -> java.lang.Object:<init>()V] out[]